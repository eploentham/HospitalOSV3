/*
 * DialogSearchServicePoint.java
 *
 * Created on 13 มิถุนายน 2549, 15:28 น.
 */

package com.reportnan.gui.panel;

import java.awt.*;
import java.util.*;

import com.reportnan.subject.ManageControlSubjectSetup;
import com.setupreportnan.subject.ManageSubject;
import com.setupreportnan.control.ManageControl;
import com.reportnan.utility.TableModelGUI;
import com.reportnan.utility.Language;
import com.hospital_os.object.ServicePoint;

import com.hospital_os.usecase.connection.ConnectionInf;
import com.hospital_os.utility.ConnectionDBMgr;
/**
 *
 * @author  pu
 */
public class DialogSearchServicePoint extends javax.swing.JDialog
{
    Vector vServicePoint,vData;
    ManageControlSubjectSetup theMCS;
    ManageSubject theManageSubject;
    ManageControl theManageControl;
    TableModelGUI theTableModelGUI;
    ServicePoint theServicePoint,theServicePointTemp;
    String[] colName;
    String active;
    /**สำหรับตรวจสอบว่าจะส่งค่าที่เลือกให้กับ Panel ใด*/
    int checkNotify;
    
    /** Creates new form DialogSearchServicePoint */
    public DialogSearchServicePoint(java.awt.Frame parent, boolean modal,ManageControlSubjectSetup mcs,int checknf)
    {
        super(parent, modal);
        theMCS = mcs;
        theManageControl = theMCS.theManageControl;
        theManageSubject = theMCS.theManageSubject;
        this.checkNotify = checknf;
        initComponents();
        parent.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/hospital_os/images/Icon.gif")));   
        this.setTitle(Language.getTextBundle("HospitalServicePoint"));
        setLanguage();
        colName = new String[] {
                        Language.getTextBundle("Code")
                        ,Language.getTextBundle("ServicePoint")};
        searchData();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jButtonBack = new javax.swing.JButton();
        jButtonForward = new javax.swing.JButton();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableService = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(250, 70));
        jPanel1.setOpaque(false);
        jPanel1.setPreferredSize(new java.awt.Dimension(250, 70));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabelSearch, gridBagConstraints);

        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(120, 21));
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButtonBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonBack.setMargin(new java.awt.Insets(22, 14, 22, 14));
        jButtonBack.setPreferredSize(new java.awt.Dimension(24, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jButtonBack, gridBagConstraints);

        jButtonForward.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonForward.setMargin(new java.awt.Insets(22, 14, 22, 14));
        jButtonForward.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonForward.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonForwardActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel5.add(jButtonForward, gridBagConstraints);

        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel5.add(jCheckBoxActive, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTableService.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableService);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setText("+");
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);
        jPanel3.add(jButtonAdd, gridBagConstraints);

        jButtonClose.setText("Close");
        jButtonClose.setMaximumSize(new java.awt.Dimension(77, 25));
        jButtonClose.setPreferredSize(new java.awt.Dimension(75, 25));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel3.add(jButtonClose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        getContentPane().add(jPanel3, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldSearchKeyReleased
    {//GEN-HEADEREND:event_jTextFieldSearchKeyReleased
        if(evt.getKeyCode() == evt.VK_ENTER)
        {
            searchData();
        }
    }//GEN-LAST:event_jTextFieldSearchKeyReleased

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        setSelectInRow(jTableService.getSelectedRows());
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCloseActionPerformed
    {//GEN-HEADEREND:event_jButtonCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jCheckBoxActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxActiveActionPerformed
       if(this.jCheckBoxActive.isSelected())
       {
           //this.jCheckBoxActive.setSelected(false);
           this.active = "0";
       }
       else
       {
           //this.jCheckBoxActive.setSelected(true);
            this.active = "1";
       }
    }//GEN-LAST:event_jCheckBoxActiveActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        searchData();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonForwardActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonForwardActionPerformed
    {//GEN-HEADEREND:event_jButtonForwardActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jButtonForwardActionPerformed
    public void searchData()
    {
        System.out.println("-------------------------------------- ojika test one ");
        String keyword = this.jTextFieldSearch.getText().trim();
        if(jCheckBoxActive.isSelected())
            active = "1";
        else
            active = "0";
        vServicePoint = theManageControl.theDialogControl.selectServicePointByKeyword(keyword, active);
        showDataToTable(vServicePoint);
        
        keyword = null;
    }
    
    /**
     * ใช้ในการ แสดงข้อมูลการค้นหาลงบนตารางที่กำหนด
     * @param vc เป็น Vector ของข้อมูลที่ทำการส่งมาให้และต้องการกำหนดให้แสดงบนตาราง
     */
    private void showDataToTable(Vector vc)
    {
        theTableModelGUI = new TableModelGUI(colName, 0);
        if(vc != null)
        {
            int size = vc.size();
            theTableModelGUI = new TableModelGUI(colName, size);
            theServicePointTemp = null;
            for(int i = 0 ; i < size ;i++)
            {
                theServicePointTemp = (ServicePoint)vc.get(i);
                theTableModelGUI.setValueAt(theServicePointTemp.service_point_id,i, 0);
                theTableModelGUI.setValueAt(theServicePointTemp.name,i, 1);
                theServicePointTemp = null;
            }
        }
        jTableService.setModel(theTableModelGUI);
        jTableService.getColumnModel().getColumn(0).setPreferredWidth(100);
    }
    
    
    public void setSelectInRow(int[] rows)
    {
        System.out.println("public void setSelectInRow(int[] rows)");
        vData = new Vector();
        if(rows.length !=0)
        {
            int size = rows.length;
            for(int i = 0 ; i < size ; i++)
            {
                theServicePointTemp = (ServicePoint)vServicePoint.get(rows[i]);
                vData.add(theServicePointTemp);
                theServicePointTemp = null;
            }
        }        
        theMCS.theManageSubject.theServicePointSubject.notifySaveServicePoint(vData);
    }
        /**
         * @param args the command line arguments
         */
        public static void main(String args[])
        {
            java.awt.EventQueue.invokeLater(new Runnable()
            {
                public void run()
                {
                    String server = "192.168.1.6";
                    String database = "develop_report";
                    String port = "5432";
                    String username = "postgres";
                    String password = "postgres";
                    String url_1 = "jdbc:postgresql://"+ server +":" +port +"/" + database;
                    int checknf = 0;
                    ConnectionInf theConnectionInf = new ConnectionDBMgr("org.postgresql.Driver",url_1,username,password,"0");
                    ManageControlSubjectSetup theHosManage;
                    theHosManage = new ManageControlSubjectSetup(theConnectionInf);
                    new DialogSearchServicePoint(new javax.swing.JFrame(), true, theHosManage, checknf).setVisible(true);
                }
            });
        }
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonBack;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonForward;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableService;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    private void setLanguage()
    {
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText()));
        jButtonClose.setText(Language.getTextBundle(jButtonClose.getText()));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText()));
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText()));
    }
}
