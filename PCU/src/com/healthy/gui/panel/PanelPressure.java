/*
 * PanelPressure.java
 *
 * Created on 7 เมษายน 2549, 9:25 น.
 */

package com.healthy.gui.panel;

import com.healthy.object.ResultType;
import com.hosv3.utility.DateUtil;
import com.pcu.control.HtControl;
import com.hosv3.utility.connection.UpdateStatus;
import com.pcu.utility.GutilPCU;
import java.util.*;
import javax.swing.*;

import com.healthy.object.*;
import com.hospital_os.utility.*;
import com.pcu.object.*;
import java.awt.*;

/**
 *
 * @author  hospitalos5
 */
public class PanelPressure extends javax.swing.JPanel  {
    public Vector thePressureV;
    public Pressure thePressure;
    public HtControl theHtControl;
    public Family theFamily;
    JDialog jDialog = null; 

    private UpdateStatus theUS;
    
    /** Creates new form PanelPressure */
    public PanelPressure() {
        initComponents();
        thePressure = new Pressure();
        setDisable();
        setLanguage();
    }
    
    public void setControl(HtControl ht,UpdateStatus us){
         theUS = us;
        theHtControl = ht;   
        
        this.dateComboBoxSurvey.setEditable(true);
        this.jTextFieldYearBudget.setText(theHtControl.getYear());
        buttonDeleteEnable();
        setLanguage();
    }
    
    private void buttonDeleteEnable() {
        if (thePressure.getObjectId()!=null) 
            this.jButtonDelete.setEnabled(true);
        else
            this.jButtonDelete.setEnabled(false);
    }
    
    private void setDisable() {
        this.jTextFieldYearBudget.setEnabled(false);        
        this.dateComboBoxSurvey.setEnabled(false);
        this.jTextFieldDiastolic.setEnabled(false);
        this.jTextFieldSystolic.setEnabled(false);
        this.jRadioButtonIll.setEnabled(false);
        this.jRadioButtonNormal.setEnabled(false);
        this.jRadioButtonRisk.setEnabled(false);
        this.jButtonSave.setEnabled(false);
    }
    
    private void setEnable() {
        this.jTextFieldYearBudget.setEnabled(true);        
        this.dateComboBoxSurvey.setEnabled(true);
        this.jTextFieldDiastolic.setEnabled(true);
        this.jTextFieldSystolic.setEnabled(true);
        this.jRadioButtonIll.setEnabled(true);
        this.jRadioButtonNormal.setEnabled(true);
        this.jRadioButtonRisk.setEnabled(true);
        this.jButtonSave.setEnabled(true);
    }
    
    public void updateOGPressure(Vector v) {
        thePressureV = v;
        if (v==null) v = new Vector();
        String[] column = {"วันที่ปรับปรุงล่าสุด"};
        GutilPCU.setLanguage(column);
        TaBleModel tm = new TaBleModel(column, v.size());
        
        for (int i=0 ; i<v.size() ; i++) {
            Pressure pressure = (Pressure)v.get(i);
            tm.setValueAt(GutilPCU.changDateToString(pressure.record_time), i, 0);            
        }
        this.jTable6.setModel(tm);
    }
    
    public void updateOGPressure(Pressure pressure) {
        this.jTextFieldYearBudget.setText(pressure.idy);
        this.dateComboBoxSurvey.setText(DateUtil.convertFieldDate(pressure.date_serv));
        this.jTextFieldSystolic.setText(pressure.systolic);
        
        this.jTextFieldDiastolic.setText(pressure.diastolic);
        
        this.jRadioButtonNormal.setSelected(false);
        this.jRadioButtonRisk.setSelected(false);
        this.jRadioButtonIll.setSelected(false);
        if (pressure.result.equals(ResultType.NORMAL))
            this.jRadioButtonNormal.setSelected(true);
        else if (pressure.result.equals(ResultType.RISK))
            this.jRadioButtonRisk.setSelected(true);
        else if (pressure.result.equals(ResultType.ILLNESS))
            this.jRadioButtonIll.setSelected(true);
        
        if (pressure.getObjectId() == null) {            
            this.jRadioButtonNormal.setSelected(true);
            this.jTextFieldYearBudget.setText(theHtControl.getYear());
        }
    }
    
    public void updateGOPressure(Pressure pressure) {
        pressure.family_id = theFamily.getObjectId();
        pressure.idy = this.jTextFieldYearBudget.getText();
        pressure.date_serv = this.dateComboBoxSurvey.getText();
        pressure.systolic = this.jTextFieldSystolic.getText();
        pressure.diastolic = this.jTextFieldDiastolic.getText();
        
        if (this.jRadioButtonNormal.isSelected())
            pressure.result = ResultType.NORMAL;
        else if (this.jRadioButtonRisk.isSelected())
            pressure.result = ResultType.RISK;
        else if (this.jRadioButtonIll.isSelected())
            pressure.result = ResultType.ILLNESS;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupResult = new javax.swing.ButtonGroup();
        jPanelPressure = new javax.swing.JPanel();
        jPanel31 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTable6 = new javax.swing.JTable();
        jPanel32 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        jTextFieldYearBudget = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jPanel34 = new javax.swing.JPanel();
        jTextFieldSystolic = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jTextFieldDiastolic = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        jPanel35 = new javax.swing.JPanel();
        jRadioButtonNormal = new javax.swing.JRadioButton();
        jRadioButtonRisk = new javax.swing.JRadioButton();
        jRadioButtonIll = new javax.swing.JRadioButton();
        dateComboBoxSurvey = new com.hospital_os.utility.DateComboBox();
        jPanel33 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanelPressure.setLayout(new java.awt.GridBagLayout());

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("ประวัติการคัดกรอง"));
        jPanel31.setMinimumSize(new java.awt.Dimension(180, 90));
        jPanel31.setPreferredSize(new java.awt.Dimension(180, 90));
        jPanel31.setLayout(new java.awt.GridBagLayout());

        jScrollPane6.setMinimumSize(new java.awt.Dimension(24, 150));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(4, 150));

        jTable6.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null}
            },
            new String [] {
                "Title 1"
            }
        ));
        jTable6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable6MouseReleased(evt);
            }
        });
        jScrollPane6.setViewportView(jTable6);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel31.add(jScrollPane6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanelPressure.add(jPanel31, gridBagConstraints);

        jPanel32.setBorder(javax.swing.BorderFactory.createTitledBorder("ข้อมูลคัดกรองความดัน"));
        jPanel32.setLayout(new java.awt.GridBagLayout());

        jLabel44.setText("ปีงบประมาณ : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel32.add(jLabel44, gridBagConstraints);

        jTextFieldYearBudget.setMinimumSize(new java.awt.Dimension(60, 21));
        jTextFieldYearBudget.setPreferredSize(new java.awt.Dimension(60, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel32.add(jTextFieldYearBudget, gridBagConstraints);

        jLabel45.setText("วันที่สำรวจ : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(2, 20, 0, 0);
        jPanel32.add(jLabel45, gridBagConstraints);

        jLabel46.setText("ความดัน : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel32.add(jLabel46, gridBagConstraints);

        jPanel34.setLayout(new java.awt.GridBagLayout());

        jTextFieldSystolic.setMinimumSize(new java.awt.Dimension(35, 21));
        jTextFieldSystolic.setPreferredSize(new java.awt.Dimension(35, 21));
        jPanel34.add(jTextFieldSystolic, new java.awt.GridBagConstraints());

        jLabel47.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel34.add(jLabel47, gridBagConstraints);

        jTextFieldDiastolic.setMinimumSize(new java.awt.Dimension(35, 21));
        jTextFieldDiastolic.setPreferredSize(new java.awt.Dimension(35, 21));
        jPanel34.add(jTextFieldDiastolic, new java.awt.GridBagConstraints());

        jLabel48.setText("mmHg");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel34.add(jLabel48, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanel32.add(jPanel34, gridBagConstraints);

        jLabel49.setText("สรุปภาวะความดัน : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 0);
        jPanel32.add(jLabel49, gridBagConstraints);

        jPanel35.setLayout(new java.awt.GridBagLayout());

        buttonGroupResult.add(jRadioButtonNormal);
        jRadioButtonNormal.setSelected(true);
        jRadioButtonNormal.setText("ปกติ");
        jPanel35.add(jRadioButtonNormal, new java.awt.GridBagConstraints());

        buttonGroupResult.add(jRadioButtonRisk);
        jRadioButtonRisk.setText("เสี่ยง");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel35.add(jRadioButtonRisk, gridBagConstraints);

        buttonGroupResult.add(jRadioButtonIll);
        jRadioButtonIll.setText("ป่วย");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel35.add(jRadioButtonIll, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel32.add(jPanel35, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel32.add(dateComboBoxSurvey, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelPressure.add(jPanel32, gridBagConstraints);

        jPanel33.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jPanel33.add(jButtonAdd, new java.awt.GridBagConstraints());

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel33.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setText("บันทึก");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel33.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelPressure.add(jPanel33, gridBagConstraints);

        add(jPanelPressure, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void jTable6MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable6MouseReleased
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));            
        int index = this.jTable6.getSelectedRow();
        if(index==-1)
            return;
        thePressure = (Pressure)thePressureV.get(index);
        updateOGPressure(thePressure);
        /*this.jTextFieldStatus.setText(theImageLink.image_path);
        this.jTextFieldHN1.setText(theImageLink.note);
        this.jCheckBox1.setSelected(theImageLink.note.equals(
            ImageLink.ST_PatientImage));
        this.jTextFieldHN1.setEditable(!this.jCheckBox1.isSelected());*/
        this.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR)); 
        buttonDeleteEnable();
        setEnable();
    }//GEN-LAST:event_jTable6MouseReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        this.updateGOPressure(thePressure);
        this.theHtControl.savePressure(thePressure);
        this.updateFamily(theFamily);
        buttonDeleteEnable();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        if (theUS.confirmBox("คุณต้องการลบข้อมูลที่เลือกหรือไม่",UpdateStatus.WARNING))
        {
            this.theHtControl.deletePressure(thePressure);
            this.updateFamily(theFamily);
            thePressure = new Pressure();
            updateOGPressure(thePressure);
            buttonDeleteEnable();
            setDisable();
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        thePressure = new Pressure();
        updateOGPressure(thePressure);
        setEnable();
    }//GEN-LAST:event_jButtonAddActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupResult;
    private com.hospital_os.utility.DateComboBox dateComboBoxSurvey;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel32;
    private javax.swing.JPanel jPanel33;
    private javax.swing.JPanel jPanel34;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanelPressure;
    private javax.swing.JRadioButton jRadioButtonIll;
    private javax.swing.JRadioButton jRadioButtonNormal;
    private javax.swing.JRadioButton jRadioButtonRisk;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTable6;
    private javax.swing.JTextField jTextFieldDiastolic;
    private javax.swing.JTextField jTextFieldSystolic;
    private javax.swing.JTextField jTextFieldYearBudget;
    // End of variables declaration//GEN-END:variables
    
    public void updateFamily(Family family) {
        theFamily = family;
        Vector familyV = theHtControl.listPressureByFid(family.getObjectId());
        updateOGPressure(familyV);
        updateOGPressure(new Pressure());
   }
    
    public void showDialog(Family family) {
        if(jDialog==null)
        {
            if(theHtControl.theUS!=null)
                jDialog = new JDialog(this.theHtControl.theUS.getJFrame(),true);
            else
                jDialog = new JDialog();
            jDialog.getContentPane().add(this);
            jDialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            jDialog.setSize(657,165);
            Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
            jDialog.setLocation((screenSize.width-jDialog.getSize().width)/2
                    , (screenSize.height-jDialog.getSize().height)/2);
        }
        updateFamily(family);
        setDisable();
        jDialog.setVisible(true);
    }
    public static void main(String[] argc)
    {
        System.setProperty("debug", "1");
        Family family = new Family();
        family.hospital_site = "00000";
        family.setObjectId("555");
        PanelPressure thePanelPressure = new PanelPressure();
        HtControl hc = new HtControl();
        //hc.setUpdateStatus(thePanelPressure);
        thePanelPressure.setControl(hc,hc.theUS);
        thePanelPressure.showDialog(family);
    }
    
        public void setStatus(Object str, int status) {
    }

    private void setLanguage() {
        GutilPCU.setLanguage(jPanel31);
        GutilPCU.setLanguage(jPanel32);
        GutilPCU.setLanguage(jLabel44);
        GutilPCU.setLanguage(jLabel45);
        GutilPCU.setLanguage(jLabel46);
        GutilPCU.setLanguage(jLabel48);
        GutilPCU.setLanguage(jLabel49);
        GutilPCU.setLanguage(jRadioButtonNormal);
        GutilPCU.setLanguage(jRadioButtonRisk);
        GutilPCU.setLanguage(jRadioButtonIll);
        GutilPCU.setLanguage(jButtonSave);
    }

}
