/*
 * DialogEpiSet.java
 *
 * Created on 24 มิถุนายน 2548, 14:56 น.
 */
package com.pcu.gui.dialog;
import com.pcu.control.HosManage;
import java.awt.*;
import java.util.Vector;
import java.awt.event.*;
import com.hospital_os.utility.*;
import com.hosv3.utility.DateUtil;
import com.hospital_os.object.Item;
import com.pcu.utility.*;
import com.pcu.object.*;
import javax.swing.ListSelectionModel;

/**
 *
 * @author  Administrator
 */
public class DialogSetupSearchPcu extends javax.swing.JDialog {
  //  HosControl theHC;
    private HosManage theHosManage;
    /*
    private SetupSubjectPcu theSetupSubjectPcu;
    private HealthServiceControl theHealthServiceControl;
    private SetupPcuControl theSetupPcuControl;
    private AfterMCHMotherControl theAfterMCHMotherControl;
*/
    private Vector itemSearch = new Vector();
    public static boolean closePanel = false;
    private String patient_id ;
    
    int offset = 20;
    int next = 0;
    int prev = 0;
    int saved = 0;
    private int show = 0;
    /** Creates new form DialogEpiSet */
    
    public DialogSetupSearchPcu(java.awt.Frame parent, boolean modal,HosManage hm)//SetupPcuControl sc,SetupSubjectPcu sp,int sh) {
    {
        super(parent, modal);
        initComponents();
        setLanguage();
        setShow();
        this.jButtonDel.setVisible(false);
        show = 0;
        theHosManage = hm;          
      
    }
    
    public void setPatientID(String patient_id)
    {
        this.patient_id = patient_id;
    }
    /**กำหนด คุณสมบัติต่างๆก่อนการแสดงข้อมูล*/
    public void setShow()
    {   
        
        //setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/hospital_os/images/Icon.gif")));
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width-getSize().width)/3, (screenSize.height - getSize().height)/8);//-(28+dlg.getSize().height/2));
        setSize(400,500);
        setResizable(false);
        //pack();
        closePanel = false;
        this.setTitle(GutilPCU.getTextBundle("OrderItem"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                //exitForm(evt);
            }
        });
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableItem = new javax.swing.JTable();
        jTextFieldSCode = new javax.swing.JTextField();
        jLabelSearch = new javax.swing.JLabel();
        jButtonNext = new javax.swing.JButton();
        jButtonSearch = new javax.swing.JButton();
        jButtonPrev = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButtonClose = new javax.swing.JButton();
        jButtonOK = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 70));

        jTableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableItemKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel1.add(jTextFieldSCode, gridBagConstraints);

        jLabelSearch.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 12);
        jPanel1.add(jLabelSearch, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif"))); // NOI18N
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel1.add(jButtonNext, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(160, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(120, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel1.add(jButtonSearch, gridBagConstraints);

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif"))); // NOI18N
        jButtonPrev.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 2);
        jPanel1.add(jButtonPrev, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel2.add(jButtonDel, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonClose.setText("Close");
        jButtonClose.setMaximumSize(new java.awt.Dimension(80, 25));
        jButtonClose.setMinimumSize(new java.awt.Dimension(80, 25));
        jButtonClose.setPreferredSize(new java.awt.Dimension(80, 25));
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jButtonClose, gridBagConstraints);

        jButtonOK.setText("OK");
        jButtonOK.setMaximumSize(new java.awt.Dimension(80, 25));
        jButtonOK.setMinimumSize(new java.awt.Dimension(80, 25));
        jButtonOK.setPreferredSize(new java.awt.Dimension(80, 25));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel3.add(jButtonOK, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableItemKeyReleased
// TODO add your handling code here:
        if(evt.getKeyCode()==KeyEvent.VK_SPACE)
        {
            addSub();
        }   
    }//GEN-LAST:event_jTableItemKeyReleased

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCodeKeyReleased
// TODO add your handling code here:
        searchSub();
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jTextFieldSCodeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCodeKeyPressed
// TODO add your handling code here:
        searchSub();
    }//GEN-LAST:event_jTextFieldSCodeKeyPressed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        // TODO add your handling code here:
        nextSearchSub();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        // TODO add your handling code here:
         prevSearchSub();
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        addSub();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
        // TODO add your handling code here:
        closeDialog();
        
    }//GEN-LAST:event_jButtonCloseActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        // TODO add your handling code here:
      searchSub();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
       okSub();
    }//GEN-LAST:event_jButtonOKActionPerformed
    /**ใช้ในการ ปิด Dialog */
    private void closeDialog()
    {
        closePanel = true;
        this.dispose();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableItem;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables
    
    public void setLanguage()
    {  
          /*jLabel*/
          jLabelSearch.setText(GutilPCU.getTextBundle(jLabelSearch.getText())); 
          /*jButton*/
          jButtonAdd.setText(GutilPCU.getTextBundle(jButtonAdd.getText()));
          jButtonDel.setText(GutilPCU.getTextBundle(jButtonDel.getText()));
          jButtonClose.setText(GutilPCU.getTextBundle(jButtonClose.getText()));  
          jButtonPrev.setText(GutilPCU.getTextBundle(jButtonPrev.getText()));
          jButtonNext.setText(GutilPCU.getTextBundle(jButtonNext.getText()));
          jButtonSearch.setText(GutilPCU.getTextBundle(jButtonSearch.getText()));
          jButtonOK.setText(GutilPCU.getTextBundle(jButtonOK.getText()));
    
          /*TitledBorder*/
    }
    
    /*** search PCU Only by Jao***/
     private void searchSub()
    {   
        next = 0;
        prev = 0;
        String search = jTextFieldSCode.getText();
        String active = "1";
        Constant.println("------- serach ----- ");
        if(show == 6)
        {    
            itemSearch = this.theHosManage.theHosControl.theSetupPcuControl.listItemByGroup(search,"1");
             setTableItemDrug(itemSearch,1);
        }
        
        if(show == 7)
        {    
            itemSearch = this.theHosManage.theHosControl.theSetupPcuControl.listItemByGroup(search,"1");
             setTableItemDrug(itemSearch,1);
        }
        
        if(show == 11 || show == 1)// case ==1 somprasong add
        {  //EPI
       
            itemSearch = this.theHosManage.theHosControl.theSetupPcuControl.listEpiSetGroup(search,"1");
            setTableEPI(itemSearch,1);
        }
        if(show == 12)
        {/**BornMch*/
            if(patient_id != null)
            {
                itemSearch = this.theHosManage.theHosControl.theAfterMCHMotherControl.selectBornMchMotherShowGUITableByPatientID(patient_id);
                setTableBornMchMotherShow(itemSearch,0);
            }
        }
    }
        
    private void setTableEPI(Vector voffice,int off)
    {   
        String[] col = {"ชื่อ"};
        
        EpiSetGroup of = new EpiSetGroup();
        int count = this.offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null)
        {
            if(off == 1)
            {   
                p = this.prev;
                n = this.next;            
                
                this.prev = this.next;
                this.next = this.next + this.offset;
                if(this.next >= this.itemSearch.size())
                {   
                    this.next = this.itemSearch.size();
                    count = this.next - this.prev;
                }
                if(count == 0)
                {   
                    this.prev = p;
                    this.next = n;
                    count = n - p;
                }
            }
            else
            {   
                this.next = this.prev;
                this.prev = this.prev - this.offset;
                if(this.prev <=0)
                {    this.prev = 0;
                    this.next = this.offset;
                }
                if(this.next >= this.itemSearch.size())
                {   this.next= this.itemSearch.size();
                    count = this.next;
                }
            }
            
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {  
                of = (EpiSetGroup)voffice.get(i+this.prev);
                
                tm.setValueAt(of.description, i, 0);
            }
            this.jTableItem.setModel(tm);            
        }
        else
        {   
            TaBleModel tm = new TaBleModel(col,0);
            this.jTableItem.setModel(tm);
        }
    }
    
    private void setTableItemDrug(Vector voffice,int off)
    {   
        String[] col = {"รหัส","ชื่อ"};
        
        Item of = new Item();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= itemSearch.size())
                {   next = itemSearch.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= itemSearch.size())
                {   next= itemSearch.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            
            for(int i=0 ;i<count;i++)
            {  
                of = (Item)voffice.get(i+prev);
//                Constant.println("Item grp Code :" +of.item_group_code_category);
              
                //CategoryGroupItem ci = this.theHosManage.theHosControl.theSetupPcuControl.listCategoryGroupItemByPk(of.item_group_code_category); 
                tm.setValueAt(of.item_id,i,0);
                tm.setValueAt(of.common_name, i, 1);
                //tm.setValueAt(ci.description, i, 2);
            }
            jTableItem.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTableItem.setModel(tm);
        }
        jTableItem.getColumnModel().getColumn(0).setPreferredWidth(20);     
        jTableItem.getColumnModel().getColumn(1).setPreferredWidth(180);
    }
    
    
    private void setTableBornMchMotherShow(Vector voffice,int off)
    {   
        String[] col = {"ครรภ์ที่","วันที่คลลอด"};
       //AfterMchMother theAfterMchMother = (AfterMchMother)vc.get(i);
        BornMch of = new BornMch();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= itemSearch.size())
                {   next = itemSearch.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= itemSearch.size())
                {   next= itemSearch.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
           
            of = (BornMch)voffice.get(0);
            
          
            for(int i=0 ;i<count;i++)
            {  
               
                of = (BornMch)voffice.get(i+prev);
               
                tm.setValueAt(of.gravida, i, 0);
                tm.setValueAt(GutilPCU.changDateToString((of.bdate),false), i, 1);
                of = null;
            }
            jTableItem.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTableItem.setModel(tm);
        }
    }
    /**ใช้เมื่อต้องการแสดง Dialog หลังการ new Instant ขึ้นมา*/
    public boolean showSearch(int sh)
    {   this.show = sh;
        //this.setTableEPI(null,0);
        searchSub();
        //itemSearch = this.theHosManage.theHosControl.theSetupPcuControl.listEpiSetGroup("");
        //setTableEPI(itemSearch,1);
        setSpacialGUI(sh);// somprasong add
        setVisible(true);         
        return closePanel;
    }

    /**
     * Somprasong 23/12/09
     * @param show คือ รหัสที่ใช้โชว์ dialog
     */
    private void setSpacialGUI(int show){
        switch(show){
            case 1:
                jButtonAdd.setVisible(false);
                jButtonOK.setVisible(true);
                jTableItem.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
                break;
            default:
                jButtonAdd.setVisible(true);
                jButtonOK.setVisible(false);
                jTableItem.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
                break;
               
        }
    }

    private void addSub()
    {   
        String of = new String();
        
        if(show == 6)
        {  
            // add Item
            //แบบเลือกได้ทีละหลายรายการ
            
            int[] row = jTableItem.getSelectedRows();
            Item item = new Item();
            for(int i=0;i<row.length;i++){ 
            item =(Item)itemSearch.get(row[i]+prev);
            theHosManage.theHosSubject.theSetupSubjectPcu.notifylistItemByGroup(item,true); 
            }
            item = null; 
            
           /** เลือกได้ทีละรายการ             
           int row = jTableItem.getSelectedRow();
           Item item = new Item();
           item =(Item)itemSearch.get(row+this.prev);
           theHosManage.theHosSubject.theSetupSubjectPcu.notifylistItemByGroup(item,true); 
           item = null;
           */
        }
        
        if(show == 7)
        {               
           int row[] = jTableItem.getSelectedRows();
           int size = row.length;
           for(int i=0;i<size;i++)
           {
               Item item =(Item)itemSearch.get(row[i]+this.prev);
               theHosManage.theHosSubject.theSetupSubjectPcu.notifylistItemByGroup(item,false);
               item = null;
           }

          /* int[] row = jTableItem.getSelectedRows();
           Item item = new Item();
           for(int i=0;i<row.length;i++)
           {
               item =(Item)itemSearch.get(row[i]+prev);
               theHosManage.theHosSubject.theSetupSubjectPcu.notifylistItemByGroup(item,false); 
           }
           item = null;*/
        }
        
        if(show == 11)
        {  //Epi
            //แบบเลือกได้ทีละหลายรายการ
            int[] row = jTableItem.getSelectedRows();
            EpiSetGroup ori = new EpiSetGroup();
            for(int i=0;i<row.length;i++){ 
                ori =(EpiSetGroup)itemSearch.get(row[i]+prev);
                theHosManage.theHosSubject.theSetupSubjectPcu.notifylistEpiSetGroup(ori); 
            }
            ori = null;
            
           /* แบบเลือกได้ที่ละรายการ
           int row = jTableItem.getSelectedRow();            
           EpiSetGroup ori = new EpiSetGroup();
           ori =(EpiSetGroup)itemSearch.get(row+prev);        
           theHosManage.theHosSubject.theSetupSubjectPcu.notifylistEpiSetGroup(ori); 
           ori = null;     
           */
            
        }
        if(show == 12 )
        {
            /**BornMch*/
            int row = jTableItem.getSelectedRow();
            if(row != -1)
            {
                final BornMch bornmch = (BornMch)itemSearch.get(row+prev);
             //   Constant.println("Row : " + (row+prev));
                theHosManage.theHosSubject.theAfterMchSubject.notifyGetDataBornMchMotherToAfterMchMother(bornmch);
            }
            this.closeDialog();
           
        }
        of = null;
    }
    
     private void prevSearchSub()
    { 
       
        if(show == 6)
        {    
             setTableItemDrug(itemSearch,0);
        }
        
        if(show == 7)
        {    
             setTableItemDrug(itemSearch,0);
        }
        
        if(show == 11)
        {    
            setTableEPI(itemSearch,0);
        }
        if(show == 12)
        {
            setTableBornMchMotherShow(itemSearch,0);
        }
    }
    
     private void nextSearchSub()
    {          
        if(show == 6)
        {    
             setTableItemDrug(itemSearch,1);
        }
        
        if(show == 7)
        {    
             setTableItemDrug(itemSearch,1);
        }
       
        if(show == 11)
        {    
            setTableEPI(itemSearch,1);
        }
        if(show == 12)
        {
            setTableBornMchMotherShow(itemSearch,1);
        }
    }
    
    private void autoSearch()
    {
        show = 11 ;
        searchSub();        
    }
    
    private EpiSetGroup epiSetGroup;

    private void okSub() {
        epiSetGroup = new EpiSetGroup();
        int row = jTableItem.getSelectedRow();
        epiSetGroup = (EpiSetGroup) itemSearch.get(row + prev);
        closeDialog();
    }

    public EpiSetGroup getEpiSetGroup() {
        return epiSetGroup;
    }
}
