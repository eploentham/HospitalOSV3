/*
 * DialogAdmit.java
 *
 * Created on 8 พฤศจิกายน 2546, 14:14 น.
 */
package com.pcu.gui.dialog;

import com.pcu.utility.PanelObj;
import java.util.*;

import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.ComboFix;
import com.hosv3.utility.Constant;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.object.specialQuery.*;
import com.hospital_os.utility.CellRendererHos;
import com.hospital_os.utility.Gutil;
import com.hosv3.control.lookup.R53SurveilComplLookup;
import com.hosv3.control.lookup.R53SurveilOrgaLookup;
import com.pcu.utility.GutilPCU;
import java.awt.event.KeyEvent;

/**
 *
 * @author  tong
 */
public class DialogSurveil1 extends javax.swing.JPanel implements PanelObj{

    HosControl theHC;
    HosObject theHO;
    LookupControl theLookupControl;
    VisitControl theVisitControl;
    DiagnosisControl theDiagnosisControl;
    PatientControl thePatientControl;
    Surveil theSurveil;
    Vector vSurveil;
    Vector vListSurveil;
    private String[] col_jTableListSurveilReport = {Constant.getTextBundle("ผู้ป่วย"),
        Constant.getTextBundle("ADDRESS"),
        Constant.getTextBundle("ICD_Code"),
        Constant.getTextBundle("SickDate"),
        Constant.getTextBundle("วันที่พบ"),
        Constant.getTextBundle("Status")};
    private String[] col_jTableListSurveil = {"HN", "VN", "ICD", "วันเริ่มป่วย"};
    CellRendererHos hnRender = new CellRendererHos(CellRendererHos.HN);
    CellRendererHos vnRender = new CellRendererHos(CellRendererHos.VN);
    private UpdateStatus theUS;

    /** Creates new form DialogAdmit */
    public DialogSurveil1(HosControl hc, UpdateStatus us)
    {
        theHC = hc;
        theHO = theHC.theHO;
        theUS = us;
        theLookupControl = hc.theLookupControl;
        theVisitControl = hc.theVisitControl;
        theDiagnosisControl = hc.theDiagnosisControl;
        thePatientControl = hc.thePatientControl;
        hnRender = new CellRendererHos(CellRendererHos.HN, theLookupControl.getSequenceDataHN().pattern);
        vnRender = new CellRendererHos(CellRendererHos.VN, theLookupControl.getSequenceDataVN().pattern);

        initComponents();
        this.jComboBoxLookupOrganism.setControl(new R53SurveilOrgaLookup(theLookupControl.theConnectionInf), false);
        this.jComboBoxLookupComplica.setControl(new R53SurveilComplLookup(theLookupControl.theConnectionInf), false);

        this.jTableListSurveil.setGuiMode(true);
        this.jTableListSurveilReport.setGuiMode(true);
        ComboFix p = new ComboFix();
        p.code = "0";
        p.name = Constant.getTextBundle("ทั้งหมด");
        ComboboxModel.initComboBox(jComboBoxTypeDish, theLookupControl.listTypeDish());
        ComboboxModel.initComboBox(jComboBoxStatusSurveil, theLookupControl.listTypeDish());
        jComboBoxStatusSurveil.insertItemAt((Object) p, 0);
        jComboBoxStatusSurveil.setSelectedIndex(0);
        setLanguage("");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListSurveil = new com.hosv3.gui.component.HJTableSort();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelPatientStatus = new javax.swing.JLabel();
        jLabelCaseInfection = new javax.swing.JLabel();
        jLabelInfection = new javax.swing.JLabel();
        jComboBoxTypeDish = new javax.swing.JComboBox();
        jComboBoxLookupOrganism = new com.hosv3.gui.component.HosComboBox();
        jComboBoxLookupComplica = new com.hosv3.gui.component.HosComboBox();
        jTextAreaCaseInfection = new javax.swing.JTextField();
        jTextFieldInfection = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButtonDel = new javax.swing.JButton();
        jButtonAdd = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelHn = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelIcdCode = new javax.swing.JLabel();
        dateComboBoxSickDate = new com.hospital_os.utility.DateComboBox();
        jTextFieldCode = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jComboBoxStatusSurveil = new javax.swing.JComboBox();
        jLabelStatusServeil = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jButtonSearchListSurveil = new javax.swing.JButton();
        jLabelDateSearchSurveil = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateComboBoxSearchSurveilStart = new com.hospital_os.utility.DateComboBox();
        dateComboBoxSearchSurveilEnd = new com.hospital_os.utility.DateComboBox();
        jButtonPrintListChronic = new javax.swing.JButton();
        jButtonPreviewPrint = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPaneShowListSurveil = new javax.swing.JScrollPane();
        jTableListSurveilReport = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(575, 380));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(575, 380));

        jPanel1.setMinimumSize(new java.awt.Dimension(570, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(570, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(null);
        jPanel4.setMinimumSize(new java.awt.Dimension(300, 250));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 250));
        jPanel4.setRequestFocusEnabled(false);
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel6.setSelected(true);
        jLabel6.setText("วันที่รับบริการปัจจุบัน");
        jLabel6.setToolTipText("วันที่รับบริการ");
        jLabel6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLabel6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel4.add(jPanel5, gridBagConstraints);

        jPanel6.setMinimumSize(new java.awt.Dimension(320, 250));
        jPanel6.setPreferredSize(new java.awt.Dimension(320, 250));
        jPanel6.setRequestFocusEnabled(false);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(340, 120));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(340, 120));

        jTableListSurveil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListSurveilMouseReleased(evt);
            }
        });
        jTableListSurveil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListSurveilKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListSurveil);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Diag_Surveil_Detail"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelPatientStatus.setText("TypeDish");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelPatientStatus, gridBagConstraints);

        jLabelCaseInfection.setText("Organism");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelCaseInfection, gridBagConstraints);

        jLabelInfection.setText("Complica");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelInfection, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jComboBoxTypeDish, gridBagConstraints);

        jComboBoxLookupOrganism.setMinimumSize(new java.awt.Dimension(81, 24));
        jComboBoxLookupOrganism.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLookupOrganismActionPerformed(evt);
            }
        });
        jComboBoxLookupOrganism.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxLookupOrganismKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel3.add(jComboBoxLookupOrganism, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel3.add(jComboBoxLookupComplica, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 5);
        jPanel3.add(jTextAreaCaseInfection, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 5);
        jPanel3.add(jTextFieldInfection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel7.add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButtonSave, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDel.setFocusTraversalPolicyProvider(true);
        jButtonDel.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });
        jPanel8.add(jButtonDel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jPanel8, gridBagConstraints);

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setFocusTraversalPolicyProvider(true);
        jButtonAdd.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jButtonAdd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(jPanel2, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel3, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel9.add(jLabelHn, gridBagConstraints);

        jLabel7.setText("SickDate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel7, gridBagConstraints);

        jLabel8.setText("CodeIcd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel8, gridBagConstraints);

        jLabelIcdCode.setForeground(new java.awt.Color(7, 6, 251));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 0, 0);
        jPanel9.add(jLabelIcdCode, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(dateComboBoxSickDate, gridBagConstraints);

        jTextFieldCode.setColumns(5);
        jTextFieldCode.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCodeActionPerformed(evt);
            }
        });
        jTextFieldCode.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldCodeFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jTextFieldCode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel7.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel7, gridBagConstraints);

        jTabbedPane1.addTab("บันทึกข้อมูล", jPanel1);

        jPanel10.setMaximumSize(new java.awt.Dimension(570, 300));
        jPanel10.setMinimumSize(new java.awt.Dimension(570, 300));
        jPanel10.setPreferredSize(new java.awt.Dimension(570, 300));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel14.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel14.add(jComboBoxStatusSurveil, gridBagConstraints);

        jLabelStatusServeil.setText("PatientStatus");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel14.add(jLabelStatusServeil, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel12.add(jPanel14, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jButtonSearchListSurveil.setText("Search");
        jButtonSearchListSurveil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchListSurveilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jButtonSearchListSurveil, gridBagConstraints);

        jLabelDateSearchSurveil.setText("DateStart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jLabelDateSearchSurveil, gridBagConstraints);

        jLabel5.setText("DateEnd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jLabel5, gridBagConstraints);

        dateComboBoxSearchSurveilStart.setMinimumSize(new java.awt.Dimension(93, 24));
        dateComboBoxSearchSurveilStart.setPreferredSize(new java.awt.Dimension(93, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(dateComboBoxSearchSurveilStart, gridBagConstraints);

        dateComboBoxSearchSurveilEnd.setMinimumSize(new java.awt.Dimension(93, 24));
        dateComboBoxSearchSurveilEnd.setPreferredSize(new java.awt.Dimension(93, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(dateComboBoxSearchSurveilEnd, gridBagConstraints);

        jButtonPrintListChronic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/print24.gif"))); // NOI18N
        jButtonPrintListChronic.setToolTipText("Print");
        jButtonPrintListChronic.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintListChronicActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel13.add(jButtonPrintListChronic, gridBagConstraints);

        jButtonPreviewPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/preview24.gif"))); // NOI18N
        jButtonPreviewPrint.setToolTipText("PreviewPrint");
        jButtonPreviewPrint.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviewPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel13.add(jButtonPreviewPrint, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel10.add(jPanel12, gridBagConstraints);

        jPanel15.setMaximumSize(new java.awt.Dimension(250, 270));
        jPanel15.setMinimumSize(new java.awt.Dimension(250, 270));
        jPanel15.setPreferredSize(new java.awt.Dimension(250, 270));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jScrollPaneShowListSurveil.setPreferredSize(new java.awt.Dimension(454, 404));
        jScrollPaneShowListSurveil.setVerifyInputWhenFocusTarget(false);
        jScrollPaneShowListSurveil.setViewportView(jTableListSurveilReport);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jScrollPaneShowListSurveil, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel10.add(jPanel15, gridBagConstraints);

        jTabbedPane1.addTab("ค้นหารายชื่อ", jPanel10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jTabbedPane1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPreviewPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviewPrintActionPerformed
        // สั่งพิมพ์รายการที่ค้นหาได้นะคะ
        if (vListSurveil != null && vListSurveil.size() > 0) {
            com.printing.object.surveilReport.PrintSurveilReport psurveil = new com.printing.object.surveilReport.PrintSurveilReport();
            psurveil.setDateEndQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilEnd.getText()), false));
            psurveil.setDateStartQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilStart.getText()), false));
            psurveil.setStatusQuery(jComboBoxStatusSurveil.getSelectedItem().toString());
            psurveil.setToday(DateUtil.getDateToString(DateUtil.getDateFromText(
                    theHC.theLookupControl.getTextCurrentDate()), false));
            theHC.thePrintControl.printListSurveil(vListSurveil, 1, psurveil);
        }
    }//GEN-LAST:event_jButtonPreviewPrintActionPerformed

    private void jButtonPrintListChronicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintListChronicActionPerformed
        // สั่งพิมพ์รายการที่ค้นหาได้นะคะ
        if (vListSurveil != null && vListSurveil.size() > 0) {
            com.printing.object.surveilReport.PrintSurveilReport psurveil = new com.printing.object.surveilReport.PrintSurveilReport();
            psurveil.setDateEndQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilEnd.getText()), false));
            psurveil.setDateStartQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilStart.getText()), false));
            psurveil.setStatusQuery(jComboBoxStatusSurveil.getSelectedItem().toString());
            psurveil.setToday(DateUtil.getDateToString(DateUtil.getDateFromText(
                    theHC.theLookupControl.getTextCurrentDate()), false));
            theHC.thePrintControl.printListSurveil(vListSurveil, 0, psurveil);
        }
    }//GEN-LAST:event_jButtonPrintListChronicActionPerformed

    private void jLabel6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLabel6ActionPerformed
        this.refreshList();
    }//GEN-LAST:event_jLabel6ActionPerformed

private void jButtonSearchListSurveilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchListSurveilActionPerformed
    String codeStatusList = ComboboxModel.getCodeComboBox(jComboBoxStatusSurveil);
    String dateStartList = dateComboBoxSearchSurveilStart.getText();
    String dateEndList = dateComboBoxSearchSurveilEnd.getText();
    Vector v = theDiagnosisControl.listSurveilByStatusDate(dateStartList,
            dateEndList, codeStatusList);
    setSurveilSearch(v);
    }//GEN-LAST:event_jButtonSearchListSurveilActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    }//GEN-LAST:event_closeDialog

    private void jTableListSurveilKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListSurveilKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_UP||evt.getKeyCode()==KeyEvent.VK_DOWN)
            selectList();
    }//GEN-LAST:event_jTableListSurveilKeyReleased

    private void jTableListSurveilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListSurveilMouseReleased
        selectList();
    }//GEN-LAST:event_jTableListSurveilMouseReleased

    private void jComboBoxLookupOrganismActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLookupOrganismActionPerformed
        //henbe comment 100253 ton ทำไมไม่ใช้ ให้เหมือนคนอื่นเขา มา new lookup ทุกครั้งที่เรียกเพื่ออะไรรู้มั้ยว่าเปลืองมาก
        if (evt.getActionCommand().equals("comboBoxEdited")) {
            if (jComboBoxLookupOrganism.getText().equals("")) {
                jComboBoxLookupOrganism.refresh();
            }
        }
}//GEN-LAST:event_jComboBoxLookupOrganismActionPerformed

    private void jComboBoxLookupOrganismKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxLookupOrganismKeyReleased

}//GEN-LAST:event_jComboBoxLookupOrganismKeyReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        int ret = theDiagnosisControl.saveSurveil(getSurveil(), theUS);
        if(ret>0)
            return;
        GutilPCU.saveNotify(this,jTableListSurveil,1,2,theSurveil.vn,theSurveil.icd_code);

}//GEN-LAST:event_jButtonSaveActionPerformed

    /*
     * เพื่อทำการดึงค่าข้อมูลที่ได้จาก ฟอร์มลงใน object
     *inupt ข้อมูลจากฟอร์ม
     *output
     */
    public Surveil getSurveil() {
        if(theSurveil==null)
            theSurveil = theHO.initSurveil();
        theSurveil.complica = jTextFieldInfection.getText();
        theSurveil.organism = jTextAreaCaseInfection.getText();
        theSurveil.complica53 = Gutil.getGuiData(this.jComboBoxLookupComplica);
        theSurveil.organism53 = Gutil.getGuiData(this.jComboBoxLookupOrganism);
        theSurveil.patient_status = ComboboxModel.getCodeComboBox(jComboBoxTypeDish);
        theSurveil.illdate = dateComboBoxSickDate.getText();
        theSurveil.icd_code = this.jTextFieldCode.getText();
        return theSurveil;
    }
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        boolean ret = theDiagnosisControl.deleteSurveil(getSurveil(), theUS);
        if(ret)
            refreshList();
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jTextFieldCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodeActionPerformed
        String search = Gutil.CheckReservedWords(jTextFieldCode.getText());
        search = search.toUpperCase();
        if (search.equals("")) {
            this.jLabelIcdCode.setText("");
//            theUS.setStatus("กรุณากรอกรหัสที่จะค้น", UpdateStatus.WARNING);
            return;
        }
        ICD10 icd10byCode = theDiagnosisControl.readIcd10ByCode(search);
        if (icd10byCode == null) {
            theUS.setStatus("ไม่พบข้อมูลที่ค้นหา กรุณาค้นหาใหม่อีกครั้ง", UpdateStatus.WARNING);
            return;
        }
        jTextFieldCode.setText(jTextFieldCode.getText().toUpperCase());
        this.jLabelIcdCode.setText(icd10byCode.description);
}//GEN-LAST:event_jTextFieldCodeActionPerformed

    private void jTextFieldCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodeFocusLost

}//GEN-LAST:event_jTextFieldCodeFocusLost

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        GutilPCU.addNew(jTableListSurveil,this,theHO.initSurveil());
    }//GEN-LAST:event_jButtonAddActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.DateComboBox dateComboBoxSearchSurveilEnd;
    private com.hospital_os.utility.DateComboBox dateComboBoxSearchSurveilStart;
    private com.hospital_os.utility.DateComboBox dateComboBoxSickDate;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonPreviewPrint;
    private javax.swing.JButton jButtonPrintListChronic;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearchListSurveil;
    private com.hosv3.gui.component.HosComboBox jComboBoxLookupComplica;
    private com.hosv3.gui.component.HosComboBox jComboBoxLookupOrganism;
    private javax.swing.JComboBox jComboBoxStatusSurveil;
    private javax.swing.JComboBox jComboBoxTypeDish;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCaseInfection;
    private javax.swing.JLabel jLabelDateSearchSurveil;
    private javax.swing.JLabel jLabelHn;
    private javax.swing.JLabel jLabelIcdCode;
    private javax.swing.JLabel jLabelInfection;
    private javax.swing.JLabel jLabelPatientStatus;
    private javax.swing.JLabel jLabelStatusServeil;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneShowListSurveil;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.hosv3.gui.component.HJTableSort jTableListSurveil;
    private com.hosv3.gui.component.HJTableSort jTableListSurveilReport;
    private javax.swing.JTextField jTextAreaCaseInfection;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldInfection;
    // End of variables declaration//GEN-END:variables

    private void setSurveilSearch(Vector vListSurveil) {
        this.vListSurveil = vListSurveil;
        if (vListSurveil == null) {
            TaBleModel tm = new TaBleModel(col_jTableListSurveilReport, 0);
            jTableListSurveilReport.setModel(tm);
            return;
        }
        TaBleModel tm = new TaBleModel(col_jTableListSurveilReport, vListSurveil.size());
        for (int i = 0; i < vListSurveil.size(); i++) {
            SurveilReport theSurveilReport = (SurveilReport) vListSurveil.get(i);
            tm.setValueAt(theLookupControl.getRenderTextHN(theSurveilReport.hn)
                    + " " + theSurveilReport.fname
                    + " " + theSurveilReport.lname, i, 0);
            tm.setValueAt(theSurveilReport.patient_address, i, 1);
            tm.setValueAt(theSurveilReport.diagnosis
                    + ": " + theSurveilReport.icd10, i, 2);
            tm.setValueAt(theSurveilReport.date_dx, i, 3);
            tm.setValueAt(theSurveilReport.visit_date, i, 4);
            tm.setValueAt(theSurveilReport.status, i, 5);
        }
        jTableListSurveilReport.setModel(tm);
        jTableListSurveilReport.setSize(900, 400);
    }

    /*
     *แสดงข้อมูลการค้นหาข้อโรคเฝ้าระวัง โดยนำ vector มาแสดง
     *input  :vector vSurveil 
     *output :
     */
    private void setSurveilV(Vector v) {
        TaBleModel tm;
        vSurveil = v;
        if (vSurveil != null) {
            tm = new TaBleModel(col_jTableListSurveil, vSurveil.size());
            for (int i = 0; i < vSurveil.size(); i++) {
                Surveil sUrveil = (Surveil) vSurveil.get(i);
                tm.setValueAt(sUrveil.hn, i, 0);
                tm.setValueAt(sUrveil.vn, i, 1);
                tm.setValueAt(sUrveil.icd_code, i, 2);
                tm.setValueAt(DateUtil.convertFieldDate(sUrveil.illdate), i, 3);
            }
        } else {
            tm = new TaBleModel(col_jTableListSurveil, 0);

        }
        jTableListSurveil.setModel(tm);
        jTableListSurveil.getColumnModel().getColumn(0).setCellRenderer(hnRender);
        jTableListSurveil.getColumnModel().getColumn(1).setCellRenderer(vnRender);
        if (vSurveil.size() == 1) {
            setSurveil((Surveil)vSurveil.get(0));
        }
        else{
            setSurveil(theHO.initSurveil());
        }
    }

    /*
     * แสดงค่า object ในแบบฟอร์ม
     *intup : object Surveil
     */

    public void setSurveil(Surveil sv) {
        theSurveil = sv;
        if (theSurveil == null) {
            theSurveil = theHO.initSurveil();
        }
        jLabelHn.setText(theHO.theFamily.patient_name + " " + theHO.theFamily.patient_last_name);
        dateComboBoxSickDate.setText(DateUtil.convertFieldDate(theSurveil.illdate));
        jTextFieldCode.setText(theSurveil.icd_code);
        this.jTextFieldCodeActionPerformed(null);
        jTextFieldInfection.setText(theSurveil.complica);
        jTextAreaCaseInfection.setText(theSurveil.organism);
        Gutil.setGuiData(this.jComboBoxLookupComplica, theSurveil.complica53);
        Gutil.setGuiData(this.jComboBoxLookupOrganism, theSurveil.organism53);
        Gutil.setGuiData(jComboBoxTypeDish, theSurveil.patient_status);
    }

    public void setLanguage(String msg) {
        GuiLang.setLanguage(col_jTableListSurveil);
        GuiLang.setLanguage(col_jTableListSurveil);
        GuiLang.setLanguage(jButtonSearchListSurveil);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(jLabelDateSearchSurveil);
        GuiLang.setLanguage(jLabelDateSearchSurveil);
        GuiLang.setLanguage(jLabelStatusServeil);
        GuiLang.setLanguage(jLabelStatusServeil);
        GuiLang.setLanguage(jTabbedPane1);
        GuiLang.setTextBundle(jPanel4);
        GuiLang.setLanguage(jButtonSave);// ปุ่มบันทึก
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabel7);
        GuiLang.setLanguage(jLabel8);
        GuiLang.setLanguage(jLabelCaseInfection);
        GuiLang.setLanguage(jLabelInfection);
        GuiLang.setLanguage(jLabelPatientStatus);
        GuiLang.setTextBundle(jPanel7);
    }




    @Override
    public void setObject(Object obj) {
        this.setSurveil((Surveil)obj);
    }

    @Override
    public Object getObject() {
        return getSurveil();
    }


    @Override
    public void refreshList() {
        String visit_id = null;
        if(theHO.theVisit==null)
            return;
        if(this.jLabel6.isSelected())
            visit_id = theHO.theVisit.getObjectId();
        Vector v = theDiagnosisControl.listSurveilPVid(theHO.thePatient.getObjectId(),visit_id);
        setSurveilV(v);
        setSurveil(null);
    }
    /*
     * เพื่อทำการดึงค่าข้อมูลจาก Table แสดงผลการค้นหาข้อมูล
     * input : ค่า row ที่ทำการเลือกข้อมูล
     */
    public void selectList()
    {
        int row = jTableListSurveil.getSelectedRow();
        int index = -1;
        String f1 = (String)jTableListSurveil.getValueAt(row, 1);
        String f2 = (String)jTableListSurveil.getValueAt(row, 2);
        for(int i=0;i<vSurveil.size();i++){
            Surveil sv = (Surveil)vSurveil.get(i);
            if(sv.vn.equals(f1) && sv.icd_code.equals(f2))
                index = i;
        }
        setObject(vSurveil.get(index));
    }
}
