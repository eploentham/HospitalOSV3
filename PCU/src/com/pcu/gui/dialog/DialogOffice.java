/*
 * DialogOffice1.java
 *
 * Created on 19 กรกฎาคม 2545, 10:03 น.
 */

package com.pcu.gui.dialog;

import com.hospital_os.object.*;
import com.hospital_os.utility.Constant;

import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.ComboboxModel;
import com.pcu.control.AllComboBoxControl;
import com.pcu.control.HosManage;
import com.pcu.control.PCUControl;
import com.pcu.control.SystemControl;


import java.util.*;
import java.awt.*;
import javax.swing.*;
import com.pcu.utility.*;
/**
 *
 * @author  noom
 */
public class DialogOffice extends javax.swing.JDialog {
    PCUControl theHC;
    private SystemControl theSystemControl;
    private AllComboBoxControl theAllComboBoxControl;
    public Office theOfficeNow;
    private Office office;
    public Vector theOffice;
    
    public boolean actionCommand = false;
    public long firstClickTime = 0; //ใช้ในการตรวจสอบการ Double-Click
    private String[] column = {"รหัส","ชื่อ"};

    
    
    /************************* DialogOffice Contructor************************/
    public DialogOffice(HosManage hm,Office theOffice) {
        
        super(new JFrame(), true);
        initComponents();
        //setLanguage("");
        theHC = hm.theHosControl;
        theSystemControl = theHC.theSystemControl;
        theAllComboBoxControl = theHC.theAllComboBoxControl;
        office = theOffice;
        //String off = of.getObjectId();
        ComboboxModel.initComboBox(jComboBoxChangwat,theHC.theAllComboBoxControl.listAddressCGW());
        
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jComboBoxChangwat = new javax.swing.JComboBox();
        jComboBoxAmphur = new javax.swing.JComboBox();
        jTextFieldChangwat = new com.hospital_os.utility.IntegerTextField();
        jTextFieldAmphur = new com.hospital_os.utility.IntegerTextField();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Changwat");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 12);
        jPanel1.add(jLabel1, gridBagConstraints);

        jLabel2.setText("Amphur");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 12);
        jPanel1.add(jLabel2, gridBagConstraints);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(12, 0, 0, 0);
        jPanel1.add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonOK.setText("OK");
        jButtonOK.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonOK.setMaximumSize(new java.awt.Dimension(72, 24));
        jButtonOK.setMinimumSize(new java.awt.Dimension(72, 24));
        jButtonOK.setPreferredSize(new java.awt.Dimension(72, 24));
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jButtonOK, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonCancel.setMaximumSize(new java.awt.Dimension(72, 24));
        jButtonCancel.setMinimumSize(new java.awt.Dimension(72, 24));
        jButtonCancel.setPreferredSize(new java.awt.Dimension(72, 24));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jPanel2, gridBagConstraints);

        jComboBoxChangwat.setMinimumSize(new java.awt.Dimension(31, 21));
        jComboBoxChangwat.setPreferredSize(new java.awt.Dimension(31, 21));
        jComboBoxChangwat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxChangwatActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jComboBoxChangwat, gridBagConstraints);

        jComboBoxAmphur.setMinimumSize(new java.awt.Dimension(31, 21));
        jComboBoxAmphur.setPreferredSize(new java.awt.Dimension(31, 21));
        jComboBoxAmphur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAmphurActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel1.add(jComboBoxAmphur, gridBagConstraints);

        jTextFieldChangwat.setColumns(2);
        jTextFieldChangwat.setMinimumSize(new java.awt.Dimension(26, 21));
        jTextFieldChangwat.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldChangwatKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel1.add(jTextFieldChangwat, gridBagConstraints);

        jTextFieldAmphur.setColumns(2);
        jTextFieldAmphur.setMinimumSize(new java.awt.Dimension(26, 21));
        jTextFieldAmphur.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldAmphurKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 2);
        jPanel1.add(jTextFieldAmphur, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void jTextFieldAmphurKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAmphurKeyReleased
        keyAmpur();
    }//GEN-LAST:event_jTextFieldAmphurKeyReleased
    
    private void jTextFieldChangwatKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldChangwatKeyReleased
        keyCw();
    }//GEN-LAST:event_jTextFieldChangwatKeyReleased
    
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        if(jTable1.getSelectedRow()==-1) return;
        theOfficeNow = (Office)theOffice.get(jTable1.getSelectedRow());
    }//GEN-LAST:event_jTable1MouseReleased
    
    private void jComboBoxAmphurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAmphurActionPerformed
        if(jComboBoxAmphur.getItemCount()==0) return;
        
        theOffice = theHC.theAllComboBoxControl.listOffice(
                Gutil.getGuiData(jComboBoxChangwat),
                Gutil.getGuiData(jComboBoxAmphur));
        updateOG();
    }//GEN-LAST:event_jComboBoxAmphurActionPerformed
    
    private void jComboBoxChangwatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxChangwatActionPerformed
        if(jComboBoxChangwat.getItemCount()==0) return;
        
        String a=Gutil.getGuiData(jComboBoxChangwat);
        Vector v = theHC.theAllComboBoxControl.listAddressAmp(a);
        ComboboxModel.initComboBox(jComboBoxAmphur,v);
    }//GEN-LAST:event_jComboBoxChangwatActionPerformed
    
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if(jTable1.getSelectedRow()==-1) return;
        theOfficeNow = (Office)theOffice.get(jTable1.getSelectedRow());
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonOKActionPerformed
    {//GEN-HEADEREND:event_jButtonOKActionPerformed
        actionCommand = true;
        dispose();
    }//GEN-LAST:event_jButtonOKActionPerformed
    
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCancelActionPerformed
    {//GEN-HEADEREND:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    
    private void listOffice1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_listOffice1KeyReleased
            }//GEN-LAST:event_listOffice1KeyReleased
    
    private void listOffice1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listOffice1MouseReleased
        doubleClickList();
    }//GEN-LAST:event_listOffice1MouseReleased
        private void comboBoxAmphur1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxAmphur1ActionPerformed
                }//GEN-LAST:event_comboBoxAmphur1ActionPerformed
            private void comboBoxChangwat1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxChangwat1ActionPerformed
                    }//GEN-LAST:event_comboBoxChangwat1ActionPerformed
                private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
                    dispose();
    }//GEN-LAST:event_closeDialog
                
                /*-----------------------------------------------------------*/
                /** เรียกใช้เมื่อ Double-Click ที่รายการ */
                private void doubleClickList() {
                    try {
                        // ถ้า Double-Click ก็ให้ Add เข้ารายการ Order เลย
                        long clickTime = System.currentTimeMillis();
                        long clickInterval = clickTime - firstClickTime;
                        
                        if(clickInterval < 400) {
                            firstClickTime = 0;
                            jButtonOKActionPerformed(null);
                        } else {
                            firstClickTime = clickTime;
                        }
                    } catch(Exception ex) {
                        ex.printStackTrace();
                    }
                }
                
                public void updateOG() {
                    if(theOffice==null) return;
                    TaBleModel tm = new TaBleModel(column,theOffice.size());
                    
                    for(int i=0;i<theOffice.size();i++) {
                        Office pd = (Office)theOffice.get(i);
                        tm.setValueAt(pd.getCode(),i,0);
                        tm.setValueAt(pd.getName(),i,1);
                    }
                    this.jTable1.setModel(tm);
                    jTable1.getColumnModel().getColumn(0).setPreferredWidth(100);
                    jTable1.getColumnModel().getColumn(1).setPreferredWidth(500);
                }
                
                public void updateComboboxOG(String off){
                    Constant.println("-------"+"updateComboxOG");
                    if(off !=null && off.equals("")==false) {
                        theOfficeNow = theHC.theAllComboBoxControl.readHospitalByCode(off);
                        if(theOfficeNow !=null) {
                            String ch = theOfficeNow.changwat + "0000";
                            String am = theOfficeNow.changwat + theOfficeNow.ampur + "00";
                            Gutil.setGuiData(jComboBoxChangwat,ch);
                            Gutil.setGuiData(jComboBoxAmphur,am);
                            Gutil.setGuiData(jTable1,theOffice,off);
                        }
                    } else {
          
                        if(theSystemControl.theHospital_Site != null) {
                            Constant.println("theSystemControl.theHospital_Site.changwat = "+theSystemControl.theHospital_Site.changwat);
                            Gutil.setGuiData(jComboBoxChangwat,theSystemControl.theHospital_Site.changwat);
                            
                            if(theSystemControl.theHospital_Site.changwat !=null) {
                                Gutil.setGuiData(jComboBoxAmphur,theSystemControl.theHospital_Site.amphor);
                                
                            }
                            
                        } else {
                            JOptionPane.showMessageDialog(this, "ตาราง Site ไม่มีข้อมูล โปรแกรมจะกำหนดที่อยู่เป็นจังหวัดภูเก็ตให้แทน", "เตือน", JOptionPane.WARNING_MESSAGE);
                            Gutil.setGuiData(jComboBoxChangwat,"830000");
                            Gutil.setGuiData(jComboBoxAmphur,"830100");
                        }
                        
                    }
                }
                
                public boolean showDialog(Office of) {
                    theOfficeNow = null;
                    actionCommand = false;
                    updateComboboxOG(of.getObjectId());
                    setSize(300,400);
                    setTitle("สถานพยาบาล");
                    setLanguage("");
                    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                    setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
                    setVisible(true);
                    if(actionCommand){
                        of.setObjectId(theOfficeNow.getObjectId());
                        of.name = theOfficeNow.name;
                        return true;
                    }
                    System.gc();
                    return false;
                }
                
                public void keyCw() {
                    Gutil.setGuiData(jComboBoxChangwat,Gutil.getGuiData(jTextFieldChangwat)+"0000");
                    this.jTextFieldAmphur.setText("");
                }
                
                public void keyAmpur() {
                    Gutil.setGuiData(jComboBoxAmphur, Gutil.getGuiData(jTextFieldChangwat)+Gutil.getGuiData(jTextFieldAmphur)+"00");
                }
                
                
                public void setLanguage(String msg) {
                    jLabel1.setText(GutilPCU.getTextBundle(jLabel1.getText()));
                    jLabel2.setText(GutilPCU.getTextBundle(jLabel2.getText()));
                    jButtonOK.setText(GutilPCU.getTextBundle(jButtonOK.getText()));
                    jButtonCancel.setText(GutilPCU.getTextBundle(jButtonCancel.getText()));
                }
                
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox jComboBoxAmphur;
    private javax.swing.JComboBox jComboBoxChangwat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private com.hospital_os.utility.IntegerTextField jTextFieldAmphur;
    private com.hospital_os.utility.IntegerTextField jTextFieldChangwat;
    // End of variables declaration//GEN-END:variables
    public static boolean showDialog(HosManage hm,Office theOffice) {
        DialogOffice dlg = new DialogOffice(hm,theOffice);
        dlg.setSize(300,400);
        
        dlg.setTitle("สถานพยาบาล");
        dlg.setLanguage("");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        // dlg.setLocation((screenSize.width-dlg.getSize().width)/2, screenSize.height  - 250 - (dlg.getSize().height)/2);//-(28+dlg.getSize().height/2));
        dlg.setLocation((screenSize.width-dlg.getSize().width)/2, (screenSize.height-dlg.getSize().height)/2);
        dlg.setVisible(true);
        if(dlg.actionCommand) {
            theOffice.setObjectId(dlg.theOfficeNow.getObjectId());
            theOffice.name = dlg.theOfficeNow.name;
            return true;
        }
        dlg=null;
        System.gc();
        return false;
    }
    
}
