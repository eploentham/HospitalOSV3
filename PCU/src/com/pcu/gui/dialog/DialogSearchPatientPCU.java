/*
 * DialogSearchPatient.java
 *
 * Created on 26 กันยายน 2548, 9:20 น.
 */

package com.pcu.gui.dialog;
import com.hosv3.control.PatientControl;
import com.pcu.control.HomeControl;
import com.pcu.control.HosManage;
import com.pcu.control.PCUObject;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;
import javax.swing.table.*;
import com.hospital_os.object.*;
import com.pcu.object.*;
import com.hospital_os.utility.*;
import com.hospital_os.utility.Constant;
import com.pcu.utility.*;
import com.pcu.utility.DateUtil;
/**
 *
 * @author  Administrator
 */
public class DialogSearchPatientPCU extends javax.swing.JDialog {
   // private PatientControl thePatientControl;
    private HomeControl theHomeControl;
    Vector thePatient;
    Vector theFamily;
    HosManage theHosManage;
    DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
    
    int type_gui = 0;
    private String[] column = {"HN","ชื่อ","สกุล","อายุ","ชื่อมารดา"};

    private PCUObject pcuobject;
    private final PatientControl theHosInf;
    
    /** Creates new form DialogSearchPatient */
    public DialogSearchPatientPCU(java.awt.Frame parent, boolean modal,HosManage hm) {
        super(parent, modal);
        this.theHosManage = hm;
        pcuobject = hm.thePO;
        theHosInf = hm.theHC.thePatientControl;
        theHomeControl = hm.theHosControl.theHomeControl;        
        initComponents();
        setLanguage();
        this.setTitle("ค้นหารายชื่อประชากร");
        jLabelHomeNumber.setVisible(false);
        jTextFieldHomeNumber.setVisible(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelFname = new javax.swing.JLabel();
        jTextFieldFname = new javax.swing.JTextField();
        jLabelLname = new javax.swing.JLabel();
        jTextFieldLname = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldHN = new com.hospital_os.utility.HNTextField();
        pIDSearchPanel = new com.hospital_os.utility.PIDPanel();
        jLabelPID = new javax.swing.JLabel();
        jLabelHomeNumber = new javax.swing.JLabel();
        jTextFieldHomeNumber = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldOtherHn = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelFname.setText("\u0e0a\u0e37\u0e48\u0e2d");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jLabelFname, gridBagConstraints);

        jTextFieldFname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldFname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFnameActionPerformed(evt);
            }
        });
        jTextFieldFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFnameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel3.add(jTextFieldFname, gridBagConstraints);

        jLabelLname.setText("\u0e19\u0e32\u0e21\u0e2a\u0e01\u0e38\u0e25");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jLabelLname, gridBagConstraints);

        jTextFieldLname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldLname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLnameActionPerformed(evt);
            }
        });
        jTextFieldLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLnameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jTextFieldLname, gridBagConstraints);

        jLabel1.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jLabel1, gridBagConstraints);

        jTextFieldHN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldHN.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jTextFieldHN.setMinimumSize(new java.awt.Dimension(60, 21));
        jTextFieldHN.setPreferredSize(new java.awt.Dimension(60, 21));
        jTextFieldHN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHNActionPerformed(evt);
            }
        });
        jTextFieldHN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldHNKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 0);
        jPanel3.add(jTextFieldHN, gridBagConstraints);

        pIDSearchPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pIDSearchPanelKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 2, 2);
        jPanel3.add(pIDSearchPanel, gridBagConstraints);

        jLabelPID.setText("\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e25\u0e02\u0e1a\u0e31\u0e15\u0e23");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel3.add(jLabelPID, gridBagConstraints);

        jLabelHomeNumber.setText("\u0e1a\u0e49\u0e32\u0e19\u0e40\u0e25\u0e02\u0e17\u0e35\u0e48");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jLabelHomeNumber, gridBagConstraints);

        jTextFieldHomeNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHomeNumberActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 2, 2);
        jPanel3.add(jTextFieldHomeNumber, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("HN \u0e02\u0e2d\u0e07 HCIS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabel2, gridBagConstraints);

        jTextFieldOtherHn.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldOtherHn.setMinimumSize(new java.awt.Dimension(60, 21));
        jTextFieldOtherHn.setPreferredSize(new java.awt.Dimension(60, 21));
        jTextFieldOtherHn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldOtherHnKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel5.add(jTextFieldOtherHn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 1);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 1);
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableKeyReleased(evt);
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMouseReleased(evt);
            }
        });

        jScrollPane.setViewportView(jTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 1, 1);
        jPanel2.add(jScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jTextFieldLnameKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldLnameKeyReleased
    {//GEN-HEADEREND:event_jTextFieldLnameKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            pIDSearchPanel.setText("");    
            jTextFieldOtherHn.setText("");
            jTextFieldHN.setText("");
        }
    }//GEN-LAST:event_jTextFieldLnameKeyReleased

    private void jTextFieldFnameKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldFnameKeyReleased
    {//GEN-HEADEREND:event_jTextFieldFnameKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            pIDSearchPanel.setText("");    
            jTextFieldOtherHn.setText("");
            jTextFieldHN.setText("");
        }
    }//GEN-LAST:event_jTextFieldFnameKeyReleased

    private void pIDSearchPanelKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_pIDSearchPanelKeyReleased
    {//GEN-HEADEREND:event_pIDSearchPanelKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            jTextFieldFname.setText("");
            jTextFieldLname.setText("");        
            jTextFieldOtherHn.setText("");
            jTextFieldHN.setText("");
        }
    }//GEN-LAST:event_pIDSearchPanelKeyReleased

    private void jTextFieldOtherHnKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldOtherHnKeyReleased
    {//GEN-HEADEREND:event_jTextFieldOtherHnKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            jTextFieldFname.setText("");
            jTextFieldLname.setText("");        
            pIDSearchPanel.setText("");
            jTextFieldHN.setText("");
        }
    }//GEN-LAST:event_jTextFieldOtherHnKeyReleased

    private void jTextFieldHNKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldHNKeyReleased
    {//GEN-HEADEREND:event_jTextFieldHNKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            jTextFieldFname.setText("");
            jTextFieldLname.setText("");        
            pIDSearchPanel.setText("");
            jTextFieldOtherHn.setText("");
        }
    }//GEN-LAST:event_jTextFieldHNKeyReleased

    private void jTextFieldHomeNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHomeNumberActionPerformed

        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldHomeNumberActionPerformed

    private void jTextFieldLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLnameActionPerformed

        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldLnameActionPerformed

    private void jTextFieldFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFnameActionPerformed

        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldFnameActionPerformed

    private void jTextFieldHNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHNActionPerformed
        
        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldHNActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed

          searchPatientInDB();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseReleased
        int i=jTable.getSelectedRow();  
        if(i==-1) return;
        if(!jTextFieldHN.getText().equals(""))
        {
            Patient pt =(Patient)thePatient.get(i);
             theHosManage.theHC.thePatientControl.readFamilyByFamilyId(pt.family_id);
        }
        else
        {
             Family fl =(Family)theFamily.get(i);
             // @henbe add 16/06/06
             ////////////////////////
             //henbe comment
             //theHosManage.theHosSubject.theHomePatientSubject.notifylistPatientbyFamilyInSearch(fl);
             theHosManage.theHC.thePatientControl.readFamilyByFamilyId(fl.getObjectId());
        }
    }//GEN-LAST:event_jTableMouseReleased

    private void jTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableKeyReleased

        if(evt.getKeyCode()==evt.VK_UP ||evt.getKeyCode()==evt.VK_DOWN )
        {
            jTableMouseReleased(null);
        }
    }//GEN-LAST:event_jTableKeyReleased
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelFname;
    private javax.swing.JLabel jLabelHomeNumber;
    private javax.swing.JLabel jLabelLname;
    private javax.swing.JLabel jLabelPID;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTable jTable;
    private javax.swing.JTextField jTextFieldFname;
    private com.hospital_os.utility.HNTextField jTextFieldHN;
    private javax.swing.JTextField jTextFieldHomeNumber;
    private javax.swing.JTextField jTextFieldLname;
    private javax.swing.JTextField jTextFieldOtherHn;
    private com.hospital_os.utility.PIDPanel pIDSearchPanel;
    // End of variables declaration//GEN-END:variables
    public void setLanguage()
    {
        /*Label*/
        jLabelFname.setText(GutilPCU.getTextBundle(jLabelFname.getText()));
        jLabelLname.setText(GutilPCU.getTextBundle(jLabelLname.getText()));
        jLabelHomeNumber.setText(GutilPCU.getTextBundle(jLabelHomeNumber.getText()));
        jLabelPID.setText(GutilPCU.getTextBundle(jLabelPID.getText()));
        //jLabelFname.setText(Constant.getTextBundle(jLabelFname.getText()));
        //jLabelLname.setText(Constant.getTextBundle(jLabelLname.getText()));
        
        /**Buttom**/
         jButtonSearch.setText(GutilPCU.getTextBundle(jButtonSearch.getText()));
        
        
    }  
    
    
    public void showDialog()
    {   
        //clearGUI();
        this.setSize(250,300);
        this.pack();
        Toolkit thekit = this.getToolkit();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();       
        this.setLocation((screenSize.width-this.getSize().width)/2, (screenSize.height-this.getSize().height)/2);
        this.setVisible(true);
        this.jTextFieldFname.requestFocus();
        
    }
    
    public void clearGUI()
    {   
        jTextFieldFname.setText("");
        jTextFieldLname.setText("");
        jTextFieldHN.setText("");
        pIDSearchPanel.setText("");
    }
    
    
    /**
     *  เมื่อเลือกผู้ป่วยให้ notify ส่งข้อมูลไปทุก panel
     */
    /**
     * ค้นหาผู้ป่านจากฐานข้อมูลเพื่อให้ notify กลับมาแสดงใน table 
     */
    private void searchPatientInDB()
    {
        thePatient = null;
        theFamily = null;     
        if(!jTextFieldHN.getText().equals(""))
        {
            if(!jTextFieldHN.getText().equals(""))
            {
                thePatient = theHosInf.listPatientByHn(jTextFieldHN.getText().trim());
            }     
            else if(!pIDSearchPanel.getText().equals(""))
            {  
                thePatient = theHosInf.listPatientByPID(pIDSearchPanel.getText());
            }
            else if(!jTextFieldFname.getText().equals("")
                || !jTextFieldLname.getText().equals(""))
            {   
                thePatient = theHosInf.listPatientByName("",jTextFieldFname.getText()
                    ,jTextFieldLname.getText());           
            }
            else if(!jTextFieldHomeNumber.getText().equals(""))
            {
                thePatient = theHomeControl.listPatientByHome(jTextFieldHomeNumber.getText());            
            }
            else if(jTextFieldHN.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "กรุณากรอกข้อมูลอย่างน้อย 1 รายการ", "คำเตือน"
                    ,JOptionPane.WARNING_MESSAGE);
            }        
            else
            {
                JOptionPane.showMessageDialog(this, "ใส่คีย์เวิร์ดอย่างน้อย 2 ตัว", "คำเตือน"
                    ,JOptionPane.WARNING_MESSAGE);
            }
            updateOGPatientV(thePatient);
        }
        else
        {
            //thePatientOldHn = theHomeControl.
            if(!jTextFieldOtherHn.getText().equals(""))
            {
                theFamily = theHomeControl.listFamilyByOtherHn(jTextFieldOtherHn.getText());                
            }
            else if(!jTextFieldHN.getText().equals(""))
            {
                thePatient = theHosInf.listPatientByHn(jTextFieldHN.getText().trim());
            }     
            else if(!pIDSearchPanel.getText().equals(""))
            {  
                theFamily = theHomeControl.listFamilyByPID(pIDSearchPanel.getText());
            }            
            else if(!jTextFieldFname.getText().equals("")
                || !jTextFieldLname.getText().equals(""))
            {   
                theFamily = theHomeControl.listPatientByName("",jTextFieldFname.getText()
                    ,jTextFieldLname.getText());           
            }
            else if(!jTextFieldHomeNumber.getText().equals(""))
            {
                thePatient = theHomeControl.listPatientByHome(jTextFieldHomeNumber.getText());            
            }
            else if(jTextFieldHN.getText().equals(""))
            {
                JOptionPane.showMessageDialog(this, "กรุณากรอกข้อมูลอย่างน้อย 1 รายการ", "คำเตือน"
                    ,JOptionPane.WARNING_MESSAGE);
            }        
            else
            {
                JOptionPane.showMessageDialog(this, "ใส่คีย์เวิร์ดอย่างน้อย 2 ตัว", "คำเตือน"
                    ,JOptionPane.WARNING_MESSAGE);
            }
            if(thePatient!=null)
            {
                updateOGPatientV(thePatient);
            }
            else
            {
                updateOGFamilyV(theFamily);
            }
        }      
        
    }
    
    /**
     * แสดงข้อมูลตารางลงตาราง 
     */
    public void updateOGPatientV(Vector thePatient)
    {
        if(thePatient==null)
            thePatient = new Vector();
       TaBleModel tm = new TaBleModel(column,thePatient.size());
       for(int i=0;i<thePatient.size();i++)
       {
           Patient pd = (Patient)thePatient.get(i);
           
            Constant.println("public void updateOGPatientV(Vector thePatient)");
           String year = DateUtil.calculateAge(pd.patient_birthday
                   ,pcuobject.getCurrentDateTime());
           if(!year.equals("")) year = year + " ปี";
           tm.setValueAt(pd.hn,i,0);
           tm.setValueAt(pd.patient_name,i,1);
           tm.setValueAt(pd.patient_last_name,i,2);
           tm.setValueAt(year,i,3);
           tm.setValueAt(pd.mother_firstname,i,4);
       }
       jTable.setModel(tm);
       jTable.getColumnModel().getColumn(0).setPreferredWidth(100);       
       jTable.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererRight());
       jTable.getColumnModel().getColumn(1).setPreferredWidth(100);      
       jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(3).setPreferredWidth(50);       
       jTable.getColumnModel().getColumn(3).setCellRenderer(ColumnTableRenderer.getRendererRight());
       jTable.getColumnModel().getColumn(4).setPreferredWidth(100);
       
    }    
    
    /**
     * แสดงข้อมูลตารางลงตาราง 
     */
    public void updateOGFamilyV(Vector theFamily)
    {
        if(theFamily==null)
            theFamily = new Vector();
       TaBleModel tm = new TaBleModel(column,theFamily.size());
       for(int i=0;i<theFamily.size();i++)
       {
           Family fd = (Family)theFamily.get(i);
           String year = DateUtil.calculateAge(fd.patient_birthday
                   ,pcuobject.getCurrentDateTime());
           if(!year.equals("")) year = year + " ปี";
           tm.setValueAt("-",i,0);
           tm.setValueAt(fd.patient_name,i,1);
           tm.setValueAt(fd.patient_last_name,i,2);           
           tm.setValueAt(year,i,3);
           tm.setValueAt(fd.mother_firstname,i,4);
       }
       jTable.setModel(tm);
       jTable.getColumnModel().getColumn(0).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererRight());
       jTable.getColumnModel().getColumn(1).setPreferredWidth(100);      
       jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(3).setPreferredWidth(50);       
       jTable.getColumnModel().getColumn(3).setCellRenderer(ColumnTableRenderer.getRendererRight());
       jTable.getColumnModel().getColumn(4).setPreferredWidth(100);
       
    }    
    
    
    
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setFnameLname(String first_name,String list_name){
//        Constant.println(first_name + list_name+"---------------------------------");
        if(first_name == null)
            first_name = "";
        if(list_name == null)
            list_name = "";
           
        if(first_name.trim().length() >0 || list_name.trim().length() >0 )
        {               
            jTextFieldFname.setText(first_name);
            jTextFieldLname.setText(list_name);
            searchPatientInDB();
        }
    }
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setHNPID(String hn,String pid)
    {   
        
        if(hn.trim().length() >0 || pid.trim().length() >0 )
        {   
            jTextFieldHN.setText(hn);
            pIDSearchPanel.setText(pid);
            searchPatientInDB();
        }
    }
}
