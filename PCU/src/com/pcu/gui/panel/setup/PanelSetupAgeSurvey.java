/*
 * PanelSetupUncontagious.java
 *
 * Created on 21 กุมภาพันธ์ 2549, 11:10 น.
 */

package com.pcu.gui.panel.setup;
import com.hosv3.utility.connection.UpdateStatus;
import com.pcu.control.PCUControl;
import com.pcu.control.PCUObject;
import java.util.*;
import java.awt.event.*;
import com.pcu.object.*;
import com.pcu.utility.TableModel;
import com.pcu.utility.GutilPCU;
import com.pcu.control.HosManage;
import com.pcu.utility.*;

import com.hospital_os.utility.ComboFix;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hosv3.utility.Constant;
/**
 *
 * @author  kingland
 */
public class PanelSetupAgeSurvey extends javax.swing.JPanel implements KeyListener{
    int offset = 20;
    int next = 0;
    int prev = 0;
    boolean flagButtonDel = false;
    String[] colum = {GutilPCU.getTextBundle("AgeSurvey_Col1")
        ,GutilPCU.getTextBundle("AgeSurvey_Col2")
        ,GutilPCU.getTextBundle("AgeSurvey_Col3")
        ,GutilPCU.getTextBundle("AgeSurvey_Col4")};
    Vector vAgeSurvey;
    Vector vAgeSurveyAll;
    AgeSurvey theAgeSurvey;
    HosManage theHM;
    PCUControl theHC;

    private UpdateStatus theUS;

    private PCUObject pcuobject;
    /** Creates new form PanelSetupUncontagious */
    public PanelSetupAgeSurvey(HosManage hm) 
    {
        setControl(hm);
        addKeyListener(this);
    }
    public PanelSetupAgeSurvey()
    {
        addKeyListener(this);
    }
    private void setControl(HosManage hm)
    {
        theHM = hm;
        theUS = hm.theUS;
        theHC = hm.theHosControl;
        pcuobject = hm.thePO;
        initComponents();
        initComboBox();
        setLanguage();
        setKeyBoard();
    }
    public void initComboBox()
    {
        ComboboxModel.initComboBox(this.jComboBoxSurvey,this.theHC.theAllComboBoxControl.listSurvey()); 
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        fontTitle1 = new com.pcu.utility.FontTitle();
        fontTitle2 = new com.pcu.utility.FontTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jComboBoxSurvey = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        integerTextFieldAgeStart = new com.pcu.utility.IntegerTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonRefresh = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jCheckBoxLifeTime = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        integerTextFieldAgeEnd = new com.pcu.utility.IntegerTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButtonReset = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBoxSActive = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(922, 162));
        setPreferredSize(new java.awt.Dimension(922, 69));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(fontTitle1);
        jLabel1.setText("AgeSurvey");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 11);
        add(jPanel1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setMinimumSize(new java.awt.Dimension(350, 25));
        jPanel4.setOpaque(false);
        jPanel4.setPreferredSize(new java.awt.Dimension(350, 25));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14"));
        jLabel4.setFont(defaultFont1);
        jLabel4.setText("\u0e2a\u0e33\u0e23\u0e27\u0e08");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("\u0e40\u0e23\u0e34\u0e48\u0e21\u0e2d\u0e32\u0e22\u0e38");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel5, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBoxActiveKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 5, 0);
        jPanel6.add(jCheckBoxActive, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText("\u0e16\u0e36\u0e07\u0e2d\u0e32\u0e22\u0e38");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel2, gridBagConstraints);

        jComboBoxSurvey.setFont(defaultFont1);
        jComboBoxSurvey.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxSurveyKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel6.add(jComboBoxSurvey, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setMinimumSize(new java.awt.Dimension(27, 25));
        jPanel8.setPreferredSize(new java.awt.Dimension(27, 25));
        integerTextFieldAgeStart.setColumns(2);
        integerTextFieldAgeStart.setText("0");
        integerTextFieldAgeStart.setFont(defaultFont1);
        integerTextFieldAgeStart.setMinimumSize(new java.awt.Dimension(60, 21));
        integerTextFieldAgeStart.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                integerTextFieldAgeStartKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel8.add(integerTextFieldAgeStart, gridBagConstraints);

        jLabel3.setFont(defaultFont1);
        jLabel3.setText("\u0e1b\u0e35");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel8.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jPanel8, gridBagConstraints);

        jButtonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/pcu/images/Refresh2.gif")));
        jButtonRefresh.setToolTipText("Refresh");
        jButtonRefresh.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonRefresh.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonRefresh.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRefreshActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel6.add(jButtonRefresh, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jCheckBoxLifeTime.setFont(defaultFont1);
        jCheckBoxLifeTime.setSelected(true);
        jCheckBoxLifeTime.setText("\u0e15\u0e25\u0e2d\u0e14\u0e2d\u0e32\u0e22\u0e38");
        jCheckBoxLifeTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLifeTimeActionPerformed(evt);
            }
        });
        jCheckBoxLifeTime.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBoxLifeTimeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 5);
        jPanel10.add(jCheckBoxLifeTime, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setMinimumSize(new java.awt.Dimension(27, 25));
        jPanel9.setPreferredSize(new java.awt.Dimension(27, 25));
        integerTextFieldAgeEnd.setColumns(2);
        integerTextFieldAgeEnd.setEnabled(false);
        integerTextFieldAgeEnd.setFont(defaultFont1);
        integerTextFieldAgeEnd.setMinimumSize(new java.awt.Dimension(60, 21));
        integerTextFieldAgeEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                integerTextFieldAgeEndKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel9.add(integerTextFieldAgeEnd, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText("\u0e1b\u0e35");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 3, 0);
        jPanel10.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jPanel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 30));
        jButtonReset.setFont(defaultFont1);
        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonReset.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonReset.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel7.add(jButtonReset, gridBagConstraints);

        jButtonDelete.setFont(defaultFont1);
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel7.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif")));
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 26));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 26));
        jButtonSave.setPreferredSize(new java.awt.Dimension(80, 26));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel4.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 11);
        add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel5.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("\u0e04\u0e49\u0e19\u0e2b\u0e32");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(300, 22));
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(300, 100));
        jTable1.setFont(defaultFont1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jCheckBoxSActive.setFont(defaultFont1);
        jCheckBoxSActive.setSelected(true);
        jCheckBoxSActive.setText("Active");
        jCheckBoxSActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 0);
        jPanel5.add(jCheckBoxSActive, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel2.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel5.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 0);
        add(jPanel5, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
            selectAgeSurvey();
    }//GEN-LAST:event_jTable1KeyReleased

    private void jCheckBoxActiveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBoxActiveKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            saveAgeSurvey();
        }
    }//GEN-LAST:event_jCheckBoxActiveKeyReleased

    private void integerTextFieldAgeEndKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_integerTextFieldAgeEndKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jCheckBoxActive.requestFocus();
        }
    }//GEN-LAST:event_integerTextFieldAgeEndKeyReleased

    private void jCheckBoxLifeTimeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBoxLifeTimeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(jCheckBoxLifeTime.isSelected())
            {
                jCheckBoxActive.requestFocus();
            }
            else
            {
                integerTextFieldAgeEnd.requestFocus();
            }
        }
    }//GEN-LAST:event_jCheckBoxLifeTimeKeyReleased

    private void integerTextFieldAgeStartKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_integerTextFieldAgeStartKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jCheckBoxLifeTime.requestFocus();
        }
    }//GEN-LAST:event_integerTextFieldAgeStartKeyReleased

    private void jComboBoxSurveyKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxSurveyKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            integerTextFieldAgeStart.requestFocus();
        }
    }//GEN-LAST:event_jComboBoxSurveyKeyReleased

    private void jCheckBoxSActiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSActiveActionPerformed
// TODO add your handling code here:
        searchAgeSurvey();
    }//GEN-LAST:event_jCheckBoxSActiveActionPerformed

    private void jButtonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRefreshActionPerformed
// TODO add your handling code here:
        ComboboxModel.initComboBox(this.jComboBoxSurvey,this.theHC.theAllComboBoxControl.listSurvey()); 
    }//GEN-LAST:event_jButtonRefreshActionPerformed

    private void jCheckBoxLifeTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLifeTimeActionPerformed
        selectLifeTime();
    }//GEN-LAST:event_jCheckBoxLifeTimeActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
       prevItemGroup();
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
       nextItemGroup();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        searchAgeSurvey();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        selectAgeSurvey();
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        deleteAgeSurvey();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        insertAgeSurvey();
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveAgeSurvey();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchAgeSurvey();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    /**
     * เลือกตลอดอายุ
     * @param  
     * @return 
     * @author kingland
     * @date 08-03-2549
     */
    private void selectLifeTime()
    {
        if(jCheckBoxLifeTime.isSelected())
        {
            integerTextFieldAgeEnd.setText("");
            integerTextFieldAgeEnd.setEnabled(false);
        }
        else
        {
            integerTextFieldAgeEnd.setText("");
            integerTextFieldAgeEnd.setEnabled(true);
            integerTextFieldAgeEnd.requestFocus();
        }
    }
    /**
     * เซตปุ่มลบ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    public void setEnableButtonSetupPanel(boolean boo)
    {
        flagButtonDel = boo;
        setEnabled(true);
    }
    /**
     * เซตปุ่มต่างๆ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    public void setEnabled(boolean boo)
    {
        if(theHC.theLookupControl.readOption().life.equals("1"))
        {
            jButtonDelete.setEnabled(false);
        }
        else
        {
            jButtonDelete.setEnabled(boo);
        }
        jButtonPrev.setEnabled(boo);
        jButtonNext.setEnabled(boo);
        jButtonReset.setEnabled(boo);
        jButtonSave.setEnabled(boo);
        jButtonSearch.setEnabled(boo);        
        
    }
    /**
     * กดปุ่มถัดไป
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void nextItemGroup()
    {   
        updateOGVAgeSurvey(vAgeSurvey,1);
    }
    /**
     * กดปุ่มย้อยกลับ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    private void prevItemGroup()
    {   
        updateOGVAgeSurvey(vAgeSurvey,0);
    }
    /**
     * เลือกรายการโรค
     * @param  
     * @return 
     * @author kingland
     * @date 22-02-2549
     */
    private void selectAgeSurvey()
    {
        int select = jTable1.getSelectedRow();
        theAgeSurvey = (AgeSurvey)vAgeSurvey.get(select+prev);
        updateOGAgeSurvey(theAgeSurvey);
        setEnabled(true);
    }
    /**
     * ลบรายการสำรวจ
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void deleteAgeSurvey()
    {
        int[] select = jTable1.getSelectedRows();
        
        //amp:26/5/2549
        if(select.length == 0)
        {
            this.theHM.theHosInf.setStatus(Constant.getTextBundle("กรุณาเลือกรายการสำรวจตามช่วงอายุ"), 2);
            return;
        }
        if(this.theHM.theHC.theLookupControl.readOption().life.equals("1"))
        {
            this.theHM.theHosInf.setStatus(Constant.getTextBundle("ระบบเริ่มใช้งานจริงแล้ว") +
                    " " +
                    Constant.getTextBundle("ไม่สามารถลบข้อมูลได้"),2);
            return;
        }
        if (!theUS.confirmBox(GutilPCU.getTextBundle("Delete_AgeSurvey"),UpdateStatus.WARNING))
            return;
        
            for(int i=0;i<select.length;i++)
            {
                select[i]=select[i]+prev;
                AgeSurvey as = (AgeSurvey)vAgeSurvey.get(select[i]);
                as.survey_staff_cancle = pcuobject.getEmployee().getObjectId();
                as.survey_cancle_datetime = DateTime.getTextCurrentDateTime(theHC.theConnectionInf);
                as.survey_active = "0";
            }
            theHC.theSetupPcuControl.deleteAgeSurvey(vAgeSurvey,select);
            //amp:26/5/2549
            vAgeSurveyAll = vAgeSurvey;
            insertAgeSurvey();      
        updateOGVAgeSurvey(vAgeSurvey,0);
    }
    /**
     * เพิ่มรายการสำรวจ
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void insertAgeSurvey()
    {
        clearGui();
        theAgeSurvey = null;
    }
    /**
     * 
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void clearGui()
    {
//        jComboBoxSurvey.setSelectedIndex(0);
        jComboBoxSurvey.requestFocus();
        integerTextFieldAgeStart.setText("0");
        integerTextFieldAgeEnd.setText("");
    }
    /**
     * ค้นหารายการสำรวจ
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void searchAgeSurvey()
    {
        next = 0;
        prev = 0; 
        String searchword = jTextFieldSCode.getText();
        boolean active = true;
        if(jCheckBoxSActive.isSelected())
        {
            active = true;
        }
        else
        {
            active = false;
        }
        vAgeSurvey = theHC.theSetupPcuControl.listAgeSurvey(searchword, active);
        updateOGVAgeSurvey(vAgeSurvey,0);
    }
    /**
     * อับเดตตารางแสดงรายการสำรวจ
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void updateOGVAgeSurvey(Vector vd ,int off)
    {
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(vd != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vd.size())
                {   next = vd.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= vd.size())
                {   next= vd.size();
                    count = next;
                }
            }
            TableModel tm = new TableModel(colum,count);
            for(int i=0 ;i<count;i++)
            {  
                AgeSurvey as =(AgeSurvey)vd.get(i+prev);             
                tm.setValueAt(String.valueOf(i+prev+1), i, 0);                
                tm.setValueAt(as.survey_description, i, 1);
                tm.setValueAt(as.survey_start, i, 2);
                tm.setValueAt(as.survey_end, i, 3);
            }
            jTable1.setModel(tm);
        }
        else
        {   TableModel tm = new TableModel(colum,0);
            jTable1.setModel(tm);
        }
        jTable1.setRowHeight(20);
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTable1.getColumnModel().getColumn(2).setPreferredWidth(15);
        jTable1.getColumnModel().getColumn(3).setPreferredWidth(15);
//        if(jTable1.getRowCount()==1)
//        {
//            jTable1.setRowSelectionInterval(0,0);
//            jTable1MouseReleased(null);
//        }
    }
    
    /**
     * บันทึกรายการสำรวจ
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void saveAgeSurvey()
    {
        updateGOAgeSurvey();
        if(vAgeSurveyAll == null)
            vAgeSurveyAll = this.theHM.theHosControl.theSetupPcuControl.listAgeSurvey("", true);
        int result = theHC.theSetupPcuControl.saveAgeSurvey(vAgeSurveyAll ,this.theAgeSurvey);
        searchAgeSurvey();
       
    }
    
    /**
     * นำข้อมุลจากObjectเข้าไปในGui
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void updateOGAgeSurvey(AgeSurvey as)
    {
        Gutil.setGuiData(this.jComboBoxSurvey,this.theAgeSurvey.survey_id);
        integerTextFieldAgeStart.setText(as.survey_start);
        integerTextFieldAgeEnd.setText(as.survey_end );
        if("1".equals(as.survey_is_lifetime))
        {
            jCheckBoxLifeTime.setSelected(true);
            integerTextFieldAgeEnd.setEnabled(false);
        }
        else
        {
            jCheckBoxLifeTime.setSelected(false);
            integerTextFieldAgeEnd.setEnabled(true);
        }
        jCheckBoxActive.setSelected(as.survey_active.equals("1"));
    }
    /**
     * นำข้อมูลจากGuiเข้าไปในObject
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void updateGOAgeSurvey()
    {
        if(theAgeSurvey == null)
            theAgeSurvey = new AgeSurvey();
        ComboFix cf = (ComboFix)jComboBoxSurvey.getSelectedItem();
        theAgeSurvey.survey_id = cf.code ;
        theAgeSurvey.survey_start = integerTextFieldAgeStart.getText();
        theAgeSurvey.survey_end = integerTextFieldAgeEnd.getText();
        if(this.jCheckBoxLifeTime.isSelected())
        {
            theAgeSurvey.survey_is_lifetime = "1";
        }
        else
        {
            theAgeSurvey.survey_is_lifetime = "0";
        }
        if(jCheckBoxActive.isSelected())
        {
            theAgeSurvey.survey_active = "1";
        }
        else
        {
            theAgeSurvey.survey_active = "0";
        }
        
        //amp:26/5/2549 เมื่อไม่ใส่ข้อมูลถึงอายุให้เปลี่ยนเป็นตลอดอายุ
        if("".equals(theAgeSurvey.survey_end) && "0".equals(theAgeSurvey.survey_is_lifetime))
        {
            theAgeSurvey.survey_is_lifetime = "1";
        }
        
        if(theAgeSurvey.getObjectId() == null || theAgeSurvey.getObjectId().equals(""))
        {
            theAgeSurvey.survey_record_datetime = DateTime.getTextCurrentDateTime(theHC.theConnectionInf);
            theAgeSurvey.survey_staff_record = pcuobject.getEmployee().getObjectId();
        }
        else
        {
            AgeSurvey ast = this.theHC.theSetupPcuControl.readAgeSurveyByPk(theAgeSurvey.getObjectId());            
            if(!ast.getObjectId().equalsIgnoreCase(theAgeSurvey.getObjectId())
                || !ast.survey_id.equalsIgnoreCase(theAgeSurvey.survey_id)
                || !ast.survey_start.equalsIgnoreCase(theAgeSurvey.survey_start)
                || !ast.survey_end.equalsIgnoreCase(theAgeSurvey.survey_end)
                || !ast.survey_active.equalsIgnoreCase(theAgeSurvey.survey_active))
            {
                theAgeSurvey.survey_modify_datetime = DateTime.getTextCurrentDateTime(theHC.theConnectionInf);
                theAgeSurvey.survey_staff_modify = pcuobject.getEmployee().getObjectId();
            }
            
        }

                
    }
    /**
     * เซตภาษา
     * @param  
     * @return 
     * @author kingland
     * @date 06-03-2549
     */
    private void setLanguage()
    {
        jLabel1.setText(GutilPCU.getTextBundle("AgeSurvey"));
        jLabel4.setText(GutilPCU.getTextBundle("Survey"));
//        jLabel7.setText(GutilPCU.getTextBundle("Life_time"));
        jLabel5.setText(GutilPCU.getTextBundle("Age_begin"));
        jLabel2.setText(GutilPCU.getTextBundle("Age_end"));
        jButtonSearch.setText(GutilPCU.getTextBundle("Search"));
        jButtonSave.setText(GutilPCU.getTextBundle("Save"));
        jLabelICD9code.setText(GutilPCU.getTextBundle(jLabelICD9code.getText()));  
    }
    /**
     * เซตการใช้งานปุ่ม KeyBoard
     * @param  -
     * @return void
     * @author kingland
     * @date 27-07-2549
     */
    private void setKeyBoard()
    {
        jButtonDelete.addKeyListener(this);
        jButtonNext.addKeyListener(this);
        jButtonPrev.addKeyListener(this);
        jButtonRefresh.addKeyListener(this);
        jButtonReset.addKeyListener(this);
        jButtonSave.addKeyListener(this);
        jButtonSearch.addKeyListener(this);
        jCheckBoxActive.addKeyListener(this);
        jCheckBoxLifeTime.addKeyListener(this);
        jCheckBoxSActive.addKeyListener(this);
        jComboBoxSurvey.addKeyListener(this);
        jTable1.addKeyListener(this);
        jTextFieldSCode.addKeyListener(this);
        integerTextFieldAgeStart.addKeyListener(this);
        integerTextFieldAgeEnd.addKeyListener(this);
        jComboBoxSurvey.addKeyListener(this);
    }
    public void keyPressed(KeyEvent keyEvent) {
    }

    public void keyReleased(KeyEvent keyEvent) 
    {
        if(keyEvent.getKeyCode() == KeyEvent.VK_INSERT)
        {
            insertAgeSurvey();
        }
        else if(keyEvent.getKeyCode() == KeyEvent.VK_DELETE)
        {
            deleteAgeSurvey();
        }
        else if(KeyEvent.getModifiersExText(keyEvent.getModifiersEx()).equalsIgnoreCase("Ctrl")
        && keyEvent.getKeyCode() == KeyEvent.VK_S)
        {
            beforSearch();
        }
    }

    public void keyTyped(KeyEvent keyEvent) {
    }
    
    private void beforSearch()
    {
        jTextFieldSCode.requestFocus();
        jTextFieldSCode.setSelectionStart(0);
    }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.FontTitle fontTitle1;
    private com.pcu.utility.FontTitle fontTitle2;
    private com.pcu.utility.IntegerTextField integerTextFieldAgeEnd;
    private com.pcu.utility.IntegerTextField integerTextFieldAgeStart;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxLifeTime;
    private javax.swing.JCheckBox jCheckBoxSActive;
    private javax.swing.JComboBox jComboBoxSurvey;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables
    
}
