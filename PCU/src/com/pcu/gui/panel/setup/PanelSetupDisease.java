/*
 * PanelSetupUncontagious.java
 *
 * Created on 21 กุมภาพันธ์ 2549, 11:10 น.
 */

package com.pcu.gui.panel.setup;
import com.pcu.control.PCUControl;
import java.awt.event.*;
import java.util.*;
import javax.swing.JOptionPane;
import com.pcu.object.*;
import com.pcu.utility.TableModel;
import com.pcu.utility.GutilPCU;
import com.pcu.control.HosManage;
import com.hospital_os.object.*;


/**
 *
 * @author  kingland
 */
public class PanelSetupDisease extends javax.swing.JPanel implements KeyListener{
    int offset = 20;
    int next = 0;
    int prev = 0;
    int offset1 = 15;
    int next1 = 0;
    int prev1 = 0;
    boolean flagButtonDel = false;
    Vector vGroupIcd10 = new Vector();
    String[] colum = {GutilPCU.getTextBundle("TableDisease_Col1")
        ,GutilPCU.getTextBundle("TableDisease_Col2")};
    String[] col = {"icd","ชื่อโรค"};    
    Vector vDisease;
    Vector vList;
    Disease theDisease;
    HosManage theHM;
    PCUControl theHC;
    Hashtable tb ;
    /** Creates new form PanelSetupUncontagious */
    public PanelSetupDisease(HosManage hm) {
        theHM = hm;
        theHC = hm.theHosControl;
        initComponents();
        addKeyListener(this);
        setLanguage();
        initDatas();
        setKeyBoard();
    }
    
    public void initDatas() 
    {
         tb = new Hashtable();
         vList = theHC.theSetupPcuControl.listDisease("",true);
         if(vList!=null)
         {
             
             for(int i=0;i<vList.size();i++)
             {
                 Disease ds = (Disease)vList.elementAt(i);
                 tb.put(ds.getObjectId(),ds.diseaseName);
             }
         }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        fontTitle1 = new com.pcu.utility.FontTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBoxSActive = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNumber = new javax.swing.JTextField();
        jTextFieldDiseaseName = new javax.swing.JTextField();
        jTextFieldStandardName = new javax.swing.JTextField();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jRadioButtonYes = new javax.swing.JRadioButton();
        jRadioButtonNo = new javax.swing.JRadioButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextFieldSCode1 = new javax.swing.JTextField();
        jButtonSearch1 = new javax.swing.JButton();
        jButtonPrev1 = new javax.swing.JButton();
        jButtonNext1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jButtonReset = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(fontTitle1);
        jLabel1.setText("Disease");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 11);
        add(jPanel1, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel5.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("\u0e04\u0e49\u0e19\u0e2b\u0e32");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTable1.setFont(defaultFont1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jCheckBoxSActive.setFont(defaultFont1);
        jCheckBoxSActive.setSelected(true);
        jCheckBoxSActive.setText("Active");
        jCheckBoxSActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 0);
        jPanel5.add(jCheckBoxSActive, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel3.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel5.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 0);
        add(jPanel5, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14"));
        jPanel6.setMinimumSize(new java.awt.Dimension(350, 25));
        jPanel6.setPreferredSize(new java.awt.Dimension(350, 25));
        jLabelCode.setFont(defaultFont1);
        jLabelCode.setText("\u0e25\u0e33\u0e14\u0e31\u0e1a\u0e42\u0e23\u0e04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabelCode, gridBagConstraints);

        jLabel4.setFont(defaultFont1);
        jLabel4.setText("\u0e0a\u0e37\u0e48\u0e2d\u0e42\u0e23\u0e04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel4, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("\u0e0a\u0e37\u0e48\u0e2d\u0e21\u0e32\u0e15\u0e23\u0e10\u0e32\u0e19");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel5, gridBagConstraints);

        jTextFieldNumber.setFont(defaultFont1);
        jTextFieldNumber.setMinimumSize(new java.awt.Dimension(70, 21));
        jTextFieldNumber.setPreferredSize(new java.awt.Dimension(70, 21));
        jTextFieldNumber.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNumberKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jTextFieldNumber, gridBagConstraints);

        jTextFieldDiseaseName.setFont(defaultFont1);
        jTextFieldDiseaseName.setMinimumSize(new java.awt.Dimension(200, 21));
        jTextFieldDiseaseName.setPreferredSize(new java.awt.Dimension(200, 21));
        jTextFieldDiseaseName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldDiseaseNameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jTextFieldDiseaseName, gridBagConstraints);

        jTextFieldStandardName.setFont(defaultFont1);
        jTextFieldStandardName.setMinimumSize(new java.awt.Dimension(200, 21));
        jTextFieldStandardName.setPreferredSize(new java.awt.Dimension(200, 21));
        jTextFieldStandardName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldStandardNameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jTextFieldStandardName, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBoxActiveKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel6.add(jCheckBoxActive, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText("\u0e42\u0e23\u0e04\u0e15\u0e34\u0e14\u0e15\u0e48\u0e2d");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabel6, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jPanel8.setOpaque(false);
        jPanel8.setPreferredSize(new java.awt.Dimension(200, 26));
        buttonGroup1.add(jRadioButtonYes);
        jRadioButtonYes.setFont(defaultFont1);
        jRadioButtonYes.setText("\u0e40\u0e1b\u0e47\u0e19");
        jRadioButtonYes.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButtonYesKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        jPanel8.add(jRadioButtonYes, gridBagConstraints);

        buttonGroup1.add(jRadioButtonNo);
        jRadioButtonNo.setFont(defaultFont1);
        jRadioButtonNo.setSelected(true);
        jRadioButtonNo.setText("\u0e44\u0e21\u0e48\u0e40\u0e1b\u0e47\u0e19");
        jRadioButtonNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jRadioButtonNoKeyReleased(evt);
            }
        });

        jPanel8.add(jRadioButtonNo, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jPanel8, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setBorder(null);
        jTable2.setFont(defaultFont1);
        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable2KeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel9.add(jScrollPane2, gridBagConstraints);

        jTextFieldSCode1.setMaximumSize(new java.awt.Dimension(150, 24));
        jTextFieldSCode1.setMinimumSize(new java.awt.Dimension(150, 24));
        jTextFieldSCode1.setPreferredSize(new java.awt.Dimension(21, 21));
        jTextFieldSCode1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCode1ActionPerformed(evt);
            }
        });
        jTextFieldSCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCode1KeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel9.add(jTextFieldSCode1, gridBagConstraints);

        jButtonSearch1.setFont(defaultFont1);
        jButtonSearch1.setText("\u0e04\u0e49\u0e19\u0e2b\u0e32");
        jButtonSearch1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch1.setMaximumSize(new java.awt.Dimension(120, 26));
        jButtonSearch1.setMinimumSize(new java.awt.Dimension(120, 26));
        jButtonSearch1.setPreferredSize(new java.awt.Dimension(120, 26));
        jButtonSearch1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearch1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel9.add(jButtonSearch1, gridBagConstraints);

        jButtonPrev1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev1.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev1.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev1.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrev1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel9.add(jButtonPrev1, gridBagConstraints);

        jButtonNext1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext1.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext1.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext1.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNext1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 0, 0);
        jPanel9.add(jButtonNext1, gridBagConstraints);

        jLabel2.setText("\u0e01\u0e25\u0e38\u0e48\u0e21\u0e23\u0e2b\u0e31\u0e2a\u0e42\u0e23\u0e04 ICD 10");
        jPanel9.add(jLabel2, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel6.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 30));
        jButtonReset.setFont(defaultFont1);
        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonReset.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonReset.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel7.add(jButtonReset, gridBagConstraints);

        jButtonDelete.setFont(defaultFont1);
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 1, 0, 0);
        jPanel7.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif")));
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 26));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 26));
        jButtonSave.setPreferredSize(new java.awt.Dimension(80, 26));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel7.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel2.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 11);
        add(jPanel2, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxSActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxSActiveActionPerformed
        searchDisease();
    }//GEN-LAST:event_jCheckBoxSActiveActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            selectDisease();
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            saveDisease();
        }
    }//GEN-LAST:event_jTable2KeyReleased

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            jTable1.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jTextFieldSCode1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCode1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            searchGroupIcd10();
        }
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            jTable2.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldSCode1KeyReleased

    private void jCheckBoxActiveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBoxActiveKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jTextFieldSCode1.requestFocus();
        }
    }//GEN-LAST:event_jCheckBoxActiveKeyReleased

    private void jRadioButtonNoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButtonNoKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            jRadioButtonYes.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jRadioButtonNo.setSelected(true);
            jCheckBoxActive.requestFocus();
        }
    }//GEN-LAST:event_jRadioButtonNoKeyReleased

    private void jRadioButtonYesKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jRadioButtonYesKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            jRadioButtonNo.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jRadioButtonYes.setSelected(true);
            jCheckBoxActive.requestFocus();
        }
    }//GEN-LAST:event_jRadioButtonYesKeyReleased

    private void jTextFieldStandardNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldStandardNameKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jRadioButtonYes.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldStandardNameKeyReleased

    private void jTextFieldDiseaseNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldDiseaseNameKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jTextFieldStandardName.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldDiseaseNameKeyReleased

    private void jTextFieldNumberKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNumberKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jTextFieldDiseaseName.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNumberKeyReleased

    private void jTextFieldSCode1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCode1ActionPerformed
// TODO add your handling code here:
        searchGroupIcd10();
    }//GEN-LAST:event_jTextFieldSCode1ActionPerformed

    private void jButtonPrev1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrev1ActionPerformed
// TODO add your handling code here:
        prevGroupIcd10();
    }//GEN-LAST:event_jButtonPrev1ActionPerformed

    private void jButtonNext1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNext1ActionPerformed
// TODO add your handling code here:
        nextGroupIcd10();
    }//GEN-LAST:event_jButtonNext1ActionPerformed

    private void jButtonSearch1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearch1ActionPerformed
// TODO add your handling code here:
        searchGroupIcd10();
    }//GEN-LAST:event_jButtonSearch1ActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
       prevItemGroup();
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
       nextItemGroup();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        searchDisease();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        selectDisease();
    }//GEN-LAST:event_jTable1MouseReleased

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        deleteDisease();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        insertDisease();
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveDisease();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchDisease();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void nextGroupIcd10()
    {   
        setTable(vGroupIcd10,1);
    }
    private void prevGroupIcd10()
    {   
        setTable(vGroupIcd10,0);
    }
    
    /**
     * เซตปุ่มลบ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    public void setEnableButtonSetupPanel(boolean boo)
    {
        flagButtonDel = boo;
        setEnabled(true);
    }
    /**
     * เซตปุ่มต่างๆ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    public void setEnabled(boolean boo)
    {
        if(this.flagButtonDel)
        {
            jButtonDelete.setEnabled(false);
        }
        else
             jButtonDelete.setEnabled(boo);
        this.jButtonPrev.setEnabled(boo);
        this.jButtonNext.setEnabled(boo);
        this.jButtonReset.setEnabled(boo);
        this.jButtonSave.setEnabled(boo);
        this.jButtonSearch.setEnabled(boo);        
        
    }
    /**
     * กดปุ่มถัดไป
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    private void nextItemGroup()
    {   
        updateOGVdisease(vDisease,1);
    }
    /**
     * กดปุ่มย้อยกลับ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    private void prevItemGroup()
    {   
        updateOGVdisease(vDisease,0);
    }
    /**
     * เลือกรายการโรค
     * @param  
     * @return 
     * @author kingland
     * @date 22-02-2549
     */
    private void selectDisease()
    {
        int select = jTable1.getSelectedRow();
        theDisease = (Disease)vDisease.get(select+prev);
        updateOGDisease(theDisease);
        next1 = 0;
        prev1 = 0; 
        vGroupIcd10 = theHM.theHC.theSetupControl.listGroupIcd10ByDisease(theDisease.getObjectId());
        setTable(vGroupIcd10,1);
        setEnabled(true);
        if(theDisease.number.equals("99"))        
            jTextFieldNumber.setEnabled(false);        
        else
            jTextFieldNumber.setEnabled(true);
    }
    /**
     * ลบรายการโรค
     * @param  
     * @return 
     * @author kingland
     * @date 22-02-2549
     */
    private void deleteDisease()
    {
        int[] select = jTable1.getSelectedRows();
        for(int i=0;i<select.length;i++)
        {
            select[i]=select[i]+prev;
        }
        theHC.theSetupPcuControl.deleteDisease(vDisease,select);
        updateOGVdisease(vDisease,0);
        initDatas();
        setTable(vGroupIcd10,1);
    }
    /**
     * เพิ่มรายการโรค
     * @param  
     * @return 
     * @author kingland
     * @date 22-02-2549
     */
    private void insertDisease()
    {
        clearGui();
        theDisease = null;
        searchGroupIcd10();
        
    }
    /**
     * ค้นหารายการโรค
     * @param  
     * @return 
     * @author kingland
     * @date 22-02-2549
     */
    private void searchDisease()
    {
        next = 0;
        prev = 0; 
        String searchword = jTextFieldSCode.getText();
        boolean active = true;
        if(jCheckBoxSActive.isSelected())
        {
            active = true;
        }
        else
        {
            active = false;
        }
        vDisease = theHC.theSetupPcuControl.listDisease(searchword, active);        
        updateOGVdisease(vDisease,0);
    }
    /**
     * อับเดตตารางแสดงรายการโรค
     * @param  vector = ข้อมูลของรายการโรค off = 
     * @return -
     * @author kingland
     * @date 22-02-2549
     */
    private void updateOGVdisease(Vector vd ,int off)
    {
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(vd != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vd.size())
                {   next = vd.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= vd.size())
                {   next= vd.size();
                    count = next;
                }
            }
            TableModel tm = new TableModel(colum,count);
            for(int i=0 ;i<count;i++)
            {  
                Disease ds =(Disease)vd.get(i+prev);             
                tm.setValueAt(ds.number, i, 0);                
                tm.setValueAt(ds.diseaseName, i, 1);
            }
            jTable1.setModel(tm);
        }
        else
        {   TableModel tm = new TableModel(colum,0);
            jTable1.setModel(tm);
        }
        jTable1.setRowHeight(20);
//        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
//        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
        if(jTable1.getRowCount()==1){
            jTable1.setRowSelectionInterval(0,0);
            jTable1MouseReleased(null);
        }
    }
    /**
     * บันทึกรายการโรค
     * @param  -
     * @return -
     * @author kingland
     * @date 22-02-2549
     */
    private void saveDisease()
    {
        updateGODisease();
        if(("").equals(theDisease.diseaseName))
        {
            theHM.theHosInf.setStatus(GutilPCU.getTextBundle("กรุณากรอกรหัส"), 2);
            return;
        }
        if(("").equals(theDisease.diseaseName))
        {
            theHM.theHosInf.setStatus(GutilPCU.getTextBundle("กรุณากรอกรายละเอียด"), 2);
            return;
        }
        Vector vList = new Vector();
        boolean active = false;
        if(theDisease.active.equals("1"))
            active = true;
        else
            active = false;
        vList = this.theHC.theSetupPcuControl.listDisease("",active);
        for(int i=0;i<vList.size();i++)
        {
            Disease ds = (Disease)vList.elementAt(i);
            if(theDisease.getObjectId()==null
                    && theDisease.diseaseName.equalsIgnoreCase(ds.diseaseName))
            {
                this.theHM.theHosInf.setStatus("ชื่อโรคนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                return;
            }
            else if(theDisease.diseaseName.equalsIgnoreCase(ds.diseaseName)
            &&!theDisease.getObjectId().equalsIgnoreCase(ds.getObjectId()))
            {
                this.theHM.theHosInf.setStatus("ชื่อโรคนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                return;
            }
            if(theDisease.getObjectId()==null
                    && theDisease.number.equalsIgnoreCase(ds.number))
            {
                this.theHM.theHosInf.setStatus("ลำดับโรคนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                return;
            }
            else if(this.theDisease.number.equalsIgnoreCase(ds.number)
            &&!this.theDisease.getObjectId().equalsIgnoreCase(ds.getObjectId()))
            {
                theHM.theHosInf.setStatus("ลำดับโรคนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                jTextFieldNumber.requestFocus();
                return;
            }
        }
        
        int result = theHC.theSetupPcuControl.saveDisease(theDisease);
        if(result==1)
        {
            if(theDisease.getObjectId()!=null)
            {
                int[] row = jTable2.getSelectedRows();
                GroupIcd10 gi = new GroupIcd10();
                for(int i=0;i<row.length;i++)
                {
                    gi =(GroupIcd10)vGroupIcd10.get(row[i]+prev1);
                    gi.group_disease = theDisease.getObjectId();
                    this.theHM.theHC.theSetupControl.saveGroupIcd10(gi);
                }
            }
//            initDatas();
            tb.put(theDisease.getObjectId(), theDisease.diseaseName);
            searchDisease();
            next1 = 0;
            prev1 = 0;
            vGroupIcd10 = theHM.theHC.theSetupControl.listGroupIcd10ByDisease(theDisease.getObjectId());
            setTable(vGroupIcd10,1);
        }
        
    }
    /**
     * นำข้อมุลจากObjectเข้าไปในGui
     * @param
     * @return
     * @author kingland
     * @date 22-02-2549
     */
    private void updateOGDisease(Disease ds)
    {
        if(ds.active.equals("1"))
        {
            jCheckBoxActive.setSelected(true);
        }
        else
        {
            jCheckBoxActive.setSelected(false);
        }
        if("".equalsIgnoreCase(ds.diseaseName))
        {
            jTextFieldDiseaseName.setText("");
        }
        else
        {
            jTextFieldDiseaseName.setText(ds.diseaseName);
        }
//        if("".equalsIgnoreCase(ds.icdCode))
//        {
//            jTextFieldIcd.setText("");
//        }
//        else
//        {
//            jTextFieldIcd.setText(ds.icdCode);
//        }
        if(ds.isContagiousDisease.equals("1"))
        {
            jRadioButtonYes.setSelected(true);
        }
        else
        {
            jRadioButtonNo.setSelected(true);
        }
        jTextFieldNumber.setText(ds.number);
        if("".equalsIgnoreCase(ds.standardName))
        {
            jTextFieldStandardName.setText("");
        }
        else
        {
            jTextFieldStandardName.setText(ds.standardName);
        }
    }
    /**
     * นำข้อมูลจากGuiเข้าไปในObject
     * @param
     * @return
     * @author kingland
     * @date 22-02-2549
     */
    private void updateGODisease()
    {
        if(this.theDisease == null)
        {
            theDisease = new Disease();
        }
        if(jCheckBoxActive.isSelected())
        {
            theDisease.active = "1";
        }
        else
        {
            theDisease.active = "0";
        }
        theDisease.diseaseName = jTextFieldDiseaseName.getText();
//        theDisease.icdCode = jTextFieldIcd.getText();
        if(jRadioButtonYes.isSelected())
        {
            theDisease.isContagiousDisease = "1";
        }
        else
        {
            theDisease.isContagiousDisease = "0";
        }
        theDisease.number = jTextFieldNumber.getText();
        theDisease.standardName = jTextFieldStandardName.getText();
    }
    /**
     * เคลียร์GUI
     * @param
     * @return
     * @author kingland
     * @date 22-02-2549
     */
    private void clearGui()
    {
        jTextFieldNumber.setText("");
        jTextFieldNumber.requestFocus();
        jTextFieldDiseaseName.setText("");
        jTextFieldStandardName.setText("");
        jTextFieldNumber.setEnabled(true);
//        jTextFieldIcd.setText("");
        jRadioButtonNo.setSelected(true);
        jCheckBoxActive.setSelected(true);
//        this.updateOGVdisease(new Vector(),0);
    }
    /**
     * เซตภาษา
     * @param
     * @return
     * @author kingland
     * @date 22-02-2549
     */
    private void setLanguage()
    {
        jLabel1.setText(GutilPCU.getTextBundle("Disease"));
        jButtonSearch.setText(GutilPCU.getTextBundle("Search"));
        jLabelCode.setText(GutilPCU.getTextBundle("DiseaseOrder"));
        jLabel4.setText(GutilPCU.getTextBundle("DiseaseName"));
        jLabel5.setText(GutilPCU.getTextBundle("DiseaseNameStandard"));
//        jLabel2.setText(GutilPCU.getTextBundle("ICD10"));
        jLabel6.setText(GutilPCU.getTextBundle("ContagiousDisease"));
        jRadioButtonYes.setText(GutilPCU.getTextBundle("ContagiousDisease_Yes"));
        jRadioButtonNo.setText(GutilPCU.getTextBundle("ContagiousDisease_No"));
        jButtonSave.setText(GutilPCU.getTextBundle("Save"));
        jLabelICD9code.setText(GutilPCU.getTextBundle(jLabelICD9code.getText()));  
        
    }
    
    
    private void searchGroupIcd10()
    {
        next1 = 0;
        prev1 = 0;
        String search = jTextFieldSCode1.getText();
        vGroupIcd10 = theHM.theHC.theSetupControl.listGroupIcd10All(search.toUpperCase());
        setTable(vGroupIcd10,1);
    }
    
    private void setTable(Vector vGicd10,int off)
    {
        GroupIcd10 of = new GroupIcd10();
        int count = offset1;
        int p =0;
        int n =0;
        int c =0;
        if(vGicd10 != null)
        {
            if(off == 1)
            {   p = prev1;
                n = next1;
                prev1 = next1;
                next1 = next1 + offset1;
                if(next1 >= vGicd10.size())
                {   next1 = vGicd10.size();
                    count = next1 - prev1;
                }
                if(count == 0)
                {   prev1 = p;
                    next1 = n;
                    count = n - p;
                }
            }
            else
            {   next1 = prev1;
                prev1 = prev1 - offset1;
                if(prev1 <=0)
                {    prev1 = 0;
                     next1 = offset1;
                }
                if(next1 >= vGicd10.size())
                {   next1= vGicd10.size();
                    count = next1;
                }
            }
            TableModel tm = new TableModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (GroupIcd10)vGicd10.get(i+prev1);
                tm.setValueAt(of.icdcode,i,0);
                tm.setValueAt((String)tb.get(of.group_disease),i,1);
                
            }
            jTable2.setModel(tm);
        }
        else
        {   TableModel tm = new TableModel(col,0);
            jTable2.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTable2.setRowHeight(20);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(40);
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(80);
    }
    /**
     * เซตข้อมูลการใช้ Keyboard
     * @param  -
     * @return void
     * @author kingland
     * @date 28/07/2549
     */
    private void setKeyBoard()
    {
        jButtonDelete.addKeyListener(this);
        jButtonNext.addKeyListener(this);
        jButtonNext1.addKeyListener(this);
        jButtonPrev.addKeyListener(this);
        jButtonPrev1.addKeyListener(this);
        jButtonReset.addKeyListener(this);
        jButtonSave.addKeyListener(this);
        jButtonSearch.addKeyListener(this);
        jButtonSearch1.addKeyListener(this);
        jCheckBoxActive.addKeyListener(this);
        jCheckBoxSActive.addKeyListener(this);
        jTable1.addKeyListener(this);
        jTable2.addKeyListener(this);
        jTextFieldDiseaseName.addKeyListener(this);
        jTextFieldNumber.addKeyListener(this);
        jTextFieldSCode.addKeyListener(this);
        jTextFieldSCode1.addKeyListener(this);
        jTextFieldStandardName.addKeyListener(this);
    }
    public void keyPressed(KeyEvent keyEvent)
    {
    }
    
    public void keyReleased(KeyEvent keyEvent)
    {
        if(keyEvent.getKeyCode() == KeyEvent.VK_INSERT)
        {
            this.insertDisease();
        }
        else if(keyEvent.getKeyCode() == KeyEvent.VK_DELETE)
        {
            this.deleteDisease();
        }
        else if(KeyEvent.getModifiersExText(keyEvent.getModifiersEx()).equalsIgnoreCase("Ctrl")
        && keyEvent.getKeyCode() == KeyEvent.VK_S)
        {
            beforSearch();
        }
    }
    
    public void keyTyped(KeyEvent keyEvent)
    {
    }
    private void beforSearch()
    {
        jTextFieldSCode.setSelectionStart(0);
        jTextFieldSCode.requestFocus();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.FontTitle fontTitle1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonNext1;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonPrev1;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSearch1;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxSActive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JRadioButton jRadioButtonNo;
    private javax.swing.JRadioButton jRadioButtonYes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextFieldDiseaseName;
    private javax.swing.JTextField jTextFieldNumber;
    private javax.swing.JTextField jTextFieldSCode;
    private javax.swing.JTextField jTextFieldSCode1;
    private javax.swing.JTextField jTextFieldStandardName;
    // End of variables declaration//GEN-END:variables
    
}
