/*
 * PanelSetupSurvey.java
 *
 * Created on 9 มีนาคม 2549, 11:26 น.
 */

package com.pcu.gui.panel.setup;

import com.hosv3.utility.connection.UpdateStatus;
import java.util.*;
import java.awt.event.*;
import com.pcu.control.SetupPcuControl;
import com.pcu.control.HosManage;
import com.pcu.object.*;
import com.pcu.utility.*;
import com.hospital_os.utility.*;
/**
 *
 * @author  Jao
 */
public class PanelSetupSurvey extends javax.swing.JPanel implements KeyListener{
    private SetupPcuControl theSetupPcuControl;
    private PanelSetupAgeSurvey thePanelSetupAgeSurvey ;
    private HosManage theHM;
    private Survey theSurvey;
    private Vector vSurvey = new Vector();
    boolean flagButtonDel = false;
    int offset = 20;
    int next = 0;
    int prev = 0;
    int count ;

    private UpdateStatus theUS;
    /** Creates new form PanelSetupSurvey */
    public PanelSetupSurvey(HosManage hm) {
        theHM = hm;
        theUS = hm.theUS;
        theSetupPcuControl = hm.theHosControl.theSetupPcuControl;
        initComponents();
        addKeyListener(this);
        setLanguage();
        setKeyBoard();
    }
    /**ใช้ในการกำหนดให้ปุ่มลบสามารถทำงานได้หรือไม่
     *จะส่งค่ามาจาก module hospitalos ดังนั้นในต้องทำงานปกติ ไม่ต้องใช้งาน
     *@param enabled เป็น boolean ใช้กำหนด ถ้า true ให้ปุ่ม ลบสามารถทำงานได้ ถ้าเป็น false จะไม่ทำงาน
     */
    public void setEnableButtonSetupPanel(boolean enabled)
    {   
        flagButtonDel = enabled;        
    }  
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fontTitle1 = new com.pcu.utility.FontTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jButtonReset = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSurveyName = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxSActive = new javax.swing.JCheckBox();
        jButtonSearch = new javax.swing.JButton();
        jTextFieldSCode = new javax.swing.JTextField();
        jLabelICD9code = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(922, 162));
        setPreferredSize(new java.awt.Dimension(922, 69));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(fontTitle1);
        jLabel1.setText("SurveyForm");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 11);
        add(jPanel1, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setMinimumSize(new java.awt.Dimension(350, 25));
        jPanel4.setPreferredSize(new java.awt.Dimension(350, 25));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14"));
        jPanel6.setOpaque(false);
        jLabelName.setFont(defaultFont1);
        jLabelName.setText("NameForm");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel6.add(jLabelName, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        jTextFieldName.setMaximumSize(new java.awt.Dimension(200, 21));
        jTextFieldName.setMinimumSize(new java.awt.Dimension(200, 21));
        jTextFieldName.setPreferredSize(new java.awt.Dimension(200, 21));
        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel6.add(jTextFieldName, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxActiveActionPerformed(evt);
            }
        });
        jCheckBoxActive.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBoxActiveKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel6.add(jCheckBoxActive, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel4.add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setPreferredSize(new java.awt.Dimension(10, 30));
        jButtonReset.setFont(defaultFont1);
        jButtonReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonReset.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonReset.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonReset.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel7.add(jButtonReset, gridBagConstraints);

        jButtonDelete.setFont(defaultFont1);
        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel7.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif")));
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 26));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 26));
        jButtonSave.setPreferredSize(new java.awt.Dimension(80, 26));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel7.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(16, 0, 0, 0);
        jPanel4.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 11);
        add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 404));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(150, 22));
        jScrollPane1.setOpaque(false);
        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 80));
        jTableSurveyName.setFont(defaultFont1);
        jTableSurveyName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableSurveyNameMouseReleased(evt);
            }
        });
        jTableSurveyName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableSurveyNameKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableSurveyName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jCheckBoxSActive.setFont(defaultFont1);
        jCheckBoxSActive.setSelected(true);
        jCheckBoxSActive.setText("Active");
        jCheckBoxSActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 0);
        jPanel2.add(jCheckBoxSActive, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("Search");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jButtonSearch, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel2.add(jTextFieldSCode, gridBagConstraints);

        jLabelICD9code.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelICD9code, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel3.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 0);
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 0);
        add(jPanel5, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTableSurveyNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableSurveyNameKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP || evt.getKeyCode() == KeyEvent.VK_DOWN)
            select();
    }//GEN-LAST:event_jTableSurveyNameKeyReleased

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldSCodeKeyReleased
    {//GEN-HEADEREND:event_jTextFieldSCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            search();
        }
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        search();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonPrevActionPerformed
    {//GEN-HEADEREND:event_jButtonPrevActionPerformed
        prevItemGroup();
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonNextActionPerformed
    {//GEN-HEADEREND:event_jButtonNextActionPerformed
        nextItemGroup();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jTableSurveyNameMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableSurveyNameMouseReleased
    {//GEN-HEADEREND:event_jTableSurveyNameMouseReleased
        select();
    }//GEN-LAST:event_jTableSurveyNameMouseReleased

    private void jCheckBoxSActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxSActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxSActiveActionPerformed
        search();
    }//GEN-LAST:event_jCheckBoxSActiveActionPerformed

    private void jTextFieldNameKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldNameKeyReleased
    {//GEN-HEADEREND:event_jTextFieldNameKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jCheckBoxActive.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNameKeyReleased

    private void jCheckBoxActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxActiveActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxActiveActionPerformed

    private void jCheckBoxActiveKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jCheckBoxActiveKeyReleased
    {//GEN-HEADEREND:event_jCheckBoxActiveKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            save();
        }
    }//GEN-LAST:event_jCheckBoxActiveKeyReleased

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonResetActionPerformed
    {//GEN-HEADEREND:event_jButtonResetActionPerformed
        add();
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteActionPerformed
        delete();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        save();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    /**
     * Set ภาษา
     * @param  
     * @return 
     * @author jao
     * @date 09-03-2549
     */
    private void setLanguage()
    {
        /*jLabel*/
        jLabel1.setText(GutilPCU.getTextBundle(jLabel1.getText()));
        jLabelName.setText(GutilPCU.getTextBundle(jLabelName.getText()));      
        jLabelICD9code.setText(GutilPCU.getTextBundle(jLabelICD9code.getText()));  
        
        /*jButton*/
        jButtonSearch.setText(GutilPCU.getTextBundle(jButtonSearch.getText()));
        jButtonReset.setText(GutilPCU.getTextBundle(jButtonReset.getText()));
        jButtonDelete.setText(GutilPCU.getTextBundle(jButtonDelete.getText()));
        jButtonSave.setText(GutilPCU.getTextBundle(jButtonSave.getText()));
                
        /*jCheckBox*/
        jCheckBoxSActive.setText(GutilPCU.getTextBundle(jCheckBoxSActive.getText()));
        jCheckBoxActive.setText(GutilPCU.getTextBundle(jCheckBoxActive.getText()));
    }
    
      /**
     * กดปุ่มถัดไป
     * @param  
     * @return 
     * @author jao
     * @date 09-03-2549
     */
    private void nextItemGroup()
    {   
        setTable(vSurvey,1);
    }
    
    /**
     * กดปุ่มย้อยกลับ
     * @param  
     * @return 
     * @author Jao
     * @date 09-03-2549
     */
    private void prevItemGroup()
    {   
        setTable(vSurvey,0);
    }
    
    /**
     * แสดงข้อมูลในตาราง
     * @param  Vector vMaimType,int off
     * @return 
     * @author jao
     * @date 27-02-2549
     */
    private void setTable(Vector vSurvey,int off)
    {   
        count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(vSurvey != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vSurvey.size())
                {   next = vSurvey.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= vSurvey.size())
                {   next= vSurvey.size();
                    count = next;
                }
            }
        }
        /***SetTable***/
        String[] col = {GutilPCU.getTextBundle("No."),
                        GutilPCU.getTextBundle("Description")};
                    
        Survey SurveyTemp = new Survey();
        TaBleModel tm;
        
        if(this.vSurvey != null)
        {   
            tm = new TaBleModel(col,count);
            for(int i=0, size=this.vSurvey.size(); i<count; i++)
            {  
                SurveyTemp = (Survey)this.vSurvey.get(i+prev);
                tm.setValueAt(String.valueOf((i+prev)+1),i,0);
                tm.setValueAt(SurveyTemp.survey_description,i,1);                                
            }
        }
        else
        {   
            tm= new TaBleModel(col,0);
        } 
        
        SurveyTemp = null;
        this.jTableSurveyName.setModel(tm);  
        jTableSurveyName.setRowHeight(20);
        /***SetTableDefault***/
        jTableSurveyName.getColumnModel().getColumn(0).setPreferredWidth(10); 
        jTableSurveyName.getColumnModel().getColumn(1).setPreferredWidth(150); 
    }
    
    /**
     * บันทึกขึ้อมูล
     * @param  Vector vMaimType,int off
     * @return 
     * @author jao
     * @date 27-02-2549
     */    
    private void save()
    {
        if(theSurvey==null)
            theSurvey = new Survey();
        this.theSurvey.survey_description = this.jTextFieldName.getText();        
        if(this.jCheckBoxActive.isSelected())
            this.theSurvey.survey_active = "1";
        else
            this.theSurvey.survey_active = "0";
        
        //ตรวจสอบการเพิ่มข้อมูลซ้ำ ปู 20/12/2549
        Vector vList = new Vector();
        vList=  this.theSetupPcuControl.listSurveyByNameAndActive("", this.theSurvey.survey_active);
        for(int i=0,size = vList.size();i <size; i++)
        {
            Survey sv = (Survey)vList.elementAt(i);
            if(this.theSurvey.getObjectId()==null
                    && this.theSurvey.survey_description.equalsIgnoreCase(sv.survey_description))
            {
                theHM.theHosInf.setStatus("หัวข้อสำรวจนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                jTextFieldName.requestFocus();
                return;
            }
            else if(this.theSurvey.survey_description.equalsIgnoreCase(sv.survey_description)
            &&!this.theSurvey.getObjectId().equalsIgnoreCase(sv.getObjectId()))
            {
                theHM.theHosInf.setStatus("หัวข้อสำรวจนี้มีอยู่ในฐานข้อมูลแล้ว", 2);
                jTextFieldName.requestFocus();
                return;
            }
        }
            
        int result = this.theSetupPcuControl.saveSurvay(this.theSurvey);
        
        //setEnableGui(false);
        search();
    }
    
    
    /**
     * ลบรายการ
     * @param  
     * @return 
     * @author jao
     * @date 27-02-2549
     */
    private void delete()
    {        
        int select[] = this.jTableSurveyName.getSelectedRows();
        if(select.length == 0)
            return;        
        if (!theUS.confirmBox(GutilPCU.getTextBundle("ConfirmDelete"),UpdateStatus.WARNING))
            return;
        
        for(int i=0;i<select.length;i++)
        {
            select[i]=select[i]+prev;
        }
        this.theSetupPcuControl.deleteSurvey(vSurvey,select);
        this.theSurvey = null;                
        clearGui();
        setTable(vSurvey,0);                                    
    }  
    
    /**
     * Clear หน้าจอ
     * @param  
     * @return 
     * @author jao
     * @date 09-03-2549
     */
    private void clearGui()
    {
        jTextFieldName.requestFocus();
        this.jTextFieldName.setText("");        
        this.jCheckBoxActive.setSelected(true);           
    }
    
    /**
     * ค้นหาข้อมูล
     * @param  
     * @return 
     * @author jao
     * @date 27-02-2549
     */
    private void search()
    {
        next = 0;
        prev = 0; 
        String search = this.jTextFieldSCode.getText();  
        String active = "0";
        if(this.jCheckBoxSActive.isSelected())
            active = "1";
        this.vSurvey =  this.theSetupPcuControl.listSurveyByNameAndActive(search,active);
        setTable(vSurvey,0);
    }
    
    
    /**
     * Set หน้าจอ 
     * @param  
     * @return 
     * @author jao
     * @date 27-02-2549
     */
    private void setEnableGui(boolean flag)
    {
        this.jTextFieldName.setEnabled(flag);
        this.jCheckBoxActive.setEnabled(flag);     
        if(flagButtonDel)
            this.jButtonDelete.setEnabled(false);
        else
            this.jButtonDelete.setEnabled(flag);
        this.jButtonSave.setEnabled(flag);
    }
    
    /**
     * Clear หน้าจอ
     * @param  
     * @return 
     * @author jao
     * @date 09-03-2549
     */
    private void add()
    {
        clearGui();
        setEnableGui(true);
        this.theSurvey = new Survey();
    } 
    
    /**
     * เลือกรายการ
     * @param  
     * @return 
     * @author jao
     * @date 09-03-2549
     */
    private void select()
    {
        int row = this.jTableSurveyName.getSelectedRow();
        this.theSurvey = (Survey)this.vSurvey.get(row); 
        
        this.jTextFieldName.setText(this.theSurvey.survey_description);
        
        if(this.theSurvey.survey_active.equals("1"))
            this.jCheckBoxActive.setSelected(true);
        else
            this.jCheckBoxActive.setSelected(false); 
        
        setEnableGui(true);
    }
    /**
     * เซตข้อมูลการใช้ Keyboard
     * @param  -
     * @return void
     * @author kingland
     * @date 27/07/2549
     */
    private void setKeyBoard()
    {
        jButtonDelete.addKeyListener(this);
        jButtonNext.addKeyListener(this);
        jButtonPrev.addKeyListener(this);
        jButtonReset.addKeyListener(this);
        jButtonSave.addKeyListener(this);
        jButtonSearch.addKeyListener(this);
        jCheckBoxActive.addKeyListener(this);
        jCheckBoxSActive.addKeyListener(this);
        jTableSurveyName.addKeyListener(this);
        jTextFieldName.addKeyListener(this);
        jTextFieldSCode.addKeyListener(this);
    }
    public void keyPressed(KeyEvent keyEvent) {
    }

    public void keyReleased(KeyEvent keyEvent)
    {
        if(keyEvent.getKeyCode() == KeyEvent.VK_INSERT)
        {
            add();
        }
        else if(keyEvent.getKeyCode() == KeyEvent.VK_DELETE)
        {
            delete();
        }
        else if(KeyEvent.getModifiersExText(keyEvent.getModifiersEx()).equalsIgnoreCase("Ctrl")
        && keyEvent.getKeyCode() == KeyEvent.VK_S)
        {
            beforSearch();
        }
    }

    public void keyTyped(KeyEvent keyEvent) {
    }
    
    private void beforSearch()
    {
        jTextFieldSCode.setSelectionStart(0);
        jTextFieldSCode.requestFocus();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.FontTitle fontTitle1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxSActive;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSurveyName;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables
    
}
