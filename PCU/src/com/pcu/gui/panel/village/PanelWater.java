/*
 * PanelWater.java
 *
 * Created on 11 เมษายน 2550, 13:59 น.
 */

package com.pcu.gui.panel.village;

import com.hospital_os.utility.ComboFix;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.connection.UpdateStatus;
import com.pcu.control.AllComboBoxControl;
import com.pcu.control.HosManage;
import com.pcu.control.PCUObject;
import com.pcu.control.VillageControl;
import com.pcu.control.VillageObserv;
import com.pcu.object.PcuAnswer;
import com.pcu.object.Water;
import com.pcu.object.WaterHistory;
import com.pcu.utility.ColumnTableRenderer;
import com.pcu.utility.GutilPCU;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author  Administrator
 */
public class PanelWater extends javax.swing.JPanel implements VillageObserv{
    
    protected Water theWater;
    protected WaterHistory theWaterHistory;
    protected Vector vWater = new Vector();
    protected Vector vWaterHistory = new Vector();
    protected String ownerWater = "";
    protected String superviseWater = "";
    protected int rowWater;
    protected boolean flagWater = true;

    protected AllComboBoxControl theAllComboBoxControl;

    protected String employeeId;

    protected ComboFix cfv;

    protected VillageControl theVillageControl;

    protected HosManage theHM;

    private UpdateStatus theUS;
    /** Creates new form PanelWater */
    public PanelWater() {
        initComponents();
        setLanguage();
    }
    /**
     *  implements VillageObserv
     */
    public boolean refreshVillage() {
        ComboboxModel.initComboBox(this.jComboBoxVillageWater,theAllComboBoxControl.listVillage());
        ComboboxModel.initComboBox(this.jComboBoxSearchVillageWater,theAllComboBoxControl.listVillage());
        return true;
    }
    public void setControl(HosManage hm,UpdateStatus us) 
    {
        theHM = hm;
//        theUS = hm.theUS;
        theUS = us;
        theAllComboBoxControl = hm.theHosControl.theAllComboBoxControl;
        theVillageControl = hm.theHosControl.theVillageControl;
        Vector vComboBoxOwner = theAllComboBoxControl.listCommunityResorceOwner();
        ComboboxModel.initComboBox(jComboBoxWaterType,theAllComboBoxControl.listWaterType());
        ComboboxModel.initComboBox(jComboBoxWaterConstruct,vComboBoxOwner);
        ComboboxModel.initComboBox(jComboBoxSuperViseWater,vComboBoxOwner);
        ComboboxModel.initComboBox(this.jComboBoxVillageWater,theAllComboBoxControl.listVillage());
        ComboboxModel.initComboBox(this.jComboBoxSearchVillageWater,theAllComboBoxControl.listVillage());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanelWaterDetail = new javax.swing.JPanel();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jComboBoxWaterType = new javax.swing.JComboBox();
        jLabel30 = new javax.swing.JLabel();
        jComboBoxWaterConstruct = new javax.swing.JComboBox();
        jLabel31 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jComboBoxVillageWater = new javax.swing.JComboBox();
        jLabel32 = new javax.swing.JLabel();
        jComboBoxSuperViseWater = new javax.swing.JComboBox();
        jPanel30 = new javax.swing.JPanel();
        jTextFieldOwnerOtherWater = new javax.swing.JTextField();
        jPanel31 = new javax.swing.JPanel();
        jTextFieldSuperViseWaterOther = new javax.swing.JTextField();
        jPanel66 = new javax.swing.JPanel();
        jRadioButtonWaterNotWork = new javax.swing.JRadioButton();
        jRadioButtonWaterWork = new javax.swing.JRadioButton();
        jTextFieldWaterCode = new com.pcu.utility.IntegerTextField();
        jPanel15 = new javax.swing.JPanel();
        jButtonAddWater = new javax.swing.JButton();
        jButtonDeleteWater = new javax.swing.JButton();
        jButtonSaveWater = new javax.swing.JButton();
        jCheckBoxSaveHistory = new javax.swing.JCheckBox();
        jPanel79 = new javax.swing.JPanel();
        jPanelSearchWater = new javax.swing.JPanel();
        jTextFieldSearchWater = new javax.swing.JTextField();
        jButtonSearchWater = new javax.swing.JButton();
        jPanel78 = new javax.swing.JPanel();
        jCheckBoxVillage = new javax.swing.JCheckBox();
        jComboBoxSearchVillageWater = new javax.swing.JComboBox();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableWater = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableHistoryWater = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jPanelWaterDetail.setLayout(new java.awt.GridBagLayout());

        jPanelWaterDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SearchData", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanelWaterDetail.setMinimumSize(new java.awt.Dimension(449, 185));
        jPanelWaterDetail.setPreferredSize(new java.awt.Dimension(449, 430));
        jLabel28.setFont(defaultFont1);
        jLabel28.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 11, 0, 0);
        jPanelWaterDetail.add(jLabel28, gridBagConstraints);

        jLabel29.setFont(defaultFont1);
        jLabel29.setText("Type");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelWaterDetail.add(jLabel29, gridBagConstraints);

        jComboBoxWaterType.setFont(defaultFont1);
        jComboBoxWaterType.setMinimumSize(new java.awt.Dimension(250, 21));
        jComboBoxWaterType.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jComboBoxWaterType, gridBagConstraints);

        jLabel30.setFont(defaultFont1);
        jLabel30.setText("Construct");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelWaterDetail.add(jLabel30, gridBagConstraints);

        jComboBoxWaterConstruct.setFont(defaultFont1);
        jComboBoxWaterConstruct.setMinimumSize(new java.awt.Dimension(250, 21));
        jComboBoxWaterConstruct.setPreferredSize(new java.awt.Dimension(250, 21));
        jComboBoxWaterConstruct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxWaterConstructActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jComboBoxWaterConstruct, gridBagConstraints);

        jLabel31.setFont(defaultFont1);
        jLabel31.setText("State");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelWaterDetail.add(jLabel31, gridBagConstraints);

        jLabel35.setFont(defaultFont1);
        jLabel35.setText("VillageName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelWaterDetail.add(jLabel35, gridBagConstraints);

        jComboBoxVillageWater.setFont(defaultFont1);
        jComboBoxVillageWater.setMinimumSize(new java.awt.Dimension(250, 21));
        jComboBoxVillageWater.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jComboBoxVillageWater, gridBagConstraints);

        jLabel32.setFont(defaultFont1);
        jLabel32.setText("SuperVise");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelWaterDetail.add(jLabel32, gridBagConstraints);

        jComboBoxSuperViseWater.setFont(defaultFont1);
        jComboBoxSuperViseWater.setMinimumSize(new java.awt.Dimension(250, 21));
        jComboBoxSuperViseWater.setPreferredSize(new java.awt.Dimension(250, 21));
        jComboBoxSuperViseWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSuperViseWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jComboBoxSuperViseWater, gridBagConstraints);

        jPanel30.setLayout(new java.awt.GridBagLayout());

        jTextFieldOwnerOtherWater.setFont(defaultFont1);
        jTextFieldOwnerOtherWater.setMinimumSize(new java.awt.Dimension(250, 21));
        jTextFieldOwnerOtherWater.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextFieldOwnerOtherWater.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldOwnerOtherWaterFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel30.add(jTextFieldOwnerOtherWater, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jPanel30, gridBagConstraints);

        jPanel31.setLayout(new java.awt.GridBagLayout());

        jTextFieldSuperViseWaterOther.setFont(defaultFont1);
        jTextFieldSuperViseWaterOther.setMinimumSize(new java.awt.Dimension(250, 21));
        jTextFieldSuperViseWaterOther.setPreferredSize(new java.awt.Dimension(250, 21));
        jTextFieldSuperViseWaterOther.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldSuperViseWaterOtherFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel31.add(jTextFieldSuperViseWaterOther, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jPanel31, gridBagConstraints);

        jPanel66.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButtonWaterNotWork);
        jRadioButtonWaterNotWork.setFont(defaultFont1);
        jRadioButtonWaterNotWork.setText("StateNotWork");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel66.add(jRadioButtonWaterNotWork, gridBagConstraints);

        buttonGroup1.add(jRadioButtonWaterWork);
        jRadioButtonWaterWork.setFont(defaultFont1);
        jRadioButtonWaterWork.setSelected(true);
        jRadioButtonWaterWork.setText("StateWork");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel66.add(jRadioButtonWaterWork, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);
        jPanelWaterDetail.add(jPanel66, gridBagConstraints);

        jTextFieldWaterCode.setColumns(9);
        jTextFieldWaterCode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldWaterCode.setFont(defaultFont1);
        jTextFieldWaterCode.setMinimumSize(new java.awt.Dimension(105, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 11);
        jPanelWaterDetail.add(jTextFieldWaterCode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jPanelWaterDetail, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jButtonAddWater.setFont(defaultFont1);
        jButtonAddWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddWater.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddWater.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddWater.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddWater.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel15.add(jButtonAddWater, gridBagConstraints);

        jButtonDeleteWater.setFont(defaultFont1);
        jButtonDeleteWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDeleteWater.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteWater.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteWater.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteWater.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel15.add(jButtonDeleteWater, gridBagConstraints);

        jButtonSaveWater.setFont(defaultFont1);
        jButtonSaveWater.setText("Save");
        jButtonSaveWater.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSaveWater.setPreferredSize(new java.awt.Dimension(67, 24));
        jButtonSaveWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel15.add(jButtonSaveWater, gridBagConstraints);

        jCheckBoxSaveHistory.setFont(defaultFont1);
        jCheckBoxSaveHistory.setText("\u0e40\u0e01\u0e47\u0e1a\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34");
        jCheckBoxSaveHistory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxSaveHistory.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSaveHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSaveHistoryActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel15.add(jCheckBoxSaveHistory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 5, 11);
        add(jPanel15, gridBagConstraints);

        jPanel79.setLayout(new java.awt.GridBagLayout());

        jPanelSearchWater.setLayout(new java.awt.GridBagLayout());

        jPanelSearchWater.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SearchData", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jTextFieldSearchWater.setFont(defaultFont1);
        jTextFieldSearchWater.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldSearchWater.setPreferredSize(new java.awt.Dimension(100, 21));
        jTextFieldSearchWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelSearchWater.add(jTextFieldSearchWater, gridBagConstraints);

        jButtonSearchWater.setFont(defaultFont1);
        jButtonSearchWater.setText("Search");
        jButtonSearchWater.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearchWater.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearchWater.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearchWater.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearchWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchWaterActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelSearchWater.add(jButtonSearchWater, gridBagConstraints);

        jPanel78.setLayout(new java.awt.GridBagLayout());

        jCheckBoxVillage.setFont(defaultFont1);
        jCheckBoxVillage.setSelected(true);
        jCheckBoxVillage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxVillageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel78.add(jCheckBoxVillage, gridBagConstraints);

        jComboBoxSearchVillageWater.setFont(defaultFont1);
        jComboBoxSearchVillageWater.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchVillageWaterActionPerformed(evt);
            }
        });
        jComboBoxSearchVillageWater.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxSearchVillageWaterFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel78.add(jComboBoxSearchVillageWater, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelSearchWater.add(jPanel78, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel79.add(jPanelSearchWater, gridBagConstraints);

        jScrollPane5.setBorder(null);
        jScrollPane5.setFont(defaultFont1);
        jTableWater.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableWater.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableWaterMouseReleased(evt);
            }
        });

        jScrollPane5.setViewportView(jTableWater);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel79.add(jScrollPane5, gridBagConstraints);

        jScrollPane6.setFont(defaultFont1);
        jTableHistoryWater.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTableHistoryWater);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel79.add(jScrollPane6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        add(jPanel79, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSaveHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSaveHistoryActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSaveHistoryActionPerformed

    private void jComboBoxSearchVillageWaterFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageWaterFocusGained
// TODO add your handling code here:
       // ComboboxModel.initComboBox(this.jComboBoxSearchVillageWater,theAllComboBoxControl.listVillage2());
    }//GEN-LAST:event_jComboBoxSearchVillageWaterFocusGained
    
    private void jTableWaterMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableWaterMouseReleased
        selectWater(-2);
    }//GEN-LAST:event_jTableWaterMouseReleased
    
    private void jComboBoxSearchVillageWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageWaterActionPerformed
        searchWater();
    }//GEN-LAST:event_jComboBoxSearchVillageWaterActionPerformed
    
    private void jCheckBoxVillageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVillageActionPerformed
        jComboBoxSearchVillageWater.setEnabled(jCheckBoxVillage.isSelected());
    }//GEN-LAST:event_jCheckBoxVillageActionPerformed
    
    private void jButtonSearchWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchWaterActionPerformed
        searchWater();
    }//GEN-LAST:event_jButtonSearchWaterActionPerformed
    
    private void jTextFieldSearchWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchWaterActionPerformed
        searchWater();
    }//GEN-LAST:event_jTextFieldSearchWaterActionPerformed
    
    private void jButtonSaveWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveWaterActionPerformed
        saveWater();
    }//GEN-LAST:event_jButtonSaveWaterActionPerformed
    
    private void jButtonDeleteWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteWaterActionPerformed
        deleteWater();
    }//GEN-LAST:event_jButtonDeleteWaterActionPerformed
    
    private void jButtonAddWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddWaterActionPerformed
        addWater();
    }//GEN-LAST:event_jButtonAddWaterActionPerformed
    
    private void jTextFieldSuperViseWaterOtherFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldSuperViseWaterOtherFocusLost
        superviseWater = jTextFieldSuperViseWaterOther.getText();
    }//GEN-LAST:event_jTextFieldSuperViseWaterOtherFocusLost
    
    private void jTextFieldOwnerOtherWaterFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldOwnerOtherWaterFocusLost
        ownerWater = jTextFieldOwnerOtherWater.getText();
    }//GEN-LAST:event_jTextFieldOwnerOtherWaterFocusLost
    
    private void jComboBoxSuperViseWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSuperViseWaterActionPerformed
        /*06 = เอกชน/ชุมชน ระบุชื่อเจ้าของ, 30 = อื่นๆ ระบุ*/
        if(ComboboxModel.getCodeComboBox(jComboBoxSuperViseWater).equals("06") || ComboboxModel.getCodeComboBox(jComboBoxSuperViseWater).equals("30")) {
            jPanel31.setVisible(true);
            jTextFieldSuperViseWaterOther.setEnabled(true);
            jTextFieldSuperViseWaterOther.setText(superviseWater);
            superviseWater = null;
        } else {
            jPanel31.setVisible(false);
            jTextFieldSuperViseWaterOther.setText("");
        }
    }//GEN-LAST:event_jComboBoxSuperViseWaterActionPerformed
    
    private void jComboBoxWaterConstructActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWaterConstructActionPerformed
        /*06 = เอกชน/ชุมชน ระบุชื่อเจ้าของ, 30 = อื่นๆ ระบุ*/
        if(ComboboxModel.getCodeComboBox(jComboBoxWaterConstruct).equals("06") || ComboboxModel.getCodeComboBox(jComboBoxWaterConstruct).equals("30")) {
            jPanel30.setVisible(true);
            jTextFieldOwnerOtherWater.setEnabled(true);
            jTextFieldOwnerOtherWater.setText(ownerWater);
            ownerWater = null;
        } else {
            jPanel30.setVisible(false);
            jTextFieldOwnerOtherWater.setText("");
        }
    }//GEN-LAST:event_jComboBoxWaterConstructActionPerformed
    
    
    /*****Water*****/
    protected void clearGuiWater() {
        jTextFieldWaterCode.setText("");
        jTextFieldOwnerOtherWater.setText("");
        jTextFieldSuperViseWaterOther.setText("");
        Gutil.setGuiData(jComboBoxVillageWater,Gutil.getGuiData(jComboBoxSearchVillageWater));
        
    }
    
    protected void setEnableGuiWater(boolean flag) {
        jTextFieldWaterCode.setEnabled(flag);
        jComboBoxWaterType.setEnabled(flag);
        jComboBoxWaterConstruct.setEnabled(flag);
        jRadioButtonWaterNotWork.setEnabled(flag);
        jRadioButtonWaterWork.setEnabled(flag);
        jComboBoxVillageWater.setEnabled(flag);
        jButtonDeleteWater.setEnabled(flag);
        jButtonSaveWater.setEnabled(flag);
        jComboBoxSuperViseWater.setEnabled(flag);
    }
    
    protected void addWater() {
        jTextFieldWaterCode.setEnabled(true);
        clearGuiWater();
        theWater = new Water();
        setEnableGuiWater(true);
        jPanel30.setVisible(false);
        jPanel31.setVisible(false);
        /*เคลียร์ตาราง History*/
        vWaterHistory = null;
        String[] col = {GutilPCU.getTextBundle("DateRecord"),
        GutilPCU.getTextBundle("State")};
        TaBleModel tm ;
        tm= new TaBleModel(col,0);
        jTableHistoryWater.setModel(tm);
        jRadioButtonWaterWork.setSelected(true);
        jTableWater.clearSelection();
    }
    
    /***Water***/
    public Water getWater(){
        if(theWater==null)
            theWater = new Water();
        theWater.water_number = jTextFieldWaterCode.getText();
        theWater.water_type = Gutil.getGuiData(jComboBoxWaterType);
        theWater.water_construct = Gutil.getGuiData(jComboBoxWaterConstruct);
        theWater.water_construct_description = jTextFieldOwnerOtherWater.getText();
        theWater.water_supervise = Gutil.getGuiData(jComboBoxSuperViseWater);
        theWater.water_supervise_description = jTextFieldSuperViseWaterOther.getText();
        theWater.water_active = "1";
        theWater.village_id = Gutil.getGuiData(jComboBoxVillageWater);
        return theWater;
    }
    /***Water***/
    public WaterHistory getWaterHistory(){
        if(theWaterHistory==null)
            theWaterHistory = new WaterHistory();
        /***WaterHistory***/
        if(jRadioButtonWaterNotWork.isSelected()) {
            theWaterHistory.water_history_state = PcuAnswer.Zero();
        } else {
            theWaterHistory.water_history_state = PcuAnswer.One();
        }
        return theWaterHistory;
    }
    
    protected void saveWater() 
    {
        boolean ret = theVillageControl.saveWaterAndHistory(getWater(),getWaterHistory()
            ,jCheckBoxSaveHistory.isSelected());
        if(!ret)
            return;

        int row = this.jTableWater.getSelectedRow();
        this.searchWater();
        if(row==-1)
            row = jTableWater.getRowCount()-1;
        jTableWater.setRowSelectionInterval(row,row);
        this.jTableWaterMouseReleased(null);
    }
    
    /**
     * ค้นหารายกาข้อมูลแหล่งน้ำ
     * @param -
     * @return -
     * @author kingland
     * @date 19/07/2549
     */
    protected void searchWater() {
        search("");
    }
    protected void search(String village_id)
    {   
        if(village_id!=null && !village_id.equals(""))
        {
            Gutil.setGuiData(jComboBoxSearchVillageWater,village_id);
            Gutil.setGuiData(jComboBoxVillageWater,Gutil.getGuiData(jComboBoxSearchVillageWater));
        }
        /***ค้นหาแหล่งน้ำ***/
        String search = jTextFieldSearchWater.getText();
        String village_search = Gutil.getGuiData(jComboBoxSearchVillageWater);
        if(!this.jCheckBoxVillage.isSelected())
            village_search = "0";
        vWater =  theVillageControl.listWaterByNumber(search,village_search);
        setTableWater();
        
        vWaterHistory = null;
        String[] col = {GutilPCU.getTextBundle("DateRecord"),
        GutilPCU.getTextBundle("State")};
        TaBleModel tm ;
        tm= new TaBleModel(col,0);
        jTableHistoryWater.setModel(tm);
        /***SetTableDefault***/
        jTableHistoryWater.getColumnModel().getColumn(0).setPreferredWidth(200);     /*วันที่บันทึก*/
        jTableHistoryWater.getColumnModel().getColumn(1).setPreferredWidth(200);     /*สถานะของแหล่งน้ำ*/
        
        setEnableGuiWater(false);
        jTextFieldOwnerOtherWater.setEnabled(false);
        jTextFieldSuperViseWaterOther.setEnabled(false);
    }
    
    protected void setTableWater() {
        String[] col = {GutilPCU.getTextBundle("Code"),
        GutilPCU.getTextBundle("Type"),
        GutilPCU.getTextBundle("VillageName")};
        
        Water waterTemp = new Water();
        TaBleModel tm ;
        
        if(vWater != null) {
            tm = new TaBleModel(col,vWater.size());
            for(int i=0, size=vWater.size(); i<size; i++) {
                waterTemp = (Water)vWater.get(i);
                tm.setValueAt(waterTemp.water_number,i,0);
                tm.setValueAt(ComboboxModel.getDescriptionComboBox(jComboBoxWaterType,waterTemp.water_type),i,1);
                tm.setValueAt(ComboboxModel.getDescriptionComboBox(jComboBoxVillageWater,waterTemp.village_id),i,2);
            }
        } else {
            tm= new TaBleModel(col,0);
        }
        waterTemp = null;
        jTableWater.setModel(tm);
        
        /***SetTableDefault***/
        jTableWater.getColumnModel().getColumn(0).setPreferredWidth(70);     /*รหัสแหล่งน้ำ*/
        jTableWater.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererCenter());
        jTableWater.getColumnModel().getColumn(1).setPreferredWidth(200);     /*ประเภทแหล่งน้ำ*/
        jTableWater.getColumnModel().getColumn(1).setPreferredWidth(200);     /*ชื่อหมู่บ้าน*/
    }
    
    protected void selectWater(int row) {
        if(row==-2) {/*user เป็นผู้เลือกเอง*/
            rowWater = jTableWater.getSelectedRow();
        } else {/*user บันทึก จะ select record ที่เพิ่งเพิ่ม*/
            rowWater = row;
        }
        theWater = (Water)vWater.get(rowWater);
        vWaterHistory =  theVillageControl.listWaterHistoryByWaterId(theWater.getObjectId());
        
        
        String[] col = {GutilPCU.getTextBundle("DateRecord"),
            GutilPCU.getTextBundle("State")};
        TaBleModel tm ;
        
        if(vWaterHistory != null) {
            tm = new TaBleModel(col,vWaterHistory.size());
            for(int i=0, size=vWaterHistory.size(); i<size; i++) 
            {
                WaterHistory waterHistoryTemp = (WaterHistory)vWaterHistory.get(i);
                if(i==0)
                    theWaterHistory = waterHistoryTemp;
                tm.setValueAt(GutilPCU.changDateToString(waterHistoryTemp.water_history_record_date_time,true),i,0);
                if(waterHistoryTemp.water_history_state.equals(PcuAnswer.Zero()))
                    tm.setValueAt(GutilPCU.getTextBundle("StateNotWork"),i,1);
                else
                    tm.setValueAt(GutilPCU.getTextBundle("StateWork"),i,1);
            }
        } else {
            tm= new TaBleModel(col,0);
        }
        jTableHistoryWater.setModel(tm);
        
        /***SetTableDefault***/
        jTableHistoryWater.getColumnModel().getColumn(0).setPreferredWidth(200);     /*วันที่บันทึก*/
        jTableHistoryWater.getColumnModel().getColumn(1).setPreferredWidth(200);     /*สถานะของแหล่งน้ำ*/
        
        jTextFieldWaterCode.setText(theWater.water_number);
        ComboboxModel.setCodeComboBox(jComboBoxWaterType,theWater.water_type);
        ComboboxModel.setCodeComboBox(jComboBoxWaterConstruct,theWater.water_construct);
        ComboboxModel.setCodeComboBox(jComboBoxSuperViseWater,theWater.water_supervise);
        if(theWaterHistory.water_history_state.equals(PcuAnswer.Zero())) {
            jRadioButtonWaterNotWork.setSelected(true);
        } else {
            jRadioButtonWaterWork.setSelected(true);
        }
        ComboboxModel.setCodeComboBox(jComboBoxVillageWater,theWater.village_id);
        if(theWater.water_construct.equals("06") || theWater.water_construct.equals("30")) {
            jPanel30.setVisible(true);
            jTextFieldOwnerOtherWater.setText(theWater.water_construct_description);
        } else {
            jPanel30.setVisible(false);
        }
        if(theWater.water_supervise.equals("06") || theWater.water_supervise.equals("30")) {
            jPanel31.setVisible(true);
            jTextFieldSuperViseWaterOther.setText(theWater.water_supervise_description);
        } else {
            jPanel31.setVisible(false);
        }
        setEnableGuiWater(true);
        jTextFieldWaterCode.setEnabled(false);
    }
    
    protected void deleteWater() 
    {
        boolean ret = theVillageControl.deleteWater(theWater);
        if(!ret)
            return;

        int row = this.jTableWater.getSelectedRow();
        this.searchWater();
        if(row==-1)
            row = jTableWater.getRowCount()-1;
        jTableWater.setRowSelectionInterval(row,row);
        this.jTableWaterMouseReleased(null);
    }


    public void setObject(PCUObject pcuobject){  
    }
    
    void setDefaultHospital() {
    }
    
    private void setLanguage()
    {  
        /*jLabel*/        
        jLabel28.setText(GutilPCU.getTextBundle(jLabel28.getText()));         
        jLabel29.setText(GutilPCU.getTextBundle(jLabel29.getText())); 
        jLabel30.setText(GutilPCU.getTextBundle(jLabel30.getText())); 
        jLabel31.setText(GutilPCU.getTextBundle(jLabel31.getText())); 
        jLabel35.setText(GutilPCU.getTextBundle(jLabel35.getText())); 
        jLabel32.setText(GutilPCU.getTextBundle(jLabel32.getText())); 
        jButtonSearchWater.setText(GutilPCU.getTextBundle(jButtonSearchWater.getText()));
        jButtonAddWater.setText(GutilPCU.getTextBundle(jButtonAddWater.getText()));
        jButtonDeleteWater.setText(GutilPCU.getTextBundle(jButtonDeleteWater.getText()));
        jButtonSaveWater.setText(GutilPCU.getTextBundle(jButtonSaveWater.getText()));
        GutilPCU.JPanelLabler(jPanelWaterDetail); 
        jRadioButtonWaterNotWork.setText(GutilPCU.getTextBundle(jRadioButtonWaterNotWork.getText()));
        jRadioButtonWaterWork.setText(GutilPCU.getTextBundle(jRadioButtonWaterWork.getText()));
        jCheckBoxSaveHistory.setText(GutilPCU.getTextBundle(jCheckBoxSaveHistory.getText()));
        GutilPCU.setLanguage(jPanelSearchWater);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private javax.swing.JButton jButtonAddWater;
    private javax.swing.JButton jButtonDeleteWater;
    private javax.swing.JButton jButtonSaveWater;
    private javax.swing.JButton jButtonSearchWater;
    private javax.swing.JCheckBox jCheckBoxSaveHistory;
    private javax.swing.JCheckBox jCheckBoxVillage;
    private javax.swing.JComboBox jComboBoxSearchVillageWater;
    private javax.swing.JComboBox jComboBoxSuperViseWater;
    private javax.swing.JComboBox jComboBoxVillageWater;
    private javax.swing.JComboBox jComboBoxWaterConstruct;
    private javax.swing.JComboBox jComboBoxWaterType;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel66;
    private javax.swing.JPanel jPanel78;
    private javax.swing.JPanel jPanel79;
    private javax.swing.JPanel jPanelSearchWater;
    private javax.swing.JPanel jPanelWaterDetail;
    private javax.swing.JRadioButton jRadioButtonWaterNotWork;
    private javax.swing.JRadioButton jRadioButtonWaterWork;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTable jTableHistoryWater;
    private javax.swing.JTable jTableWater;
    private javax.swing.JTextField jTextFieldOwnerOtherWater;
    private javax.swing.JTextField jTextFieldSearchWater;
    private javax.swing.JTextField jTextFieldSuperViseWaterOther;
    private com.pcu.utility.IntegerTextField jTextFieldWaterCode;
    // End of variables declaration//GEN-END:variables
    
    
}
