/* * PanelMarket.java * * Created on 26 ?????? 2550, 20:28 ?. */package com.pcu.gui.panel.village;import com.hospital_os.utility.Gutil;import com.pcu.object.Market;import com.pcu.object.MarketHistory;import com.pcu.utility.GutilPCU;import javax.swing.*;/*????? main*/import com.hosv3.utility.connection.UpdateStatus;import com.hospital_os.utility.*;import com.hospital_os.object.Site;import com.pcu.utility.*;import com.pcu.object.*;import com.pcu.control.*;import java.util.Vector;/** * * *jPanel40 * * * @author  henbe * * */public class PanelMarket extends javax.swing.JPanel implements VillageObserv{    protected Market theMarket = new Market();    protected MarketHistory theMarketHistory;    protected Vector vMarket = new Vector();    protected Vector vMarketHistory = new Vector();    protected SystemControl theSystemControl;    protected AllComboBoxControl theAllComboBoxControl;    protected VillageControl theVillageControl;    protected SetupPcuControl theSetupPcuControl;    protected HosManage theHM;    protected int rowMarket;    protected String employeeId;    protected String marketType;    protected String marketTypeLock;    protected String ownerMarket;    protected String standardTypeMarket;    protected ComboFix cfmkt = new ComboFix();    protected ComboFix cfmktl = new ComboFix();    protected ComboFix cfmk = new ComboFix();    private UpdateStatus theUS;    /** Creates new form PanelMarket */    public PanelMarket() {        initComponents();    }     /**     *  implements VillageObserv     */    public boolean refreshVillage() {        ComboboxModel.initComboBox(this.jComboBoxVillageMarket,theAllComboBoxControl.listVillage());        ComboboxModel.initComboBox(this.jComboBoxSearchVillageMarket,theAllComboBoxControl.listVillage());        return true;    }    public void setControl(HosManage hm,UpdateStatus us){        theHM = hm;//        theUS = hm.theUS;        theUS = us;        theSystemControl = hm.theHosControl.theSystemControl;        theAllComboBoxControl = hm.theHosControl.theAllComboBoxControl;        theVillageControl = hm.theHosControl.theVillageControl;        theSetupPcuControl = hm.theHosControl.theSetupPcuControl;        setLanguage();        initDatas();        this.panelCatAddress1.setControl(hm.theHosInf.getLookupControl(),null);        ComboboxModel.initComboBox(this.jComboBoxVillageMarket,theAllComboBoxControl.listVillage());        ComboboxModel.initComboBox(this.jComboBoxSearchVillageMarket,theAllComboBoxControl.listVillage());    }    public void setObject(PCUObject pcuobject)    {        if(pcuobject != null)        {            if(pcuobject.getEmployee() != null)            {                employeeId = pcuobject.getEmployee().getObjectId();            }        }    }    public void initDatas()    {        /***??????????***/        cfmkt.code = "99";        cfmkt.name = GutilPCU.getTextBundle("Fill_Other");        /***?????????????????**/        cfmktl.code = "999";        cfmktl.name = GutilPCU.getTextBundle("Fill_Other");        Vector vMarketType = theAllComboBoxControl.listMarketType();        vMarketType.add(cfmkt);        Vector vMarketTypeLock = theAllComboBoxControl.listMarketTypeLock();        vMarketTypeLock.add(cfmktl);        Vector vComboBoxOwner = theAllComboBoxControl.listCommunityResorceOwner();        Vector vComboBoxStandardType = theAllComboBoxControl.listCommunityStandardType();        Vector vComboBoxStandard = theAllComboBoxControl.listCommunityStandard();        this.panelCatAddress1.setControl(theHM.theHC.theLookupControl,null);        ComboboxModel.initComboBox(jComboBoxMarketType,vMarketType);        ComboboxModel.initComboBox(jComboBoxMarketTypeLock,vMarketTypeLock);        ComboboxModel.initComboBox(jComboBoxOwnerMarket,vComboBoxOwner);        ComboboxModel.initComboBox(jComboBoxStandardTypeMarket,vComboBoxStandardType);        ComboboxModel.initComboBox(jComboBoxStandardMarket,vComboBoxStandard);        dateComboBoxMarketCoDate.setEditable(true);        dateComboBoxDateOfPassMarket.setEditable(true);        dateComboBoxCloseMarket.setEditable(true);        ComboboxModel.initComboBox(jComboBoxSearchVillageMarket,theAllComboBoxControl.listVillage());        ComboboxModel.initComboBox(jComboBoxVillageMarket,theAllComboBoxControl.listVillage());        ComboboxModel.initComboBox(jComboBoxInMarketMarket,theAllComboBoxControl.listMarket());        jTextFieldStandardTypeMarketDescription.setVisible(false);    }    public void setLanguage(){        jLabel97.setText(GutilPCU.getTextBundle(jLabel97.getText()));        jLabel98.setText(GutilPCU.getTextBundle(jLabel98.getText()));        jLabel100.setText(GutilPCU.getTextBundle(jLabel100.getText()));        jLabel94.setText(GutilPCU.getTextBundle(jLabel94.getText()));        jLabel52.setText(GutilPCU.getTextBundle(jLabel52.getText()));        jLabel54.setText(GutilPCU.getTextBundle(jLabel54.getText()));        jLabel55.setText(GutilPCU.getTextBundle(jLabel55.getText()));        jLabel56.setText(GutilPCU.getTextBundle(jLabel56.getText()));        jLabel60.setText(GutilPCU.getTextBundle(jLabel60.getText()));        jLabel61.setText(GutilPCU.getTextBundle(jLabel61.getText()));        jLabel62.setText(GutilPCU.getTextBundle(jLabel62.getText()));        jLabel63.setText(GutilPCU.getTextBundle(jLabel63.getText()));        jLabel64.setText(GutilPCU.getTextBundle(jLabel64.getText()));        jLabel65.setText(GutilPCU.getTextBundle(jLabel65.getText()));        jLabel66.setText(GutilPCU.getTextBundle(jLabel66.getText()));        jLabel67.setText(GutilPCU.getTextBundle(jLabel67.getText()));        jLabel68.setText(GutilPCU.getTextBundle(jLabel68.getText()));        jLabel69.setText(GutilPCU.getTextBundle(jLabel69.getText()));        jLabel71.setText(GutilPCU.getTextBundle(jLabel71.getText()));        jLabel72.setText(GutilPCU.getTextBundle(jLabel72.getText()));        jLabel73.setText(GutilPCU.getTextBundle(jLabel73.getText()));        jButtonAddMarket.setText(GutilPCU.getTextBundle(jButtonAddMarket.getText()));        jButtonDeleteMarket.setText(GutilPCU.getTextBundle(jButtonDeleteMarket.getText()));        jButtonSaveMarket.setText(GutilPCU.getTextBundle(jButtonSaveMarket.getText()));        jButtonSearchMarket.setText(GutilPCU.getTextBundle(jButtonSearchMarket.getText()));        GutilPCU.JPanelLabler(jPanelSearchMarket);        jCheckBoxCloseMarket.setText(GutilPCU.getTextBundle(jCheckBoxCloseMarket.getText()));        jRadioButtonMarketNoRegister.setText(GutilPCU.getTextBundle(jRadioButtonMarketNoRegister.getText()));        jRadioButtonMarketRegister.setText(GutilPCU.getTextBundle(jRadioButtonMarketRegister.getText()));        jRadioButtonMarketCo.setText(GutilPCU.getTextBundle(jRadioButtonMarketCo.getText()));        jRadioButtonMarketNotCo.setText(GutilPCU.getTextBundle(jRadioButtonMarketNotCo.getText()));        jCheckBoxSaveHistory.setText(GutilPCU.getTextBundle(jCheckBoxSaveHistory.getText()));    }    /*****Market*****/    public void clearGui()    {        jTextFieldMarketCode.setText("");        jTextFieldMarketName.setText("");        jCheckBoxCloseMarket.setSelected(false);        jTextFieldHomeNumberMarket.setText("");        integerTextFieldMooMarket.setText("");        jTextFieldRoadMarket.setText("");        jTextFieldPhoneMarket.setText("");        integerTextFieldTimeOfPassMarket.setText("");        dateComboBoxDateOfPassMarket.initCurrentDate();        dateComboBoxMarketCoDate.initCurrentDate();        dateComboBoxCloseMarket.initCurrentDate();        jTextFieldPeriodOfTimeMarket.setText("");        Gutil.setGuiData(jComboBoxVillageMarket,Gutil.getGuiData(jComboBoxSearchVillageMarket));        setDefaultHospital();    }    protected void addMarket()    {        clearGui();        theMarket = new Market();        theMarketHistory = new MarketHistory();        marketType = "";        marketTypeLock = "";        ownerMarket = "";        standardTypeMarket = "";        jTextAreaCauseCloseMarket.setText("");        setEnabled(true);        /*??????????????????????*/        jButtonDeleteMarket.setEnabled(false);        jTextFieldStandardTypeMarketDescription.setVisible(false);        jRadioButtonMarketRegister.setSelected(true);        jRadioButtonMarketCo.setSelected(true);        jTableMarket.clearSelection();        vMarketHistory = null;        setTableMarketHistory();    }    protected void setDefaultHospital()    {        Site theSite = theSystemControl.theHospital_Site;        if(theSite != null)        {            this.panelCatAddress1.setAddress(theSite.changwat,theSite.amphor,theSite.tambon);        }    }    /**     *     *     *????????????????????????????     *     *     *@return boolean true = ????????? false = ??????     *     *     *@author kingland     *     *     *@date 05/06/2549     *     *     */    protected boolean checkRepeat()    {        boolean result = true;        for(int i=0;vMarket != null && i < vMarket.size();i++)        {            Market market = (Market)vMarket.get(i);            if(theMarket != null && !market.getObjectId().equalsIgnoreCase(theMarket.getObjectId())            && market.market_number.equalsIgnoreCase(jTextFieldMarketCode.getText()))            {                result = false;                jTextFieldMarketCode.requestFocus();                theUS.setStatus("ลำดับรายการซ้ำกัน", 2);                break;            }        }        return result;    }    protected void saveMarket()    {        String code = jTextFieldMarketCode.getText();        String name = jTextFieldMarketName.getText();        if(code.equals("") || name.equals(""))        {            theUS.setStatus(GutilPCU.getTextBundle("FillNumberAndName"),UpdateStatus.WARNING);            return;        }        /*Market*/        theMarket.market_number = code;        theMarket.market_name = name;        if(jCheckBoxCloseMarket.isSelected())        {            theMarket.market_close = "1";            theMarket.market_close_date_time = dateComboBoxCloseMarket.getText();            theMarket.market_close_note = jTextAreaCauseCloseMarket.getText();        }        else        {            theMarket.market_close = "0";            theMarket.market_close_date_time = "";            theMarket.market_close_note = "";        }        theMarket.market_active = "1";        theMarket.village_id = Gutil.getGuiData(jComboBoxVillageMarket);        /*MarketHistory*/        if(jRadioButtonMarketNoRegister.isSelected())        {            theMarketHistory.register_id = PcuAnswer.Zero();        }        else        {            theMarketHistory.register_id = PcuAnswer.One();        }        theMarketHistory.market_type_id = Gutil.getGuiData(jComboBoxMarketType);        theMarketHistory.market_type_description = jTextFieldMarketTypeDescription.getText();        theMarketHistory.market_type_lock_id = Gutil.getGuiData(jComboBoxMarketTypeLock);        theMarketHistory.market_type_lock_description = jTextFieldMarketTypeLockDescription.getText();        theMarketHistory.market_history_home_number = jTextFieldHomeNumberMarket.getText();        theMarketHistory.market_history_moo = integerTextFieldMooMarket.getText();        theMarketHistory.market_history_road = jTextFieldRoadMarket.getText();        theMarketHistory.market_history_phone = jTextFieldPhoneMarket.getText();        theMarketHistory.market_history_changwat = panelCatAddress1.getChangwat();        theMarketHistory.market_history_amphur = panelCatAddress1.getAmpur();        theMarketHistory.market_history_tambol = panelCatAddress1.getTambon();        theMarketHistory.market_history_owner_id = Gutil.getGuiData(jComboBoxOwnerMarket);        theMarketHistory.market_history_owner_description = jTextFieldOwnerMarketDescription.getText();        if(jRadioButtonMarketNotCo.isSelected())        {            theMarketHistory.market_history_market_co = PcuAnswer.Zero();        }        else        {            theMarketHistory.market_history_market_co = PcuAnswer.One();        }        if(theMarketHistory.market_history_market_co.equals("0"))            theMarketHistory.market_history_market_co_date_time = "";        else            theMarketHistory.market_history_market_co_date_time = dateComboBoxMarketCoDate.getText();        theMarketHistory.market_history_standard_type_id = Gutil.getGuiData(jComboBoxStandardTypeMarket);        theMarketHistory.market_history_standard_type_description = jTextFieldStandardTypeMarketDescription.getText();        theMarketHistory.market_history_standard_id = Gutil.getGuiData(jComboBoxStandardMarket);        theMarketHistory.market_history_time_of_pass = integerTextFieldTimeOfPassMarket.getText();        theMarketHistory.market_history_date_of_pass = dateComboBoxDateOfPassMarket.getText();        theMarketHistory.market_history_period_of_pass = jTextFieldPeriodOfTimeMarket.getText();        theMarketHistory.market_history_in_market = Gutil.getGuiData(jComboBoxInMarketMarket);        boolean ret = theVillageControl.saveMarketAndHistory(theMarket,theMarketHistory);                    if(!ret)            return;        int row = this.jTableMarket.getSelectedRow();        this.searchMarket();        if(row==-1)            row = jTableMarket.getRowCount()-1;        jTableMarket.setRowSelectionInterval(row,row);        this.jTableMarketMouseReleased(null);    }    protected void updateMarket()    {            /*Market*/            theMarket.market_number = jTextFieldMarketCode.getText();            theMarket.market_name = jTextFieldMarketName.getText();            if(jCheckBoxCloseMarket.isSelected())            {                theMarket.market_close = "1";                theMarket.market_close_date_time = dateComboBoxCloseMarket.getText();                theMarket.market_close_note = jTextAreaCauseCloseMarket.getText();            }            else            {                theMarket.market_close = "0";                theMarket.market_close_date_time = "";                theMarket.market_close_note = "";            }            theMarket.village_id = Gutil.getGuiData(jComboBoxVillageMarket);            /*MarketHistory*/            if(jRadioButtonMarketNoRegister.isSelected())            {                theMarketHistory.register_id = PcuAnswer.Zero();            }            else            {                theMarketHistory.register_id = PcuAnswer.One();            }            theMarketHistory.market_type_id = Gutil.getGuiData(jComboBoxMarketType);            theMarketHistory.market_type_description = jTextFieldMarketTypeDescription.getText();            theMarketHistory.market_type_lock_id = Gutil.getGuiData(jComboBoxMarketTypeLock);            theMarketHistory.market_type_lock_description = jTextFieldMarketTypeLockDescription.getText();            theMarketHistory.market_history_home_number = jTextFieldHomeNumberMarket.getText();            theMarketHistory.market_history_moo = integerTextFieldMooMarket.getText();            theMarketHistory.market_history_road = jTextFieldRoadMarket.getText();            theMarketHistory.market_history_phone = jTextFieldPhoneMarket.getText();            theMarketHistory.market_history_changwat = panelCatAddress1.getChangwat();            theMarketHistory.market_history_amphur = panelCatAddress1.getAmpur();            theMarketHistory.market_history_tambol = panelCatAddress1.getTambon();            theMarketHistory.market_history_owner_id = Gutil.getGuiData(jComboBoxOwnerMarket);            theMarketHistory.market_history_owner_description = jTextFieldOwnerMarketDescription.getText();            if(jRadioButtonMarketNotCo.isSelected())            {                theMarketHistory.market_history_market_co = PcuAnswer.Zero();            }            else            {                theMarketHistory.market_history_market_co = PcuAnswer.One();            }            if(theMarketHistory.market_history_market_co.equals("0"))                theMarketHistory.market_history_market_co_date_time = "";            else                theMarketHistory.market_history_market_co_date_time = dateComboBoxMarketCoDate.getText();            theMarketHistory.market_history_standard_type_id = Gutil.getGuiData(jComboBoxStandardTypeMarket);            theMarketHistory.market_history_standard_type_description = jTextFieldStandardTypeMarketDescription.getText();            theMarketHistory.market_history_standard_id = Gutil.getGuiData(jComboBoxStandardMarket);            theMarketHistory.market_history_time_of_pass = integerTextFieldTimeOfPassMarket.getText();            theMarketHistory.market_history_date_of_pass = dateComboBoxDateOfPassMarket.getText();            theMarketHistory.market_history_period_of_pass = jTextFieldPeriodOfTimeMarket.getText();            theMarketHistory.market_history_in_market = Gutil.getGuiData(jComboBoxInMarketMarket);            boolean ret = theVillageControl.updateMarketAndHistory(theMarket,theMarketHistory);            if(!ret)                return;            int row = this.jTableMarket.getSelectedRow();            this.searchMarket();            if(row==-1)                row = jTableMarket.getRowCount()-1;            jTableMarket.setRowSelectionInterval(row,row);            this.jTableMarketMouseReleased(null);    }    public void searchMarket(String village_id)    {        ComboboxModel.setCodeComboBox(jComboBoxSearchVillageMarket,village_id);        ComboboxModel.setCodeComboBox(jComboBoxVillageMarket,village_id);        searchMarket();    }    public void searchMarket()    {        search("");    }    protected void search(String village_id)    {        if(village_id!=null && !village_id.equals(""))        {            Gutil.setGuiData(jComboBoxSearchVillageMarket,village_id);            Gutil.setGuiData(jComboBoxVillageMarket,village_id);        }        /***?????????***/        String search = jTextFieldSearchMarket.getText();        String village = "0";        if(this.jCheckBoxVillage.isSelected())            village = Gutil.getGuiData(jComboBoxSearchVillageMarket);        vMarket =  theVillageControl.listMarketByNameOrNumber(search,village);        setTableMarket();        vMarketHistory =  null;        setTableMarketHistory();        setEnabled(false);    }    protected void setTableMarket()    {        /***SetTable***/        String[] col = {GutilPCU.getTextBundle("Code"),        GutilPCU.getTextBundle("MarketName"),        GutilPCU.getTextBundle("VillageName")};        Market marketTemp = new Market();        TaBleModel tm ;        if(vMarket != null)        {            tm = new TaBleModel(col,vMarket.size());            for(int i=0, size=vMarket.size(); i<size; i++)            {                marketTemp = (Market)vMarket.get(i);                tm.setValueAt(marketTemp.market_number,i,0);                tm.setValueAt(marketTemp.market_name,i,1);                tm.setValueAt(ComboboxModel.getDescriptionComboBox(jComboBoxVillageMarket,marketTemp.village_id),i,2);            }        }        else        {            tm= new TaBleModel(col,0);        }        marketTemp = null;        jTableMarket.setModel(tm);        /***SetTableDefault***/        jTableMarket.getColumnModel().getColumn(0).setPreferredWidth(100);     /*????????*/        jTableMarket.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererCenter());        jTableMarket.getColumnModel().getColumn(1).setPreferredWidth(250);     /*????????*/        jTableMarket.getColumnModel().getColumn(2).setPreferredWidth(200);     /*????????????*/    }    protected void selectMarket(int row)    {        if(row==-2)        {/*user ???????????????*/            rowMarket = jTableMarket.getSelectedRow();        }        else        {/*user ?????? ?? select record ?????????????*/            rowMarket = row;        }        theMarket = (Market)vMarket.get(rowMarket);        setEnabled(true);        /***Market***/        jTextFieldMarketCode.setText(theMarket.market_number);        jTextFieldMarketName.setText(theMarket.market_name);        if(theMarket.market_close.equals("1"))        {            jCheckBoxCloseMarket.setSelected(true);            jCheckBoxCloseMarketActionPerformed(null);            dateComboBoxCloseMarket.setText(Gutil.convertFieldDate(theMarket.market_close_date_time));            jTextAreaCauseCloseMarket.setText(theMarket.market_close_note);            dateComboBoxCloseMarket.setEnabled(true);            jTextAreaCauseCloseMarket.setEnabled(true);        }        else        {            jCheckBoxCloseMarket.setSelected(false);            jCheckBoxCloseMarketActionPerformed(null);        }        ComboboxModel.setCodeComboBox(jComboBoxVillageMarket,theMarket.village_id);                vMarketHistory =  theVillageControl.listMarketHistoryByMarketId(theMarket.getObjectId());        setTableMarketHistory();        if(theMarketHistory==null)            return;        if(theMarketHistory.register_id.equals(PcuAnswer.Zero()))        {            jRadioButtonMarketNoRegister.setSelected(true);        }        else        {            jRadioButtonMarketRegister.setSelected(true);        }        ComboboxModel.setCodeComboBox(jComboBoxMarketType,theMarketHistory.market_type_id);        if(theMarketHistory.market_type_id.equals(cfmkt.code))        {            jTextFieldMarketTypeDescription.setVisible(true);            jTextFieldMarketTypeDescription.setText(theMarketHistory.market_type_description);        }        else        {            jTextFieldMarketTypeDescription.setVisible(false);        }        ComboboxModel.setCodeComboBox(jComboBoxMarketTypeLock,theMarketHistory.market_type_lock_id);        if(theMarketHistory.market_type_lock_id.equals(cfmktl.code))        {            jTextFieldMarketTypeLockDescription.setVisible(true);            jTextFieldMarketTypeLockDescription.setText(theMarketHistory.market_type_lock_description);        }        else        {            jTextFieldMarketTypeLockDescription.setVisible(false);        }        jTextFieldHomeNumberMarket.setText(theMarketHistory.market_history_home_number);        integerTextFieldMooMarket.setText(theMarketHistory.market_history_moo);        jTextFieldRoadMarket.setText(theMarketHistory.market_history_road);        jTextFieldPhoneMarket.setText(theMarketHistory.market_history_phone);        this.panelCatAddress1.setAddress(theMarketHistory.market_history_changwat                ,theMarketHistory.market_history_amphur,theMarketHistory.market_history_tambol);        ComboboxModel.setCodeComboBox(jComboBoxOwnerMarket,theMarketHistory.market_history_owner_id);        if(theMarketHistory.market_history_owner_id.equals("06") || theMarketHistory.market_history_owner_id.equals("30"))        {            jTextFieldOwnerMarketDescription.setVisible(true);            jTextFieldOwnerMarketDescription.setText(theMarketHistory.market_history_owner_description);        }        else        {            jTextFieldOwnerMarketDescription.setVisible(false);        }        if(theMarketHistory.market_history_market_co.equals(PcuAnswer.Zero()))        {            jRadioButtonMarketNotCo.setSelected(true);        }        else        {            jRadioButtonMarketCo.setSelected(true);        }        if(theMarketHistory.market_history_market_co.equals("0"))        {            dateComboBoxMarketCoDate.setEnabled(false);            dateComboBoxMarketCoDate.setText("");        }        else        {            dateComboBoxMarketCoDate.setEnabled(true);            dateComboBoxMarketCoDate.setText(Gutil.convertFieldDate(theMarketHistory.market_history_market_co_date_time));        }        ComboboxModel.setCodeComboBox(jComboBoxStandardTypeMarket,theMarketHistory.market_history_standard_type_id);        if(theMarketHistory.market_history_standard_type_id.equals("90"))        {            jTextFieldStandardTypeMarketDescription.setVisible(true);            jTextFieldStandardTypeMarketDescription.setText(theMarketHistory.market_history_standard_type_description);        }        else        {            jTextFieldStandardTypeMarketDescription.setVisible(false);        }        ComboboxModel.setCodeComboBox(jComboBoxStandardMarket,theMarketHistory.market_history_standard_id);        jComboBoxStandardMarketActionPerformed(null);        integerTextFieldTimeOfPassMarket.setText(theMarketHistory.market_history_time_of_pass);        dateComboBoxDateOfPassMarket.setText(Gutil.convertFieldDate(theMarketHistory.market_history_date_of_pass));        jTextFieldPeriodOfTimeMarket.setText(theMarketHistory.market_history_period_of_pass);        ComboboxModel.setCodeComboBox(jComboBoxInMarketMarket,theMarketHistory.market_history_in_market);    }    protected void selectMarketHistory()    {        MarketHistory marketHistoryTemp = (MarketHistory)vMarketHistory.get(jTableHistoryMarket.getSelectedRow());        if(marketHistoryTemp.register_id.equals(PcuAnswer.Zero()))        {            jRadioButtonMarketNoRegister.setSelected(true);        }        else        {            jRadioButtonMarketRegister.setSelected(true);        }        ComboboxModel.setCodeComboBox(jComboBoxMarketType,marketHistoryTemp.market_type_id);        jTextFieldMarketTypeDescription.setText(marketHistoryTemp.market_type_description);        ComboboxModel.setCodeComboBox(jComboBoxMarketTypeLock,marketHistoryTemp.market_type_lock_id);        jTextFieldMarketTypeLockDescription.setText(marketHistoryTemp.market_type_lock_description);        jTextFieldHomeNumberMarket.setText(marketHistoryTemp.market_history_home_number);        integerTextFieldMooMarket.setText(marketHistoryTemp.market_history_moo);        jTextFieldRoadMarket.setText(marketHistoryTemp.market_history_road);        jTextFieldPhoneMarket.setText(marketHistoryTemp.market_history_phone);        this.panelCatAddress1.setAddress(marketHistoryTemp.market_history_changwat                ,marketHistoryTemp.market_history_amphur,marketHistoryTemp.market_history_tambol);        ComboboxModel.setCodeComboBox(jComboBoxOwnerMarket,marketHistoryTemp.market_history_owner_id);        jTextFieldOwnerMarketDescription.setText(marketHistoryTemp.market_history_owner_description);        if(marketHistoryTemp.market_history_market_co.equals(PcuAnswer.Zero()))        {            jRadioButtonMarketNotCo.setSelected(true);        }        else        {            jRadioButtonMarketCo.setSelected(true);        }        if(marketHistoryTemp.market_history_market_co.equals("0"))        {            dateComboBoxMarketCoDate.setText("");        }        else        {            dateComboBoxMarketCoDate.setText(Gutil.convertFieldDate(marketHistoryTemp.market_history_market_co_date_time));        }        ComboboxModel.setCodeComboBox(jComboBoxStandardTypeMarket,marketHistoryTemp.market_history_standard_type_id);        jTextFieldStandardTypeMarketDescription.setText(marketHistoryTemp.market_history_standard_type_description);        ComboboxModel.setCodeComboBox(jComboBoxStandardMarket,marketHistoryTemp.market_history_standard_id);        jComboBoxStandardMarketActionPerformed(null);        integerTextFieldTimeOfPassMarket.setText(marketHistoryTemp.market_history_time_of_pass);        dateComboBoxDateOfPassMarket.setText(Gutil.convertFieldDate(marketHistoryTemp.market_history_date_of_pass));        jTextFieldPeriodOfTimeMarket.setText(marketHistoryTemp.market_history_period_of_pass);        ComboboxModel.setCodeComboBox(jComboBoxInMarketMarket,marketHistoryTemp.market_history_in_market);        setEnabled(false);        dateComboBoxCloseMarket.setEnabled(false);        jTextAreaCauseCloseMarket.setEnabled(false);        jTextFieldStandardTypeMarketDescription.setEnabled(false);        jTextFieldOwnerMarketDescription.setEnabled(false);        jTextFieldMarketTypeLockDescription.setEnabled(false);        jTextFieldMarketTypeDescription.setEnabled(false);    }    protected void setTableMarketHistory()    {        /***SetTable***/        String[] col = {GutilPCU.getTextBundle("DateRecord")};        TaBleModel tm ;        if(vMarketHistory != null)        {            int size = vMarketHistory.size()-1;            tm = new TaBleModel(col,vMarketHistory.size());            for(int i=0; i<vMarketHistory.size(); i++)            {                MarketHistory marketHistoryTemp = (MarketHistory)vMarketHistory.get(i);                if(i==0)                {                    this.theMarketHistory = marketHistoryTemp;                }                                if(!("").equals(marketHistoryTemp.market_history_record_date_time))                    tm.setValueAt(GutilPCU.changDateToString(marketHistoryTemp.market_history_record_date_time,true),i,0);                else                    tm.setValueAt(GutilPCU.changDateToString(theMarket.market_modify_date_time,true),i,0);            }        }        else        {            tm= new TaBleModel(col,0);        }        jTableHistoryMarket.setModel(tm);    }    protected void deleteMarket()    {        boolean ret = theVillageControl.deleteMarket(theMarket);        if(!ret)            return;        searchMarket();    }    public void setEnabled(boolean flag)    {        jTextFieldMarketCode.setEnabled(flag);        jTextFieldMarketName.setEnabled(flag);        jRadioButtonMarketNoRegister.setEnabled(flag);        jRadioButtonMarketRegister.setEnabled(flag);        jComboBoxMarketType.setEnabled(flag);        jComboBoxMarketTypeLock.setEnabled(flag);        jTextFieldHomeNumberMarket.setEnabled(flag);        integerTextFieldMooMarket.setEnabled(flag);        jTextFieldRoadMarket.setEnabled(flag);        jTextFieldPhoneMarket.setEnabled(flag);        this.panelCatAddress1.setEnabled(flag);        jComboBoxOwnerMarket.setEnabled(flag);        jRadioButtonMarketCo.setEnabled(flag);        jRadioButtonMarketNotCo.setEnabled(flag);        jComboBoxStandardTypeMarket.setEnabled(flag);        jComboBoxStandardMarket.setEnabled(flag);        integerTextFieldTimeOfPassMarket.setEnabled(flag);        dateComboBoxDateOfPassMarket.setEnabled(flag);        jTextFieldPeriodOfTimeMarket.setEnabled(flag);        jComboBoxInMarketMarket.setEnabled(flag);        jCheckBoxCloseMarket.setEnabled(flag);        jComboBoxVillageMarket.setEnabled(flag);        jButtonDeleteMarket.setEnabled(flag);        jButtonSaveMarket.setEnabled(flag);    }        /** This method is called from within the constructor to     *     *     * initialize the form.     *     *     * WARNING: Do NOT modify this code. The content of this method is     *     *     * always regenerated by the Form Editor.     *     *     */            // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents    private void initComponents() {        java.awt.GridBagConstraints gridBagConstraints;        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();        buttonGroup1 = new javax.swing.ButtonGroup();        buttonGroup2 = new javax.swing.ButtonGroup();        jPanel3 = new javax.swing.JPanel();        jScrollPane15 = new javax.swing.JScrollPane();        jTableHistoryMarket = new javax.swing.JTable();        jScrollPane7 = new javax.swing.JScrollPane();        jTableMarket = new javax.swing.JTable();        jPanelSearchMarket = new javax.swing.JPanel();        jTextFieldSearchMarket = new javax.swing.JTextField();        jButtonSearchMarket = new javax.swing.JButton();        jComboBoxSearchVillageMarket = new javax.swing.JComboBox();        jCheckBoxVillage = new javax.swing.JCheckBox();        jPanel1 = new javax.swing.JPanel();        jPanel33 = new javax.swing.JPanel();        jTextFieldMarketTypeLockDescription = new javax.swing.JTextField();        jComboBoxMarketTypeLock = new javax.swing.JComboBox();        jPanel28 = new javax.swing.JPanel();        jPanel34 = new javax.swing.JPanel();        jLabel52 = new javax.swing.JLabel();        jTextFieldHomeNumberMarket = new javax.swing.JTextField();        jLabel54 = new javax.swing.JLabel();        integerTextFieldMooMarket = new com.pcu.utility.IntegerTextField();        jLabel55 = new javax.swing.JLabel();        jTextFieldRoadMarket = new javax.swing.JTextField();        jLabel56 = new javax.swing.JLabel();        jTextFieldPhoneMarket = new javax.swing.JTextField();        panelCatAddress1 = new com.hosv3.gui.component.PanelCatAddress();        jLabel73 = new javax.swing.JLabel();        jComboBoxVillageMarket = new javax.swing.JComboBox();        jPanel36 = new javax.swing.JPanel();        jTextFieldOwnerMarketDescription = new javax.swing.JTextField();        jComboBoxOwnerMarket = new javax.swing.JComboBox();        jPanel32 = new javax.swing.JPanel();        jTextFieldMarketTypeDescription = new javax.swing.JTextField();        jComboBoxMarketType = new javax.swing.JComboBox();        jLabel100 = new javax.swing.JLabel();        jLabel60 = new javax.swing.JLabel();        jLabel97 = new javax.swing.JLabel();        jPanel56 = new javax.swing.JPanel();        jRadioButtonMarketNoRegister = new javax.swing.JRadioButton();        jRadioButtonMarketRegister = new javax.swing.JRadioButton();        jLabel94 = new javax.swing.JLabel();        jPanel2 = new javax.swing.JPanel();        jTextFieldMarketCode = new com.pcu.utility.IntegerTextField();        jLabel98 = new javax.swing.JLabel();        jTextFieldMarketName = new javax.swing.JTextField();        jPanel25 = new javax.swing.JPanel();        jButtonAddMarket = new javax.swing.JButton();        jButtonDeleteMarket = new javax.swing.JButton();        jButtonSaveMarket = new javax.swing.JButton();        jCheckBoxSaveHistory = new javax.swing.JCheckBox();        jPanel16 = new javax.swing.JPanel();        jLabel62 = new javax.swing.JLabel();        dateComboBoxMarketCoDate = new com.pcu.utility.DateComboBox();        jLabel63 = new javax.swing.JLabel();        jPanel38 = new javax.swing.JPanel();        jTextFieldStandardTypeMarketDescription = new javax.swing.JTextField();        jComboBoxStandardTypeMarket = new javax.swing.JComboBox();        jLabel64 = new javax.swing.JLabel();        jComboBoxStandardMarket = new javax.swing.JComboBox();        jLabel65 = new javax.swing.JLabel();        integerTextFieldTimeOfPassMarket = new com.pcu.utility.IntegerTextField();        jLabel66 = new javax.swing.JLabel();        dateComboBoxDateOfPassMarket = new com.pcu.utility.DateComboBox();        jLabel67 = new javax.swing.JLabel();        jPanel39 = new javax.swing.JPanel();        jTextFieldPeriodOfTimeMarket = new javax.swing.JTextField();        jLabel68 = new javax.swing.JLabel();        jPanel40 = new javax.swing.JPanel();        jLabel71 = new javax.swing.JLabel();        dateComboBoxCloseMarket = new com.pcu.utility.DateComboBox();        jLabel72 = new javax.swing.JLabel();        jScrollPane1 = new javax.swing.JScrollPane();        jTextAreaCauseCloseMarket = new javax.swing.JTextArea();        jCheckBoxCloseMarket = new javax.swing.JCheckBox();        jLabel69 = new javax.swing.JLabel();        jComboBoxInMarketMarket = new javax.swing.JComboBox();        jLabel61 = new javax.swing.JLabel();        jPanel68 = new javax.swing.JPanel();        jRadioButtonMarketNotCo = new javax.swing.JRadioButton();        jRadioButtonMarketCo = new javax.swing.JRadioButton();        setLayout(new java.awt.GridBagLayout());        jPanel3.setLayout(new java.awt.GridBagLayout());        jTableHistoryMarket.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {            },            new String [] {            }        ));        jTableHistoryMarket.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseReleased(java.awt.event.MouseEvent evt) {                jTableHistoryMarketMouseReleased(evt);            }        });        jScrollPane15.setViewportView(jTableHistoryMarket);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 4;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel3.add(jScrollPane15, gridBagConstraints);        jTableMarket.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {            },            new String [] {            }        ));        jTableMarket.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseReleased(java.awt.event.MouseEvent evt) {                jTableMarketMouseReleased(evt);            }        });        jScrollPane7.setViewportView(jTableMarket);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel3.add(jScrollPane7, gridBagConstraints);        jPanelSearchMarket.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SearchData", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));        jPanelSearchMarket.setLayout(new java.awt.GridBagLayout());        jTextFieldSearchMarket.setFont(defaultFont1);        jTextFieldSearchMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jTextFieldSearchMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 6, 0);        jPanelSearchMarket.add(jTextFieldSearchMarket, gridBagConstraints);        jButtonSearchMarket.setFont(defaultFont1);        jButtonSearchMarket.setText("Search");        jButtonSearchMarket.setMargin(new java.awt.Insets(2, 8, 2, 8));        jButtonSearchMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonSearchMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 6, 5);        jPanelSearchMarket.add(jButtonSearchMarket, gridBagConstraints);        jComboBoxSearchVillageMarket.setFont(defaultFont1);        jComboBoxSearchVillageMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxSearchVillageMarketActionPerformed(evt);            }        });        jComboBoxSearchVillageMarket.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusGained(java.awt.event.FocusEvent evt) {                jComboBoxSearchVillageMarketFocusGained(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);        jPanelSearchMarket.add(jComboBoxSearchVillageMarket, gridBagConstraints);        jCheckBoxVillage.setSelected(true);        jCheckBoxVillage.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jCheckBoxVillageActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        jPanelSearchMarket.add(jCheckBoxVillage, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel3.add(jPanelSearchMarket, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.gridheight = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);        add(jPanel3, gridBagConstraints);        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));        jPanel1.setLayout(new java.awt.GridBagLayout());        jPanel33.setLayout(new java.awt.GridBagLayout());        jTextFieldMarketTypeLockDescription.setColumns(2);        jTextFieldMarketTypeLockDescription.setFont(defaultFont1);        jTextFieldMarketTypeLockDescription.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                jTextFieldMarketTypeLockDescriptionFocusLost(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.weightx = 1.0;        jPanel33.add(jTextFieldMarketTypeLockDescription, gridBagConstraints);        jComboBoxMarketTypeLock.setFont(defaultFont1);        jComboBoxMarketTypeLock.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxMarketTypeLockActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel33.add(jComboBoxMarketTypeLock, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 6;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 22, 0, 11);        jPanel1.add(jPanel33, gridBagConstraints);        jPanel28.setLayout(new java.awt.GridBagLayout());        jPanel34.setLayout(new java.awt.GridBagLayout());        jLabel52.setFont(defaultFont1);        jLabel52.setText("HomeNumber");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel34.add(jLabel52, gridBagConstraints);        jTextFieldHomeNumberMarket.setColumns(4);        jTextFieldHomeNumberMarket.setFont(defaultFont1);        jTextFieldHomeNumberMarket.setHorizontalAlignment(javax.swing.JTextField.TRAILING);        jTextFieldHomeNumberMarket.setMinimumSize(new java.awt.Dimension(48, 19));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel34.add(jTextFieldHomeNumberMarket, gridBagConstraints);        jLabel54.setFont(defaultFont1);        jLabel54.setText("Moo");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel34.add(jLabel54, gridBagConstraints);        integerTextFieldMooMarket.setColumns(3);        integerTextFieldMooMarket.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        integerTextFieldMooMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 4;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel34.add(integerTextFieldMooMarket, gridBagConstraints);        jLabel55.setFont(defaultFont1);        jLabel55.setText("Road");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);        jPanel34.add(jLabel55, gridBagConstraints);        jTextFieldRoadMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 2;        gridBagConstraints.gridwidth = 3;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);        jPanel34.add(jTextFieldRoadMarket, gridBagConstraints);        jLabel56.setFont(defaultFont1);        jLabel56.setText("PPTel");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);        jPanel34.add(jLabel56, gridBagConstraints);        jTextFieldPhoneMarket.setColumns(9);        jTextFieldPhoneMarket.setFont(defaultFont1);        jTextFieldPhoneMarket.setMinimumSize(new java.awt.Dimension(83, 19));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 3;        gridBagConstraints.gridwidth = 3;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);        jPanel34.add(jTextFieldPhoneMarket, gridBagConstraints);        panelCatAddress1.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 4;        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);        jPanel34.add(panelCatAddress1, gridBagConstraints);        jLabel73.setFont(defaultFont1);        jLabel73.setText("VillageName");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 5;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel34.add(jLabel73, gridBagConstraints);        jComboBoxVillageMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 5;        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 11);        jPanel34.add(jComboBoxVillageMarket, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        jPanel28.add(jPanel34, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 10;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 11);        jPanel1.add(jPanel28, gridBagConstraints);        jPanel36.setLayout(new java.awt.GridBagLayout());        jTextFieldOwnerMarketDescription.setColumns(2);        jTextFieldOwnerMarketDescription.setFont(defaultFont1);        jTextFieldOwnerMarketDescription.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                jTextFieldOwnerMarketDescriptionFocusLost(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.weightx = 1.0;        jPanel36.add(jTextFieldOwnerMarketDescription, gridBagConstraints);        jComboBoxOwnerMarket.setFont(defaultFont1);        jComboBoxOwnerMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxOwnerMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel36.add(jComboBoxOwnerMarket, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 9;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 22, 0, 11);        jPanel1.add(jPanel36, gridBagConstraints);        jPanel32.setLayout(new java.awt.GridBagLayout());        jTextFieldMarketTypeDescription.setColumns(2);        jTextFieldMarketTypeDescription.setFont(defaultFont1);        jTextFieldMarketTypeDescription.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                jTextFieldMarketTypeDescriptionFocusLost(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.weightx = 1.0;        jPanel32.add(jTextFieldMarketTypeDescription, gridBagConstraints);        jComboBoxMarketType.setFont(defaultFont1);        jComboBoxMarketType.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxMarketTypeActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel32.add(jComboBoxMarketType, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 4;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 22, 0, 11);        jPanel1.add(jPanel32, gridBagConstraints);        jLabel100.setFont(defaultFont1);        jLabel100.setText("MKType");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 3;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);        jPanel1.add(jLabel100, gridBagConstraints);        jLabel60.setFont(defaultFont1);        jLabel60.setText("Owner");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 8;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel1.add(jLabel60, gridBagConstraints);        jLabel97.setFont(defaultFont1);        jLabel97.setText("Code");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);        jPanel1.add(jLabel97, gridBagConstraints);        jPanel56.setLayout(new java.awt.GridBagLayout());        buttonGroup1.add(jRadioButtonMarketNoRegister);        jRadioButtonMarketNoRegister.setFont(defaultFont1);        jRadioButtonMarketNoRegister.setText("NoRegister");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel56.add(jRadioButtonMarketNoRegister, gridBagConstraints);        buttonGroup1.add(jRadioButtonMarketRegister);        jRadioButtonMarketRegister.setFont(defaultFont1);        jRadioButtonMarketRegister.setSelected(true);        jRadioButtonMarketRegister.setText("RegisterBy");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel56.add(jRadioButtonMarketRegister, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 11);        jPanel1.add(jPanel56, gridBagConstraints);        jLabel94.setFont(defaultFont1);        jLabel94.setText("MKTypeLock");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 5;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(6, 13, 0, 3);        jPanel1.add(jLabel94, gridBagConstraints);        jPanel2.setLayout(new java.awt.GridBagLayout());        jTextFieldMarketCode.setColumns(2);        jTextFieldMarketCode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        jTextFieldMarketCode.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel2.add(jTextFieldMarketCode, gridBagConstraints);        jLabel98.setFont(defaultFont1);        jLabel98.setText("MarketName");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);        jPanel2.add(jLabel98, gridBagConstraints);        jTextFieldMarketName.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);        jPanel2.add(jTextFieldMarketName, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 11);        jPanel1.add(jPanel2, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 4;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;        gridBagConstraints.insets = new java.awt.Insets(13, 5, 0, 0);        add(jPanel1, gridBagConstraints);        jPanel25.setLayout(new java.awt.GridBagLayout());        jButtonAddMarket.setFont(defaultFont1);        jButtonAddMarket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N        jButtonAddMarket.setMargin(new java.awt.Insets(0, 0, 0, 0));        jButtonAddMarket.setMaximumSize(new java.awt.Dimension(24, 24));        jButtonAddMarket.setMinimumSize(new java.awt.Dimension(24, 24));        jButtonAddMarket.setPreferredSize(new java.awt.Dimension(24, 24));        jButtonAddMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonAddMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel25.add(jButtonAddMarket, gridBagConstraints);        jButtonDeleteMarket.setFont(defaultFont1);        jButtonDeleteMarket.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N        jButtonDeleteMarket.setMargin(new java.awt.Insets(0, 0, 0, 0));        jButtonDeleteMarket.setMaximumSize(new java.awt.Dimension(24, 24));        jButtonDeleteMarket.setMinimumSize(new java.awt.Dimension(24, 24));        jButtonDeleteMarket.setPreferredSize(new java.awt.Dimension(24, 24));        jButtonDeleteMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonDeleteMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel25.add(jButtonDeleteMarket, gridBagConstraints);        jButtonSaveMarket.setFont(defaultFont1);        jButtonSaveMarket.setText("Save");        jButtonSaveMarket.setMargin(new java.awt.Insets(0, 0, 0, 0));        jButtonSaveMarket.setMaximumSize(new java.awt.Dimension(67, 24));        jButtonSaveMarket.setMinimumSize(new java.awt.Dimension(67, 24));        jButtonSaveMarket.setPreferredSize(new java.awt.Dimension(67, 24));        jButtonSaveMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonSaveMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 3;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel25.add(jButtonSaveMarket, gridBagConstraints);        jCheckBoxSaveHistory.setFont(defaultFont1);        jCheckBoxSaveHistory.setText("???????");        jCheckBoxSaveHistory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));        jCheckBoxSaveHistory.setMargin(new java.awt.Insets(0, 0, 0, 0));        jCheckBoxSaveHistory.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jCheckBoxSaveHistoryActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 2;        gridBagConstraints.gridy = 0;        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;        gridBagConstraints.weightx = 1.0;        jPanel25.add(jCheckBoxSaveHistory, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 4;        gridBagConstraints.gridy = 1;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);        add(jPanel25, gridBagConstraints);        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder(""));        jPanel16.setLayout(new java.awt.GridBagLayout());        jLabel62.setFont(defaultFont1);        jLabel62.setText("CoDate");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 11;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);        jPanel16.add(jLabel62, gridBagConstraints);        dateComboBoxMarketCoDate.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 11;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 11);        jPanel16.add(dateComboBoxMarketCoDate, gridBagConstraints);        jLabel63.setFont(defaultFont1);        jLabel63.setText("CommunityStandardType");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 12;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel63, gridBagConstraints);        jPanel38.setLayout(new java.awt.GridBagLayout());        jTextFieldStandardTypeMarketDescription.setFont(defaultFont1);        jTextFieldStandardTypeMarketDescription.addFocusListener(new java.awt.event.FocusAdapter() {            public void focusLost(java.awt.event.FocusEvent evt) {                jTextFieldStandardTypeMarketDescriptionFocusLost(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel38.add(jTextFieldStandardTypeMarketDescription, gridBagConstraints);        jComboBoxStandardTypeMarket.setFont(defaultFont1);        jComboBoxStandardTypeMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxStandardTypeMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weightx = 1.0;        jPanel38.add(jComboBoxStandardTypeMarket, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 13;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 22, 0, 11);        jPanel16.add(jPanel38, gridBagConstraints);        jLabel64.setFont(defaultFont1);        jLabel64.setText("CommunityStandard");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 14;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel64, gridBagConstraints);        jComboBoxStandardMarket.setFont(defaultFont1);        jComboBoxStandardMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxStandardMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 15;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 22, 0, 11);        jPanel16.add(jComboBoxStandardMarket, gridBagConstraints);        jLabel65.setFont(defaultFont1);        jLabel65.setText("TimeOfPass");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 17;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel65, gridBagConstraints);        integerTextFieldTimeOfPassMarket.setColumns(3);        integerTextFieldTimeOfPassMarket.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        integerTextFieldTimeOfPassMarket.setFont(defaultFont1);        integerTextFieldTimeOfPassMarket.setMinimumSize(new java.awt.Dimension(37, 20));        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 17;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 11);        jPanel16.add(integerTextFieldTimeOfPassMarket, gridBagConstraints);        jLabel66.setFont(defaultFont1);        jLabel66.setText("DateOfPass");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 18;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel66, gridBagConstraints);        dateComboBoxDateOfPassMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 18;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 11);        jPanel16.add(dateComboBoxDateOfPassMarket, gridBagConstraints);        jLabel67.setFont(defaultFont1);        jLabel67.setText("PeriodOfTime");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 19;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel67, gridBagConstraints);        jPanel39.setLayout(new java.awt.GridBagLayout());        jTextFieldPeriodOfTimeMarket.setColumns(2);        jTextFieldPeriodOfTimeMarket.setFont(defaultFont1);        jTextFieldPeriodOfTimeMarket.setHorizontalAlignment(javax.swing.JTextField.RIGHT);        jTextFieldPeriodOfTimeMarket.setMinimumSize(new java.awt.Dimension(26, 21));        jPanel39.add(jTextFieldPeriodOfTimeMarket, new java.awt.GridBagConstraints());        jLabel68.setFont(defaultFont1);        jLabel68.setText("Month");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel39.add(jLabel68, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 19;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 11);        jPanel16.add(jPanel39, gridBagConstraints);        jPanel40.setLayout(new java.awt.GridBagLayout());        jLabel71.setFont(defaultFont1);        jLabel71.setText("DateCloseActivity");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        jPanel40.add(jLabel71, gridBagConstraints);        dateComboBoxCloseMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);        jPanel40.add(dateComboBoxCloseMarket, gridBagConstraints);        jLabel72.setFont(defaultFont1);        jLabel72.setText("CauseOfClose");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel40.add(jLabel72, gridBagConstraints);        jTextAreaCauseCloseMarket.setFont(defaultFont1);        jTextAreaCauseCloseMarket.setLineWrap(true);        jTextAreaCauseCloseMarket.setWrapStyleWord(true);        jScrollPane1.setViewportView(jTextAreaCauseCloseMarket);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);        jPanel40.add(jScrollPane1, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 21;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 11, 11);        jPanel16.add(jPanel40, gridBagConstraints);        jCheckBoxCloseMarket.setFont(defaultFont1);        jCheckBoxCloseMarket.setText("CloseActivity");        jCheckBoxCloseMarket.addMouseListener(new java.awt.event.MouseAdapter() {            public void mouseReleased(java.awt.event.MouseEvent evt) {                jCheckBoxCloseMarketMouseReleased(evt);            }        });        jCheckBoxCloseMarket.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jCheckBoxCloseMarketActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 20;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 11);        jPanel16.add(jCheckBoxCloseMarket, gridBagConstraints);        jLabel69.setFont(defaultFont1);        jLabel69.setText("InMarket");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 8;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);        jPanel16.add(jLabel69, gridBagConstraints);        jComboBoxInMarketMarket.setFont(defaultFont1);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 8;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 11);        jPanel16.add(jComboBoxInMarketMarket, gridBagConstraints);        jLabel61.setFont(defaultFont1);        jLabel61.setText("MarketCo");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 9;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);        jPanel16.add(jLabel61, gridBagConstraints);        jPanel68.setLayout(new java.awt.GridBagLayout());        buttonGroup2.add(jRadioButtonMarketNotCo);        jRadioButtonMarketNotCo.setFont(defaultFont1);        jRadioButtonMarketNotCo.setText("NotCo");        jRadioButtonMarketNotCo.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jRadioButtonMarketNotCoActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        jPanel68.add(jRadioButtonMarketNotCo, gridBagConstraints);        buttonGroup2.add(jRadioButtonMarketCo);        jRadioButtonMarketCo.setFont(defaultFont1);        jRadioButtonMarketCo.setSelected(true);        jRadioButtonMarketCo.setText("Co");        jRadioButtonMarketCo.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jRadioButtonMarketCoActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel68.add(jRadioButtonMarketCo, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 10;        gridBagConstraints.gridwidth = 2;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;        gridBagConstraints.insets = new java.awt.Insets(3, 22, 0, 11);        jPanel16.add(jPanel68, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 5;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;        gridBagConstraints.insets = new java.awt.Insets(13, 5, 0, 5);        add(jPanel16, gridBagConstraints);    }// </editor-fold>//GEN-END:initComponents    private void jCheckBoxVillageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVillageActionPerformed        this.jComboBoxSearchVillageMarket.setEnabled(jCheckBoxVillage.isSelected());    }//GEN-LAST:event_jCheckBoxVillageActionPerformed    private void jCheckBoxSaveHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSaveHistoryActionPerformed// TODO add your handling code here:    }//GEN-LAST:event_jCheckBoxSaveHistoryActionPerformed        private void jCheckBoxCloseMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxCloseMarketActionPerformed        dateComboBoxCloseMarket.setEnabled(jCheckBoxCloseMarket.isSelected());        jTextAreaCauseCloseMarket.setEnabled(jCheckBoxCloseMarket.isSelected());    }//GEN-LAST:event_jCheckBoxCloseMarketActionPerformed        private void jComboBoxStandardMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStandardMarketActionPerformed        boolean have_gain = jComboBoxStandardTypeMarket.getSelectedIndex()!=0                && jComboBoxStandardMarket.getSelectedIndex()!=0;        integerTextFieldTimeOfPassMarket.setEnabled(have_gain);        dateComboBoxDateOfPassMarket.setEnabled(have_gain);        jTextFieldPeriodOfTimeMarket.setEnabled(have_gain);    }//GEN-LAST:event_jComboBoxStandardMarketActionPerformed        private void jComboBoxSearchVillageMarketFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageMarketFocusGained// TODO add your handling code here://        ComboboxModel.initComboBox(this.jComboBoxSearchVillageMarket,theAllComboBoxControl.listVillage2());    }//GEN-LAST:event_jComboBoxSearchVillageMarketFocusGained                                            private void jButtonSaveMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveMarketActionPerformed                if(this.jCheckBoxSaveHistory.isSelected() || theMarket.getObjectId()==null)            saveMarket();        else            this.updateMarket();            }//GEN-LAST:event_jButtonSaveMarketActionPerformed                        private void jButtonDeleteMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteMarketActionPerformed                        deleteMarket();                    }//GEN-LAST:event_jButtonDeleteMarketActionPerformed                        private void jButtonAddMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMarketActionPerformed                        addMarket();                    }//GEN-LAST:event_jButtonAddMarketActionPerformed                        private void jRadioButtonMarketCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMarketCoActionPerformed                        dateComboBoxMarketCoDate.setEnabled(true);                    }//GEN-LAST:event_jRadioButtonMarketCoActionPerformed                        private void jRadioButtonMarketNotCoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonMarketNotCoActionPerformed                        dateComboBoxMarketCoDate.setEnabled(false);                    }//GEN-LAST:event_jRadioButtonMarketNotCoActionPerformed                        private void jCheckBoxCloseMarketMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxCloseMarketMouseReleased                    }//GEN-LAST:event_jCheckBoxCloseMarketMouseReleased                        private void jTextFieldStandardTypeMarketDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldStandardTypeMarketDescriptionFocusLost                        standardTypeMarket = jTextFieldStandardTypeMarketDescription.getText();                    }//GEN-LAST:event_jTextFieldStandardTypeMarketDescriptionFocusLost                        private void jComboBoxStandardTypeMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxStandardTypeMarketActionPerformed        if(ComboboxModel.getCodeComboBox(jComboBoxStandardTypeMarket).equals("90")) {            jTextFieldStandardTypeMarketDescription.setVisible(true);            jTextFieldStandardTypeMarketDescription.setEnabled(true);            jTextFieldStandardTypeMarketDescription.setText(standardTypeMarket);            standardTypeMarket=null;        } else {            jTextFieldStandardTypeMarketDescription.setVisible(false);            jTextFieldStandardTypeMarketDescription.setText("");        }        jComboBoxStandardMarket.setEnabled(jComboBoxStandardTypeMarket.getSelectedIndex()!=0);    }//GEN-LAST:event_jComboBoxStandardTypeMarketActionPerformed                        private void jTextFieldOwnerMarketDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldOwnerMarketDescriptionFocusLost                        ownerMarket = jTextFieldOwnerMarketDescription.getText();                    }//GEN-LAST:event_jTextFieldOwnerMarketDescriptionFocusLost                        private void jComboBoxOwnerMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOwnerMarketActionPerformed                        /*06 = ?????/????? ???????????????, 30 = ????? ????*/                        if(ComboboxModel.getCodeComboBox(jComboBoxOwnerMarket).equals("06") || ComboboxModel.getCodeComboBox(jComboBoxOwnerMarket).equals("30")) {            jTextFieldOwnerMarketDescription.setEnabled(true);                                    jTextFieldOwnerMarketDescription.setText(ownerMarket);                                    ownerMarket = null;                                } else {            jTextFieldOwnerMarketDescription.setText("");        }                    }//GEN-LAST:event_jComboBoxOwnerMarketActionPerformed                                    private void jTextFieldMarketTypeLockDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMarketTypeLockDescriptionFocusLost                        marketTypeLock = jTextFieldMarketTypeLockDescription.getText();                    }//GEN-LAST:event_jTextFieldMarketTypeLockDescriptionFocusLost                        private void jTextFieldMarketTypeDescriptionFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMarketTypeDescriptionFocusLost                        marketType = jTextFieldMarketTypeDescription.getText();                    }//GEN-LAST:event_jTextFieldMarketTypeDescriptionFocusLost                        private void jComboBoxMarketTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMarketTypeActionPerformed                        /*99 = ????? ????*/                        if(ComboboxModel.getCodeComboBox(jComboBoxMarketType).equals(cfmkt.code)) {                                    jTextFieldMarketTypeDescription.setVisible(true);            jTextFieldMarketTypeDescription.setEnabled(true);            jTextFieldMarketTypeDescription.setText(marketType);                                    marketType = null;                                } else {            jTextFieldMarketTypeDescription.setVisible(false);            jTextFieldMarketTypeDescription.setText("");                                }                    }//GEN-LAST:event_jComboBoxMarketTypeActionPerformed                        private void jComboBoxMarketTypeLockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMarketTypeLockActionPerformed                        /*999 = ????? ????*/                        if(ComboboxModel.getCodeComboBox(jComboBoxMarketTypeLock).equals(cfmktl.code)) {                                    jTextFieldMarketTypeLockDescription.setVisible(true);                                    jTextFieldMarketTypeLockDescription.setEnabled(true);                                    jTextFieldMarketTypeLockDescription.setText(marketTypeLock);                                    marketTypeLock = null;                                } else {                                    jTextFieldMarketTypeLockDescription.setVisible(false);                                    jTextFieldMarketTypeLockDescription.setText("");                                }                    }//GEN-LAST:event_jComboBoxMarketTypeLockActionPerformed                        private void jTableHistoryMarketMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHistoryMarketMouseReleased                        selectMarketHistory();                    }//GEN-LAST:event_jTableHistoryMarketMouseReleased                        private void jTableMarketMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMarketMouseReleased                        selectMarket(-2);                    }//GEN-LAST:event_jTableMarketMouseReleased                        private void jComboBoxSearchVillageMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageMarketActionPerformed                        searchMarket();                    }//GEN-LAST:event_jComboBoxSearchVillageMarketActionPerformed                        private void jButtonSearchMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchMarketActionPerformed                        searchMarket();                    }//GEN-LAST:event_jButtonSearchMarketActionPerformed                        private void jTextFieldSearchMarketActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchMarketActionPerformed                        searchMarket();                    }//GEN-LAST:event_jTextFieldSearchMarketActionPerformed                                    // Variables declaration - do not modify//GEN-BEGIN:variables    private javax.swing.ButtonGroup buttonGroup1;    private javax.swing.ButtonGroup buttonGroup2;    private com.pcu.utility.DateComboBox dateComboBoxCloseMarket;    private com.pcu.utility.DateComboBox dateComboBoxDateOfPassMarket;    private com.pcu.utility.DateComboBox dateComboBoxMarketCoDate;    private com.hospital_os.gui.font.DefaultFont defaultFont1;    private com.pcu.utility.IntegerTextField integerTextFieldMooMarket;    private com.pcu.utility.IntegerTextField integerTextFieldTimeOfPassMarket;    private javax.swing.JButton jButtonAddMarket;    private javax.swing.JButton jButtonDeleteMarket;    private javax.swing.JButton jButtonSaveMarket;    private javax.swing.JButton jButtonSearchMarket;    private javax.swing.JCheckBox jCheckBoxCloseMarket;    private javax.swing.JCheckBox jCheckBoxSaveHistory;    private javax.swing.JCheckBox jCheckBoxVillage;    private javax.swing.JComboBox jComboBoxInMarketMarket;    private javax.swing.JComboBox jComboBoxMarketType;    private javax.swing.JComboBox jComboBoxMarketTypeLock;    private javax.swing.JComboBox jComboBoxOwnerMarket;    private javax.swing.JComboBox jComboBoxSearchVillageMarket;    private javax.swing.JComboBox jComboBoxStandardMarket;    private javax.swing.JComboBox jComboBoxStandardTypeMarket;    private javax.swing.JComboBox jComboBoxVillageMarket;    private javax.swing.JLabel jLabel100;    private javax.swing.JLabel jLabel52;    private javax.swing.JLabel jLabel54;    private javax.swing.JLabel jLabel55;    private javax.swing.JLabel jLabel56;    private javax.swing.JLabel jLabel60;    private javax.swing.JLabel jLabel61;    private javax.swing.JLabel jLabel62;    private javax.swing.JLabel jLabel63;    private javax.swing.JLabel jLabel64;    private javax.swing.JLabel jLabel65;    private javax.swing.JLabel jLabel66;    private javax.swing.JLabel jLabel67;    private javax.swing.JLabel jLabel68;    private javax.swing.JLabel jLabel69;    private javax.swing.JLabel jLabel71;    private javax.swing.JLabel jLabel72;    private javax.swing.JLabel jLabel73;    private javax.swing.JLabel jLabel94;    private javax.swing.JLabel jLabel97;    private javax.swing.JLabel jLabel98;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel16;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel25;    private javax.swing.JPanel jPanel28;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel32;    private javax.swing.JPanel jPanel33;    private javax.swing.JPanel jPanel34;    private javax.swing.JPanel jPanel36;    private javax.swing.JPanel jPanel38;    private javax.swing.JPanel jPanel39;    private javax.swing.JPanel jPanel40;    private javax.swing.JPanel jPanel56;    private javax.swing.JPanel jPanel68;    private javax.swing.JPanel jPanelSearchMarket;    private javax.swing.JRadioButton jRadioButtonMarketCo;    private javax.swing.JRadioButton jRadioButtonMarketNoRegister;    private javax.swing.JRadioButton jRadioButtonMarketNotCo;    private javax.swing.JRadioButton jRadioButtonMarketRegister;    private javax.swing.JScrollPane jScrollPane1;    private javax.swing.JScrollPane jScrollPane15;    private javax.swing.JScrollPane jScrollPane7;    private javax.swing.JTable jTableHistoryMarket;    private javax.swing.JTable jTableMarket;    private javax.swing.JTextArea jTextAreaCauseCloseMarket;    private javax.swing.JTextField jTextFieldHomeNumberMarket;    private com.pcu.utility.IntegerTextField jTextFieldMarketCode;    private javax.swing.JTextField jTextFieldMarketName;    private javax.swing.JTextField jTextFieldMarketTypeDescription;    private javax.swing.JTextField jTextFieldMarketTypeLockDescription;    private javax.swing.JTextField jTextFieldOwnerMarketDescription;    private javax.swing.JTextField jTextFieldPeriodOfTimeMarket;    private javax.swing.JTextField jTextFieldPhoneMarket;    private javax.swing.JTextField jTextFieldRoadMarket;    private javax.swing.JTextField jTextFieldSearchMarket;    private javax.swing.JTextField jTextFieldStandardTypeMarketDescription;    private com.hosv3.gui.component.PanelCatAddress panelCatAddress1;    // End of variables declaration//GEN-END:variables                    }