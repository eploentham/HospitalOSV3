/*
 * PanelTemple.java
 *
 * Created on 11 เมษายน 2550, 13:56 น.
 */

package com.pcu.gui.panel.village;

import com.hospital_os.object.Site;
import com.hospital_os.utility.CellRendererComboBox;
import com.hospital_os.utility.ComBoBoxEditor;
import com.hospital_os.utility.ComboFix;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.connection.UpdateStatus;
import com.pcu.control.AllComboBoxControl;
import com.pcu.control.HosManage;
import com.pcu.control.PCUObject;
import com.pcu.control.SystemControl;
import com.pcu.control.VillageControl;
import com.pcu.control.VillageObserv;
import com.pcu.object.Temple;
import com.pcu.object.TempleHistory;
import com.pcu.object.TempleHistoryDetail;
import com.pcu.utility.ColumnTableRenderer;
import com.pcu.utility.GutilPCU;
import java.awt.event.KeyEvent;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author  Administrator
 */
public class PanelTemple extends javax.swing.JPanel implements VillageObserv{
    
    protected Temple theTemple;
    protected TempleHistory theTempleHistory;
    protected TempleHistoryDetail theTempleHistoryDetail;
    
    protected Vector vTemple = new Vector();
    protected Vector vTempleHistory = new Vector();
    protected Vector vTempleHistoryDetail = new Vector();
    protected int rowTemple;
    protected boolean flagTemple = true;

    protected AllComboBoxControl theAllComboBoxControl;

    protected SystemControl theSystemControl;

    protected String employeeId;

    protected ComboFix cfv;

    protected VillageControl theVillageControl;

    private UpdateStatus theUS;
    /** Creates new form PanelTemple */
    public PanelTemple() {
        initComponents();
        setLanguage();
    }
    /**
     *  implements VillageObserv
     */
    public boolean refreshVillage() {
        ComboboxModel.initComboBox(this.jComboBoxVillageTemple,theAllComboBoxControl.listVillage());  
        ComboboxModel.initComboBox(this.jComboBoxSearchVillageTemple,theAllComboBoxControl.listVillage());   
        return true;
    }
    public void setControl(HosManage hm,UpdateStatus us) 
    { 
        theUS = us;
        theSystemControl = hm.theHosControl.theSystemControl;
        theAllComboBoxControl = hm.theHosControl.theAllComboBoxControl;
        theVillageControl = hm.theHosControl.theVillageControl;
        AllComboBoxControl a = theAllComboBoxControl;
        this.panelCatAddress1.setControl(hm.theHosInf.getLookupControl(),null);
        ComboboxModel.initComboBox(jComboBoxTempleType,theAllComboBoxControl.listTempleType());
        ComboboxModel.initComboBox(this.jComboBoxVillageTemple,theAllComboBoxControl.listVillage());  
        ComboboxModel.initComboBox(this.jComboBoxSearchVillageTemple,theAllComboBoxControl.listVillage());   
        ComboboxModel.initComboBox(jComboBoxRelegionType,theAllComboBoxControl.listReligion());
    }
    
    public void setObject(PCUObject pcuobject)
    {  
        if(pcuobject != null)
        {
            if(pcuobject.getEmployee() != null)
            {
                employeeId = pcuobject.getEmployee().getObjectId();
            }
        }
    }
    protected void setDefaultHospital()
    {
        SystemControl s = theSystemControl;
        Site theSite = theSystemControl.theHospital_Site;
        if(theSite != null)
        {this.panelCatAddress1.setAddress(theSite.changwat,theSite.amphor,theSite.tambon);
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanelTempleDetail = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldTempleCode = new com.pcu.utility.IntegerTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldTempleName = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldHomeNumberTemple = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        integerTextFieldMooTemple = new com.pcu.utility.IntegerTextField();
        jLabel38 = new javax.swing.JLabel();
        jTextFieldRoadTemple = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jTextFieldPhoneTemple = new javax.swing.JTextField();
        panelCatAddress1 = new com.hosv3.gui.component.PanelCatAddress();
        jLabel33 = new javax.swing.JLabel();
        jComboBoxVillageTemple = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jComboBoxRelegionType = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBoxTempleType = new javax.swing.JComboBox();
        jScrollPane11 = new javax.swing.JScrollPane();
        jTableAmountTemplePersonel = new javax.swing.JTable();
        jPanel23 = new javax.swing.JPanel();
        jButtonAddPersonelTemple = new javax.swing.JButton();
        jButtonDeletePersonelTemple = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jButtonAddTemple = new javax.swing.JButton();
        jButtonDeleteTemple = new javax.swing.JButton();
        jButtonSaveTemple = new javax.swing.JButton();
        jCheckBoxSaveHistory = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanelSearchTemple = new javax.swing.JPanel();
        jTextFieldSearchTemple = new javax.swing.JTextField();
        jButtonSearchTemple = new javax.swing.JButton();
        jComboBoxSearchVillageTemple = new javax.swing.JComboBox();
        jCheckBoxSearchMoo = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableTemple = new javax.swing.JTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        jTableHistoryTemple = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jPanelTempleDetail.setLayout(new java.awt.GridBagLayout());

        jPanelTempleDetail.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TempleDetail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanelTempleDetail.setMinimumSize(new java.awt.Dimension(449, 382));
        jPanelTempleDetail.setPreferredSize(new java.awt.Dimension(449, 735));
        jLabel16.setFont(defaultFont1);
        jLabel16.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelTempleDetail.add(jLabel16, gridBagConstraints);

        jTextFieldTempleCode.setColumns(4);
        jTextFieldTempleCode.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTempleCode.setFont(defaultFont1);
        jTextFieldTempleCode.setMinimumSize(new java.awt.Dimension(48, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelTempleDetail.add(jTextFieldTempleCode, gridBagConstraints);

        jLabel17.setFont(defaultFont1);
        jLabel17.setText("TempleName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 11, 0, 0);
        jPanelTempleDetail.add(jLabel17, gridBagConstraints);

        jTextFieldTempleName.setFont(defaultFont1);
        jTextFieldTempleName.setMinimumSize(new java.awt.Dimension(250, 21));
        jTextFieldTempleName.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 11);
        jPanelTempleDetail.add(jTextFieldTempleName, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel36.setFont(defaultFont1);
        jLabel36.setText("HomeNumber");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel18.add(jLabel36, gridBagConstraints);

        jTextFieldHomeNumberTemple.setFont(defaultFont1);
        jTextFieldHomeNumberTemple.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldHomeNumberTemple.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldHomeNumberTemple.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel18.add(jTextFieldHomeNumberTemple, gridBagConstraints);

        jLabel37.setFont(defaultFont1);
        jLabel37.setText("Moo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jLabel37, gridBagConstraints);

        integerTextFieldMooTemple.setColumns(3);
        integerTextFieldMooTemple.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        integerTextFieldMooTemple.setFont(defaultFont1);
        integerTextFieldMooTemple.setMinimumSize(new java.awt.Dimension(30, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel18.add(integerTextFieldMooTemple, gridBagConstraints);

        jLabel38.setFont(defaultFont1);
        jLabel38.setText("Road");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jLabel38, gridBagConstraints);

        jTextFieldRoadTemple.setFont(defaultFont1);
        jTextFieldRoadTemple.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldRoadTemple.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel18.add(jTextFieldRoadTemple, gridBagConstraints);

        jLabel39.setFont(defaultFont1);
        jLabel39.setText("PPTel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jLabel39, gridBagConstraints);

        jTextFieldPhoneTemple.setFont(defaultFont1);
        jTextFieldPhoneTemple.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldPhoneTemple.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel18.add(jTextFieldPhoneTemple, gridBagConstraints);

        panelCatAddress1.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel18.add(panelCatAddress1, gridBagConstraints);

        jLabel33.setFont(defaultFont1);
        jLabel33.setText("VillageName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel18.add(jLabel33, gridBagConstraints);

        jComboBoxVillageTemple.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel18.add(jComboBoxVillageTemple, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanelTempleDetail.add(jPanel18, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel11.setFont(defaultFont1);
        jLabel11.setText("\u0e28\u0e32\u0e2a\u0e19\u0e32");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabel11, gridBagConstraints);

        jComboBoxRelegionType.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jComboBoxRelegionType, gridBagConstraints);

        jLabel12.setFont(defaultFont1);
        jLabel12.setText("\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabel12, gridBagConstraints);

        jComboBoxTempleType.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jComboBoxTempleType, gridBagConstraints);

        jScrollPane11.setFont(defaultFont1);
        jScrollPane11.setMinimumSize(new java.awt.Dimension(200, 100));
        jScrollPane11.setPreferredSize(new java.awt.Dimension(200, 100));
        jTableAmountTemplePersonel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableAmountTemplePersonelKeyReleased(evt);
            }
        });

        jScrollPane11.setViewportView(jTableAmountTemplePersonel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(jScrollPane11, gridBagConstraints);

        jPanel23.setLayout(new java.awt.GridBagLayout());

        jButtonAddPersonelTemple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddPersonelTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddPersonelTemple.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddPersonelTemple.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddPersonelTemple.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddPersonelTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPersonelTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(jButtonAddPersonelTemple, gridBagConstraints);

        jButtonDeletePersonelTemple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDeletePersonelTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeletePersonelTemple.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeletePersonelTemple.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeletePersonelTemple.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeletePersonelTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePersonelTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel23.add(jButtonDeletePersonelTemple, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel23.add(jLabel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jPanel23, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 20, 5, 11);
        jPanelTempleDetail.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jPanelTempleDetail, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButtonAddTemple.setFont(defaultFont1);
        jButtonAddTemple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddTemple.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddTemple.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddTemple.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel11.add(jButtonAddTemple, gridBagConstraints);

        jButtonDeleteTemple.setFont(defaultFont1);
        jButtonDeleteTemple.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDeleteTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteTemple.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteTemple.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteTemple.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel11.add(jButtonDeleteTemple, gridBagConstraints);

        jButtonSaveTemple.setFont(defaultFont1);
        jButtonSaveTemple.setText("Save");
        jButtonSaveTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSaveTemple.setMaximumSize(new java.awt.Dimension(67, 24));
        jButtonSaveTemple.setMinimumSize(new java.awt.Dimension(67, 24));
        jButtonSaveTemple.setPreferredSize(new java.awt.Dimension(67, 24));
        jButtonSaveTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel11.add(jButtonSaveTemple, gridBagConstraints);

        jCheckBoxSaveHistory.setFont(defaultFont1);
        jCheckBoxSaveHistory.setText("\u0e40\u0e01\u0e47\u0e1a\u0e1b\u0e23\u0e30\u0e27\u0e31\u0e15\u0e34");
        jCheckBoxSaveHistory.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxSaveHistory.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSaveHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSaveHistoryActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jCheckBoxSaveHistory, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel11, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanelSearchTemple.setLayout(new java.awt.GridBagLayout());

        jPanelSearchTemple.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "SearchData", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jTextFieldSearchTemple.setFont(defaultFont1);
        jTextFieldSearchTemple.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldSearchTemple.setPreferredSize(new java.awt.Dimension(100, 21));
        jTextFieldSearchTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelSearchTemple.add(jTextFieldSearchTemple, gridBagConstraints);

        jButtonSearchTemple.setFont(defaultFont1);
        jButtonSearchTemple.setText("Search");
        jButtonSearchTemple.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearchTemple.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearchTemple.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearchTemple.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearchTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchTempleActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelSearchTemple.add(jButtonSearchTemple, gridBagConstraints);

        jComboBoxSearchVillageTemple.setFont(defaultFont1);
        jComboBoxSearchVillageTemple.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSearchVillageTempleActionPerformed(evt);
            }
        });
        jComboBoxSearchVillageTemple.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxSearchVillageTempleFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelSearchTemple.add(jComboBoxSearchVillageTemple, gridBagConstraints);

        jCheckBoxSearchMoo.setSelected(true);
        jCheckBoxSearchMoo.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxSearchMoo.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSearchMoo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSearchMooActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelSearchTemple.add(jCheckBoxSearchMoo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jPanelSearchTemple, gridBagConstraints);

        jScrollPane3.setBorder(null);
        jScrollPane3.setFont(defaultFont1);
        jTableTemple.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableTemple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableTempleMouseReleased(evt);
            }
        });

        jScrollPane3.setViewportView(jTableTemple);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jScrollPane10.setFont(defaultFont1);
        jTableHistoryTemple.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableHistoryTemple.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableHistoryTempleMouseReleased(evt);
            }
        });

        jScrollPane10.setViewportView(jTableHistoryTemple);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jScrollPane10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        add(jPanel3, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jTableAmountTemplePersonelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableAmountTemplePersonelKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_ENTER){
            this.getTempleHistoryDetail();
        }
    }//GEN-LAST:event_jTableAmountTemplePersonelKeyReleased

    private void jCheckBoxSearchMooActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSearchMooActionPerformed
        this.jComboBoxSearchVillageTemple.setEnabled(jCheckBoxSearchMoo.isSelected());
    }//GEN-LAST:event_jCheckBoxSearchMooActionPerformed

    private void jCheckBoxSaveHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSaveHistoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxSaveHistoryActionPerformed

    private void jComboBoxSearchVillageTempleFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageTempleFocusGained
// TODO add your handling code here:
//        ComboboxModel.initComboBox(this.jComboBoxSearchVillageTemple,theAllComboBoxControl.listVillage2()); 
    }//GEN-LAST:event_jComboBoxSearchVillageTempleFocusGained

    private void jTableHistoryTempleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableHistoryTempleMouseReleased
        selectTempleHistory();
    }//GEN-LAST:event_jTableHistoryTempleMouseReleased

    private void jTableTempleMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTempleMouseReleased
        selectTemple(-2);
    }//GEN-LAST:event_jTableTempleMouseReleased

    private void jComboBoxSearchVillageTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSearchVillageTempleActionPerformed
        searchTemple();
    }//GEN-LAST:event_jComboBoxSearchVillageTempleActionPerformed

    private void jButtonSearchTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchTempleActionPerformed
        searchTemple();
    }//GEN-LAST:event_jButtonSearchTempleActionPerformed

    private void jTextFieldSearchTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchTempleActionPerformed
        searchTemple();
    }//GEN-LAST:event_jTextFieldSearchTempleActionPerformed

    private void jButtonSaveTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveTempleActionPerformed
        saveTemple();
    }//GEN-LAST:event_jButtonSaveTempleActionPerformed

    private void jButtonDeleteTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteTempleActionPerformed
        deleteTemple();
    }//GEN-LAST:event_jButtonDeleteTempleActionPerformed

    private void jButtonAddTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddTempleActionPerformed
        addTemple();
    }//GEN-LAST:event_jButtonAddTempleActionPerformed

    private void jButtonDeletePersonelTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePersonelTempleActionPerformed
        deleteTempleHistoryDetail();
    }//GEN-LAST:event_jButtonDeletePersonelTempleActionPerformed

    private void jButtonAddPersonelTempleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPersonelTempleActionPerformed
        addTempleHistoryDetail();
    }//GEN-LAST:event_jButtonAddPersonelTempleActionPerformed

    protected boolean checkRepeat(int i) {
        return false;
    }
//   protected void updateTemple()
//    {
//        Temple theTemple = getTemple();
//        /***TempleHistory***/  
//        if(theTempleHistory==null)
//            theTempleHistory = new TempleHistory();
//        theTempleHistory.temple_staff_modify = employeeId;
//        theTempleHistory.temple_modify_date_time = Gutil.getTextCurrentDateTime(theAllComboBoxControl.theConnectionInf);
//        
//        int same = 0;
//        if(theTemple.temple_number.equals("") || theTemple.temple_name.equals(""))
//        {
//            theUS.setStatus(GutilPCU.getTextBundle("FillNumberAndName"),UpdateStatus.WARNING);
//            return;
//        }
//        if(vTempleHistoryDetail!=null && !vTempleHistoryDetail.isEmpty())
//        {   
//            LoopOuter:for(int i=vTempleHistoryDetail.size()-1; i>=0; i--)
//            {
//                TempleHistoryDetail templeHistoryDetailTemp = (TempleHistoryDetail)vTempleHistoryDetail.get(i);
//                JComboBox jComboBoxTemplePersonel = (JComboBox)jTableAmountTemplePersonel.getValueAt(i,0);
//                templeHistoryDetailTemp.temple_personel = Gutil.getGuiData(jComboBoxTemplePersonel);
//                templeHistoryDetailTemp.temple_amount_personel = Gutil.CheckReservedWords(((String)jTableAmountTemplePersonel.getValueAt(i,1)));
//
//                if(("").equals(templeHistoryDetailTemp.temple_amount_personel))
//                    vTempleHistoryDetail.removeElement(templeHistoryDetailTemp);
//
//                same = 0;
//                LoopInner:for(int k=0; k<vTempleHistoryDetail.size(); k++)
//                {
//                    if(templeHistoryDetailTemp.temple_personel.equals(((TempleHistoryDetail)vTempleHistoryDetail.get(k)).temple_personel))
//                    {
//                        same = same + 1; 
//                        if(same==2)
//                            break LoopOuter; 
//                    } 
//                }
//            }
//            if(same==2)
//            {
//                theUS.setStatus(GutilPCU.getTextBundle("SameTemplePersonal"),UpdateStatus.WARNING);
//                return;
//            }
//        }  
//        
//        theVillageControl.updateAboutTemple(theTemple,theTempleHistory,vTempleHistoryDetail);
//        setEnableGuiTemple(false);
//    }
    
    
    protected void setEnableGuiTemple(boolean flag)
    {
        jTextFieldTempleCode.setEnabled(flag);
        jTextFieldTempleName.setEnabled(flag);
        jTextFieldHomeNumberTemple.setEnabled(flag);
        integerTextFieldMooTemple.setEnabled(flag);
        jTextFieldRoadTemple.setEnabled(flag);
        jTextFieldPhoneTemple.setEnabled(flag);
        this.panelCatAddress1.setEnabled(flag);
        jComboBoxRelegionType.setEnabled(flag);
        jComboBoxTempleType.setEnabled(flag);
        jComboBoxVillageTemple.setEnabled(flag);
        jTableAmountTemplePersonel.setEnabled(flag);
        jButtonAddPersonelTemple.setEnabled(flag);
        jButtonDeletePersonelTemple.setEnabled(flag);
        jButtonDeleteTemple.setEnabled(flag);
        jButtonSaveTemple.setEnabled(flag);
        jButtonDeleteTemple.setEnabled(flag);
        jTableAmountTemplePersonel.setEnabled(flag);
    }
    
    protected void addTemple()
    {    
        setEnableGuiTemple(true);
        jTableTemple.clearSelection();
        setTempleHistoryV(null);
        setTempleHistoryDetailV(null);
        setTemple(null);  
    }
    private Vector getTempleHistoryDetail()
    {
        vTempleHistoryDetail = new Vector();
        for(int i=0;i<jTableAmountTemplePersonel.getRowCount();i++){
            TempleHistoryDetail tmp = new TempleHistoryDetail();
            JComboBox jComboBoxTemplePersonel = (JComboBox)jTableAmountTemplePersonel.getValueAt(i,0);
            tmp.temple_personel = Gutil.getGuiData(jComboBoxTemplePersonel);
            tmp.temple_amount_personel = Gutil.CheckReservedWords(((String)jTableAmountTemplePersonel.getValueAt(i,1)));
            vTempleHistoryDetail.add(tmp);
        }
        return vTempleHistoryDetail;
    }
    protected void addTempleHistoryDetail()
    {
        Vector v = getTempleHistoryDetail();
        v.add(new TempleHistoryDetail());
        setTempleHistoryDetailV(v);
    }
    
    protected void deleteTempleHistoryDetail()
    {            
        int[] rows = jTableAmountTemplePersonel.getSelectedRows();
        for(int i=rows.length-1;i>=0;i--)
            vTempleHistoryDetail.removeElementAt(rows[i]);
        setTempleHistoryDetailV(vTempleHistoryDetail);        
    }
    public Temple getTemple()
    {      
        if(theTemple==null)
            theTemple = new Temple();
        theTemple.temple_number = jTextFieldTempleCode.getText();
        theTemple.temple_name = jTextFieldTempleName.getText();
        theTemple.temple_home_number = jTextFieldHomeNumberTemple.getText();
        theTemple.temple_moo = integerTextFieldMooTemple.getText();
        theTemple.temple_road = jTextFieldRoadTemple.getText();
        theTemple.temple_phone = jTextFieldPhoneTemple.getText();
        theTemple.temple_changwat = panelCatAddress1.getChangwat();
        theTemple.temple_amphur = panelCatAddress1.getAmpur();
        theTemple.temple_tambol = panelCatAddress1.getTambon();
        theTemple.temple_religion_type = Gutil.getGuiData(jComboBoxRelegionType);
        theTemple.temple_type = Gutil.getGuiData(jComboBoxTempleType);
        theTemple.temple_active = "1";
        theTemple.village_id = Gutil.getGuiData(jComboBoxVillageTemple);
        return theTemple;
    }
    protected void saveTemple()
    {
        getTemple();
//        if(!jCheckBoxSaveHistory.isSelected() && theTemple.getObjectId()!=null){
//            updateTemple();
//            return;
//        }
        if(theTemple.temple_number.equals("") || theTemple.temple_name.equals(""))
        {
            theUS.setStatus(GutilPCU.getTextBundle("FillNumberAndName"),UpdateStatus.WARNING);
            return;
        }
        int same = 0;
        //เช็คว่ามีข้อมูลซ้ำกันหรือเปล่า
        if(vTempleHistoryDetail!=null){
        LoopOuter:for(int i=vTempleHistoryDetail.size()-1; i>=0; i--)
        {
            TempleHistoryDetail history = (TempleHistoryDetail)vTempleHistoryDetail.get(i);
            JComboBox jComboBoxTemplePersonel = (JComboBox)jTableAmountTemplePersonel.getValueAt(i,0);
            history.temple_personel = Gutil.getGuiData(jComboBoxTemplePersonel);
            history.temple_amount_personel = Gutil.CheckReservedWords(((String)jTableAmountTemplePersonel.getValueAt(i,1)));

            if(("").equals(history.temple_amount_personel))
                vTempleHistoryDetail.removeElement(history); 

            same = 0;
            LoopInner:for(int k=0; k < vTempleHistoryDetail.size(); k++)
            {
                TempleHistoryDetail hist = (TempleHistoryDetail)vTempleHistoryDetail.get(k);
                if(history.temple_personel.equals(hist.temple_personel))
                {
                    same = same + 1; 
                    if(same==2)
                        break LoopOuter; 
                } 
            }
        } 
        if(same==2) {
            theUS.setStatus(GutilPCU.getTextBundle("SameTemplePersonal"),UpdateStatus.WARNING);
            return;
        }
        }
        
        /***TempleHistory***/  
        if(theTempleHistory==null)
            theTempleHistory = new TempleHistory();
        theTempleHistory.temple_staff_modify = employeeId;
        theTempleHistory.temple_modify_date_time = Gutil.getTextCurrentDateTime(theAllComboBoxControl.theConnectionInf);

        if(jCheckBoxSaveHistory.isSelected())
            theTempleHistory.setObjectId(null);
        boolean ret = theVillageControl.saveAboutTemple(theTemple,theTempleHistory,vTempleHistoryDetail,theUS);
        if(!ret)
            return;

        searchTemple();
        for(int i=0;i<this.vTemple.size();i++){
            Temple pp = (Temple)vTemple.get(i);
            if(pp.getObjectId().equals(theTemple.getObjectId())){
                this.jTableTemple.setRowSelectionInterval(i,i);
                return ;
            }
        }
    }
    
    
    protected void searchTemple()
    {   
        search("");
    }
    protected void search(String village_id)
    {   
        if(village_id!=null && !village_id.equals(""))
        {
            Gutil.setGuiData(jComboBoxSearchVillageTemple,village_id);
            Gutil.setGuiData(jComboBoxVillageTemple,village_id);
        }
        /***ค้นหาศาสนสถาน***/
        String search = jTextFieldSearchTemple.getText();      
        String village = "0";
        if(jCheckBoxSearchMoo.isSelected())
            village = Gutil.getGuiData(jComboBoxSearchVillageTemple);
        
        Vector vc =  theVillageControl.listTempleByNameOrNumber(search,village);
        setTempleV(vc);
        setEnableGuiTemple(false);
    }
    
    protected void setTempleV(Vector vc)
    {
        vTemple = vc;
        String[] col = {GutilPCU.getTextBundle("Code"),
                    GutilPCU.getTextBundle("TempleName"),
                    GutilPCU.getTextBundle("VillageName")};
                    
        TaBleModel tm ;
        if(vTemple != null)
        {   
            tm = new TaBleModel(col,vTemple.size());
            for(int i=0, size=vTemple.size(); i<size; i++)
            {  
                Temple templeTemp = (Temple)vTemple.get(i);
                tm.setValueAt(templeTemp.temple_number,i,0); 
                tm.setValueAt(templeTemp.temple_name,i,1);  
                tm.setValueAt(ComboboxModel.getDescriptionComboBox(jComboBoxVillageTemple,templeTemp.village_id),i,2); 
            }
        }
        else
        {   
            tm= new TaBleModel(col,0);
        }         
        jTableTemple.setModel(tm);  
        
        /***SetTableDefault***/
        jTableTemple.getColumnModel().getColumn(0).setPreferredWidth(150);     /*รหัสศาสนสถาน*/
        jTableTemple.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererCenter());
        jTableTemple.getColumnModel().getColumn(1).setPreferredWidth(200);     /*ชื่อศาสนสถาน*/
        jTableTemple.getColumnModel().getColumn(2).setPreferredWidth(200);     /*ชื่อหมู่บ้าน*/
    }
    
    protected void selectTemple(int row)
    {
        if(row==-2)
        {/*user เป็นผู้เลือกเอง*/
            rowTemple = jTableTemple.getSelectedRow();            
        }
        else
        {/*user บันทึก จะ select record ที่เพิ่งเพิ่ม*/
            rowTemple = row;            
        }     
        setTemple((Temple)vTemple.get(rowTemple)); 
    }
    public void setTemple(Temple tm)
    {
        theTemple = tm;
        if(theTemple==null){
            jTextFieldTempleCode.setText("");
            jTextFieldTempleName.setText("");
            jTextFieldHomeNumberTemple.setText("");
            integerTextFieldMooTemple.setText("");
            jTextFieldRoadTemple.setText("");
            jTextFieldPhoneTemple.setText("");   
            Gutil.setGuiData(jComboBoxVillageTemple,Gutil.getGuiData(jComboBoxSearchVillageTemple));   
            setDefaultHospital(); 
            return;
        }
        jTextFieldTempleCode.setText(theTemple.temple_number);
        jTextFieldTempleName.setText(theTemple.temple_name);
        jTextFieldHomeNumberTemple.setText(theTemple.temple_home_number);
        integerTextFieldMooTemple.setText(theTemple.temple_moo);
        jTextFieldRoadTemple.setText(theTemple.temple_road);
        jTextFieldPhoneTemple.setText(theTemple.temple_phone);
        this.panelCatAddress1.setAddress(theTemple.temple_changwat
                ,theTemple.temple_amphur,theTemple.temple_tambol);
        ComboboxModel.setCodeComboBox(jComboBoxRelegionType,theTemple.temple_religion_type);
        ComboboxModel.setCodeComboBox(jComboBoxTempleType,theTemple.temple_type);        
        ComboboxModel.setCodeComboBox(jComboBoxVillageTemple,theTemple.village_id);
        
        Vector vc1 =  theVillageControl.listTempleHistoryByTempleId(theTemple.getObjectId());
        setTempleHistoryV(vc1);   
        Vector vc = new Vector();
        if(theTempleHistory!=null)
            vc = theVillageControl.listTempleHistoryDetailByTempleHistoryId(theTempleHistory.getObjectId());
        setTempleHistoryDetailV(vc);   
        setEnableGuiTemple(true);
    }
    
    protected void setTempleHistoryDetailV(Vector vc)
    {
        vTempleHistoryDetail = vc;
        String[] col = {GutilPCU.getTextBundle("ReligionPersonel"),
                    GutilPCU.getTextBundle("AmountPersonelReligion")};
        
        TaBleModel tm;           
        if(vTempleHistoryDetail != null)
        {   
            tm = new TaBleModel(col,vTempleHistoryDetail.size());  
            tm.setEditingCol(0,1);
            for(int i=0, size=vTempleHistoryDetail.size(); i<size; i++)
            {  
                TempleHistoryDetail tmp = (TempleHistoryDetail)vTempleHistoryDetail.get(i);                
               JComboBox jComboBoxTemplePersonel = new JComboBox();
               ComboboxModel.initComboBox(jComboBoxTemplePersonel,theAllComboBoxControl.listTemplePersonel());
               Gutil.setGuiData(jComboBoxTemplePersonel,tmp.temple_personel); 
               tm.setValueAt(jComboBoxTemplePersonel,i,0);                 
               tm.setValueAt(tmp.temple_amount_personel,i,1); 
            }
        }
        else
        {   tm= new TaBleModel(col,0);
        }         
        jTableAmountTemplePersonel.setModel(tm);  
        
        /***SetTableDefault***/
        jTableAmountTemplePersonel.getColumnModel().getColumn(0).setPreferredWidth(200);     /*ประเภทบุคคลประจำศาสนสถาน*/
        jTableAmountTemplePersonel.getColumnModel().getColumn(1).setPreferredWidth(200);     /*จำนวนบุคคลประจำศาสนสถาน*/   
        jTableAmountTemplePersonel.getColumnModel().getColumn(1).setCellRenderer(ColumnTableRenderer.getRendererRight());
        jTableAmountTemplePersonel.getColumnModel().getColumn(0).setCellRenderer(new CellRendererComboBox());
        jTableAmountTemplePersonel.getColumnModel().getColumn(0).setCellEditor(new ComBoBoxEditor(new JComboBox()));
    } 
    
    
    protected void setTempleHistoryV(Vector vc)
    {
        vTempleHistory = vc;
        if(vTempleHistory==null)
            vTempleHistory = new Vector();

        theTempleHistory=null;
        TaBleModel tm ;    
        String[] col = {GutilPCU.getTextBundle("DateRecord")};
        tm = new TaBleModel(col,vTempleHistory.size());
        for(int i=0; i<vTempleHistory.size(); i++)
        {  
            TempleHistory temp = (TempleHistory)vTempleHistory.get(i);
            if(i==0)
                theTempleHistory = temp;
            if(!("").equals(temp.temple_record_date_time))
                tm.setValueAt(GutilPCU.changDateToString(temp.temple_record_date_time,true),i,0);                 
            else
                tm.setValueAt(GutilPCU.changDateToString(theTemple.temple_modify_date_time,true),i,0); 
        }
        jTableHistoryTemple.setModel(tm);
        jTableHistoryTemple.getColumnModel().getColumn(0).setPreferredWidth(150);      /*วันที่บันทึก*/                           
    }
    
    protected void selectTempleHistory()
    {
        TempleHistory temp = (TempleHistory)vTempleHistory.get(jTableHistoryTemple.getSelectedRow());
        Vector vc = theVillageControl.listTempleHistoryDetailByTempleHistoryId(temp.getObjectId());
        setTempleHistoryDetailV(vc);        
        setEnableGuiTemple(false);       
    }
    
    protected void deleteTemple()
    {

        boolean ret = theVillageControl.deleteTemple(theTemple,theUS);
        if(!ret)
            return;
        
        searchTemple();
    }
    private void setLanguage()
    {  
        /*jLabel*/              
        jLabel11.setText(GutilPCU.getTextBundle(jLabel11.getText()));    
        jLabel16.setText(GutilPCU.getTextBundle(jLabel16.getText()));        
        jLabel17.setText(GutilPCU.getTextBundle(jLabel17.getText()));         
        jLabel33.setText(GutilPCU.getTextBundle(jLabel33.getText()));
        jLabel36.setText(GutilPCU.getTextBundle(jLabel36.getText())); 
        jLabel37.setText(GutilPCU.getTextBundle(jLabel37.getText())); 
        jLabel38.setText(GutilPCU.getTextBundle(jLabel38.getText())); 
        jLabel39.setText(GutilPCU.getTextBundle(jLabel39.getText())); 
        jLabel11.setText(GutilPCU.getTextBundle(jLabel11.getText()));
        jLabel12.setText(GutilPCU.getTextBundle(jLabel12.getText()));
        jButtonSearchTemple.setText(GutilPCU.getTextBundle(jButtonSearchTemple.getText()));
        jButtonAddTemple.setText(GutilPCU.getTextBundle(jButtonAddTemple.getText()));
        jButtonDeleteTemple.setText(GutilPCU.getTextBundle(jButtonDeleteTemple.getText()));
        jButtonSaveTemple.setText(GutilPCU.getTextBundle(jButtonSaveTemple.getText()));
        jButtonAddPersonelTemple.setText(GutilPCU.getTextBundle(jButtonAddPersonelTemple.getText()));
        jButtonDeletePersonelTemple.setText(GutilPCU.getTextBundle(jButtonDeletePersonelTemple.getText()));
        GutilPCU.JPanelLabler(jPanelSearchTemple);        
        GutilPCU.JPanelLabler(jPanelTempleDetail);
        jCheckBoxSaveHistory.setText(GutilPCU.getTextBundle(jCheckBoxSaveHistory.getText()));
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.IntegerTextField integerTextFieldMooTemple;
    private javax.swing.JButton jButtonAddPersonelTemple;
    private javax.swing.JButton jButtonAddTemple;
    private javax.swing.JButton jButtonDeletePersonelTemple;
    private javax.swing.JButton jButtonDeleteTemple;
    private javax.swing.JButton jButtonSaveTemple;
    private javax.swing.JButton jButtonSearchTemple;
    private javax.swing.JCheckBox jCheckBoxSaveHistory;
    private javax.swing.JCheckBox jCheckBoxSearchMoo;
    private javax.swing.JComboBox jComboBoxRelegionType;
    private javax.swing.JComboBox jComboBoxSearchVillageTemple;
    private javax.swing.JComboBox jComboBoxTempleType;
    private javax.swing.JComboBox jComboBoxVillageTemple;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelSearchTemple;
    private javax.swing.JPanel jPanelTempleDetail;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableAmountTemplePersonel;
    private javax.swing.JTable jTableHistoryTemple;
    private javax.swing.JTable jTableTemple;
    private javax.swing.JTextField jTextFieldHomeNumberTemple;
    private javax.swing.JTextField jTextFieldPhoneTemple;
    private javax.swing.JTextField jTextFieldRoadTemple;
    private javax.swing.JTextField jTextFieldSearchTemple;
    private com.pcu.utility.IntegerTextField jTextFieldTempleCode;
    private javax.swing.JTextField jTextFieldTempleName;
    private com.hosv3.gui.component.PanelCatAddress panelCatAddress1;
    // End of variables declaration//GEN-END:variables
    
}
