/*



 * PanelDrugStock.java



 *



 * Created on 12 กรกฎาคม 2548, 10:20 น.



 */







package com.pcu.gui.panel.transaction;



import com.hosv3.utility.connection.UpdateStatus;

import com.pcu.control.AllComboBoxControl;



import com.pcu.control.HealthServiceControl;



import com.pcu.control.HosManage;



import com.pcu.control.PCUObject;



import com.pcu.control.SetupPcuControl;



import com.pcu.gui.dialog.DialogSetupSearchPcu;



import com.pcu.gui.dialog.HosDialog;



import com.pcu.subject.ManageEpiSetReq;



import com.pcu.subject.SetupSubjectPcu;



import javax.swing.*;



import java.util.*;



import com.hospital_os.utility.*;



import com.pcu.utility.*;



import com.pcu.object.*;



import com.hospital_os.object.Item;



import com.hospital_os.object.Employee;



/**



 *  



 * @author  jao



 */



public class PanelDrugStock extends javax.swing.JPanel implements ManageEpiSetReq {



    private AllComboBoxControl theAllComboBoxControl;



    private SetupSubjectPcu theSetupSubjectPcu;



    private SetupPcuControl theSetupPcuControl;    



    private HealthServiceControl theHealthServiceControl; 



    private DrugStock theDrugStock = new DrugStock();



    private DrugHistory theDrugHistory = new DrugHistory();



    private Item theItem = new Item();



    private Vector drugstock = new Vector();



    private Vector vDrug = new Vector();



    private Vector vDrugHistory = new Vector(); 



    private Employee theEmployee;



    private String office_id;



    private int rowDrug;    



    



    HosDialog theHosDialog;



    HosManage theHosManage;



    String p = "1" ;



    private UpdateStatus theUS;



    /** Creates new form PanelDrugStock */



    public PanelDrugStock(HosManage hm,HosDialog hd,UpdateStatus us) {



        theHosManage = hm;

        theUS = us;

        System.out.println(hm==null);



        System.out.println(hm.theHosControl==null);



        theHealthServiceControl = hm.theHosControl.theHealthServiceControl;



        theAllComboBoxControl = hm.theHosControl.theAllComboBoxControl;        



        theSetupPcuControl = hm.theHosControl.theSetupPcuControl;



        theSetupSubjectPcu = hm.theHosSubject.theSetupSubjectPcu;



        theHosDialog = hd;



        theSetupSubjectPcu.attachManageEpi(this);



        initComponents();        



        setLanguage();



        setEnabledGui(false);



        //setTableDrugStock(null);



        searchDrugStock();



        setTableItem(null);        



    }



    JFrame theFrame;



    public void setJFrame(JFrame jf){



        theFrame = jf;



    }



    public void setObject(PCUObject pcuobject)



    {   /** ไปจัดการต่อเรื่องของข้อมูลที่จะรับ ถ้าเมื่อไรไม่มีข้อมูล นั้นจะทำอย่างไรบนหน้า GUI */



        System.out.println("_henbe_______________________" + this.getClass().toString());



        if(pcuobject != null)



        {



            theEmployee = null;



            if(pcuobject.getEmployee() != null)



            {



               theEmployee = pcuobject.getEmployee();               



            }



            



            if(pcuobject.getVisit() != null)



            {             



                



            }



            



            if(pcuobject.getPatient() != null)



            {              



                



            }



            office_id = null;



            if(pcuobject.getSite() != null)



            {



                office_id = pcuobject.getSite().off_id ;



            }



        }



    } 



    



    /** This method is called from within the constructor to



     * initialize the form.



     * WARNING: Do NOT modify this code. The content of this method is



     * always regenerated by the Form Editor.



     */



    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupInOut = new javax.swing.ButtonGroup();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanelSearch = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDrugStock = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabelDrugStock = new javax.swing.JLabel();
        jPanel11 = new javax.swing.JPanel();
        jPanelStock = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabelDrugName = new javax.swing.JLabel();
        jLabelName = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        integerTextFieldQuantity = new com.pcu.utility.IntegerTextField();
        jLabelQuantity = new javax.swing.JLabel();
        jPanel7 = new javax.swing.JPanel();
        jRadioButtonIn = new javax.swing.JRadioButton();
        jRadioButtonOut = new javax.swing.JRadioButton();
        jPanelNotice = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaRemark = new javax.swing.JTextArea();
        jPanel10 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelAmount = new javax.swing.JLabel();
        integerTextFieldAmount = new com.pcu.utility.IntegerTextField();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableDrugHistory = new javax.swing.JTable();
        jPanelAddDrug = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableItem = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        jButtonSaveDrug = new javax.swing.JButton();
        jButtonDelItem = new javax.swing.JButton();
        jButtonAddItem = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jButtonAddDrug = new javax.swing.JButton();
        jButtonDelDrug = new javax.swing.JButton();
        jButtonSaveStock = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jPanelSearch.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanelSearch.setMinimumSize(new java.awt.Dimension(350, 115));
        jPanelSearch.setPreferredSize(new java.awt.Dimension(300, 115));
        jTableDrugStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableDrugStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableDrugStockKeyReleased(evt);
            }
        });
        jTableDrugStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableDrugStockMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableDrugStock);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPanelSearch.add(jScrollPane1, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setFont(defaultFont1);
        jLabelSearch.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel8.add(jLabelSearch, gridBagConstraints);

        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(200, 21));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(200, 21));
        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel8.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(100, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(100, 20));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(100, 20));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel8.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelSearch.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 0);
        add(jPanelSearch, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelDrugStock.setFont(new java.awt.Font("Dialog", 0, 18));
        jLabelDrugStock.setText("DrugStock");
        jPanel3.add(jLabelDrugStock, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel11.setLayout(new java.awt.CardLayout());

        jPanelStock.setLayout(new java.awt.GridBagLayout());

        jPanelStock.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "DrugStock", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setMinimumSize(new java.awt.Dimension(275, 20));
        jPanel5.setPreferredSize(new java.awt.Dimension(275, 23));
        jLabelDrugName.setFont(defaultFont1);
        jLabelDrugName.setText("DrugName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jLabelDrugName, gridBagConstraints);

        jLabelName.setMaximumSize(new java.awt.Dimension(200, 21));
        jLabelName.setMinimumSize(new java.awt.Dimension(200, 21));
        jLabelName.setPreferredSize(new java.awt.Dimension(200, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel5.add(jLabelName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        integerTextFieldQuantity.setColumns(10);
        integerTextFieldQuantity.setMaximumSize(new java.awt.Dimension(0, 0));
        integerTextFieldQuantity.setMinimumSize(new java.awt.Dimension(30, 21));
        integerTextFieldQuantity.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                integerTextFieldQuantityMouseReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel6.add(integerTextFieldQuantity, gridBagConstraints);

        jLabelQuantity.setFont(defaultFont1);
        jLabelQuantity.setText("Quantity");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        jPanel6.add(jLabelQuantity, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        buttonGroupInOut.add(jRadioButtonIn);
        jRadioButtonIn.setFont(defaultFont1);
        jRadioButtonIn.setSelected(true);
        jRadioButtonIn.setText("In");
        jRadioButtonIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jRadioButtonInMouseReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel7.add(jRadioButtonIn, gridBagConstraints);

        buttonGroupInOut.add(jRadioButtonOut);
        jRadioButtonOut.setFont(defaultFont1);
        jRadioButtonOut.setText("Out");
        jRadioButtonOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jRadioButtonOutMouseReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 5);
        jPanel7.add(jRadioButtonOut, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel7, gridBagConstraints);

        jPanelNotice.setLayout(new java.awt.GridBagLayout());

        jPanelNotice.setBorder(javax.swing.BorderFactory.createTitledBorder("Remark"));
        jPanelNotice.setMinimumSize(new java.awt.Dimension(41, 35));
        jTextAreaRemark.setMinimumSize(new java.awt.Dimension(150, 25));
        jTextAreaRemark.setPreferredSize(new java.awt.Dimension(150, 25));
        jScrollPane2.setViewportView(jTextAreaRemark);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelNotice.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        jPanel12.add(jPanelNotice, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(jPanel10, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(89, 26));
        jPanel1.setPreferredSize(new java.awt.Dimension(180, 26));
        jLabelAmount.setFont(defaultFont1);
        jLabelAmount.setText("Amount");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabelAmount, gridBagConstraints);

        integerTextFieldAmount.setColumns(10);
        integerTextFieldAmount.setEnabled(false);
        integerTextFieldAmount.setMaximumSize(new java.awt.Dimension(0, 0));
        integerTextFieldAmount.setMinimumSize(new java.awt.Dimension(30, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel1.add(integerTextFieldAmount, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 10, 10);
        jPanelStock.add(jPanel12, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jTableDrugHistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableDrugHistory);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel13.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 10);
        jPanelStock.add(jPanel13, gridBagConstraints);

        jPanel11.add(jPanelStock, "card2");

        jPanelAddDrug.setLayout(new java.awt.GridBagLayout());

        jPanelAddDrug.setBorder(javax.swing.BorderFactory.createTitledBorder("AddDrug"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTableItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelAddDrug.add(jPanel2, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jButtonSaveDrug.setText("Save");
        jButtonSaveDrug.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSaveDrug.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSaveDrug.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSaveDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveDrugActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        jPanel9.add(jButtonSaveDrug, gridBagConstraints);

        jButtonDelItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelItem.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelItem.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelItemActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel9.add(jButtonDelItem, gridBagConstraints);

        jButtonAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddItem.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddItem.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel9.add(jButtonAddItem, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 1, 5);
        jPanelAddDrug.add(jPanel9, gridBagConstraints);

        jPanel11.add(jPanelAddDrug, "card3");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 5, 0, 11);
        add(jPanel11, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButtonAddDrug.setFont(defaultFont1);
        jButtonAddDrug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddDrug.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddDrug.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddDrug.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddDrug.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddDrugActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel4.add(jButtonAddDrug, gridBagConstraints);

        jButtonDelDrug.setFont(defaultFont1);
        jButtonDelDrug.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelDrug.setActionCommand("Delete");
        jButtonDelDrug.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelDrug.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelDrug.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelDrug.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelDrugActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 0, 5);
        jPanel4.add(jButtonDelDrug, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 0);
        add(jPanel4, gridBagConstraints);

        jButtonSaveStock.setFont(defaultFont1);
        jButtonSaveStock.setText("Save");
        jButtonSaveStock.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSaveStock.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSaveStock.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSaveStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveStockActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 11, 11);
        add(jButtonSaveStock, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents







    private void jTableDrugStockKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableDrugStockKeyReleased



// TODO add your handling code here:



        if(evt.getKeyCode()==evt.VK_UP



        || evt.getKeyCode()==evt.VK_DOWN){



            this.jPanelStock.setVisible(true);



            selectDruginStock(-2);



            setEnabledGui(true);



            this.jButtonSaveStock.setEnabled(false);



        }



    }//GEN-LAST:event_jTableDrugStockKeyReleased







    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed



// TODO add your handling code here:



    }//GEN-LAST:event_jTextFieldSearchActionPerformed







    private void jTextFieldSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyReleased



// TODO add your handling code here:



        searchDrugStock();



    }//GEN-LAST:event_jTextFieldSearchKeyReleased







    private void integerTextFieldQuantityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_integerTextFieldQuantityMouseReleased



        // TODO add your handling code here:



         this.jButtonSaveStock.setEnabled(true);



    }//GEN-LAST:event_integerTextFieldQuantityMouseReleased







    private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed



        // TODO add your handling code here:



        drugstock = new Vector();



        setTableItem(null);



        showItem();



    }//GEN-LAST:event_jButtonAddItemActionPerformed







    private void jButtonDelDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelDrugActionPerformed



        // TODO add your handling code here:



        deleteDrugStock();



    }//GEN-LAST:event_jButtonDelDrugActionPerformed







    private void jRadioButtonOutMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonOutMouseReleased



        // TODO add your handling code here:



        p = "0";                



        this.jButtonSaveStock.setEnabled(true);



    }//GEN-LAST:event_jRadioButtonOutMouseReleased







    private void jRadioButtonInMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButtonInMouseReleased



        // TODO add your handling code here:



        p = "1";     



        this.jButtonSaveStock.setEnabled(true);



    }//GEN-LAST:event_jRadioButtonInMouseReleased







    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed



        // TODO add your handling code here:



        searchDrugStock();



    }//GEN-LAST:event_jButtonSearchActionPerformed







    private void jButtonDelItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelItemActionPerformed



        // TODO add your handling code here:



        int row = this.jTableItem.getSelectedRow();



        if(row != -1)



        {



            this.deleteItem(row);



        }



    }//GEN-LAST:event_jButtonDelItemActionPerformed







    private void jButtonSaveDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveDrugActionPerformed



        // TODO add your handling code here:



        saveItemtoDrugStock();



        



    }//GEN-LAST:event_jButtonSaveDrugActionPerformed







    private void jButtonAddDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddDrugActionPerformed



        // TODO add your handling code here:



        this.jPanelAddDrug.setVisible(true);



        this.jPanelStock.setVisible(false);



        //drugstock = new Vector();



        //setTableItem(null);



        //showItem();



    }//GEN-LAST:event_jButtonAddDrugActionPerformed







    private void jButtonSaveStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveStockActionPerformed



        // TODO add your handling code here:



        sumStock();



    }//GEN-LAST:event_jButtonSaveStockActionPerformed







    private void jTableDrugStockMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDrugStockMouseReleased



        // TODO add your handling code here:



        this.jPanelStock.setVisible(true);



        selectDruginStock(-2);



        setEnabledGui(true);



        this.jButtonSaveStock.setEnabled(false);



    }//GEN-LAST:event_jTableDrugStockMouseReleased



    



  



    private void setLanguage() 



    {



        /*jLabel*/        



        jLabelDrugStock.setText(GutilPCU.getTextBundle(jLabelDrugStock.getText()));



        jLabelSearch.setText(GutilPCU.getTextBundle(jLabelSearch.getText()));



        jLabelDrugName.setText(GutilPCU.getTextBundle(jLabelDrugName.getText()));



        jLabelAmount.setText(GutilPCU.getTextBundle(jLabelAmount.getText()));



        jLabelQuantity.setText(GutilPCU.getTextBundle(jLabelQuantity.getText()));



        



        /*jButton*/



        jButtonSearch.setText(GutilPCU.getTextBundle(jButtonSearch.getText()));



        jButtonAddDrug.setText(GutilPCU.getTextBundle(jButtonAddDrug.getText()));



        jButtonDelDrug.setText(GutilPCU.getTextBundle(jButtonDelDrug.getText()));



        jButtonSaveDrug.setText(GutilPCU.getTextBundle(jButtonSaveDrug.getText()));



        jButtonSaveStock.setText(GutilPCU.getTextBundle(jButtonSaveStock.getText()));        



        jRadioButtonIn.setText(GutilPCU.getTextBundle(jRadioButtonIn.getText()));



        jRadioButtonOut.setText(GutilPCU.getTextBundle(jRadioButtonOut.getText()));



        jButtonDelItem.setText(GutilPCU.getTextBundle(jButtonDelItem.getText()));



        jButtonAddItem.setText(GutilPCU.getTextBundle(jButtonAddItem.getText()));        



        /*Title*/        



        GutilPCU.JPanelLabler(jPanelSearch);



        GutilPCU.JPanelLabler(jPanelStock);



        GutilPCU.JPanelLabler(jPanelNotice);



        GutilPCU.JPanelLabler(jPanelAddDrug);



    }  



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupInOut;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.IntegerTextField integerTextFieldAmount;
    private com.pcu.utility.IntegerTextField integerTextFieldQuantity;
    private javax.swing.JButton jButtonAddDrug;
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonDelDrug;
    private javax.swing.JButton jButtonDelItem;
    private javax.swing.JButton jButtonSaveDrug;
    private javax.swing.JButton jButtonSaveStock;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelAmount;
    private javax.swing.JLabel jLabelDrugName;
    private javax.swing.JLabel jLabelDrugStock;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelQuantity;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelAddDrug;
    private javax.swing.JPanel jPanelNotice;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelStock;
    private javax.swing.JRadioButton jRadioButtonIn;
    private javax.swing.JRadioButton jRadioButtonOut;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTableDrugHistory;
    private javax.swing.JTable jTableDrugStock;
    private javax.swing.JTable jTableItem;
    private javax.swing.JTextArea jTextAreaRemark;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables



    



    private void setEnabledGui(boolean b)



    {



        this.jButtonDelDrug.setEnabled(b);



        this.jRadioButtonIn.setEnabled(b);



        this.jRadioButtonOut.setEnabled(b);



        this.integerTextFieldQuantity.setEnabled(b);



        this.jTextAreaRemark.setEnabled(b);



        this.jButtonSaveStock.setEnabled(b);



        



    }



    



    private void clearGui()



    {



        this.jLabelName.setText("");



        this.integerTextFieldAmount.setText("");



        this.jRadioButtonIn.setSelected(true);



        p ="1";



        this.integerTextFieldQuantity.setText("");



        this.jTextAreaRemark.setText("");



        this.jButtonSaveStock.setEnabled(false);



    }       



    DialogSetupSearchPcu theDialogSetupSearchPcu;



     private void showItem()



    {



        if(theDialogSetupSearchPcu==null)



            theDialogSetupSearchPcu = new DialogSetupSearchPcu(theFrame, true,theHosManage);            



        theDialogSetupSearchPcu.showSearch(6);



    }  



     



     private void searchDrugStock()



     {



         String search = this.jTextFieldSearch.getText();         



         vDrug = this.theHealthServiceControl.listDrugStock(search);



         setTableDrugStock(vDrug);



         setEnabledGui(false);



     }



    



     private void setTableDrugStock(Vector drug)



     {



           /***SetTable***/          



           String[] col = {GutilPCU.getTextBundle("Name"),                        



                          GutilPCU.getTextBundle("Quantity")};



           DrugStock dst = new DrugStock();          



           Item it = new Item();



           TaBleModel tm ;



           



           if(drug != null)



           {   



                tm = new TaBleModel(col,drug.size());



                for(int i=0, size=drug.size(); i<size; i++)



                {                      



                    dst = (DrugStock)drug.get(i);                    



                    theItem = this.theSetupPcuControl.listItemByPk(dst.item_id);



                    tm.setValueAt(theItem.common_name,i,0); 



                    tm.setValueAt(dst.amount,i,1);              



                }



           }



           else



           {



               tm= new TaBleModel(col,0); 



           }



                this.jTableDrugStock.setModel(tm);  



                /***SetTableDefault***/



                jTableDrugStock.getColumnModel().getColumn(0).setPreferredWidth(200);     



                jTableDrugStock.getColumnModel().getColumn(1).setPreferredWidth(30);                 



     }



     



     private void selectDruginStock(int row)



     {



         if(row==-2)



         {/*user เป็นผู้เลือกเอง*/



            this.rowDrug = this.jTableDrugStock.getSelectedRow();            



         }



         else



         {/*user บันทึก จะ select record ที่เพิ่งเพิ่ม*/



            this.rowDrug = row;            



         }



         this.theDrugStock = (DrugStock)this.vDrug.get(rowDrug);



         theItem = this.theSetupPcuControl.listItemByPk(this.theDrugStock.item_id);



         this.jLabelName.setText(theItem.common_name);



         this.integerTextFieldAmount.setText(this.theDrugStock.amount);



         searchHistoryStock();



         rowDrug = jTableDrugStock.getSelectedRow();



     }



         



     private void deleteItem(int row)



     {



          DrugStock  ds = (DrugStock)this.drugstock.remove(row);



          setTableItem(drugstock);



     }



     



     private void deleteDrugStock()



     {



        if(this.theDrugStock.amount.equals("0"))



        {



             this.theDrugStock.staff_cancel = this.theEmployee.getObjectId();



             this.theDrugStock.cancel_date_time = Gutil.getTextCurrentDateTime(this.theAllComboBoxControl.theConnectionInf);



             this.theDrugStock.active = "0";



             this.theHealthServiceControl.saveItemtoStock(theDrugStock);



             searchDrugStock();



             setTableDrugStock(vDrug);



             setEnabledGui(false);



             setTableDrugHistory(null);



             clearGui();



             



        }



        else

            theUS.setStatus(GutilPCU.getTextBundle("WarningCheckDrugInStock"),UpdateStatus.WARNING);



     }



     



     private void saveItemtoDrugStock()



     {        



        if(drugstock != null)



        {



            String search = "";                



            vDrug = this.theHealthServiceControl.listDrugStock(search);



            boolean drug = false;



            if(vDrug != null)



            {                



                DrugStock ds1 = new DrugStock();



                DrugStock ds2 = new DrugStock();              



                



                for(int i=0, size=this.vDrug.size(); i<size; i++)



                {



                    ds1 = (DrugStock)vDrug.get(i);



                    for(int y=0, size2=this.drugstock.size(); y<size2; y++)



                    {



                        ds2 = (DrugStock)drugstock.get(y);



                        if(ds1.item_id.equals(ds2.item_id))



                        {                           

                            theUS.setStatus(GutilPCU.getTextBundle("Have drug name")+

                                 (" ")+ds2.item_common_name+(" ")+GutilPCU.getTextBundle("in stock")

                                 ,UpdateStatus.WARNING);



                            drug = true;



                            



                        }



                    }



                }



                if (!drug)                



                    saveSubItemtoStock();



            }



            else



            {



                if (!drug)                



                    saveSubItemtoStock();                



            }   



        }    



     }        



     



     private void saveSubItemtoStock()



     {



            DrugStock dst = new DrugStock();           



            System.out.println("บันทึกรายการยา");



            for(int i=0, size=this.drugstock.size(); i<size; i++)



            {                



                dst = (DrugStock)drugstock.get(i);



                dst.amount = "0";



                dst.office_id = office_id;



                dst.staff_record = theEmployee.getObjectId();



                dst.record_date_time = Gutil.getTextCurrentDateTime(this.theAllComboBoxControl.theConnectionInf);



                dst.active = "1";



                System.out.println(" Item name = "+dst.item_common_name+", Item ID = "



                        +dst.item_id+", Date = " +dst.record_date_time);



                this.theHealthServiceControl.saveItemtoStock(dst); 



            }



            setTableItem(null);



            searchDrugStock();



            this.jPanelStock.setVisible(true);



            this.jPanelAddDrug.setVisible(false);



     }



     



     private void setTableItem(Vector drug)



     {



          /***SetTable***/



          String[] col = {GutilPCU.getTextBundle("OrderName")};



          DrugStock ds = new DrugStock();



          TaBleModel tm ;



          if (drug != null)



          { tm = new TaBleModel(col,drug.size());



            for(int i=0 ;i<drug.size(); i++)



            {  



                ds = (DrugStock)drug.get(i);



                String item_id = ds.item_id;                



                theItem = this.theSetupPcuControl.listItemByPk(item_id);



                tm.setValueAt(theItem.common_name,i,0);                                  



            }



             jTableItem.setModel(tm);    



              



          }



          else



          {          



              tm= new TaBleModel(col,0);    



              this.jTableItem.setModel(tm); 



          }



        



          /***SetTableDefault***/



          jTableItem.getColumnModel().getColumn(0).setPreferredWidth(200);                 



     }



     



     /**



      * คำนวนจำนวนยา



      * @auther jao



      */



     private void sumStock()



     {



         if(this.integerTextFieldQuantity.getText().equals(""))



            {                

                theUS.setStatus(GutilPCU.getTextBundle("WarningCheckNull"),UpdateStatus.WARNING);          



            }



            else



            {           



                int quan = Integer.parseInt(this.integerTextFieldQuantity.getText());



                int amont = Integer.parseInt(this.integerTextFieldAmount.getText());



                int x ;



                String sum;                



                if(p.equals("1"))



                {



                    x = quan + amont ;                    



                    sum = String.valueOf(x);



                    this.integerTextFieldAmount.setText(sum);



                    saveHistory();                    



                }                



                else 



                {



                    x = amont - quan ;



                    if(x < 0)

                        theUS.setStatus(GutilPCU.getTextBundle("WarningCheckQualityOfDrug"),UpdateStatus.WARNING);

                    else 



                    {



                        sum = String.valueOf(x);



                        this.integerTextFieldAmount.setText(sum);



                        saveHistory();



                    }



                }



            }



    }



    



    public void saveHistory()



    {        



        this.theDrugHistory.drug_id = this.theDrugStock.getObjectId();



        this.theDrugHistory.tranfer = p;



        this.theDrugHistory.quantity = this.integerTextFieldQuantity.getText();



        this.theDrugHistory.note = this.jTextAreaRemark.getText();



        this.theDrugHistory.staff_record = this.theEmployee.getObjectId();



        this.theDrugHistory.record_date_time = Gutil.getTextCurrentDateTime(this.theAllComboBoxControl.theConnectionInf);        



        this.theHealthServiceControl.saveDrughistory(this.theDrugHistory);



        



        this.theDrugStock.amount = this.integerTextFieldAmount.getText();



        this.theDrugStock.staff_modify = this.theEmployee.getObjectId();



        this.theDrugStock.modify_date_time = Gutil.getTextCurrentDateTime(this.theAllComboBoxControl.theConnectionInf);         



        this.theHealthServiceControl.saveItemtoStock(this.theDrugStock);



        setTableDrugStock(vDrug);



        int lastRow = this.vDrug.size()-1;



        this.jTableDrugStock.setRowSelectionInterval(rowDrug,rowDrug);



        selectDruginStock(rowDrug);



        setEnabledGui(false);



        clearGui();



    }



    



    private void searchHistoryStock()



    {



        String search = this.theDrugStock.getObjectId();



        vDrugHistory = this.theHealthServiceControl.listDrugStockHistory(search);



        setTableDrugHistory(vDrugHistory);



    }



    



    private void setTableDrugHistory(Vector vDrugHistory)



    {        



            String tranfer = "";



           /***SetTable***/          



           String[] col = {GutilPCU.getTextBundle("Tranfer"),                        



                          GutilPCU.getTextBundle("Quantity"),



                          GutilPCU.getTextBundle("Date"),



                          GutilPCU.getTextBundle("Remark")};



           DrugHistory dhi = new DrugHistory();          



           Item it = new Item();



           TaBleModel tm ;



           



           if(vDrugHistory != null)



           {   



                tm = new TaBleModel(col,vDrugHistory.size());



                for(int i=0, size=vDrugHistory.size(); i<size; i++)



                {                      



                    dhi = (DrugHistory)vDrugHistory.get(i);



                    if(dhi.tranfer.equals("1"))



                        tranfer = GutilPCU.getTextBundle("In");



                    else



                        tranfer = GutilPCU.getTextBundle("Out");



                    tm.setValueAt(tranfer,i,0); 



                    tm.setValueAt(dhi.quantity,i,1);



                    tm.setValueAt(GutilPCU.changDateToString(dhi.record_date_time,false),i,2);



                    tm.setValueAt(dhi.note,i,3);



                    



                }



           }



           else



           {



               tm= new TaBleModel(col,0); 



           }



                this.jTableDrugHistory.setModel(tm);  



                /***SetTableDefault***/



                jTableDrugHistory.getColumnModel().getColumn(0).setPreferredWidth(70);     



                jTableDrugHistory.getColumnModel().getColumn(1).setPreferredWidth(20); 



                jTableDrugHistory.getColumnModel().getColumn(2).setPreferredWidth(60);



                jTableDrugHistory.getColumnModel().getColumn(3).setPreferredWidth(150);



    }



    



    public void notifylistEpiSetGroup(EpiSetGroup epiSetGroup) {



        



    }







    public void notifylistItemByGroup(Item item,boolean flag) {



        if(!flag==false)



        {



            DrugStock ds = new DrugStock();



            ds.item_id = item.getObjectId();



            ds.item_common_name = item.common_name;



            if(ds != null)



            {



                if(drugstock == null)



                    drugstock = new Vector();



                if(drugstock.size() == 0)



                {



                    drugstock.add(ds);                



                    setTableItem(drugstock); 



                }



                else



                {



                    int same =0;



                    int rowsame =0;



                    for(int i = 0 ; i< drugstock.size() ; i++)



                    {   



                        if(((DrugStock)drugstock.get(i)).item_id.equals(item.getObjectId()))



                        { 



                            same = 1;



                            rowsame = i ;



                        }



                    }



                    if(same ==0)



                    {   



                        setTableItem(null);



                        drugstock.add(ds);                    



                        setTableItem(drugstock);



                    }







                }   



            }



        }



    }



}



