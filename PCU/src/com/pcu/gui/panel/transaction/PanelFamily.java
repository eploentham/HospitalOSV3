/*
 * PanelPerson.java
 *
 * Created on 8 กันยายน 2548, 12:11 น.
 */

package com.pcu.gui.panel.transaction;

import com.hosv3.control.PatientControl;
import com.pcu.control.AllComboBoxControl;
import com.pcu.control.HomeControl;
import com.pcu.control.HosManage;
import com.pcu.control.HospitalosControlInf;
import com.pcu.control.PCUObject;
import com.pcu.subject.HomePatientSubject;
import javax.swing.*;/*ใช้ใน main*/
import java.awt.*;
import java.util.*;
import com.hospital_os.utility.*;
import com.hospital_os.object.*;

import com.hosv3.control.LookupControl;
import com.hosv3.utility.connection.UpdateStatus;
import com.hosv3.object.*;
import com.hosv3.control.lookup.*;

import com.pcu.utility.*;
import com.pcu.object.*;
import com.pcu.object.Home;
import com.pcu.utility.DateUtil;
/**
 *
 * @author  jao
 * @dpercated henbe unused
 */
public class PanelFamily extends javax.swing.JPanel {

   private boolean is_panel_mode;
   private Patient thePatient;
   private Family theFamily;
   private Home theHome;
   private AllComboBoxControl theAllComboBoxControl;
   private PatientControl thePatientControl;
   private HospitalosControlInf theHosInf;
   private LookupControl theLookupControl;   
   private HomeControl theHomeControl;
   
   HosManage theHM;
   JDialog frm1;
   String changwat;
   PCUObject thePCUObject;
   
   com.hosv3.utility.connection.UpdateStatus theUS;
   String age;

    private Vector vret;
    /**ส่วนหน้าจอบ้าน**/
    public PanelFamily(HosManage hm ,Home home,Family family)
    {
        initComponents(); 
        setControl(hm);
        is_panel_mode = false;
        setFamily(family,home);
       
    }
    public void setControl(HosManage hm)
    {
        theHM = hm;
        setControl(hm.theHC.thePatientControl,hm.theHosControl.theUS
                ,hm.theHosControl.theLookupControl,hm.thePO,hm.theHosControl.theAllComboBoxControl
                ,hm.theHosControl.theHomeControl
                ,hm.theHosSubject.theHomePatientSubject,hm.theHosInf);
    }
    public void setControl(PatientControl pc,UpdateStatus us
            ,LookupControl lc,PCUObject po,AllComboBoxControl ac,HomeControl hc
            ,HomePatientSubject hs,HospitalosControlInf hinf)
    {
        theAllComboBoxControl = ac;
        thePatientControl = pc;
        theHomeControl = hc;
        theHosInf = hinf;
        theLookupControl =  lc;
        thePCUObject = po;
        theUS = us;
        initDatas();
        setDefaultComboBox();
        setLanguage(); 
        
    }
    
    public void initDatas() 
    {                 
        jComboBoxPrename.setControl(new PrefixLookup(theLookupControl),true);        
        jComboBoxOccup.setControl(null,new OccupationLookup(theLookupControl),new Occupation2());
        Vector v = theAllComboBoxControl.listAddressCGW();
        ComboboxModel.initComboBox(jComboBoxBlood,theAllComboBoxControl.listBlood());
        ComboboxModel.initComboBox(jComboBoxGender,theAllComboBoxControl.listSex());        
        ComboboxModel.initComboBox(jComboBoxMarriage,theAllComboBoxControl.listMarriage());
        ComboboxModel.initComboBox(jComboBoxRace,theAllComboBoxControl.listRace());
        ComboboxModel.initComboBox(jComboBoxNation,theAllComboBoxControl.listNation());
        ComboboxModel.initComboBox(jComboBoxReligion,theAllComboBoxControl.listReligion());
        ComboboxModel.initComboBox(jComboBoxEducate,theAllComboBoxControl.listEducate());
        ComboboxModel.initComboBox(jComboBoxTypeArea,theAllComboBoxControl.listTypeArea());
        R53PersonForeignLookup lup = new R53PersonForeignLookup();
        ComboboxModel.initComboBox(this.jComboBoxLabor,lup.listData("%"));
 
    }
    public void setObject(PCUObject pcuobject)
    {   
        System.out.println("_henbe_______________________" + this.getClass().toString());
        thePCUObject = pcuobject;
        setFamily(pcuobject.getFamily(),pcuobject.getHome());
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel10 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxPrename = new com.hosv3.gui.component.HosComboBox();
        jLabelFname = new javax.swing.JLabel();
        jTextFieldFname = new javax.swing.JTextField();
        jTextFieldLname = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabelPid = new javax.swing.JLabel();
        pidPanel = new com.hosv3.gui.component.PIDPanel();
        jLabelHCIS = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelGender = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox();
        jCheckBoxTrueBirthday = new javax.swing.JCheckBox();
        dateComboBoxBirthDay = new com.hospital_os.utility.DateComboBox();
        jLabelAge = new javax.swing.JLabel();
        jTextFieldAge = new com.hospital_os.utility.IntegerTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jComboBoxMarriage = new javax.swing.JComboBox();
        jLabelBlood = new javax.swing.JLabel();
        jComboBoxBlood = new javax.swing.JComboBox();
        jComboBoxOccup = new com.hosv3.gui.component.HosComboBox();
        jPanel5 = new javax.swing.JPanel();
        jComboBoxRace = new javax.swing.JComboBox();
        jLabelNation = new javax.swing.JLabel();
        jComboBoxNation = new javax.swing.JComboBox();
        jLabelRace = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jComboBoxReligion = new javax.swing.JComboBox();
        jLabelEducate = new javax.swing.JLabel();
        jComboBoxEducate = new javax.swing.JComboBox();
        jPanel7 = new javax.swing.JPanel();
        jTextFieldFatherFname = new javax.swing.JTextField();
        jTextFieldFatherLname = new javax.swing.JTextField();
        jTextFieldMotherFname = new javax.swing.JTextField();
        jTextFieldMotherLname = new javax.swing.JTextField();
        jTextFieldCoupleFname = new javax.swing.JTextField();
        jTextFieldCoupleLname = new javax.swing.JTextField();
        jPanel16 = new javax.swing.JPanel();
        jComboBoxTypeArea = new javax.swing.JComboBox();
        jPanel35 = new javax.swing.JPanel();
        jRadioButtonTenant = new javax.swing.JRadioButton();
        jRadioButtonOwner = new javax.swing.JRadioButton();
        jLabelFamilyNumber = new javax.swing.JLabel();
        integerTextFieldFamilyNumber = new com.pcu.utility.IntegerTextField();
        jLabelFstatus = new javax.swing.JLabel();
        jLabelFstatus3 = new javax.swing.JLabel();
        dateComboBoxMoveIn = new com.hospital_os.utility.DateComboBox();
        jLabelMarriage = new javax.swing.JLabel();
        jLabelOccup = new javax.swing.JLabel();
        jLabelReligion = new javax.swing.JLabel();
        jLabelFatherName = new javax.swing.JLabel();
        jLabelMotherName = new javax.swing.JLabel();
        jLabelCoupleName = new javax.swing.JLabel();
        jLabelLabor = new javax.swing.JLabel();
        jComboBoxLabor = new javax.swing.JComboBox();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("ข้อมูลทั่วไป"));
        jPanel10.setMinimumSize(new java.awt.Dimension(430, 413));
        jPanel10.setPreferredSize(new java.awt.Dimension(430, 413));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jComboBoxPrename.setFont(defaultFont1);
        jComboBoxPrename.setMinimumSize(new java.awt.Dimension(80, 21));
        jComboBoxPrename.setPreferredSize(new java.awt.Dimension(80, 21));
        jComboBoxPrename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPrenameActionPerformed(evt);
            }
        });
        jComboBoxPrename.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jComboBoxPrenameFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jComboBoxPrename, gridBagConstraints);

        jLabelFname.setFont(defaultFont1);
        jLabelFname.setText("ชื่อ-สกุล");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabelFname, gridBagConstraints);

        jTextFieldFname.setFont(defaultFont1);
        jTextFieldFname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldFname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFnameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextFieldFname, gridBagConstraints);

        jTextFieldLname.setFont(defaultFont1);
        jTextFieldLname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldLname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLnameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextFieldLname, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 0, 10);
        jPanel10.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelPid.setFont(defaultFont1);
        jLabelPid.setText("เลขบัตรประชาชน");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 0);
        jPanel2.add(jLabelPid, gridBagConstraints);

        pidPanel.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 1, 0);
        jPanel2.add(pidPanel, gridBagConstraints);

        jLabelHCIS.setFont(defaultFont1);
        jLabelHCIS.setText("HCIS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabelHCIS, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 12);
        jPanel10.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelGender.setFont(defaultFont1);
        jLabelGender.setText("Sex");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jLabelGender, gridBagConstraints);

        jComboBoxGender.setFont(defaultFont1);
        jComboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGenderActionPerformed(evt);
            }
        });
        jComboBoxGender.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jComboBoxGenderFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jComboBoxGender, gridBagConstraints);

        jCheckBoxTrueBirthday.setFont(defaultFont1);
        jCheckBoxTrueBirthday.setText("PetBirthDay");
        jCheckBoxTrueBirthday.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxTrueBirthdayActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jCheckBoxTrueBirthday, gridBagConstraints);

        dateComboBoxBirthDay.setFont(defaultFont1);
        dateComboBoxBirthDay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateComboBoxBirthDayMouseClicked(evt);
            }
        });
        dateComboBoxBirthDay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxBirthDayActionPerformed(evt);
            }
        });
        dateComboBoxBirthDay.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateComboBoxBirthDayFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(dateComboBoxBirthDay, gridBagConstraints);

        jLabelAge.setFont(defaultFont1);
        jLabelAge.setText("Age");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jLabelAge, gridBagConstraints);

        jTextFieldAge.setColumns(2);
        jTextFieldAge.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldAge.setFont(defaultFont1);
        jTextFieldAge.setMinimumSize(new java.awt.Dimension(30, 21));
        jTextFieldAge.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldAgeFocusLost(evt);
            }
        });
        jTextFieldAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldAgeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jTextFieldAge, gridBagConstraints);

        jLabel3.setFont(defaultFont1);
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel3.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 0, 12);
        jPanel10.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jComboBoxMarriage.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jComboBoxMarriage, gridBagConstraints);

        jLabelBlood.setFont(defaultFont1);
        jLabelBlood.setText("BloodGroup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel4.add(jLabelBlood, gridBagConstraints);

        jComboBoxBlood.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jComboBoxBlood, gridBagConstraints);

        jComboBoxOccup.setFont(defaultFont1);
        jComboBoxOccup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxOccupActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel4.add(jComboBoxOccup, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 12);
        jPanel10.add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jComboBoxRace.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jComboBoxRace, gridBagConstraints);

        jLabelNation.setFont(defaultFont1);
        jLabelNation.setText("เชื้อชาติ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabelNation, gridBagConstraints);

        jComboBoxNation.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jComboBoxNation, gridBagConstraints);

        jLabelRace.setFont(defaultFont1);
        jLabelRace.setText("สัญชาติ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jLabelRace, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 12);
        jPanel10.add(jPanel5, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jComboBoxReligion.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jComboBoxReligion, gridBagConstraints);

        jLabelEducate.setFont(defaultFont1);
        jLabelEducate.setText("การศึกษา");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel6.add(jLabelEducate, gridBagConstraints);

        jComboBoxEducate.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel6.add(jComboBoxEducate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 12);
        jPanel10.add(jPanel6, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jTextFieldFatherFname.setFont(defaultFont1);
        jTextFieldFatherFname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldFatherFname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldFatherFname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldFatherFnameCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jTextFieldFatherFname, gridBagConstraints);

        jTextFieldFatherLname.setFont(defaultFont1);
        jTextFieldFatherLname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldFatherLname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldFatherLname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldFatherLnameCaretUpdate(evt);
            }
        });
        jTextFieldFatherLname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldFatherLnameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel7.add(jTextFieldFatherLname, gridBagConstraints);

        jTextFieldMotherFname.setFont(defaultFont1);
        jTextFieldMotherFname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldMotherFname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldMotherFname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldMotherFnameCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel7.add(jTextFieldMotherFname, gridBagConstraints);

        jTextFieldMotherLname.setFont(defaultFont1);
        jTextFieldMotherLname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldMotherLname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldMotherLname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldMotherLnameCaretUpdate(evt);
            }
        });
        jTextFieldMotherLname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldMotherLnameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel7.add(jTextFieldMotherLname, gridBagConstraints);

        jTextFieldCoupleFname.setFont(defaultFont1);
        jTextFieldCoupleFname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldCoupleFname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldCoupleFname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldCoupleFnameCaretUpdate(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel7.add(jTextFieldCoupleFname, gridBagConstraints);

        jTextFieldCoupleLname.setFont(defaultFont1);
        jTextFieldCoupleLname.setMinimumSize(new java.awt.Dimension(88, 21));
        jTextFieldCoupleLname.setPreferredSize(new java.awt.Dimension(88, 21));
        jTextFieldCoupleLname.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldCoupleLnameCaretUpdate(evt);
            }
        });
        jTextFieldCoupleLname.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldCoupleLnameFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel7.add(jTextFieldCoupleLname, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 12);
        jPanel10.add(jPanel7, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        jComboBoxTypeArea.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel16.add(jComboBoxTypeArea, gridBagConstraints);

        jPanel35.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButtonTenant);
        jRadioButtonTenant.setFont(defaultFont1);
        jRadioButtonTenant.setSelected(true);
        jRadioButtonTenant.setText("ผู้อาศัย");
        jRadioButtonTenant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonTenantActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel35.add(jRadioButtonTenant, gridBagConstraints);

        buttonGroup1.add(jRadioButtonOwner);
        jRadioButtonOwner.setFont(defaultFont1);
        jRadioButtonOwner.setText("OwnerHome");
        jRadioButtonOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOwnerActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel35.add(jRadioButtonOwner, gridBagConstraints);

        jLabelFamilyNumber.setFont(defaultFont1);
        jLabelFamilyNumber.setText("ครอบครัวที่");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanel35.add(jLabelFamilyNumber, gridBagConstraints);

        integerTextFieldFamilyNumber.setColumns(2);
        integerTextFieldFamilyNumber.setFont(defaultFont1);
        integerTextFieldFamilyNumber.setMinimumSize(new java.awt.Dimension(30, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel35.add(integerTextFieldFamilyNumber, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel16.add(jPanel35, gridBagConstraints);

        jLabelFstatus.setFont(defaultFont1);
        jLabelFstatus.setText("ใน/นอกเขต");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel16.add(jLabelFstatus, gridBagConstraints);

        jLabelFstatus3.setFont(defaultFont1);
        jLabelFstatus3.setText("วันที่ย้ายเข้า");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel16.add(jLabelFstatus3, gridBagConstraints);

        dateComboBoxMoveIn.setFont(defaultFont1);
        dateComboBoxMoveIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dateComboBoxMoveInMouseClicked(evt);
            }
        });
        dateComboBoxMoveIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxMoveInActionPerformed(evt);
            }
        });
        dateComboBoxMoveIn.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateComboBoxMoveInFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel16.add(dateComboBoxMoveIn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 12);
        jPanel10.add(jPanel16, gridBagConstraints);

        jLabelMarriage.setFont(defaultFont1);
        jLabelMarriage.setText("สถานภาพ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 12, 0, 0);
        jPanel10.add(jLabelMarriage, gridBagConstraints);

        jLabelOccup.setFont(defaultFont1);
        jLabelOccup.setText("อาชีพ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
        jPanel10.add(jLabelOccup, gridBagConstraints);

        jLabelReligion.setFont(defaultFont1);
        jLabelReligion.setText("ศาสนา");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
        jPanel10.add(jLabelReligion, gridBagConstraints);

        jLabelFatherName.setFont(defaultFont1);
        jLabelFatherName.setText("FatherName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel10.add(jLabelFatherName, gridBagConstraints);

        jLabelMotherName.setFont(defaultFont1);
        jLabelMotherName.setText("MotherName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel10.add(jLabelMotherName, gridBagConstraints);

        jLabelCoupleName.setFont(defaultFont1);
        jLabelCoupleName.setText("ชื่อคู่สมรส");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 12, 0, 0);
        jPanel10.add(jLabelCoupleName, gridBagConstraints);

        jLabelLabor.setText("ประเภทคนต่างด้าว");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 13;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 12, 0, 5);
        jPanel10.add(jLabelLabor, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 14;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 13, 0, 12);
        jPanel10.add(jComboBoxLabor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        add(jPanel10, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif"))); // NOI18N
        jButtonSave.setText("Save");
        jButtonSave.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 26));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 26));
        jButtonSave.setPreferredSize(new java.awt.Dimension(80, 26));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        add(jButtonSave, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldAgeKeyReleased
        jTextFieldAgeFocusLost(null);
    }//GEN-LAST:event_jTextFieldAgeKeyReleased

    private void jComboBoxPrenameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxPrenameFocusLost
// TODO add your handling code here:
        jComboBoxPrenameActionPerformed(null);
    }//GEN-LAST:event_jComboBoxPrenameFocusLost

    /**
     *@deprecated henbe gui ไม่มีสิทธิเรียก subject notify
     * subject notify ต้องเรียกได้จาก control เท่านั้น
     */
    private void jComboBoxGenderFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jComboBoxGenderFocusGained
        boolean result = thePatientControl.checkPatientPid(pidPanel.getText());
        if(theFamily!=null && theFamily.getObjectId()==null && result)
        {
             theUS.setStatus("หมายเลขบัตรประชาชนซ้ำกับผู้ป่วยคนอื่น กรุณากรอกหมายเลขบัตรประชาชนใหม่อีกครั้ง",UpdateStatus.WARNING);
             pidPanel.requestFocus();
        } 
    }//GEN-LAST:event_jComboBoxGenderFocusGained

    private void jComboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGenderActionPerformed
        /*
        try{
            Prefix p = (Prefix)jComboBoxPrename.getSelectedItem();
            String sex = GutilPCU.getGuiData(jComboBoxGender);
        }catch(Exception e){
            e.printStackTrace();
        } */      
    }//GEN-LAST:event_jComboBoxGenderActionPerformed

    private void jTextFieldLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLnameActionPerformed

    }//GEN-LAST:event_jTextFieldLnameActionPerformed

    private void jTextFieldFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFnameActionPerformed

    }//GEN-LAST:event_jTextFieldFnameActionPerformed

    private void jRadioButtonOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOwnerActionPerformed

    }//GEN-LAST:event_jRadioButtonOwnerActionPerformed

    private void jRadioButtonTenantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonTenantActionPerformed
        
    }//GEN-LAST:event_jRadioButtonTenantActionPerformed

    private void jTextFieldCoupleLnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldCoupleLnameCaretUpdate
// TODO add your handling code here:
        //jTextFieldCoupleName.setText(jTextFieldCoupleFname.getText()+" "+jTextFieldCoupleLname.getText());
    }//GEN-LAST:event_jTextFieldCoupleLnameCaretUpdate

    private void jTextFieldCoupleFnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldCoupleFnameCaretUpdate
// TODO add your handling code here:
       // jTextFieldCoupleName.setText(jTextFieldCoupleFname.getText()+" "+jTextFieldCoupleLname.getText());
    }//GEN-LAST:event_jTextFieldCoupleFnameCaretUpdate

    private void jTextFieldMotherLnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldMotherLnameCaretUpdate
// TODO add your handling code here:
       // jTextFieldMotherName.setText(jTextFieldMotherFname.getText()+" "+jTextFieldMotherLname.getText());
    }//GEN-LAST:event_jTextFieldMotherLnameCaretUpdate

    private void jTextFieldFatherLnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldFatherLnameCaretUpdate
// TODO add your handling code here:
         //jTextFieldFatherName.setText(jTextFieldFatherFname.getText()+" "+jTextFieldFatherLname.getText());
    }//GEN-LAST:event_jTextFieldFatherLnameCaretUpdate

    private void jTextFieldMotherFnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldMotherFnameCaretUpdate
// TODO add your handling code here:
        //jTextFieldMotherName.setText(jTextFieldMotherFname.getText()+" "+jTextFieldMotherLname.getText());
    }//GEN-LAST:event_jTextFieldMotherFnameCaretUpdate

    private void jTextFieldCoupleLnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCoupleLnameFocusGained
// TODO add your handling code here:
        if(!jTextFieldCoupleFname.getText().trim().equals(""))
        {
            if(jTextFieldCoupleLname.getText().trim().equals(""))
            {
                GutilPCU.setGuiData(jTextFieldCoupleLname,GutilPCU.getGuiData(jTextFieldLname));
            }
        }
    }//GEN-LAST:event_jTextFieldCoupleLnameFocusGained

    private void jTextFieldMotherLnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldMotherLnameFocusGained
// TODO add your handling code here:
        if(!jTextFieldMotherFname.getText().trim().equals(""))
        {
            if(jTextFieldMotherLname.getText().trim().equals(""))
            {
                GutilPCU.setGuiData(jTextFieldMotherLname,GutilPCU.getGuiData(jTextFieldLname));
            }
        }
    }//GEN-LAST:event_jTextFieldMotherLnameFocusGained

    private void jTextFieldFatherLnameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldFatherLnameFocusGained
// TODO add your handling code here:
        if(!jTextFieldFatherFname.getText().trim().equals(""))
        {
            if(jTextFieldFatherLname.getText().trim().equals(""))
            {
                GutilPCU.setGuiData(jTextFieldFatherLname,GutilPCU.getGuiData(jTextFieldLname));
            }
        }       
    }//GEN-LAST:event_jTextFieldFatherLnameFocusGained

    private void jTextFieldFatherFnameCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldFatherFnameCaretUpdate
// TODO add your handling code here:
      //jTextFieldFatherName.setText(jTextFieldFatherFname.getText()+" "+jTextFieldFatherLname.getText());
    }//GEN-LAST:event_jTextFieldFatherFnameCaretUpdate

    private void jComboBoxOccupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxOccupActionPerformed
// TODO add your handling code here:
        //jTextFieldOcc.setText(jComboBoxOccup.getText()); 
    }//GEN-LAST:event_jComboBoxOccupActionPerformed

    private void jTextFieldAgeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldAgeFocusLost
// TODO add your handling code here:
        if(!jTextFieldAge.getText().equals(""))
        {
            int age = Integer.parseInt(jTextFieldAge.getText());
            int yearCurr = Integer.parseInt(thePCUObject.getCurrentDateTime().substring(0,4));
            String yearBirth = String.valueOf(yearCurr-age);
            dateComboBoxBirthDay.setText("01/07/" + yearBirth);   
        }
    }//GEN-LAST:event_jTextFieldAgeFocusLost

    private void dateComboBoxBirthDayFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateComboBoxBirthDayFocusLost
        /*String bday = dateComboBoxBirthDay.getText();                 
        age = DateUtil.calculateAge(bday,theHM.theHosControl.theConnectionInf);
        jTextFieldAge.setEnabled(true);
        jTextFieldAge.setText(age);
        jTextFieldAge.setEditable(true);*/  
    }//GEN-LAST:event_dateComboBoxBirthDayFocusLost

    private void dateComboBoxBirthDayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateComboBoxBirthDayMouseClicked

    }//GEN-LAST:event_dateComboBoxBirthDayMouseClicked

    private void dateComboBoxBirthDayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxBirthDayActionPerformed
       String bdate = dateComboBoxBirthDay.getText();
       if(bdate!=null && bdate.length()>0 && bdate.length()!=10) 
       {
            theUS.setStatus("กรุณากรอกวันเกิดให้ถูกรูปแบบ วว/ดด/ปปปป",theUS.WARNING);            
            return;
        }
        String date_time = thePCUObject.getCurrentDateTime();
        if(!bdate.equals("") && com.hosv3.utility.DateUtil.countDateDiff(bdate,date_time)> 0) 
        {
            theUS.setStatus("กรุณาระบุวันเกิดเป็นวันในอดีต", theUS.WARNING);            
            return; 
        }
        if(!bdate.equals(""))
        {
            String age = DateUtil.calculateAge(bdate,date_time);
            jTextFieldAge.setText(age);
        }
        
    }//GEN-LAST:event_dateComboBoxBirthDayActionPerformed

    private void jCheckBoxTrueBirthdayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxTrueBirthdayActionPerformed

        if(jCheckBoxTrueBirthday.isSelected()){
            dateComboBoxBirthDay.setEnabled(true);
            jTextFieldAge.setEnabled(false);               
        }
        else{
            dateComboBoxBirthDay.setEnabled(false);
            jTextFieldAge.setEnabled(true); 
        }
    }//GEN-LAST:event_jCheckBoxTrueBirthdayActionPerformed

    private void jComboBoxPrenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPrenameActionPerformed

        try{           
            Prefix thePrefix = (Prefix)jComboBoxPrename.getSelectedItem();
            if(thePrefix!=null){
                GutilPCU.setGuiData(jComboBoxGender, thePrefix.sex);
            }
        }
        catch(Exception e){
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_jComboBoxPrenameActionPerformed

    private void dateComboBoxMoveInMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dateComboBoxMoveInMouseClicked
        // TODO add your handling code here:
}//GEN-LAST:event_dateComboBoxMoveInMouseClicked

    private void dateComboBoxMoveInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxMoveInActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_dateComboBoxMoveInActionPerformed

    private void dateComboBoxMoveInFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateComboBoxMoveInFocusLost
        // TODO add your handling code here:
}//GEN-LAST:event_dateComboBoxMoveInFocusLost

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        int ret = theHomeControl.saveFamily(getFamily(),jTextFieldAge.getText(),is_panel_mode,theUS);
        if(frm1!=null)
            frm1.dispose();
        //        else{
        //            if(ret!=0 && is_panel_mode){
        //                setObject(thePCUObject);
        //            }
        //        }
}//GEN-LAST:event_jButtonSaveActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hospital_os.utility.DateComboBox dateComboBoxBirthDay;
    private com.hospital_os.utility.DateComboBox dateComboBoxMoveIn;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.pcu.utility.IntegerTextField integerTextFieldFamilyNumber;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxTrueBirthday;
    private javax.swing.JComboBox jComboBoxBlood;
    private javax.swing.JComboBox jComboBoxEducate;
    private javax.swing.JComboBox jComboBoxGender;
    private javax.swing.JComboBox jComboBoxLabor;
    private javax.swing.JComboBox jComboBoxMarriage;
    private javax.swing.JComboBox jComboBoxNation;
    private com.hosv3.gui.component.HosComboBox jComboBoxOccup;
    private com.hosv3.gui.component.HosComboBox jComboBoxPrename;
    private javax.swing.JComboBox jComboBoxRace;
    private javax.swing.JComboBox jComboBoxReligion;
    private javax.swing.JComboBox jComboBoxTypeArea;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelBlood;
    private javax.swing.JLabel jLabelCoupleName;
    private javax.swing.JLabel jLabelEducate;
    private javax.swing.JLabel jLabelFamilyNumber;
    private javax.swing.JLabel jLabelFatherName;
    private javax.swing.JLabel jLabelFname;
    private javax.swing.JLabel jLabelFstatus;
    private javax.swing.JLabel jLabelFstatus3;
    private javax.swing.JLabel jLabelGender;
    private javax.swing.JLabel jLabelHCIS;
    private javax.swing.JLabel jLabelLabor;
    private javax.swing.JLabel jLabelMarriage;
    private javax.swing.JLabel jLabelMotherName;
    private javax.swing.JLabel jLabelNation;
    private javax.swing.JLabel jLabelOccup;
    private javax.swing.JLabel jLabelPid;
    private javax.swing.JLabel jLabelRace;
    private javax.swing.JLabel jLabelReligion;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel35;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JRadioButton jRadioButtonOwner;
    private javax.swing.JRadioButton jRadioButtonTenant;
    private com.hospital_os.utility.IntegerTextField jTextFieldAge;
    private javax.swing.JTextField jTextFieldCoupleFname;
    private javax.swing.JTextField jTextFieldCoupleLname;
    private javax.swing.JTextField jTextFieldFatherFname;
    private javax.swing.JTextField jTextFieldFatherLname;
    private javax.swing.JTextField jTextFieldFname;
    private javax.swing.JTextField jTextFieldLname;
    private javax.swing.JTextField jTextFieldMotherFname;
    private javax.swing.JTextField jTextFieldMotherLname;
    private com.hosv3.gui.component.PIDPanel pidPanel;
    // End of variables declaration//GEN-END:variables
    public boolean showPanel(JFrame jf,Home home,Family family,UpdateStatus us)
    {
        theUS = us;
        setFamily(family,home);
        if(frm1 == null)
        {
            frm1 = new JDialog(jf,"ข้อมูลบุคคล",true);
            frm1.setLayout(new java.awt.GridBagLayout());
            GridBagConstraints gridBagConstraints = new GridBagConstraints();
            gridBagConstraints.weightx = 1;
            gridBagConstraints.weighty = 1;
            gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
            frm1.getContentPane().add(this,gridBagConstraints);
            frm1.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);        
        }
            frm1.setSize(450,480);
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        frm1.setLocation((screenSize.width-frm1.getSize().width)/2, (screenSize.height-frm1.getSize().height)/2);  
        frm1.setVisible(true);
        return true;
    }

    private Vector listDischarge() {
        if(vret!=null)
            return vret;
        vret = new Vector();
        ComboFix com = new ComboFix("1","ตาย");
        vret.add(com);
        com = new ComboFix("2","ย้าย");
        vret.add(com);
        com = new ComboFix("3","สาบสูญ");
        vret.add(com);
        com = new ComboFix("9","ไม่จำหน่าย");
        vret.add(com);
        return vret;
    }

    private Family getFamily()
    {
        if(theFamily==null)
        {            
            theFamily = new Family();
        }
        if(jCheckBoxTrueBirthday.isSelected() || !jTextFieldAge.getText().equals(""))
        {
            theFamily.patient_birthday = dateComboBoxBirthDay.getText();
        } 
        theFamily.blood_group_id = GutilPCU.getGuiData(jComboBoxBlood);
        theFamily.education_type_id = GutilPCU.getGuiData(jComboBoxEducate);
        theFamily.f_sex_id = GutilPCU.getGuiData(jComboBoxGender);
        theFamily.marriage_status_id = GutilPCU.getGuiData(jComboBoxMarriage);
        theFamily.nation_id = GutilPCU.getGuiData(jComboBoxNation);
        theFamily.occupation_id = jComboBoxOccup.getText();
        theFamily.f_prefix_id = jComboBoxPrename.getText();        
        if(theFamily.f_prefix_id.equals("")){
            theFamily.f_prefix_id = "add:" + jComboBoxPrename.getDetail();
        }  
        theFamily.race_id = GutilPCU.getGuiData(jComboBoxRace);
        theFamily.religion_id = GutilPCU.getGuiData(jComboBoxReligion);
        theFamily.area_status_id = GutilPCU.getGuiData(jComboBoxTypeArea);
        theFamily.couple_firstname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldCoupleFname));
        theFamily.couple_lastname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldCoupleLname));
        theFamily.father_firstname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldFatherFname));
        theFamily.father_lastname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldFatherLname));
        theFamily.patient_name = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldFname));
        theFamily.patient_last_name = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldLname));
        theFamily.pid = pidPanel.getText();        
//        theFamily.mother_firstname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldMotherFname))
//            +" "+ GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldMotherLname));
        theFamily.mother_firstname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldMotherFname));
        theFamily.mother_lastname = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(jTextFieldMotherLname));
        theFamily.family_number = GutilPCU.CheckReservedWords(GutilPCU.getGuiData(integerTextFieldFamilyNumber));
        theFamily.labor = GutilPCU.getGuiData(jComboBoxLabor);
        if(theHome != null && theHome.getObjectId()!=null)
            theFamily.home_id = theHome.getObjectId();
        
        if(jCheckBoxTrueBirthday.isSelected())
            theFamily.patient_birthday_true = GutilPCU.getGuiData("1");
        else
            theFamily.patient_birthday_true = GutilPCU.getGuiData("0");
        
        if(theFamily.getObjectId() == null)
        {    
            theFamily.record_date_time = thePCUObject.getCurrentDateTime();
            theFamily.staff_record = thePCUObject.getEmployee().getObjectId();          
        }
        else
        {    
            theFamily.modify_date_time = thePCUObject.getCurrentDateTime();
            theFamily.staff_modify= thePCUObject.getEmployee().getObjectId();
        }
//        theFamily.move_in_date_time = GutilPCU.getGuiData(this.dateComboBoxMoveIn);
        theFamily.move_in_date_time = dateComboBoxMoveIn.getText();

        if(this.jRadioButtonOwner.isSelected())
            theFamily.status_id = "1";
        else
            theFamily.status_id = "2";
//        System.out.println("_____________family_home3 " + theFamily.home_id);
//        System.out.println("_____________family_home " + theFamily.getObjectId());
        if(theHome!=null)
            theFamily.home_id = theHome.getObjectId();
        return theFamily;
    }
        
    public void setDefaultComboBox()
    {
            GutilPCU.setGuiData(jComboBoxBlood,"1");
            GutilPCU.setGuiData(jComboBoxGender,"1");
            GutilPCU.setGuiData(jComboBoxMarriage,"1");
            GutilPCU.setGuiData(jComboBoxNation,"99");
            jComboBoxOccup.setText("000");
            jComboBoxPrename.setText("000");
            GutilPCU.setGuiData(jComboBoxRace,"99");
            GutilPCU.setGuiData(jComboBoxReligion,"1");
            GutilPCU.setGuiData(jComboBoxEducate,"11");
            GutilPCU.setGuiData(jTextFieldCoupleFname,"");
            GutilPCU.setGuiData(jTextFieldCoupleLname,"");
            GutilPCU.setGuiData(jTextFieldFatherFname,"");
            GutilPCU.setGuiData(jTextFieldFatherLname,"");
            GutilPCU.setGuiData(jTextFieldFname,"");
            GutilPCU.setGuiData(jTextFieldLname,"");
            GutilPCU.setGuiData(jTextFieldMotherFname,"");
            GutilPCU.setGuiData(jTextFieldMotherLname,"");
            pidPanel.setText("");
            GutilPCU.setGuiData(jTextFieldAge,"");
            GutilPCU.setGuiData(integerTextFieldFamilyNumber,"");
            jRadioButtonTenant.setSelected(true);
            GutilPCU.setGuiData(jComboBoxTypeArea,"1");
            GutilPCU.setGuiData(this.jComboBoxLabor,"1");
            setBirthDateTrue("0");
            dateComboBoxBirthDay.setText("");
    }
    
    private void setBirthDateTrue(String str){
        boolean bdate_true = GutilPCU.isSelected(str);
        jCheckBoxTrueBirthday.setSelected(bdate_true);
        dateComboBoxBirthDay.setEnabled(bdate_true);
        jTextFieldAge.setEnabled(!bdate_true);
    }

    
    
    private void setFamily(Family family,Home home)
    {
        System.out.println("private void setFamily(Family family)");
        theFamily = family;
        theHome = home;
        System.err.println("theFamily = " + (theFamily == null));
        if(theFamily==null)
        {
            GutilPCU.setGuiData(jComboBoxBlood,"1");
            GutilPCU.setGuiData(jComboBoxGender,"1");
            GutilPCU.setGuiData(jComboBoxMarriage,"1");
            GutilPCU.setGuiData(jComboBoxNation,"99");
            jComboBoxOccup.setText("000");
            jComboBoxPrename.setText("000");
            GutilPCU.setGuiData(jComboBoxRace,"99");
            GutilPCU.setGuiData(jComboBoxReligion,"1");
            GutilPCU.setGuiData(jComboBoxEducate,"11");
            GutilPCU.setGuiData(jComboBoxTypeArea,"1");
            GutilPCU.setGuiData(jComboBoxLabor,"1");
            GutilPCU.setGuiData(jTextFieldCoupleFname,"");
            GutilPCU.setGuiData(jTextFieldCoupleLname,"");
            GutilPCU.setGuiData(jTextFieldFatherFname,"");
            GutilPCU.setGuiData(jTextFieldFatherLname,"");
            GutilPCU.setGuiData(jTextFieldFname,"");
            GutilPCU.setGuiData(jTextFieldLname,"");
            GutilPCU.setGuiData(jTextFieldMotherFname,"");
            GutilPCU.setGuiData(jTextFieldMotherLname,"");
            pidPanel.setText("");
            GutilPCU.setGuiData(jTextFieldAge,"");
            GutilPCU.setGuiData(integerTextFieldFamilyNumber,"");
            jRadioButtonTenant.setSelected(true);         
            setBirthDateTrue("0");
            //        GutilPCU.setGuiData(dateComboBoxBirthDay,"");
            dateComboBoxBirthDay.setText("");
            jLabelHCIS.setText("HCIS:");
             return;
         }
        
//         System.out.println("_____________family_home " + theFamily.f_prefix_id);
         jComboBoxPrename.setText(theFamily.f_prefix_id);
         GutilPCU.setGuiData(jTextFieldFname,theFamily.patient_name);
         GutilPCU.setGuiData(jTextFieldLname,theFamily.patient_last_name);
         GutilPCU.setGuiData(jComboBoxGender,theFamily.f_sex_id);
         age = DateUtil.calculateAge(theFamily.patient_birthday,this.thePCUObject.getCurrentDateTime());
         if(age.equals("0")){
             if(thePatient!=null)
                 age = DateUtil.calculateAge(thePatient.patient_birthday,thePCUObject.getCurrentDateTime());
         }
         GutilPCU.setGuiData(jTextFieldAge,age);
         GutilPCU.setGuiData(jComboBoxMarriage,theFamily.marriage_status_id);
         GutilPCU.setGuiData(jComboBoxBlood,theFamily.blood_group_id);
         if(theFamily.blood_group_id.equals(""))
             GutilPCU.setGuiData(jComboBoxBlood,"1");
         //GutilPCU.setGuiData(jTextFieldOcc,theFamily.occupation_id);
         jComboBoxOccup.setText(theFamily.occupation_id);
         GutilPCU.setGuiData(jComboBoxRace,theFamily.race_id);
         GutilPCU.setGuiData(jComboBoxNation,theFamily.nation_id);
         GutilPCU.setGuiData(jComboBoxReligion,theFamily.religion_id);
         GutilPCU.setGuiData(jComboBoxEducate,theFamily.education_type_id);
         GutilPCU.setGuiData(jTextFieldFatherFname,theFamily.father_firstname);
         GutilPCU.setGuiData(jTextFieldFatherLname,theFamily.father_lastname);
         int index = theFamily.mother_firstname.indexOf(" ");
         if(index!=-1){
             GutilPCU.setGuiData(jTextFieldMotherFname,theFamily.mother_firstname.substring(0,index));
             GutilPCU.setGuiData(jTextFieldMotherLname,theFamily.mother_firstname.substring(index+1));
         }
         else
             GutilPCU.setGuiData(jTextFieldMotherFname,theFamily.mother_firstname);
         
         GutilPCU.setGuiData(jTextFieldCoupleFname,theFamily.couple_firstname);
         GutilPCU.setGuiData(jTextFieldCoupleLname,theFamily.couple_lastname);
         GutilPCU.setGuiData(jComboBoxTypeArea,theFamily.area_status_id);
         GutilPCU.setGuiData(jComboBoxLabor,theFamily.labor);
         pidPanel.setText(theFamily.pid);
         if(("1").equalsIgnoreCase(theFamily.status_id))
            jRadioButtonOwner.setSelected(true);
         else
            jRadioButtonTenant.setSelected(true);
         
         setBirthDateTrue(theFamily.patient_birthday_true);
         if(!theFamily.patient_birthday.equals(""))
            dateComboBoxBirthDay.setText(com.hosv3.utility.DateUtil.convertFieldDate(theFamily.patient_birthday));
         GutilPCU.setGuiData(integerTextFieldFamilyNumber,theFamily.family_number);
         if(!theFamily.move_in_date_time.equals(""))
             dateComboBoxMoveIn.setText(com.hosv3.utility.DateUtil.convertFieldDate(theFamily.move_in_date_time));
//            GutilPCU.setGuiData(this.dateComboBoxMoveIn, theFamily.move_in_date_time);
        jLabelHCIS.setText("HCIS:" + theFamily.hn_hcis);
    }
    
    public Patient initPatient()
    {
        //theFamily = new Family();
        thePatient.couple_id = "";
        thePatient.father_pid = "";
        thePatient.mother_pid = "";
        thePatient.patient_birthday = "";
        thePatient.ampur = "";
        thePatient.changwat = "";
        thePatient.tambon =  "";
        thePatient.blood_group_id = "1";
        thePatient.education_type_id = "09";
        thePatient.status_id =  "2";
        thePatient.f_sex_id =  "1";
        thePatient.labor =  "1";
        thePatient.marriage_status_id = "1";
        thePatient.nation_id =  "99";
        thePatient.occupation_id =  "504";
        thePatient.f_prefix_id =  "000";
        thePatient.race_id =  "99";
        thePatient.religion_id =  "1";
        thePatient.area_status_id =  "1";
        thePatient.couple_firstname =  "";
        thePatient.couple_lastname =  "";
        thePatient.father_firstname =  "";
        thePatient.father_lastname =  "";
        thePatient.patient_name =  "";
        thePatient.house =  "";
        thePatient.patient_last_name =  "";
        thePatient.mother_firstname =  "";
        thePatient.mother_lastname =  "";
        thePatient.private_doc =  "";
        thePatient.p_type =  "";
        thePatient.road =  "";
        thePatient.village =  "";
        thePatient.pid =  "";
        thePatient.phone =  "";
        thePatient.relation =  "00";
        thePatient.sex_contact =  "1";
        thePatient.house_contact =  "";
        thePatient.village_contact =  "";
        thePatient.road_contact =  "";
        thePatient.phone_contact =  "";
        thePatient.ampur_contact = thePCUObject.getSite().amphor;
        thePatient.changwat_contact = thePCUObject.getSite().changwat;
        thePatient.tambon_contact =  thePCUObject.getSite().tambon;
        thePatient.xn =  "";
        thePatient.pid =  "";
        thePatient.contact_fname =  "";
        thePatient.contact_lname =  "";
        thePatient.patient_birthday_true = "0";
        thePatient.phone = "";
        thePatient.record_date_time =  "";
        thePatient.staff_record = thePCUObject.getEmployee().getObjectId();
        return thePatient;
    }    
    

    
    private void resetFamily()
    {
        if(is_panel_mode)
        {
            theHosInf.resetPatient(); 
        }
        setFamily(null,null);
    }

    public void setLanguage(){
        GutilPCU.setGuiLang(jLabelFname);
        GutilPCU.setGuiLang(jPanel10);
        GutilPCU.setGuiLang(jLabelPid);
        GutilPCU.setGuiLang(jLabelGender);
        GutilPCU.setGuiLang(jCheckBoxTrueBirthday);
        GutilPCU.setGuiLang(jLabelAge);
        GutilPCU.setGuiLang(jLabel3);
        GutilPCU.setGuiLang(jLabelMarriage);
        GutilPCU.setGuiLang(jLabelBlood);
        GutilPCU.setGuiLang(jLabelOccup);
        GutilPCU.setGuiLang(jLabelRace);
        GutilPCU.setGuiLang(jLabelNation);
        GutilPCU.setGuiLang(jLabelReligion);
        GutilPCU.setGuiLang(jLabelEducate);
        GutilPCU.setGuiLang(jLabelFatherName);
        GutilPCU.setGuiLang(jLabelMotherName);
        GutilPCU.setGuiLang(jLabelCoupleName);
        GutilPCU.setGuiLang(jLabelFstatus);
        GutilPCU.setGuiLang(jLabelFamilyNumber);
        GutilPCU.setGuiLang(jRadioButtonOwner);
        GutilPCU.setGuiLang(jRadioButtonTenant);
        GutilPCU.setGuiLang(jButtonSave);
       
    }

    public void notifySaveStatus(Family family, int status) {
    }
    
    public static void main(String[] argc){
        System.out.println("time is " + String.valueOf(System.currentTimeMillis()));
        System.out.println("time is " + Long.toString(System.currentTimeMillis()));
        System.out.println("time is " + System.currentTimeMillis());
        System.out.println("time is " + System.currentTimeMillis());
        System.out.println("time is " + System.currentTimeMillis());
    }

    public void setUpdateStatus(UpdateStatus us) {
        theUS = us;
    }
}
