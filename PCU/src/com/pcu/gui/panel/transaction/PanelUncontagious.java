 /*
 * PanelUncontagiou.java
 *
 * Created on 1 มีนาคม 2549, 15:28 น.
 */

package com.pcu.gui.panel.transaction;
import com.pcu.control.AllComboBoxControl;
import com.pcu.control.PCUObject;
import com.pcu.gui.dialog.HosDialog;
import javax.swing.*;
import java.util.*;
import com.pcu.object.*;
import com.pcu.utility.*;
import com.pcu.utility.DateTime;
import com.pcu.utility.DateUtil;
import com.pcu.control.HosManage;
import com.pcu.utility.DateComboBox;
import com.hospital_os.object.Employee;
import com.hospital_os.object.Visit;
import com.hospital_os.object.Patient;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.*;
import com.hosv3.utility.connection.UpdateStatus;
/**
 *
 * @author  Administrator
 */
public class PanelUncontagious extends javax.swing.JPanel {
    private JFrame theJFrame;
    HosManage theHM;
    private AllComboBoxControl theAllComboBoxControl;
    private HosDialog theHosDialog;
    private Employee theEmployee;
    private Family theFamily;
    private Visit theVisit;
    private Patient thePatient;
    private Vector vChronic;
    private Vector vUncontagious ;
    private UpdateStatus theUS;

    private PCUObject pcuobject;
    /** Creates new form PanelUncontagiou */
    public PanelUncontagious() {
        initComponents();
    }
    public PanelUncontagious(HosManage hm,HosDialog hd) {
        initComponents();
        setControl(hm,hd);
    }
    public void setControl(HosManage hm,HosDialog hd)
     {
        theHM = hm;
        pcuobject = hm.thePO;
        theHosDialog = hd;
        theAllComboBoxControl = hm.theHosControl.theAllComboBoxControl;        
        setLanguage();
        setTableUncontagious(null);
     }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableUncontagious = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButtonReset1 = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        setPreferredSize(new java.awt.Dimension(200, 0));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "\u0e42\u0e23\u0e04\u0e17\u0e31\u0e48\u0e27\u0e44\u0e1b", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanel1.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel2.setLayout(new java.awt.BorderLayout());

        jTableUncontagious.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableUncontagious);

        jPanel2.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(10, 30));
        jButtonReset1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonReset1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonReset1.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonReset1.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonReset1.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonReset1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReset1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel3.add(jButtonReset1, gridBagConstraints);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel3.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif")));
        jButtonSave.setText("Save");
        jButtonSave.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonSave.setMaximumSize(new java.awt.Dimension(100, 26));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 26));
        jButtonSave.setPreferredSize(new java.awt.Dimension(80, 26));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 5, 11);
        jPanel1.add(jPanel3, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        deleteUncontagious();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveUncontagious();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonReset1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReset1ActionPerformed
        insertUncontagious();
    }//GEN-LAST:event_jButtonReset1ActionPerformed
    /**
     * เซต object จาก HospitalOS
     * @param  
     * @return 
     * @author kingland
     * @date 25-02-2549
     */
    public void getObject(PCUObject pcuobject)
    {
        if(pcuobject != null)
        {
            theFamily = null;
            theEmployee = pcuobject.getEmployee();
            thePatient = pcuobject.getPatient();
            theVisit = pcuobject.getVisit();
        }
        setTableUncontagious(null);
    }
    /**
     * เคลียร์ GUI หน้าจอโรคเรื้อรังทั้งหมด
     * @param  
     * @return 
     * @author kingland
     * @date 03-03-2549
     */
    public void clearGUIUncontagiousAll()
    {
        setTableUncontagious(null);
    }
    /**
     * ค้นหารายการโรคไม่ติดต่อ
     * @param  
     * @return 
     * @author kingland
     * @date 25-02-2549
     */
    private void searchUncontagious()
    {
        if(this.theFamily != null)
        {
            vUncontagious = theHM.theHosControl.theUncontagiousControl.listUncontagious(theFamily.getObjectId());
        }
        setTableUncontagious(vUncontagious);
    }
    /**
     * เซตประชากร
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    public void setFamily(Family family)
    {
        theFamily = family;
        thePatient = null;
        theVisit = null;
        searchUncontagious();
    }
    /**
     * เซตภาษา
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    private void setLanguage()
    {
        
        GutilPCU.setGuiLang(jPanel1);
        GutilPCU.setGuiLang(jButtonSave);
        
        //jButtonSave.setText(GutilPCU.getTextBundle("Save")); 
    }
    /**
     * บันทึกรายการโรคไม่ติดต่อ
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    private void saveUncontagious()
    {
        Constant.println("######################saveUncontagious######################");
        if(this.theFamily == null)
        {
            theUS.setStatus(GutilPCU.getTextBundle("WarningNotHaveFamilyUncontagious"),2);
            return;
        }
        if(this.vUncontagious.size() == 0)
        {
            theUS.setStatus(GutilPCU.getTextBundle("WarningNotHaveUncontagious"),2);
            return;
        }
        if(!updateGOUncontagious())
            return;
        
        if(checkDateSurvey() == false || checkRepleateUncontagious() == true )
        {
            Constant.println("######################RETURN######################");
            return;
        }        
        theHM.theHosControl.theUncontagiousControl.setUpdateStatus(theUS);
        int result  = theHM.theHosControl.theUncontagiousControl.saveUncontagious(this.vUncontagious);        
        setTableUncontagious(this.vUncontagious);
    }
    /**
     * ตรวจสอบวันที่สำรวจว่าครบหรือไม่
     * @param  
     * @return boolean true = มีการใส่วันที่ครบ  false = ใส่วันที่สำรวจไม่ครบ
     * @author kingland
     * @date 1/06/2549
     */
    private boolean checkDateSurvey()
    {        
        boolean result = true;
        for(int i=0;vUncontagious!=null && i< vUncontagious.size(); i++)
        {
            Uncontagious us = (Uncontagious)vUncontagious.get(i);
            if("".equalsIgnoreCase(us.survey_date) || us.survey_date == null)
            {
                result = false;
                theUS.setStatus(GutilPCU.getTextBundle("WarningNotHaveSurVeyDate"), 2);
                break;
            }
        }
        return result;
    }
    /**
     * ตรวจสอบว่ามีรายการโรคซ้ำกันหรือไม่
     * @param  
     * @return 
     * @author kingland
     * @date 27-02-2549
     */
     private boolean checkRepleateUncontagious()
     {
         boolean result = false;
         frist:for(int i=0;i<this.vUncontagious.size();i++)
         {
            for(int j=i;j<this.vUncontagious.size();j++)
            {
                Uncontagious usBefor = (Uncontagious)this.vUncontagious.get(i);
                Uncontagious usAfter = (Uncontagious)this.vUncontagious.get(j);
                if(usBefor.disease_id.equalsIgnoreCase(usAfter.disease_id) && i != j)
                {
                    if(usBefor.getwell.equals("0")) 
                    {
                        result = true;
                        theUS.setStatus(GutilPCU.getTextBundle("WarningUncontagiousRepeate1")+(i+1)+" "+GutilPCU.getTextBundle("WarningUncontagiousRepeate2")+(j+1), 2);
                        break frist;
                    }
                }
            }
         }
         return result;
     }
    /**
     * ทำการอับเดตข้อมูลเมื่อต้องการลบข้อมูล
     * @param  
     * @return 
     * @author kingland
     * @date 27-02-2549
     */
    private void updateDeleteUncontagious()
    {
        int[] select = jTableUncontagious.getSelectedRows();
        if(select.length == 0)
        {
            theUS.setStatus(GutilPCU.getTextBundle("WarningNotSelectUncontagious"), 2);
            return;
        }
        for(int i=select.length-1;i>=0;i--)
        {
            Uncontagious uc = (Uncontagious)vUncontagious.get(select[i]);
            uc.staff_cancel = this.theEmployee.getObjectId();
            uc.cancel_datetime = DateTime.getTextCurrentDateTime(theHM.theHosControl.theConnectionInf);
            uc.active = "0";
        }
    }
    /**
     * ลบรายการโรคไม่ติดต่อ
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    private void deleteUncontagious()
    {
        int[] select = jTableUncontagious.getSelectedRows();
        if(select.length == 0)
        {
            theUS.setStatus(GutilPCU.getTextBundle("WarningNotSelectUncontagious"), 2);
            return;
        }
        if(!theUS.confirmBox(GutilPCU.getTextBundle("DeleteUncontagious"),UpdateStatus.WARNING))
            return;
        {
            updateDeleteUncontagious();
            theHM.theHosControl.theUncontagiousControl.delectUncontagious(this.vUncontagious, select);
            setTableUncontagious(this.vUncontagious);
        }
    }
    /**
     * อับเดตข้อมูลลงใน Object
     * @param  
     * @return 
     * @author kingland
     * @date 25-02-2549  
     */
     public boolean updateGOUncontagious()
     {
         String datetime = DateTime.getTextCurrentDateTime(theHM.theHosControl.theConnectionInf);
         jTableUncontagious.repaint();
         for(int i=0;i<vUncontagious.size();i++)
         {
             Uncontagious uc = (Uncontagious)this.vUncontagious.get(i);
             //ComboBoxUncontagious combo = (ComboBoxUncontagious)jTableUncontagious.getValueAt(i, 1);
             JComboBox combo = (JComboBox)jTableUncontagious.getValueAt(i, 1);
             ComboFix cf = (ComboFix)combo.getSelectedItem();
             if(cf==null){
                this.theUS.setStatus("กรุณาบันทึกข้อมูลโรคทั่วไปก่อน จึงจะบันทึกข้อมูลการสำรวจนี้ได้",UpdateStatus.WARNING);
                return false;
             }
             uc.disease_id = cf.code;
             uc.contagious_type = cf.other;
             //uc.icd10 = ((String)jTableUncontagious.getValueAt(i, 2)).toUpperCase();
             uc.icd10 = "";
             DateComboBox dc = (DateComboBox)jTableUncontagious.getValueAt(i, 2);
             uc.survey_date = dc.getText();
             uc.getwell = "0";
             try{
                 JCheckBox chb = (JCheckBox)jTableUncontagious.getValueAt(i, 3);
                 if(chb.isSelected())
                     uc.getwell = "1";
             }
             catch(Exception e){
                 Constant.println(e.getMessage());   
                 Boolean chb = (Boolean)jTableUncontagious.getValueAt(i, 3);
                 if(chb.booleanValue())
                     uc.getwell = "1";
             }
             
             if(uc.getObjectId() == null || "".equals(uc.getObjectId()))
             {
                 uc.staff_recode = theEmployee.getObjectId();
                 uc.record_datetime = datetime;
             }
             else
             {    
                 Uncontagious ucCurrent = (Uncontagious)this.vUncontagious.get(i);
                 Uncontagious ucBefor = this.theHM.theHosControl.theUncontagiousControl.readUncontagiousByPk(ucCurrent.getObjectId());
                 if(ucBefor != null)
                 {
                     if(!ucBefor.disease_id.equalsIgnoreCase(ucCurrent.disease_id) 
                     || !ucBefor.icd10.equalsIgnoreCase(ucCurrent.icd10) 
                     || !ucBefor.survey_date.equalsIgnoreCase(ucCurrent.survey_date) 
                     || !ucBefor.getwell.equalsIgnoreCase(ucCurrent.getwell))
                    {
                        ucCurrent.modify_datetime = DateTime.getTextCurrentDateTime(this.theHM.theHosControl.theConnectionInf);
                        ucCurrent.staff_modify = this.theEmployee.getObjectId();
                    }
                 }

             }
             if(uc.staff_cancel == null)
             {
                 uc.staff_cancel = "";
                 uc.cancel_datetime = "";
             }
             if(uc.staff_modify == null)
             {
                 uc.staff_modify = "";
                 uc.modify_datetime = "";
             }
             uc.family_id = theFamily.getObjectId();
             uc.patient_id = "";
             uc.visit_id = "";
             uc.cancel_datetime = "";
             uc.staff_cancel = "";
             if(thePatient != null)
             {
                uc.patient_id = thePatient.getObjectId();
             }
//             if(uc.patient_id.equals(""))
//             {
//                 if(!theFamily.patient_id.equals(""))
//                     uc.patient_id = theFamily.patient_id;
//             }
             if(this.pcuobject.getVisit() != null)
             {
                 uc.visit_id = pcuobject.getVisit().getObjectId();
             }
             uc.active = "1";
         }
         return true;
     }
    /**
     * เซต JFrame
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    public void setJFrame(JFrame frame)
    {
        this.theJFrame = frame;
    }
     /**
     * เซตสถานะ 
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    public void setUpdateStatus(UpdateStatus us)
    {
        theUS = us;
    }
    /**
     * เลือก JFrame
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    public JFrame getJFrame()
    {
        return this.theJFrame;
    }
    /**
     * เพิ่มรายการโรคไม่ติดต่อ
     * @param  
     * @return 
     * @author kingland
     * @date 01-03-2549
     */
    private void insertUncontagious()
    {
        if(this.theFamily == null)
        {
            theUS.setStatus(GutilPCU.getTextBundle("WarningNotHaveFamilyUncontagious"),2);
            return;
        }
        if(vUncontagious == null) vUncontagious = new Vector();
        updateGOUncontagious();
        vUncontagious.add(new Uncontagious());
        setTableUncontagious(vUncontagious);
    }
    /**
     * เซตตาราง โรคไม่ติดต่อ
     * @param  
     * @return 
     * @author kingland
     * @date 23-02-2549
     */
    private void setTableUncontagious(Vector Vcontagious)
    {
        String[] col = {GutilPCU.getTextBundle("TableUncontagious_Col1")
            ,GutilPCU.getTextBundle("TableUncontagious_Col2")
//            ,GutilPCU.getTextBundle("TableUncontagious_Col3")
            ,GutilPCU.getTextBundle("TableUncontagious_Col4")
            ,GutilPCU.getTextBundle("TableUncontagious_Col5")};
            
        TableModel tm ;
        if(Vcontagious == null)
        {
            tm = new TableModel(col, 0);
            jTableUncontagious.setModel(tm);
        }
        else
        {
            tm = new TableModel(col, Vcontagious.size());
            for(int i=0;i<Vcontagious.size();i++)
            {
//                tm.setEditingCol(1,2,3,4);
                tm.setEditingCol(1,2,3);
                Uncontagious uc = (Uncontagious)Vcontagious.get(i);
                tm.setValueAt(String.valueOf(i+1), i, 0);
//                ComboBoxUncontagious  cb = new ComboBoxUncontagious();
//                cb.setControl(this.theHM.theHosControl);
//                cb.setJTable(jTableUncontagious);
                JComboBox cb = new JComboBox();
                ComboboxModel.initComboBox(cb,theAllComboBoxControl.listDisease(false));
                if(uc.disease_id != null&&!uc.disease_id.equals(""))
                {
                    int countitem = cb.getItemCount();                    
                    int j = 0;
                    boolean check = false;
                    for(j=0;j<countitem;j++)
                    {
                        ComboFix cf = (ComboFix)cb.getItemAt(j);
                        if(uc.disease_id.equalsIgnoreCase(cf.code))
                        {
                            check = true;
                            break;
                        }
                    }
                    if(check = true)cb.setSelectedIndex(j);
                }
                tm.setValueAt(cb, i, 1);
                /*
                if(uc.icd10 != null && !uc.icd10.equals(""))
                {
                    tm.setValueAt(uc.icd10, i, 2);
                }
                else
                {
                    tm.setValueAt(cb.getIcd10(), i, 2);
                }
                 */
//                DateComboBox dc = new DateComboBox();
                
//                DateComboBoxSpecail dc = new DateComboBoxSpecail(theHM);
                DateComboBox dc = new DateComboBox();
//                dc.setJFrame(this.getJFrame());
//                dc.setJTable(jTableUncontagious);
//                dc.setWarningFuture(true);
//                dc.setConnection(theHM.theHosControl.theConnectionInf);
//                dc.setParentComponent(this.getJFrame());
//                dc.setTable(jTableUncontagious);
                dc.setEditable(true);                
                if(!"".equals(uc.survey_date))
                {
                    dc.setText(DateUtil.convertFieldDate(uc.survey_date));
                }
//                else
//                {
//                    dc.setText("");
//                }
                tm.setValueAt(dc,i,2);
                if("1".equals(uc.getwell))
                    tm.setValueAt(Boolean.TRUE, i, 3);
                else
                    tm.setValueAt(Boolean.FALSE, i, 3);
            }
            jTableUncontagious.setModel(tm);
        }
        jTableUncontagious.setRowHeight(24);
        jTableUncontagious.getColumnModel().getColumn(0).setPreferredWidth(10);
        jTableUncontagious.getColumnModel().getColumn(1).setPreferredWidth(100);
        //jTableUncontagious.getColumnModel().getColumn(2).setPreferredWidth(30);
        jTableUncontagious.getColumnModel().getColumn(2).setPreferredWidth(60);
        jTableUncontagious.getColumnModel().getColumn(3).setPreferredWidth(30);
        jTableUncontagious.getColumnModel().getColumn(0).setCellRenderer(ColumnTableRenderer.getRendererCenter());
        jTableUncontagious.getColumnModel().getColumn(1).setCellRenderer(new CellRendererComboBox());
        jTableUncontagious.getColumnModel().getColumn(1).setCellEditor(new ComBoBoxEditor(new JComboBox()));
        jTableUncontagious.getColumnModel().getColumn(2).setCellRenderer(new CellRendererComboBox());
        jTableUncontagious.getColumnModel().getColumn(2).setCellEditor(new ComBoBoxEditor(new DateComboBox()));
        jTableUncontagious.getColumnModel().getColumn(3).setCellRenderer(new CellRendererCheckBox());
        jTableUncontagious.getColumnModel().getColumn(3).setCellEditor(new CheckBoxEditor(new JCheckBox()));
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonReset1;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableUncontagious;
    // End of variables declaration//GEN-END:variables
    
}

