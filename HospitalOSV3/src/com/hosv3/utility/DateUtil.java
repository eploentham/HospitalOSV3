/* * DateUtil.java * * Created on 26 ตุลาคม 2546, 10:20 น. */package com.hosv3.utility;import java.util.*;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;/** * * @author  tong */public class DateUtil extends com.hospital_os.utility.DateUtil {    public String year;    public String month;    public String date;    public String hour;    public String minute;    /** Creates a new instance of DateUtil */    public DateUtil() {    }    public static void main(String[] argv)    {        Calendar c = getCalendar("2553-09-21,15:54:23");        long l = c.getTimeInMillis();        l = l + 1000;        c.setTimeInMillis(l);        System.err.println(DateUtil.getTextDB(c.getTime(), true));    }    public static Calendar getCalendar(String date_str){        Date date = DateUtil.getDateFromText(date_str);        Calendar cal = Calendar.getInstance();        cal.setTimeInMillis(date.getTime());        return cal;    }    public static String addSecond(Calendar cal,int i){        cal.add(Calendar.SECOND,1);        Date date = cal.getTime();        return DateUtil.getTextDB(date, true);    }    public static String addSecond2(Calendar cal,int i){        cal.add(Calendar.MILLISECOND,1000);        Date date = cal.getTime();        return DateUtil.getTextDB(date, true);    }    public static String getThaiDateTime(String str){        return Gutil.getDateToString(Gutil.getDateFromText(str),true);    }    public static String getDateFromPattern(String pattern)    {       String dateString = new String();           java.util.Date today = new java.util.Date();            java.text.SimpleDateFormat formatter = new java.text.SimpleDateFormat(pattern);                    try {                dateString = formatter.format(today);                                        } catch (IllegalArgumentException iae) {                dateString = null;            }            formatter = null;            return dateString;    }    public static String calBirthdateGui(String date_time,String patient_year)    {        if(!patient_year.equals(""))        {            int age = Integer.parseInt(patient_year);            int yearCurr = Integer.parseInt(date_time.substring(0,4));            String yearBirth = String.valueOf(yearCurr-age);            return "01/07/" + yearBirth;           }        return "";    }    /**     * @deprecated henbe unused     * @param date_time     * @param patient_year     * @return     */    public static String calculateBirthdate(String date_time,String patient_year)    {        return calBirthdateGui(date_time,patient_year);    }    /////////////////////////////////////////////////////////////////////////////    public static String calBirthdateDB(String date_time,String patient_year)    {        if(!patient_year.equals(""))        {            int age = Integer.parseInt(patient_year);            int yearCurr = Integer.parseInt(date_time.substring(0,4));            String yearBirth = String.valueOf(yearCurr-age);            return yearBirth+"-07-01";           }        return "";    }    /////////////////////////////////////////////////////////////////////////////    public static int calculateAgeInt(String date,String curr_date)    {        Date d = getDateFromText(date);        if(d==null)             return -1;        Calendar c=Calendar.getInstance();        Calendar c2=Calendar.getInstance();        c.setTimeInMillis(d.getTime());        c2.setTimeInMillis(DateUtil.getDateFromText(curr_date).getTime());        return c2.get(Calendar.YEAR) - c.get(Calendar.YEAR);    }   // แสดงอายุจริงตามที่กรอกในช่องอายุในหน้า socialdata ไปแสดงในช่องอายุของ currentvisit    public static String calculateAgeShort(String year,String curr_year)    {        int age = Integer.parseInt(curr_year) - Integer.parseInt(year);        return String.valueOf(age);    }        // ใช้เช็คอายุที่ครบปีบริบูรณ์    public static String calculateAgeShort1(String birthdate,String current_date)    {        Date d = getDateFromText(birthdate);        if(d==null)             return "";        Calendar c=Calendar.getInstance();        Calendar c2=Calendar.getInstance();        c.setTimeInMillis(d.getTime());        c2.setTimeInMillis(DateUtil.getDateFromText(current_date).getTime());                if(c.get(Calendar.MONTH) < c2.get(Calendar.MONTH))            return String.valueOf(c2.get(Calendar.YEAR) - c.get(Calendar.YEAR));                        else if(c.get(Calendar.MONTH) == c2.get(Calendar.MONTH)        && c.get(Calendar.DATE) <= c2.get(Calendar.DATE))            return String.valueOf(c2.get(Calendar.YEAR) - c.get(Calendar.YEAR));        else            return String.valueOf(c2.get(Calendar.YEAR) - c.get(Calendar.YEAR)-1);    }/**    * ใช้ในการคำนวณ หา จำนวนวัน โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss หรือ yyyy-mm-dd    * ข้อมูลออก เป็นจำนวน ชั่วโมงเป็นค่า ลบได้ไม่จำกัด    */     public static int countDateDiff(String date,ConnectionInf cinf)     {        String date2 = DateTime.getTextCurrentDate(cinf);        return countDateDiff(date,date2);        /*        int numday = 0;        if(date == null)        {            return numday;                    }        if(date.length()==0)         {            return numday;        }        Date d = getDateFromText(date);        if(d == null){            return 0;        }        Date today = DateUtil.getDateFromText();        Calendar c=Calendar.getInstance();        if(today.after(d))        {            c.setTimeInMillis(today.getTime() - d.getTime());            numday =c.get(Calendar.DATE) -1;            numday = 0 - numday;        }        else        {            c.setTimeInMillis(d.getTime() - today.getTime());            numday =c.get(Calendar.DATE) -1;        }        return numday;*/     }       public static String calPregnant(String date)    {        if(date.length() >=8)        {          //   Constant.println(date);            Date d = getDateFromText(date);            int dd =0;            int mm =0;            int yyyy=0;            Calendar c=Calendar.getInstance();            c.setTimeInMillis(d.getTime());            dd = c.get(Calendar.DATE)+284;            mm = c.get(Calendar.MONTH);            yyyy = c.get(Calendar.YEAR);            c.set(yyyy,mm,dd);                                    String yyyy1 ="0000" + String.valueOf(c.get(Calendar.YEAR));            String mm1 = "00" + String.valueOf(c.get(Calendar.MONTH) + 1);            String dd1 = "00" + String.valueOf(c.get(Calendar.DATE));            yyyy1=yyyy1.substring(yyyy1.length()-4,yyyy1.length());            mm1=mm1.substring(mm1.length()-2,mm1.length());            dd1=dd1.substring(dd1.length()-2,dd1.length());                 //       Constant.println(dd1+"/" + mm1 + "/" +yyyy1);            return dd1+"/" + mm1 + "/" +yyyy1;        }        else            return "";    }         /**     * @author henbe     * ฟังชันนี้ยังใช้งานได้แล้วนำมาจากการคำนวนจากปฏิทินโดยตรงเป็นการนับ ปี เดือน วัน     * ที่ถูกต้องที่สุด     * static String calculateAgeLong(String date_in,String cur_date)     */    public static String calculateAgeLong(String date_in,String cur_date)    {               Calendar d = Calendar.getInstance();        d.setTime(getDateFromText(date_in));        Calendar today = Calendar.getInstance();        today.setTime(DateUtil.getDateFromText(cur_date));        return calculateAge(d,today,true            ,Constant.getTextBundle("ปี")            ,Constant.getTextBundle("เดือน")            ,Constant.getTextBundle("วัน"));    }    public static String calculateAgeYear(String date_in,String cur_date)    {                       Calendar d = Calendar.getInstance();        d.setTime(getDateFromText(date_in));        Calendar today = Calendar.getInstance();        today.setTime(DateUtil.getDateFromText(cur_date));        return calculateAge(d,today,true) + " " + Constant.getTextBundle("ปี");    }     /**    *@Author : henbe pongtorn    *@date : 18/03/2549    *@see : ค้นผลแลบรูปแบบใหม่ให้มีการค้นหาเร็วขึ้น    *HourIn เก็บเวลาเป็นชั่วโมงเริ่มหัตถการ    *MinIn เก็บเวลาเป็นนาทีเริ่มหัตถการ    *HourOut เก็บเวลาเป็นชั่วโมงสิ้นสุดหัตถการ    *MinOut เก็บเวลาเป็นนาทีสิ้นสุดหัตถการ               *ถ้าค่าเป็น 0 แสดงว่าถูกต้องตามเงื่อนไข      *ถ้าค่าเป็น 1 แสดงว่าผิดเงื่อนไข     *เอาไว้เช็ควันที่เดียวกันแต่เวลาต่างกันเล็กน้อย    */    public static int getTimeDiff(String date_from,String date_to,String time_from,String time_to)    {        if(!date_from.equals("") && !date_to.equals("") &&           !time_from.equals("") && !time_to.equals(""))        {            if(!date_from.equals(date_to))            {                return 0;            }            int HourIn = Integer.parseInt(time_from.substring(0,2));            int MinIn =  Integer.parseInt(time_from.substring(3,5));            Constant.println("+++++++++++++HourIn"+HourIn+"++++++++++++++++++MinIn"+MinIn);            int HourOut = Integer.parseInt(time_to.substring(0,2));            int MinOut =  Integer.parseInt(time_to.substring(3,5));                        if(HourOut < HourIn)            {                return 1;            }            if(HourOut == HourIn && MinOut < MinIn)            {                return 1;            }         }                return 0;    }        public static boolean isDateTimeFuture(String date_in,String date_time){        Constant.println("public boolean isDateFuture(String date_in) throws Exception {" +date_in);        Date check_date = DateUtil.getDateFromText(date_in);        Constant.println(date_time);        Date cur_date = DateUtil.getDateFromText(date_time);                if(check_date==null)            return false;        return check_date.after(cur_date);    }        /**     *  แปลงข้อมูล จากข้อความ เป็น วันที่     *  รูปแบบ ของข้อมูลเข้า เป็น   yyyy-mm-dd,hh:nn:ss     */    public static Date getDateFromText(String text)  {        //Constant.println("getDateFromText :" + text);       Calendar c=Calendar.getInstance();       if(text==null || text.length()<10) return null;       try{        int yyyy = Integer.parseInt(text.substring(0,4));        int mm = Integer.parseInt(text.substring(5,7))-1;        int dd = Integer.parseInt(text.substring(8,10));        c.set(yyyy,mm,dd);        if(text.length()>10 && text.length()>=16){            int hh = Integer.parseInt(text.substring(11,13));            int nn = Integer.parseInt(text.substring(14,16));            c.set(yyyy,mm,dd,hh,nn);       }//       if(text.length()==17){//            int hh = Integer.parseInt(text.substring(11,13));//            int nn = Integer.parseInt(text.substring(14,16));//            int ss = Integer.parseInt(text.substring(17));//            c.set(yyyy,mm,dd,hh,nn,ss);//       }       return c.getTime();       }catch(Exception e) {           Constant.println("getDateFromText fail:" + text);           Constant.println(e.getMessage());           //e.printStackTrace(Constant.getPrintStream());           return null;       }    }        /**     *  แปลงข้อมูล จากข้อความ เป็น วันที่     *  รูปแบบ ของข้อมูลเข้า เป็น   yyyy-mm-dd,hh:nn:ss     */    public static Date getDateFromTextServer(String text)  {                Calendar c=Calendar.getInstance(Locale.US);         //  Calendar c=Calendar.getInstance();           if(text==null || text.length()<10) return null;           try{            int yyyy = Integer.parseInt(text.substring(0,4));            yyyy = yyyy -  543;            int mm = Integer.parseInt(text.substring(5,7))-1;            int dd = Integer.parseInt(text.substring(8,10));            c.set(yyyy,mm,dd);            if(text.length()>10){                int hh = Integer.parseInt(text.substring(11,13));                int nn = Integer.parseInt(text.substring(14,16));                int ss = Integer.parseInt(text.substring(17));                c.set(yyyy,mm,dd,hh,nn,ss);           }            Constant.println("Year : " + yyyy);           return c.getTime();           }catch(Exception e) {               e.printStackTrace(Constant.getPrintStream());               return null;           }            }        /**     * แปลงข้อมูลเข้าจาก วันที่ รูปแบบ dd/mm/yyyy     * ไปเป็น yyyy-mm-dd     */    public static String getGuiBDate(String date)    {        if(date==null) return "";       if(date.length() < 9 ) return "";       try{          String temp = new String();            //    Constant.println("Real Date : " + text);            //    Constant.println(text.substring(0,(text.indexOf("/"))) );                String dd = date.substring(0,date.indexOf("/"));                int ddd = Integer.parseInt(dd);                String d = "00" + String.valueOf(ddd);                d=d.substring(d.length()-2,d.length());           //     Constant.println("DATE : " + dd);                temp  = date.substring(dd.length()+1);          //      Constant.println(temp);                int m = Integer.parseInt(temp.substring(0,temp.indexOf("/")));                String mm = "00" + String.valueOf(m);                mm=mm.substring(mm.length()-2,mm.length());             //   Constant.println("MONHT : " + mm);                temp = temp.substring(temp.indexOf("/")+1);                // Constant.println(temp);                 String yyyy = temp.substring(0,4);            //     Constant.println(yyyy);            return yyyy+ "-" + mm + "-"+d;        }catch(Exception e) {           e.printStackTrace(Constant.getPrintStream());           return null;       }    }        /**     *  ใบ้ในการตรวจสอบเวลา ถ้าเป็นเวลาก่อน หรือหลัง โดยเทียบกับเวลาปัจจุบัน     *  ถ้าเวลา ปัจจุบัน น้อยกว่าเวลาที่เทียบ จะส่งค่า เป็น 0      *  ข้อมูลเข้า เป็น hh:mm:ss     */    public static boolean checkBeforeTime(String time,ConnectionInf cinf)    {   if(time == null || time.length() <= 4 || time.length() >8)            return false;                Calendar ctoday = Calendar.getInstance();        Calendar ctime =Calendar.getInstance();        Date today = DateUtil.getDateFromText(DateTime.getTextCurrentDate(            cinf));        ctoday.setTimeInMillis(today.getTime());        if(time.length() == 5)        {            int hh = Integer.parseInt(time.substring(0,2));            int nn = Integer.parseInt(time.substring(3,5));            ctime.set(ctoday.get(Calendar.YEAR),ctoday.get(Calendar.MONTH),ctoday.get(Calendar.DATE),hh,nn);                }        else        {               int hh = Integer.parseInt(time.substring(0,2));            int nn = Integer.parseInt(time.substring(3,5));            int ss = Integer.parseInt(time.substring(6));                        ctime.set(ctoday.get(Calendar.YEAR),ctoday.get(Calendar.MONTH),ctoday.get(Calendar.DATE),hh,nn,ss);                }           Constant.println("time " + ctime.getTime().toString());     //   Constant.println("today " + ctoday.getTime().toString());        //Constant.println(ctime.before(ctoday));       // Constant.println(ctoday.before(ctime));                    return ctoday.before(ctime);    }        /**     *  ใบ้ในการตรวจสอบเวลา ถ้าเป็นเวลาก่อน หรือหลัง โดยเทียบกับเวลาปัจจุบัน     *  ถ้าเวลา ปัจจุบัน มากกว่ากว่าเวลาที่เทียบ จะส่งค่า เป็น 0      *  ข้อมูลเข้า เป็น hh:mm:ss     */    public static boolean checkAfterTime(String time,ConnectionInf cinf)    {        if(time == null || time.length() <= 4 || time.length() >8)            return false;        String date = DateTime.getTextCurrentDateTime(cinf);        return checkAfterTime(time,date);    }    public static boolean checkAfterTime(String time,String cur_time)    {        Calendar ctoday = Calendar.getInstance();        Calendar ctime =Calendar.getInstance();                Date today = DateUtil.getDateFromText(cur_time);        ctoday.setTimeInMillis(today.getTime());        int hh = Integer.parseInt(time.substring(0,2));        int nn = Integer.parseInt(time.substring(3,5));        ctime.set(ctoday.get(Calendar.YEAR),ctoday.get(Calendar.MONTH),ctoday.get(Calendar.DATE),hh,nn);        return ctoday.after(ctime);    }    public static boolean checkBeforeTime(String time,String cur_time)    {        Calendar ctoday = Calendar.getInstance();        Calendar ctime =Calendar.getInstance();                Date today = DateUtil.getDateFromText(cur_time);        ctoday.setTimeInMillis(today.getTime());        int hh = Integer.parseInt(time.substring(0,2));        int nn = Integer.parseInt(time.substring(3,5));        ctime.set(ctoday.get(Calendar.YEAR),ctoday.get(Calendar.MONTH),ctoday.get(Calendar.DATE),hh,nn);        return ctoday.before(ctime);    }    /**     *  แปลงข้อมูล วันที่ และเวลา แบบ yyyy-mm-dd : MM:ss     *  ไปเป็นวันที่ รูปแบบข้อความ(แบบเต็ม) และจะให้แสดง เวลาหรือไม่      *  ถ้า showtime เป็น true คือ แสดงเวลาด้าย     *              เป็น false คือ ไม่แสดงเวลา     */     public static String getDateToString(Date date,boolean showtime)    {   String pattern = "dd MMMMM yyyy HH:mm";         String dateString = new String();            java.text.SimpleDateFormat formatter =null;                    try {                if(showtime)                {   formatter = new java.text.SimpleDateFormat(pattern);                     if(date !=null)                        dateString = formatter.format(date);                    else                        dateString = "";                }                else                {                    pattern = "dd MMMMM yyyy";                    formatter = new java.text.SimpleDateFormat(pattern);                  // Constant.println(date);                    if(date != null)                        dateString = formatter.format(date);                    else                        dateString = null;                }                        } catch (IllegalArgumentException iae) {                dateString = null;            }            formatter = null;            pattern = null;            return dateString;            }    /**     *  แปลงข้อมูล วันที่ และเวลา แบบ yyyy-mm-dd : MM:ss     *  ไปเป็นวันที่ รูปแบบข้อความ(แบบเต็ม) และจะให้แสดง เวลาหรือไม่      *  ถ้า showtime เป็น true คือ แสดงเวลาด้าย     *              เป็น false คือ ไม่แสดงเวลา     */    public static String getDateShotToString(Date date,boolean showtime)    {   String pattern = "dd MMM yyyy HH:mm";         String dateString = new String();            java.text.SimpleDateFormat formatter =null;                    try {                if(showtime)                {   formatter = new java.text.SimpleDateFormat(pattern);                     dateString = formatter.format(date);                }                else                {                    pattern = "dd MMM yyyy";                    formatter = new java.text.SimpleDateFormat(pattern);                    dateString = formatter.format(date);                }                        } catch (IllegalArgumentException iae) {                dateString = null;            }            formatter = null;            pattern = null;            return dateString;            }    /**     *  แปลงข้อมูล วันที่ และเวลา แบบ yyyy-mm-dd : MM:ss     *  ไปเป็นวันที่ รูปแบบข้อความ(แบบย่อ) และจะให้แสดง เวลาหรือไม่      *  ถ้า showtime เป็น true คือ แสดงเวลาด้าย     *              เป็น false คือ ไม่แสดงเวลา     */    public static String getDateToStringShort(Date date,boolean showtime)    {           String pattern = "dd MMM yy HH:mm";         String dateString = new String();            java.text.SimpleDateFormat formatter =null;                    try {                if(showtime)                {   formatter = new java.text.SimpleDateFormat(pattern);                     dateString = formatter.format(date);                }                else                {                    pattern = "dd MMM yy";                    formatter = new java.text.SimpleDateFormat(pattern);                    dateString = formatter.format(date);                }                        } catch (Exception iae) {                Constant.println("public static String getDateToStringShort(Date date,boolean showtime)" + date);                //iae.printStackTrace(Constant.getPrintStream());                dateString = "";            }            formatter = null;            pattern = null;            return dateString;            }     /**     *  แปลงข้อมูล วันที่ และเวลา แบบ yyyy-mm-dd : MM:ss     *  ไปเป็นวันที่ รูปแบบข้อความ(แบบตัวเลขทั้งหมด) และจะให้แสดง เวลาหรือไม่      *  ถ้า showtime เป็น true คือ แสดงเวลาด้าย     *              เป็น false คือ ไม่แสดงเวลา     */    public static String getDateToStringDigit(Date date,boolean showtime)    {   String pattern = "dd MM yyyy HH:mm";         String dateString = new String();            java.text.SimpleDateFormat formatter =null;                    try {                if(showtime)                {   formatter = new java.text.SimpleDateFormat(pattern);                     dateString = formatter.format(date);                }                else                {                    pattern = "dd MM yyyy";                    formatter = new java.text.SimpleDateFormat(pattern);                    dateString = formatter.format(date);                }                        } catch (IllegalArgumentException iae) {                dateString = null;            }            formatter = null;            pattern = null;            return dateString;            }      /**     *  ทำการเปรียบเทียบวันที่ โดย      *  datestart ก่อน enddate จะให้ค่า true     */    public static boolean beforeDate(Date startDate, Date endDate)    {            return startDate.before(endDate);    }            /**     *  ตรวจสอบว่า วันที่เข้ามาเป็นวันอะไร     *  ข้อมูลเข้า เป็น Object Date     *  ข้อมูลออก เป็น      *  1  วันอาทิตย์     *  2  วันจันทร์     *  3  วันอังคาร     *  4  วันพุธ     *  5  วันพฤหัสบดี     *  6  วันศุกร์     *  7  วันเสาร์                                   */    public static String isDay(Date date)    {                   String day = new String();            Calendar c=Calendar.getInstance();                        c.setTimeInMillis(date.getTime());                           /*     numday =c.get(Calendar.DAY_OF_YEAR) -1;                nummonth = c.get(Calendar.MONTH);                numyear =  c.get(Calendar.YEAR) -543 -1970;            */                                day = String.valueOf(c.get(Calendar.DAY_OF_WEEK));                c = null;                          return day;    }        public static boolean checkTimeLocalThai()    {         Date today = new Date();         Calendar c=Calendar.getInstance();         c.setTimeInMillis(today.getTime());         Constant.println(today.toString());         return true;    }            /**     *  ทำการเปรียบเทียบวันที่ โดย      *  datestart ก่อน enddate จะให้ค่า true     */    public static boolean isToday(Date date,ConnectionInf cinf)    {       int numday =0;            int nummonth = 0;            int numyear = 0;            Date today = DateUtil.getDateFromText(DateTime.getTextCurrentDate(            cinf));            Calendar c=Calendar.getInstance();                        c.setTimeInMillis(today.getTime() - date.getTime());                numday =c.get(Calendar.DAY_OF_YEAR) -1;                nummonth = c.get(Calendar.MONTH);                numyear =  c.get(Calendar.YEAR) -543 -1970;                //Constant.println(numday + " " + nummonth + " " + numyear);                today = null;                c = null;                           if(numday == 0 && nummonth ==0 && numyear == 0)               return true;           else               return false;    }    /**    * ใช้ในการคำนวณ หา จำนวนชั่วโมง โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss    * ข้อมูลออก เป็นจำนวน ชั่วโมง    */     public static int countHourServer(String date,ConnectionInf cinf)     {           return countHourServer(date,DateTime.getTextCurrentDate(cinf));     }     /////////////////////////////////////////////////////////////////////     public static int countHourServer(String date,String cur_date)     {         int numhour = 0;        if(date != null || date.length() >0)        {            Date d = getDateFromText(date);            Date today = getDateFromText(cur_date);            long diff = today.getTime() - d.getTime();           if(today.after(d)){                numhour = Integer.parseInt(String.valueOf(diff/3600000));            }            else{                   Constant.println("Error date : Data must before today");                numhour = -1;            }        }        else numhour = -1;        return numhour;     }   /**    * ใช้ในการคำนวณ หา จำนวนชั่วโมง โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss    * ข้อมูลออก เป็นจำนวน ชั่วโมง    */     public static int countHour(String date,ConnectionInf cinf)     {  int numhour = 0;        if(date != null || date.length() >0)        {            Date d = getDateFromText(date);            DateTime dt = new DateTime(cinf);            Date today;            String dated;            try{            dated = dt.getDate();            }            catch(Exception ex)            {                dated = null;            }            if(dated !=null)                today = getDateFromText(dated);            else                today = DateUtil.getDateFromText(DateTime.getTextCurrentDate(cinf));            Calendar c=Calendar.getInstance();            int numday = 0;            Constant.println(today.toString());            Constant.println(d.toString());            if(today.after(d))            {    c.setTimeInMillis(today.getTime() - d.getTime());                 numday =c.get(Calendar.DATE) -1;                 numhour = c.get(Calendar.HOUR) -7;                 if(numday >0)                     numhour = numhour + numday*24;            }            else            {   Constant.println("Error date : ????? ??????ก??????????");                numhour = -1;            }            d = null;            today = null;            c = null;        }        else            numhour = -1;        return numhour;             }          /**    * ใช้ในการคำนวณ หา จำนวนสัปดาห์ โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss    * ข้อมูลออก เป็นจำนวน สัปดาห์     */     public static int countWeek(String date,ConnectionInf cinf)     {  int numweek = 0;        if(date != null || date.length() >0)        {            Date d = getDateFromText(date);                    Date today = DateUtil.getDateFromText(DateTime.getTextCurrentDate(            cinf));            Calendar c=Calendar.getInstance();                                  if(today.after(d))            {    c.setTimeInMillis(today.getTime() - d.getTime());                 numweek =c.get(Calendar.WEEK_OF_YEAR) -1;                                  //    Constant.println(numweek);            }            else            {   Constant.println("Error date : ????? ??????ก??????????");                numweek = -1;            }            d = null;            today = null;            c = null;        }        else            numweek = -1;        return numweek;             }              /**    * ใช้ในการคำนวณ หา จำนวนวัน โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss หรือ yyyy-mm-dd    * ข้อมูลออก เป็นจำนวน ชั่วโมง    */     public static int countDay(String date,ConnectionInf cinf)     {  int numday = 0;        if(date != null || date.length() >0)         {                Date d = getDateFromText(date);            Date today = DateUtil.getDateFromText(DateTime.getTextCurrentDate(            cinf));            Calendar c=Calendar.getInstance();                        if(today.after(d))            {    c.setTimeInMillis(today.getTime() - d.getTime());                 numday =c.get(Calendar.DATE) -1;            }            else            {   Constant.println("Error date : วันที่ ต้องน้อยกว่าวันปัจจุบัน");                numday = -1;            }            d = null;            today = null;            c = null;        }        else            numday = -1;                return numday;             }     /**      *คำนวนวันที่ย้อนหลัง      */     public static String getReverseDay(String date,int qty)     {        String reversedate = "";        String str = "";        Date d = DateUtil.getDateFromText(date);        java.util.Calendar c = java.util.Calendar.getInstance();        c.setTime(d);        c.set(Calendar.MONTH,c.get(Calendar.MONTH)-qty);        Date dat = c.getTime();        str = DateUtil.getDateToStringDigit(dat,false);        String a[] = str.split(" ");        for(int i = 0 ; i<a.length;i++){            if(reversedate.equals(""))                reversedate = reversedate+a[i];            else                reversedate = reversedate + "/" + a[i];        }        a = null;        str = null;        return reversedate;     }        /**    * ใช้ในการคำนวณ หา จำนวนวัน โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss หรือ yyyy-mm-dd จำนวน 2 ชุด     * คือ วันที่เริ่มต้น และวันที่ที่สิ้นสุด    * ข้อมูลออก เป็นจำนวนวัน      วันที่ลบวันที่ ไม่สนใจชั่วโมง ถ้าเป็น 0 ให้นับเป็น 1      *11 - 11 = 1      *12 - 11 = 1    */     public static int countDayByTwoDate(String begin_date, String end_date)     {  int numday = 0;        Constant.println("begin_date " +  begin_date);        Constant.println("end_date " +  end_date);        if(begin_date != null || begin_date.length() >0)         {                Date begin = getDateFromText(begin_date);            Date end = getDateFromText(end_date);//            Calendar c = Calendar.getInstance();            if(end.after(begin)) {                long day = end.getTime() - begin.getTime();                Constant.println("end_date " +  end_date);                                numday = (int)day/(1000*60*60*24) + 1;            }            else   numday = -1;        }        else    numday = -1;        return numday;             }     /**    * ใช้ในการคำนวณ หา จำนวนวัน โดย    * ข้อมูลเข้า เป็น String รูปแบบ yyyy-mm-dd,hh:mm:ss หรือ yyyy-mm-dd จำนวน 2 ชุด       วันที่ลบวันที่ สนใจชั่วโมง       *12,12:00 - 11,12:00 = 5 ชัวโมง = 0      *12,12:00 - 11,12:00 = 6 ชัวโมง = 1      *12,12:00 - 11,12:00 = 29 ชัวโมง = 1      *12,18:00 - 11,12:00 = 30 ชัวโมง = 2    */     public static int countDayByHour(String begin_date, String end_date)     {          if(begin_date != null || begin_date.length() >0)         {                Constant.println(begin_date + "   " + end_date);            Date begin = getDateFromText(begin_date);            Date end = getDateFromText(end_date);            Constant.println(begin + "   " + end);            long time_diff = end.getTime() - begin.getTime();            Constant.println(time_diff);            int hour = Integer.parseInt(String.valueOf(time_diff/(1000*60*60)));            Constant.println(hour);            int day = hour/24;            int exist = hour%24;            if(exist>=6) day = day+1;            return day;        }        return 0;     }     /**      * คำนวนวันที่ในอนาคต      * @param current_date = วันที่เริ่มต้น Format เป็น YY-mm-dd      * next_date = จำนวนวันถัดไปจากวันเริ่มต้น      * @return String ของวันที่คำนวนได้ Format เป็น YY-mm-dd      * @author kingland      */     public static String calDatefuture(String current_date,int next_date)     {         String result = null;         Calendar calendar = Calendar.getInstance();         if(current_date != null && current_date.length() >= 10)         {             Date dt = DateUtil.getDateFromText(current_date);             calendar.setTime(dt);             calendar.add(Calendar.DAY_OF_YEAR, next_date);             String year = String.valueOf(calendar.get(Calendar.YEAR));             String month = String.valueOf(calendar.get(Calendar.MONTH)+1);             String day = String.valueOf(calendar.get(Calendar.DATE));             if(month.length() == 1)             {                 month = "0"+month;             }             if(day.length() == 1)             {                 day = "0"+day;             }             result = year+"/"+month+"/"+day;             year = null;             month = null;             day = null;         }         return result;     }         }