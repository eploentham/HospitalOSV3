/*
 * Par.java
 *
 * Created on 9 กันยายน 2548, 18:18 น.
 */

package com.hosv3.gui.component;
import com.hosv3.utility.Constant;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.text.*;
import java.util.*;

import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.connection.*;
import com.hospital_os.usecase.connection.CommonInf;
/**
 *
 * @author  kingland
 */
public class BalloonPanel extends javax.swing.JPanel {
    
    /** Creates new form Par */
    Vector vDataList;
    String after_select = "";
    String before_select = "";
    int search_index;
    JWindow balloon;
    JTextComponent component;
    ExecuteControlInf theEC;
    String[] title = {""};
    
    long firstClickTime = 0;
    boolean checkrepeat = false;
    public BalloonPanel() {
        initComponents();
    }
    public BalloonPanel(String ti) {
        initComponents();        
        setTable(null);
    }
     public BalloonPanel(String ti,Vector v) {
        initComponents();        
        setTable(v);
    }
     public void setDataList(Vector v){
         vDataList = v;
     }
     public void setEControl(ExecuteControlInf ec){
         theEC = ec;
     }
    public void setSelectAround(String before,String after){
        after_select = after;
        before_select = before;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.BorderLayout());

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jScrollPane1.setBorder(null);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable1FocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTable1FocusLost(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents

    private void jTable1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusGained
        
    }//GEN-LAST:event_jTable1FocusGained

    private void jTable1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable1FocusLost
        balloon.dispose();
    }//GEN-LAST:event_jTable1FocusLost

    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
            balloon.dispose();
        }
    }//GEN-LAST:event_formKeyReleased

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
       if(evt.getKeyCode() == KeyEvent.VK_ENTER){
           Constant.println("if(evt.getKeyCode() == KeyEvent.VK_ENTER){");
           System.out.println("jTable1.getSelectedRow() = " + jTable1.getSelectedRow());
           if(jTable1.getSelectedRow() == 0){}
           // Somprasong commemt 160810 bug select first row
//               jTable1.setRowSelectionInterval(jTable1.getRowCount()-1, jTable1.getRowCount()-1);
           else
               jTable1.setRowSelectionInterval(jTable1.getSelectedRow()-1, jTable1.getSelectedRow()-1);
            int select = jTable1.getSelectedRow();
            System.out.println("select = " + select);
            selectItem(select);
            Constant.println("this.component.requestFocus();");
            this.component.requestFocus();
        }
        else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){
           Constant.println("else if(evt.getKeyCode() == KeyEvent.VK_ESCAPE){");
            balloon.dispose();
            Constant.println("this.component.requestFocus();");
            this.component.requestFocus();
        }

            
    }//GEN-LAST:event_jTable1KeyReleased

    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        doubleClickListLab();
    }//GEN-LAST:event_jTable1MouseReleased
    
    public JTable getTable(){
        return this.jTable1;
    }   
    public void setTable(Vector v){
        if(v!=null && !v.isEmpty())
        {
            CommonInf tmp = (CommonInf) v.get(0);
            v.add(tmp);
        }
        this.vDataList = v;
        TaBleModel tm;
        int vsize = 0;
        if(v != null)
            vsize = v.size();
        if(v == null || vsize == 0){
            tm = new TaBleModel(title,vsize);
        }
        else{
            tm = new TaBleModel(title,vsize);
            for(int i=0;i<vsize;i++){
                    tm.setValueAt(((CommonInf)v.get(i)).getName(),i,0);
            }
        }
        jTable1.setModel(tm);
    }
    
    public void setBalloon(JWindow bl){
        balloon = bl;
    }
//    public void requestFocus(){
//        this.jTable1.requestFocus();
//    }
    public void setComponent(JTextComponent com){
        component = com;
        setBalloonLocation(component.getLocationOnScreen());
    }
    public void setComponent(JTextComponent com,int index){
        component = com;
        search_index = index;
        setBalloonLocation(component.getLocationOnScreen());
    }
    public void setCheckRepeat(boolean repeat)
    {
        checkrepeat = repeat;
    }
    /*private void setBalloonLocation(Rectangle r){        
        int x = r.x;
        int y = (r.y) - (balloon.getBounds().height);
    }*/
    private void setBalloonLocation(Point p){        
        JWindow jf = balloon;
        int x = p.x;
        int y = (p.y) - (balloon.getBounds().height);
        int bwidth = x + balloon.getBounds().width;
        int framewidth = jf.getBounds().x + jf.getBounds().width;
        if(bwidth > framewidth ){
            int sub = bwidth - framewidth;
            x = x - sub;
            balloon.setLocation(x, y);
        }
        else{
            balloon.setLocation(x, y);
        }
       
    }
    private void selectItem(int select)
    {
        Constant.println("private void selectItem(int select)");
        String str = component.getText().substring(0,search_index);
        String value = (String) jTable1.getValueAt(select, 0);
        component.setText(str + before_select + value + after_select);
        
        if(theEC!=null)
            theEC.execute(vDataList.get(select));
        
        balloon.dispose();
    }
    
    private void doubleClickListLab()
    {
        try{
            long clickTime = System.currentTimeMillis();
            long clickInterval = clickTime - firstClickTime;
            if(clickInterval < 400)
            {
                int select = jTable1.getSelectedRow();
                selectItem(select);
            }
            else
            {
              firstClickTime = clickTime;
            }
        }
        catch(Exception ex)
        {
            ex.printStackTrace(Constant.getPrintStream());
        }
    }
    public static void main(String[] argc){
        String test = "henbe \n test\nbytest";
        String tests[] = test.split(" ");
        for(int i=0;i<tests.length;i++)
        {
            Constant.println(tests[i]);    
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    protected com.hosv3.gui.component.HJTableSort jTable1;
    // End of variables declaration//GEN-END:variables
   
}
