/*
 * DialogAdmit.java
 *
 * Created on 8 พฤศจิกายน 2546, 14:14 น.
 */
package com.hosv3.gui.dialog;
import java.util.*;
import java.awt.*;
import javax.swing.*;

import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;
import com.hosv3.subject.*;

import com.hospital_os.object.*; 
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.ComboFix;
import com.hosv3.utility.Constant;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.object.specialQuery.*;
import com.hospital_os.utility.CellRendererHos;
import com.hosv3.control.lookup.R53SurveilComplLookup;
import com.hosv3.control.lookup.R53SurveilOrgaLookup;
/**
 *
 * @author  tong
 */
public class DialogSurveil extends javax.swing.JFrame implements UpdateStatus {

    public static final long  serialVersionUID = 0;
    HosControl theHC;
    HosObject theHO;
    HosSubject theHS;
    public boolean actionCommand = false;
    LookupControl theLookupControl;
    VisitControl theVisitControl;
    DiagnosisControl theDiagnosisControl;
    PatientControl thePatientControl;
    Visit theVisit;
    Surveil theSurveil;
    Vector vSurveil;
    Patient thePatient;
    Vector vListSurveil;
    int check = 0;
    private String[] col_jTableListSurveilReport = {Constant.getTextBundle("ผู้ป่วย"),
                                            Constant.getTextBundle("ADDRESS"),
                                            Constant.getTextBundle("ICD_Code"),
                                            Constant.getTextBundle("SickDate"),
                                            Constant.getTextBundle("วันที่พบ"),
                                            Constant.getTextBundle("Status")};
    private String[] col_jTableListSurveil = {"HN","VN","ICD","วันเริ่มป่วย"};
    CellRendererHos hnRender = new CellRendererHos(CellRendererHos.HN);
    CellRendererHos vnRender = new CellRendererHos(CellRendererHos.VN);
    private PrintControl thePrintControl;
    
    /** Creates new form DialogAdmit */
    public DialogSurveil(HosControl hc,UpdateStatus us,Surveil su) 
    {
        //super(parent, modal);
        theHC = hc;
        theHO = theHC.theHO;
        theHS = theHC.theHS;
        theLookupControl = hc.theLookupControl;
        theVisitControl = hc.theVisitControl;
        theDiagnosisControl = hc.theDiagnosisControl;
        thePatientControl = hc.thePatientControl;
        thePrintControl = hc.thePrintControl;
        theHO = hc.theHO;
        theVisit = hc.theHO.theVisit;
        hnRender = new CellRendererHos(CellRendererHos.HN,theLookupControl.getSequenceDataHN().pattern);
        vnRender = new CellRendererHos(CellRendererHos.VN,theLookupControl.getSequenceDataVN().pattern);
        
        initComponents();
        this.jTableListSurveil.setGuiMode(true);
        this.jTableListSurveilReport.setGuiMode(true);
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/com/hospital_os/images/surveil.gif")));

        ComboFix p = new ComboFix();
        p.code = "0";
        p.name = Constant.getTextBundle("ทั้งหมด");
        ComboboxModel.initComboBox(jComboBoxStatusSurveil, theLookupControl.listTypeDish());
        jComboBoxStatusSurveil.insertItemAt((Object)p,0);
        jComboBoxStatusSurveil.setSelectedIndex(0);
        ComboboxModel.initComboBox(jComboBoxTypeDish, theLookupControl.listTypeDish());

        this.jComboBoxLookupOrganism.setControl(new R53SurveilOrgaLookup(theLookupControl.theConnectionInf), false);
        this.jComboBoxLookupComplica.setControl(new R53SurveilComplLookup(theLookupControl.theConnectionInf), false);

        setEnable();
        dateComboBoxFrom.setEditable(true);
        dateComboBoxTo.setEditable(true);
        setSurveil(vSurveil);
        
        setSize(640,480);
        setTitle(Constant.getTextBundle("การบันทึกข้อมูลโรคเฝ้าระวัง"));
        setLanguage("");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
        
    }
    
    private void setDataAll()
    {   
//        jTextFieldInfection.setText("");
//        jTextAreaCaseInfection.setText("");
        jLabelHn.setText("");
        jLabelVN.setText("");
        dateComboBoxSickDate.setEditable(true);
        dateComboBoxSickDate.setText("");
        jLabelIcdCode.setText("");
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        dateComboBoxFrom = new com.hospital_os.utility.DateComboBox();
        dateComboBoxTo = new com.hospital_os.utility.DateComboBox();
        jPanel11 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        hNTextFieldSearchHn = new com.hospital_os.utility.HNTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabel6 = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListSurveil = new com.hosv3.gui.component.HJTableSort();
        jPanel7 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelPatientStatus = new javax.swing.JLabel();
        jLabelCaseInfection = new javax.swing.JLabel();
        jLabelInfection = new javax.swing.JLabel();
        jComboBoxTypeDish = new javax.swing.JComboBox();
        jComboBoxLookupOrganism = new com.hosv3.gui.component.HosComboBox();
        jComboBoxLookupComplica = new com.hosv3.gui.component.HosComboBox();
        jTextAreaCaseInfection = new javax.swing.JTextField();
        jTextFieldInfection = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jButtonPrint = new javax.swing.JButton();
        jButtonPriview = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabelVN = new javax.swing.JLabel();
        jLabelHn = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelIcdCode = new javax.swing.JLabel();
        dateComboBoxSickDate = new com.hospital_os.utility.DateComboBox();
        jPanel10 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jComboBoxStatusSurveil = new javax.swing.JComboBox();
        jLabelStatusServeil = new javax.swing.JLabel();
        jPanel13 = new javax.swing.JPanel();
        jButtonSearchListSurveil = new javax.swing.JButton();
        jLabelDateSearchSurveil = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        dateComboBoxSearchSurveilStart = new com.hospital_os.utility.DateComboBox();
        dateComboBoxSearchSurveilEnd = new com.hospital_os.utility.DateComboBox();
        jButtonPrintListChronic = new javax.swing.JButton();
        jButtonPreviewPrint = new javax.swing.JButton();
        jPanel15 = new javax.swing.JPanel();
        jScrollPaneShowListSurveil = new javax.swing.JScrollPane();
        jTableListSurveilReport = new com.hosv3.gui.component.HJTableSort();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(575, 380));
        jTabbedPane1.setPreferredSize(new java.awt.Dimension(575, 380));

        jPanel1.setMinimumSize(new java.awt.Dimension(570, 300));
        jPanel1.setPreferredSize(new java.awt.Dimension(570, 300));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Diag_Surveil_Search"));
        jPanel4.setMinimumSize(new java.awt.Dimension(300, 250));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 250));
        jPanel4.setRequestFocusEnabled(false);
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("ถึง");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel5.add(jLabel2, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel5.add(dateComboBoxFrom, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 3);
        jPanel5.add(dateComboBoxTo, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jLabel1, gridBagConstraints);

        hNTextFieldSearchHn.setColumns(9);
        hNTextFieldSearchHn.setMinimumSize(new java.awt.Dimension(70, 21));
        hNTextFieldSearchHn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hNTextFieldSearchHnActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(hNTextFieldSearchHn, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(jPanel11, gridBagConstraints);

        jLabel6.setSelected(true);
        jLabel6.setText("วันที่");
        jLabel6.setToolTipText("วันที่รับบริการ");
        jLabel6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLabel6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jLabel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel4.add(jPanel5, gridBagConstraints);

        jPanel6.setMinimumSize(new java.awt.Dimension(320, 250));
        jPanel6.setPreferredSize(new java.awt.Dimension(320, 250));
        jPanel6.setRequestFocusEnabled(false);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setMinimumSize(new java.awt.Dimension(340, 120));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(340, 120));

        jTableListSurveil.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableListSurveil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListSurveilMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListSurveil);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Diag_Surveil_Detail"));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelPatientStatus.setText("TypeDish");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelPatientStatus, gridBagConstraints);

        jLabelCaseInfection.setText("Organism");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelCaseInfection, gridBagConstraints);

        jLabelInfection.setText("Complica");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelInfection, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jComboBoxTypeDish, gridBagConstraints);

        jComboBoxLookupOrganism.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxLookupOrganismActionPerformed(evt);
            }
        });
        jComboBoxLookupOrganism.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxLookupOrganismKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel3.add(jComboBoxLookupOrganism, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel3.add(jComboBoxLookupComplica, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 5);
        jPanel3.add(jTextAreaCaseInfection, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 2, 5);
        jPanel3.add(jTextFieldInfection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel7.add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jButtonSave, gridBagConstraints);

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jButtonCancel, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonPrint.setText("Print");
        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jButtonPrint, gridBagConstraints);

        jButtonPriview.setText("Preview");
        jButtonPriview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPriviewActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel8.add(jButtonPriview, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel2.add(jPanel8, gridBagConstraints);

        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDel.setFocusTraversalPolicyProvider(true);
        jButtonDel.setMaximumSize(new java.awt.Dimension(25, 25));
        jButtonDel.setMinimumSize(new java.awt.Dimension(25, 25));
        jButtonDel.setPreferredSize(new java.awt.Dimension(25, 25));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel2.add(jButtonDel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(jPanel2, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel3, gridBagConstraints);

        jLabel4.setText("VN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 0, 0);
        jPanel9.add(jLabelVN, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel9.add(jLabelHn, gridBagConstraints);

        jLabel7.setLabelFor(this);
        jLabel7.setText("SickDate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel7, gridBagConstraints);

        jLabel8.setText("CodeIcd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel9.add(jLabelIcdCode, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel9.add(dateComboBoxSickDate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel7.add(jPanel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel1.add(jPanel7, gridBagConstraints);

        jTabbedPane1.addTab("บันทึกข้อมูล", jPanel1);

        jPanel10.setMaximumSize(new java.awt.Dimension(570, 300));
        jPanel10.setMinimumSize(new java.awt.Dimension(570, 300));
        jPanel10.setPreferredSize(new java.awt.Dimension(570, 300));
        jPanel10.setLayout(new java.awt.GridBagLayout());

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jComboBoxStatusSurveil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxStatusSurveilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel14.add(jComboBoxStatusSurveil, gridBagConstraints);

        jLabelStatusServeil.setText("PatientStatus");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel14.add(jLabelStatusServeil, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel12.add(jPanel14, gridBagConstraints);

        jPanel13.setLayout(new java.awt.GridBagLayout());

        jButtonSearchListSurveil.setText("Search");
        jButtonSearchListSurveil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchListSurveilActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jButtonSearchListSurveil, gridBagConstraints);

        jLabelDateSearchSurveil.setText("DateStart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jLabelDateSearchSurveil, gridBagConstraints);

        jLabel5.setText("DateEnd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(jLabel5, gridBagConstraints);

        dateComboBoxSearchSurveilStart.setMinimumSize(new java.awt.Dimension(93, 24));
        dateComboBoxSearchSurveilStart.setPreferredSize(new java.awt.Dimension(93, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(dateComboBoxSearchSurveilStart, gridBagConstraints);

        dateComboBoxSearchSurveilEnd.setMinimumSize(new java.awt.Dimension(93, 24));
        dateComboBoxSearchSurveilEnd.setPreferredSize(new java.awt.Dimension(93, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(1, 2, 1, 2);
        jPanel13.add(dateComboBoxSearchSurveilEnd, gridBagConstraints);

        jButtonPrintListChronic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/print24.gif"))); // NOI18N
        jButtonPrintListChronic.setToolTipText("Print");
        jButtonPrintListChronic.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonPrintListChronic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintListChronicActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel13.add(jButtonPrintListChronic, gridBagConstraints);

        jButtonPreviewPrint.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/preview24.gif"))); // NOI18N
        jButtonPreviewPrint.setToolTipText("PreviewPrint");
        jButtonPreviewPrint.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonPreviewPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviewPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel13.add(jButtonPreviewPrint, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel12.add(jPanel13, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel10.add(jPanel12, gridBagConstraints);

        jPanel15.setMaximumSize(new java.awt.Dimension(250, 270));
        jPanel15.setMinimumSize(new java.awt.Dimension(250, 270));
        jPanel15.setPreferredSize(new java.awt.Dimension(250, 270));
        jPanel15.setLayout(new java.awt.GridBagLayout());

        jScrollPaneShowListSurveil.setPreferredSize(new java.awt.Dimension(454, 404));
        jScrollPaneShowListSurveil.setVerifyInputWhenFocusTarget(false);
        jScrollPaneShowListSurveil.setViewportView(jTableListSurveilReport);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jScrollPaneShowListSurveil, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel10.add(jPanel15, gridBagConstraints);

        jTabbedPane1.addTab("ค้นหารายชื่อ", jPanel10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonPreviewPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviewPrintActionPerformed
         // สั่งพิมพ์รายการที่ค้นหาได้นะคะ
        if(vListSurveil != null && vListSurveil.size() > 0)
        {
            int valuePrint = 1;
            com.printing.object.surveilReport.PrintSurveilReport psurveil = new com.printing.object.surveilReport.PrintSurveilReport(); 
            psurveil.setDateEndQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilEnd.getText()),false));
            psurveil.setDateStartQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilStart.getText()),false));
            psurveil.setStatusQuery(jComboBoxStatusSurveil.getSelectedItem().toString());
            psurveil.setToday(DateUtil.getDateToString(DateUtil.getDateFromText(
                theHC.theLookupControl.getTextCurrentDate()),false));
            theHC.thePrintControl.printListSurveil(vListSurveil
                    ,PrintControl.MODE_PREVIEW,psurveil);
	}
    }//GEN-LAST:event_jButtonPreviewPrintActionPerformed

    private void jButtonPrintListChronicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintListChronicActionPerformed
         // สั่งพิมพ์รายการที่ค้นหาได้นะคะ
        if(vListSurveil != null && vListSurveil.size() > 0)
        {
            com.printing.object.surveilReport.PrintSurveilReport psurveil = new com.printing.object.surveilReport.PrintSurveilReport(); 
            psurveil.setDateEndQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilEnd.getText()),false));
            psurveil.setDateStartQuery(DateUtil.getDateToString(DateUtil.getDateFromText(dateComboBoxSearchSurveilStart.getText()),false));
            psurveil.setStatusQuery(jComboBoxStatusSurveil.getSelectedItem().toString());
            psurveil.setToday(DateUtil.getDateToString(DateUtil.getDateFromText(
                theHC.theLookupControl.getTextCurrentDate()),false));
            theHC.thePrintControl.printListSurveil(vListSurveil
                    ,PrintControl.MODE_PRINT,psurveil);
	}
    }//GEN-LAST:event_jButtonPrintListChronicActionPerformed

    private void jLabel6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLabel6ActionPerformed
        boolean b = this.jLabel6.isSelected();
        this.dateComboBoxFrom.setEnabled(b);
        this.dateComboBoxTo.setEnabled(b);
        searchSurveil();
    }//GEN-LAST:event_jLabel6ActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        //ลบไม่ได้หากต้องการลบต้องไปยกเลิกรายการ diagicd10 เท่านั้น
        deleteSurveil();
        
    }                                              private void jComboBoxStatusSurveilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-LAST:event_jButtonDelActionPerformed
        getDataForSearchSurveilReport();//GEN-FIRST:event_jComboBoxStatusSurveilActionPerformed
    }                                                          private void jButtonSearchListSurveilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-LAST:event_jComboBoxStatusSurveilActionPerformed
        getDataForSearchSurveilReport();//GEN-FIRST:event_jButtonSearchListSurveilActionPerformed
    }//GEN-LAST:event_jButtonSearchListSurveilActionPerformed
    private void hNTextFieldSearchHnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hNTextFieldSearchHnActionPerformed
        searchSurveil();
    }    private void jTableListSurveilMouseReleased(java.awt.event.MouseEvent evt) {//GEN-LAST:event_hNTextFieldSearchHnActionPerformed
        selectListSurveil();//GEN-FIRST:event_jTableListSurveilMouseReleased
    }//GEN-LAST:event_jTableListSurveilMouseReleased
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchSurveil();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        
        saveSurveil();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        dispose();
    }//GEN-LAST:event_closeDialog

    private void jComboBoxLookupOrganismActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxLookupOrganismActionPerformed
//henbe comment 100253 ton ทำไมไม่ใช้ ให้เหมือนคนอื่นเขา มา new lookup ทุกครั้งที่เรียกเพื่ออะไรรู้มั้ยว่าเปลืองมาก
        if(evt.getActionCommand().equals("comboBoxEdited"))
        {
            if(jComboBoxLookupOrganism.getText().equals(""))
            {
                jComboBoxLookupOrganism.refresh();
            }
        }
    }//GEN-LAST:event_jComboBoxLookupOrganismActionPerformed

    private void jComboBoxLookupOrganismKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxLookupOrganismKeyReleased
        
    }//GEN-LAST:event_jComboBoxLookupOrganismKeyReleased

    private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed
        thePrintControl.printSurveil(theSurveil.getObjectId(),false);
    }//GEN-LAST:event_jButtonPrintActionPerformed

    private void jButtonPriviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPriviewActionPerformed
        thePrintControl.printSurveil(theSurveil.getObjectId(),true);
    }//GEN-LAST:event_jButtonPriviewActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      //  new DialogAdmit(new javax.swing.JFrame(), true).setVisible(true);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.DateComboBox dateComboBoxFrom;
    private com.hospital_os.utility.DateComboBox dateComboBoxSearchSurveilEnd;
    private com.hospital_os.utility.DateComboBox dateComboBoxSearchSurveilStart;
    private com.hospital_os.utility.DateComboBox dateComboBoxSickDate;
    private com.hospital_os.utility.DateComboBox dateComboBoxTo;
    private com.hospital_os.utility.HNTextField hNTextFieldSearchHn;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonPreviewPrint;
    private javax.swing.JButton jButtonPrint;
    private javax.swing.JButton jButtonPrintListChronic;
    private javax.swing.JButton jButtonPriview;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JButton jButtonSearchListSurveil;
    private com.hosv3.gui.component.HosComboBox jComboBoxLookupComplica;
    private com.hosv3.gui.component.HosComboBox jComboBoxLookupOrganism;
    private javax.swing.JComboBox jComboBoxStatusSurveil;
    private javax.swing.JComboBox jComboBoxTypeDish;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JCheckBox jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelCaseInfection;
    private javax.swing.JLabel jLabelDateSearchSurveil;
    private javax.swing.JLabel jLabelHn;
    private javax.swing.JLabel jLabelIcdCode;
    private javax.swing.JLabel jLabelInfection;
    private javax.swing.JLabel jLabelPatientStatus;
    private javax.swing.JLabel jLabelStatusServeil;
    private javax.swing.JLabel jLabelVN;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneShowListSurveil;
    private javax.swing.JTabbedPane jTabbedPane1;
    private com.hosv3.gui.component.HJTableSort jTableListSurveil;
    private com.hosv3.gui.component.HJTableSort jTableListSurveilReport;
    private javax.swing.JTextField jTextAreaCaseInfection;
    private javax.swing.JTextField jTextFieldInfection;
    // End of variables declaration//GEN-END:variables
    /*
     *  ojika
     */
    private void getDataForSearchSurveilReport()
    {
        String codeStatusList = ComboboxModel.getCodeComboBox(jComboBoxStatusSurveil);
        String dateStartList = dateComboBoxSearchSurveilStart.getText();
        String dateEndList = dateComboBoxSearchSurveilEnd.getText();
        
        Vector v = theDiagnosisControl.listSurveilByStatusDate(dateStartList, dateEndList, codeStatusList);
        // ดึงค่าจัดเก็บใน Object chronicReport
        setSurveilReport(v);
    }
    
    
    
    private void setSurveilReport(Vector vListSurveil)
    {
        this.vListSurveil = vListSurveil;
        if(vListSurveil == null)
        {
            TaBleModel tm = new TaBleModel(col_jTableListSurveilReport,0);
            jTableListSurveilReport.setModel(tm);
            return;
        }
        TaBleModel tm = new TaBleModel(col_jTableListSurveilReport,vListSurveil.size());
        for(int i=0; i<vListSurveil.size(); i++ )
        {
            SurveilReport theSurveilReport = (SurveilReport)vListSurveil.get(i); 
            tm.setValueAt(theLookupControl.getRenderTextHN(theSurveilReport.hn)
                    + " " + theSurveilReport.fname
                    + " " + theSurveilReport.lname, i, 0);
            tm.setValueAt(theSurveilReport.patient_address,i, 1);
            tm.setValueAt(theSurveilReport.diagnosis
                    + ": " + theSurveilReport.icd10,i, 2);
            tm.setValueAt(theSurveilReport.date_dx,i, 3); 
            tm.setValueAt(theSurveilReport.visit_date,i, 4);
            tm.setValueAt(theSurveilReport.status,i, 5);
        }
        jTableListSurveilReport.setModel(tm);
        jTableListSurveilReport.setSize(900, 400);
    }
    
    /*
     *  เพื่อทำการ บังคับการทำงานของปุ่ม + และ -
     *  input  : Object theSurveil
     *  output :  
     */
    private void setEnable()
    {
        if(theSurveil==null)
        {
            jButtonDel.setEnabled(false);
            jButtonSave.setEnabled(false);
            jButtonPriview.setEnabled(false);
            jButtonPrint.setEnabled(false);
        }
        else
        {
            jButtonDel.setEnabled(true);
            jButtonSave.setEnabled(true);
            jButtonPriview.setEnabled(true);
            jButtonPrint.setEnabled(true);
        }
    }
    
     /*
      * เพื่อทำการดึงค่าข้อมูลที่ได้จาก ฟอร์มลงใน object 
      *inupt ข้อมูลจากฟอร์ม
      *output 
      */
    private Surveil getSurveil()
    {         
        check = 0;
        //เพิ่มการเก็บ family_id ในตาราง t_surveil
            theSurveil.complica = jTextFieldInfection.getText();
            theSurveil.organism = jTextAreaCaseInfection.getText();
            theSurveil.complica53 = Gutil.getGuiData(this.jComboBoxLookupComplica);
            theSurveil.organism53 = Gutil.getGuiData(this.jComboBoxLookupOrganism);
            theSurveil.patient_status = ComboboxModel.getCodeComboBox(jComboBoxTypeDish);
            theSurveil.illdate = dateComboBoxSickDate.getText();
            return theSurveil;
    }
    /*
     * แสดงค่า object ในแบบฟอร์ม
     *intup : object Surveil
     */   
    
    private void setSurveil(Patient pt,Surveil sv)
    {
        theSurveil = sv;
        jLabelVN.setText(theLookupControl.getRenderTextVN(theSurveil.vn));
        jLabelHn.setText(theLookupControl.getRenderTextHN(theSurveil.hn));
        if(pt!=null)
            jLabelHn.setText(theLookupControl.getRenderTextHN(theSurveil.hn) + " " + pt.patient_name + " " + pt.patient_last_name);
            
        //jLabelDateVN.setText(DateUtil.convertFieldDate(theSurveil.illdate));
        dateComboBoxSickDate.setText(DateUtil.convertFieldDate(theSurveil.illdate));
        jLabelIcdCode.setText(theSurveil.icd_code);
        jTextFieldInfection.setText(theSurveil.complica);
        jTextAreaCaseInfection.setText(theSurveil.organism);
        Gutil.setGuiData(this.jComboBoxLookupComplica, theSurveil.complica53);
        Gutil.setGuiData(this.jComboBoxLookupOrganism, theSurveil.organism53);
        Gutil.setGuiData(jComboBoxTypeDish, theSurveil.patient_status);
    } 
       
    /*
     *แสดงข้อมูลการค้นหาข้อโรคเฝ้าระวัง โดยนำ vector มาแสดง
     *input  :vector vSurveil 
     *output :
     */
    private void setSurveil(Vector vSurveil)
    {  
          TaBleModel tm ;
        if(vSurveil !=null)
        {
            tm = new TaBleModel(col_jTableListSurveil,vSurveil.size());
            for(int i=0; i<vSurveil.size(); i++ )
            {
                Surveil sUrveil = (Surveil)vSurveil.get(i);
                tm.setValueAt(sUrveil.hn,i,0);
                tm.setValueAt(sUrveil.vn, i, 1);
                tm.setValueAt(sUrveil.icd_code,i,2);
                tm.setValueAt(DateUtil.convertFieldDate(sUrveil.illdate),i, 3);
            }  
        }
        else
        {
            tm = new TaBleModel(col_jTableListSurveil,0);
            
        }
        jTableListSurveil.setModel(tm);
        jTableListSurveil.getColumnModel().getColumn(0).setCellRenderer(hnRender);
        jTableListSurveil.getColumnModel().getColumn(1).setCellRenderer(vnRender);
    }  
    
    /*
     * เพื่อทำการดึงค่าข้อมูลจาก Table แสดงผลการค้นหาข้อมูล
     * input : ค่า row ที่ทำการเลือกข้อมูล
     */
    private void selectListSurveil()
    {
        int row = jTableListSurveil.getSelectedRow();
        String of =(String)jTableListSurveil.getValueAt(row,0);
        Surveil sv = null;
        for(int i =0 ; i< vSurveil.size() ; i++)
        {
             sv = (Surveil)vSurveil.get(i);
             if(of.equals(sv.hn))
                 break;
        }
         setEnable();
         thePatient = theHC.thePatientControl.readPatientByPatientIdRet(sv.patient_id);
         setSurveil(thePatient,sv);
    }
    private void clearRigthPanel(){
        jButtonDel.setEnabled(false);
        jButtonSave.setEnabled(false);
        jButtonPriview.setEnabled(false);
        jButtonPrint.setEnabled(false);
        jLabelVN.setText("");
        jLabelHn.setText("");
        dateComboBoxSickDate.setText("");
        jLabelIcdCode.setText("");
        jTextFieldInfection.setText("");
        jTextAreaCaseInfection.setText("");
    }
    private void searchSurveil()
    {
        clearRigthPanel();
        String dateFrom = dateComboBoxFrom.getText();
        String dateTo = dateComboBoxTo.getText();
        String hn = hNTextFieldSearchHn.getText(); 
        if(!jLabel6.isSelected()){
            dateFrom = "";
            dateTo = "";
        }
        vSurveil = theDiagnosisControl.listSurveilByHnDate(dateFrom, dateTo, hn);
        if(vSurveil != null && vSurveil.size() == 1 && theHO.thePatient != null)    
        {
            setEnable();
            setSurveil(theHO.thePatient,(Surveil)vSurveil.get(0));
        }
        setSurveil(vSurveil);
    }
    
    private void saveSurveil()
    {           
        Surveil sv = getSurveil();
        if(check == 1)
        {
            return;
        }
        theDiagnosisControl.saveSurveil(sv,this,1);
//        setEnable();
//        searchSurveil();
    }

    /*
     * ให้ในการลบค่า Surveil
     * input : object Surveil*/
    
    private void deleteSurveil()
    {
        if(!theDiagnosisControl.deleteSurveil(theSurveil,this))
            return;
        vSurveil.remove(jTableListSurveil.getSelectedRow());
        theSurveil=null;
        setEnable();
        setDataAll();
    }
/*-----------------------------------------------------------*/    
    public boolean showDialog(Surveil su)//, Office off)
    {
        clearRigthPanel();
        setDataAll();
        setEnable();
        String currentdate = theHO.date_time;
        dateComboBoxFrom.setText(DateUtil.getReverseDay(currentdate, 1));
        if(theHO.thePatient!=null){
            this.hNTextFieldSearchHn.setText(theHO.thePatient.hn);
        }
        hNTextFieldSearchHnActionPerformed(null);
        setVisible(true);
        if(actionCommand){    
            return true;
        }
        return false;
    }    
    
    
      public void setLanguage(String msg)
      {
            GuiLang.setLanguage(col_jTableListSurveil);
            GuiLang.setLanguage(col_jTableListSurveil);
            GuiLang.setLanguage(jButtonCancel);//ปุ่ม cancel
            GuiLang.setLanguage(jButtonSave);// ปุ่มบันทึก
            GuiLang.setLanguage(jButtonSearch);//ปุ่มค้นหา
            GuiLang.setLanguage(jButtonSearchListSurveil);
            GuiLang.setLanguage(jLabel1);
            GuiLang.setLanguage(jLabel2);// วันที่ค้นหา
            GuiLang.setLanguage(jLabel3);
            GuiLang.setLanguage(jLabel4);
            GuiLang.setLanguage(jLabel5);
            GuiLang.setLanguage(jLabel6);
            GuiLang.setLanguage(jLabel7);
            GuiLang.setLanguage(jLabel8);
            GuiLang.setLanguage(jLabelCaseInfection);
            GuiLang.setLanguage(jLabelDateSearchSurveil);
            GuiLang.setLanguage(jLabelDateSearchSurveil);
            GuiLang.setLanguage(jLabelInfection);
            GuiLang.setLanguage(jLabelPatientStatus);
            GuiLang.setLanguage(jLabelStatusServeil);
            GuiLang.setLanguage(jLabelStatusServeil);
            GuiLang.setLanguage(jTabbedPane1);
            GuiLang.setTextBundle(jPanel4);
            GuiLang.setTextBundle(jPanel7); 
      }    
    
      public boolean confirmBox(String str, int status) {
        int i = JOptionPane.showConfirmDialog(this,str,Constant.getTextBundle("เตือน"),JOptionPane.YES_NO_OPTION);
        return (i==JOptionPane.YES_OPTION);
      }
      
      public JFrame getJFrame() {
          return this;
      }
      
      public void setStatus(String str, int status) {
        str = Constant.getTextBundle(str);
        JOptionPane.showMessageDialog(this,str);
      }
}
