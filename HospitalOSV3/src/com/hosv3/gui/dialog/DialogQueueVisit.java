/*
 * DialogQueueVisit.java
 *
 * Created on 23 พฤษภาคม 2547, 8:18 น.
 */
package com.hosv3.gui.dialog;
import com.hosv3.utility.Constant;
import com.hosv3.control.*;
import com.hosv3.object.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.*;
import com.hospital_os.object.*;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.*;
import com.hospital_os.utility.DateUtil;
import javax.swing.table.*;
import java.util.*;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
/**
 *
 * @author  tong
 */
public class DialogQueueVisit extends javax.swing.JDialog {

    /** Creates new form DialogQueueVisit */
	public static final long  serialVersionUID = 0;
	HosControl theHC;
    HosObject theHO;
    VisitControl theVisitControl;
    SetupControl theSetupControl;
    QueueVisit theQueueVisit;
    /**เป็น Vector ที่เก็บ Object ของ QueueVisit*/
    Vector vQueueVisit;
    Visit theVisit;
    DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
    public static boolean actionCommand = false;
    private CellRendererColor theCellRendererColor = new CellRendererColor(true);
    /**
     * @deprecated henbe unused
     */
    private int Option =0;
    private String[] col_jTableQueuePatient = {"ลำดับ","คำอธิบาย","คิว","สี"};
    private Vector vWaitAppointment;
    private Vector vAppointmentOrder;
    CellRendererHos dateRender = new CellRendererHos(CellRendererHos.DATE);
    private Vector vChoose;
    /**ใช้ เมื่อต้องการจะแสดงเฉพาะข้อมูล*/
    public DialogQueueVisit(java.awt.Frame parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        setLanguage("");
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        setSize(400,450);
        setTitle(Constant.getTextBundle("คิวผู้ป่วยและรายการนัด"));
//        setLanguage("");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();//thekit.getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
    }

    public DialogQueueVisit(JDialog parent, boolean modal)
    {
        super(parent, modal);
        initComponents();
        setLanguage("");
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        setSize(400,450);
        setTitle(Constant.getTextBundle("คิวผู้ป่วยและรายการนัด"));
//        setLanguage("");
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();//thekit.getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
    }
    public void setControl(HosControl hc,UpdateStatus us)
    {
        theHC = hc;
        theHO = hc.theHO;
        theVisitControl = hc.theVisitControl;
        theSetupControl = hc.theSetupControl;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableQueuePatient = new com.hosv3.gui.component.HJTableSort();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();
        jButtonSetQueue = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jButtonCancelAppointment = new javax.swing.JButton();
        jButtonUnusedQ = new javax.swing.JButton();
        jPanelApp = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableAppointment = new com.hosv3.gui.component.HJTableSort();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableAppointmentOrder = new com.hosv3.gui.component.HJTableSort();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setAutoscrolls(true);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("คิวผู้ป่วย"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTableQueuePatient.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableQueuePatientKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableQueuePatientKeyReleased(evt);
            }
        });
        jTableQueuePatient.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableQueuePatientMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableQueuePatient);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 3);
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButtonOK.setText("ตกลง");
        jButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOKActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        jPanel4.add(jButtonOK, gridBagConstraints);

        jButtonSetQueue.setText("รีเซ็ตคิว");
        jButtonSetQueue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSetQueueActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jButtonSetQueue, gridBagConstraints);

        jButtonCancel.setText("ยกเลิก");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        jPanel4.add(jButtonCancel, gridBagConstraints);

        jButtonCancelAppointment.setText("ไม่เลือกนัด");
        jButtonCancelAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelAppointmentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jButtonCancelAppointment, gridBagConstraints);

        jButtonUnusedQ.setText("ไม่ใช้คิว");
        jButtonUnusedQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUnusedQActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jButtonUnusedQ, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 3, 3);
        getContentPane().add(jPanel2, gridBagConstraints);

        jPanelApp.setBorder(javax.swing.BorderFactory.createTitledBorder("รายการนัด"));
        jPanelApp.setLayout(new java.awt.GridBagLayout());

        jPanel7.setMinimumSize(new java.awt.Dimension(150, 24));
        jPanel7.setPreferredSize(new java.awt.Dimension(150, 404));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseReleased(evt);
            }
        });

        jTableAppointment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAppointment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableAppointmentMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableAppointment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelApp.add(jPanel7, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jTableAppointmentOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableAppointmentOrder);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelApp.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        getContentPane().add(jPanelApp, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButtonUnusedQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUnusedQActionPerformed

        this.jTableQueuePatient.clearSelection();

    }//GEN-LAST:event_jButtonUnusedQActionPerformed


    private void jButtonCancelAppointmentActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonCancelAppointmentActionPerformed

    {//GEN-HEADEREND:event_jButtonCancelAppointmentActionPerformed

        //amp:25/02/2549  //henbe 230606
        this.jTableAppointment.clearSelection();
        setAppointmentOrderV(null);

    }//GEN-LAST:event_jButtonCancelAppointmentActionPerformed


    /**
     *@deprecated henbe มีการเขียนข้อมูลลง HO โดย GUI ซึ่งผิด pattern
     */

    private void jTableAppointmentMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableAppointmentMouseReleased

    {//GEN-HEADEREND:event_jTableAppointmentMouseReleased

        //amp:25/02/2549
        int row = jTableAppointment.getSelectedRow();
        if(row==-1) return;
        Appointment ap = (Appointment)vWaitAppointment.get(row);
        vAppointmentOrder = theHC.thePatientControl.listAppointmentOrder(theHO.thePatient.getObjectId(), ap.getObjectId());
        setAppointmentOrderV(vAppointmentOrder);
        theHO.theAppointment = new Hashtable();
        if(ap!=null)
        {
            theHO.theAppointment.put("Appointment",ap);
        }
        if(vAppointmentOrder!=null)
        {
            theHO.theAppointment.put("AppointmentOrder",vAppointmentOrder);
        }

        for(int i=0;i<this.vQueueVisit.size();i++){
            QueueVisit qv = (QueueVisit)vQueueVisit.get(i);
            if(qv.getObjectId().equals(ap.queue_visit_id))
                this.jTableQueuePatient.setRowSelectionInterval(i, i);
        }

    }//GEN-LAST:event_jTableAppointmentMouseReleased


    private void jTableQueuePatientKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableQueuePatientKeyPressed


    }//GEN-LAST:event_jTableQueuePatientKeyPressed


    private void jTableQueuePatientKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableQueuePatientKeyReleased

            if(evt.getKeyCode()==KeyEvent.VK_SPACE)
        	jButtonOKActionPerformed(null);

    }//GEN-LAST:event_jTableQueuePatientKeyReleased

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed

        actionCommand = false;
        dispose();

    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jTableQueuePatientMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableQueuePatientMouseClicked

        // TODO add your handling code here:

    }//GEN-LAST:event_jTableQueuePatientMouseClicked

    private void jButtonSetQueueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSetQueueActionPerformed

        resetQueue();

    }//GEN-LAST:event_jButtonSetQueueActionPerformed


    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed

        // TODO add your handling code here:
        actionCommand = true;
        int row = this.jTableAppointment.getSelectedRow();
        if(row!=-1)
            vChoose.add(this.vWaitAppointment.get(row));
        int rowq = jTableQueuePatient.getSelectedRow();
        if(rowq!=-1){
            QueueVisit qv = (QueueVisit)vQueueVisit.get(rowq);
            theQueueVisit.setObjectId(qv.getObjectId());
            theQueueVisit.description = qv.description;
        }
        dispose();

    }//GEN-LAST:event_jButtonOKActionPerformed


    private void jScrollPane2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseReleased


    }//GEN-LAST:event_jScrollPane2MouseReleased


    private void resetQueue()
    {
        int row = jTableQueuePatient.getSelectedRow();
        if(row == -1)
            return ;
        QueueVisit qv = (QueueVisit)vQueueVisit.get(row);
        int confirm = JOptionPane.showConfirmDialog(this,Constant.getTextBundle("ต้องการที่จะreset คิวเป็น 1 ใช้หรือไม่"),"Confirm",JOptionPane.OK_CANCEL_OPTION);
        if(confirm == JOptionPane.OK_OPTION)
        {
            theVisitControl.resetQueueVisit(qv.getObjectId());
        }
        vQueueVisit = theVisitControl.listQueueVisit("","1");
        setQueueVisitV(vQueueVisit);
    }



    private void setQueueVisitV(Vector vc)
    {
        QueueVisit oi = new QueueVisit();
        TaBleModel tm;
        if(vc != null)
        {
            tm = new TaBleModel(col_jTableQueuePatient,vc.size());
            for(int i=0 ;i<vc.size(); i++)
            {
                oi = (QueueVisit)vc.get(i);
                tm.setValueAt(oi.id, i,0);
                tm.setValueAt(oi.description, i,1);
                tm.setValueAt(oi.queue, i,2);

                tm.setValueAt(oi.color + "|" + oi.description, i,3);
            }
        }
        else
        {
            tm= new TaBleModel(col_jTableQueuePatient,0);
        }
        jTableQueuePatient.setModel(tm);
        jTableQueuePatient.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        jTableQueuePatient.getColumnModel().getColumn(0).setCellRenderer(rendererRight);
        jTableQueuePatient.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
        jTableQueuePatient.getColumnModel().getColumn(2).setPreferredWidth(50); // จำนวน
        jTableQueuePatient.getColumnModel().getColumn(2).setCellRenderer(rendererRight);
        jTableQueuePatient.getColumnModel().getColumn(3).setPreferredWidth(70); // จำนวน
        jTableQueuePatient.getColumnModel().getColumn(3).setCellRenderer(theCellRendererColor);
    }


    public void setQueueVisit(QueueVisit qv){
       theQueueVisit = qv;
       if(theQueueVisit!=null && vQueueVisit!=null)
       {
           int i=0;
           for(i=0;i<vQueueVisit.size();i++){
               QueueVisit qqv = (QueueVisit)vQueueVisit.get(i);
               if(qqv.getObjectId().equals(theQueueVisit.getObjectId()))
                   break;
           }
           if(i<vQueueVisit.size())
                jTableQueuePatient.setRowSelectionInterval(i,i);
       }
    }


    /**
     *  option =0 ปรกติ
     *  option =1 view
     * @deprecate henbe comment unused
     * ใครทำฟังชันนี้แล้วมันถูกใช้โดยใครกรณีไหน
     */

    public static boolean showDialog(HosControl hc,JFrame jd
    ,int op,QueueVisit qv)
    {
        DialogQueueVisit dqv = new DialogQueueVisit(jd,true);
        dqv.setControl(hc,null);
        return dqv.showDialog(null,qv,op,true,null,null);
    }
    //ใครทำฟังชันนี้แล้วมันถูกใช้โดยใครกรณีไหน
    public boolean showDialog(Visit visit,QueueVisit qv,int op, boolean useQueue
            ,Vector vWait,Vector vchoose_app)
    {
        jPanel1.setVisible(useQueue);
        jButtonSetQueue.setVisible(useQueue);
        jButtonCancel.setVisible(useQueue);
        setAppointmentV(vWait);
        setAppointmentOrderV(null);
        vQueueVisit = theVisitControl.listQueueVisit("","1");
        setQueueVisitV(vQueueVisit);
        setQueueVisit(qv);
        jTableQueuePatient.setRowSelectionInterval(0,0);
        theVisit = visit;
        vChoose = vchoose_app;
        Option = op;
        if(Option!=0)
           jButtonSetQueue.setEnabled(false);
        setVisible(true);
        if(actionCommand)
            return true;
        return false;
    }
    /**
     *@Author : amp
     *@date : 25/02/2549
     *@see : แสดงรายการนัดที่รอนัด
     *@param : Vector ของรายการนัดที่รอนัด
     */
    private void setAppointmentV(Vector vc)
    {
        vWaitAppointment = vc;
        jPanelApp.setVisible(false);
        jButtonCancelAppointment.setVisible(false);
        if(vWaitAppointment!=null && !vWaitAppointment.isEmpty())
        {
            jPanelApp.setVisible(true);
            jButtonCancelAppointment.setVisible(true);
        }
        String[] column = {Constant.getTextBundle("วันที่นัด"),Constant.getTextBundle("นัดมาเพื่อ")};
        TaBleModel tm;
        if(vc != null)
        {
            tm = new TaBleModel(column,vc.size());
            for(int i=0,size=vc.size(); i<size; i++)
            {
                Appointment ap = (Appointment)vc.get(i);
                tm.setValueAt(DateUtil.getDateFromText(ap.appoint_date),i,0);
                tm.setValueAt(ap.aptype,i,1);
            }
            jTableAppointment.setModel(tm);
        }
        else
        {
            tm = new TaBleModel(column,0);
            jTableAppointment.setModel(tm);
        }
        jTableAppointment.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTableAppointment.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableAppointment.getColumnModel().getColumn(1).setPreferredWidth(300);
    }

    /**
     *@Author : amp
     *@date : 25/02/2549
     *@see : แสดงรายการ order ที่จะสั่งล่วงหน้า
     *@param : Vector ของรายการ order ที่จะสั่งล่วงหน้าจากการนัด
     */
    private void setAppointmentOrderV(Vector vc)
    {
        vAppointmentOrder=vc;
        String[] column = {Constant.getTextBundle("รายการตรวจรักษา")};
        TaBleModel tm;
        if(vc != null)
        {
            tm = new TaBleModel(column,vc.size());
            for(int i=0,size=vc.size(); i<size; i++)
            {
                AppointmentOrder apor = (AppointmentOrder)vc.get(i);
                tm.setValueAt(apor.item_common_name,i,0);
            }
            jTableAppointmentOrder.setModel(tm);
        }
        else
        {
            tm = new TaBleModel(column,0);
            jTableAppointmentOrder.setModel(tm);
        }
    }


    public void setLanguage(String v)
    {
        GuiLang.setLanguage(jButtonSetQueue);
        GuiLang.setLanguage(jButtonUnusedQ);
	GuiLang.setLanguage(jButtonOK);
	GuiLang.setLanguage(jButtonCancel);
	GuiLang.setLanguage(col_jTableQueuePatient);
        GuiLang.setLanguage(jButtonSetQueue);
        GuiLang.setLanguage(jButtonCancelAppointment);
	GuiLang.setTextBundle(jPanel3);
        GuiLang.setTextBundle(jPanelApp);

    }



    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
       // new DialogQueueVisit(new javax.swing.JFrame(), true).setVisible(true);

    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonCancelAppointment;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JButton jButtonSetQueue;
    private javax.swing.JButton jButtonUnusedQ;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelApp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.hosv3.gui.component.HJTableSort jTableAppointment;
    private com.hosv3.gui.component.HJTableSort jTableAppointmentOrder;
    private com.hosv3.gui.component.HJTableSort jTableQueuePatient;
    // End of variables declaration//GEN-END:variables


}
