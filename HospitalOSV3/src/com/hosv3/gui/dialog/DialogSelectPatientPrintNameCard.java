/* * DialogAdmit.java * * Created on 8 ?????น 2546, 14:14 ?. */package com.hosv3.gui.dialog;import java.util.*;import java.awt.*;import javax.swing.*;import com.hosv3.control.*;import com.hosv3.utility.connection.*;import com.hosv3.utility.*;import com.hospital_os.object.*;import com.hospital_os.utility.ComboboxModel;import com.hospital_os.utility.TaBleModel;import com.hospital_os.object.ListTransfer;import com.hospital_os.utility.CellRendererCheckBox;import com.hospital_os.utility.CheckBoxEditor;import com.hospital_os.utility.CellRendererHos;/** * * @author  tong */public class DialogSelectPatientPrintNameCard extends javax.swing.JDialog{    HosControl theHC;    public boolean actionCommand = false;    LookupControl theLookupControl;    VisitControl theVisitControl;    Visit theVisit;    //ReverseAdmit theReverseAdmit = null;    Vector vReverseAdmit;    Vector vListTransfer;    /**     *            tm.setValueAt(String.valueOf((i+1)),i,0);            tm.setValueAt(ltf.hn,i,1);            tm.setValueAt(ltf.vn,i,2);            String name = theHC.theLookupControl.readPrefixString(ltf.prefix);            name = name + " " + ltf.fname + "  " + ltf.lname;            tm.setValueAt(name,i,3);               tm.setValueAt(ltf.bed+"   ",i,4);            javax.swing.JCheckBox jc = new JCheckBox();;            jc.setSelected(new JCheckBox("",true),i,);            tm.setValueAt(Boolean.valueOf(true),i,5);     */    String[] col_jTable ={"ลำดับ","HN","AN","ชื่อ-สกุล","เตียง","พิมพ์"};    CellRendererHos hnRender = new CellRendererHos(CellRendererHos.HN);    CellRendererHos vnRender = new CellRendererHos(CellRendererHos.VN);    public static boolean closeDialog = false;    /** Creates new form DialogAdmit */    public DialogSelectPatientPrintNameCard(HosControl hc, UpdateStatus us)    {        super(us.getJFrame(),true);        theHC = hc;        theLookupControl = hc.theLookupControl;        theVisitControl = hc.theVisitControl;    hnRender = new CellRendererHos(CellRendererHos.HN,theLookupControl.getSequenceDataHN().pattern);    vnRender = new CellRendererHos(CellRendererHos.VN,theLookupControl.getSequenceDataVN().pattern);        initComponents();        this.jTable1.setGuiMode(true);        setTitle("พิมพ์ป้ายชื่อผู้ป่วย");//        setIconImage(us.getJFrame().getIconImage());        setDialog();        setLanguage("");    }        private void setDataAll(){        ComboboxModel.initComboBox(jComboBoxWard, theLookupControl.listWard());//        if(theVisit.admit_clinic != null){   //            if( !theVisit.admit_clinic.equalsIgnoreCase("")){//                ComboboxModel.setCodeComboBox(jComboBoxWard, theVisit.ward);//            }//        }    }        /** This method is called from within the constructor to     * initialize the form.     * WARNING: Do NOT modify this code. The content of this method is     * always regenerated by the Form Editor.     */    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents    private void initComponents() {        java.awt.GridBagConstraints gridBagConstraints;        jPanel1 = new javax.swing.JPanel();        jPanel2 = new javax.swing.JPanel();        jButtonPrint = new javax.swing.JButton();        jButtonCancel = new javax.swing.JButton();        jPanel3 = new javax.swing.JPanel();        jLabelWard = new javax.swing.JLabel();        jComboBoxWard = new javax.swing.JComboBox();        jPanel4 = new javax.swing.JPanel();        jScrollPane1 = new javax.swing.JScrollPane();        jTable1 = new com.hosv3.gui.component.HJTableSort();        addWindowListener(new java.awt.event.WindowAdapter() {            public void windowClosing(java.awt.event.WindowEvent evt) {                closeDialog(evt);            }        });        jPanel1.setLayout(new java.awt.GridBagLayout());        jPanel1.setPreferredSize(new java.awt.Dimension(400, 300));        jPanel2.setLayout(new java.awt.GridBagLayout());        jButtonPrint.setText("Print");        jButtonPrint.setMaximumSize(new java.awt.Dimension(72, 26));        jButtonPrint.setMinimumSize(new java.awt.Dimension(72, 26));        jButtonPrint.setPreferredSize(new java.awt.Dimension(72, 26));        jButtonPrint.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonPrintActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;        gridBagConstraints.weightx = 1.0;        jPanel2.add(jButtonPrint, gridBagConstraints);        jButtonCancel.setText("Cancel");        jButtonCancel.setMaximumSize(new java.awt.Dimension(72, 26));        jButtonCancel.setMinimumSize(new java.awt.Dimension(72, 26));        jButtonCancel.setPreferredSize(new java.awt.Dimension(72, 26));        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jButtonCancelActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);        jPanel2.add(jButtonCancel, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 2;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.insets = new java.awt.Insets(1, 5, 5, 5);        jPanel1.add(jPanel2, gridBagConstraints);        jPanel3.setLayout(new java.awt.GridBagLayout());        jLabelWard.setText("Ward");        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);        jPanel3.add(jLabelWard, gridBagConstraints);        jComboBoxWard.setMinimumSize(new java.awt.Dimension(200, 24));        jComboBoxWard.setPreferredSize(new java.awt.Dimension(200, 24));        jComboBoxWard.addActionListener(new java.awt.event.ActionListener() {            public void actionPerformed(java.awt.event.ActionEvent evt) {                jComboBoxWardActionPerformed(evt);            }        });        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 1;        gridBagConstraints.gridy = 0;        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);        jPanel3.add(jComboBoxWard, gridBagConstraints);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 1, 5);        jPanel1.add(jPanel3, gridBagConstraints);        jPanel4.setLayout(new java.awt.BorderLayout());        jTable1.setModel(new javax.swing.table.DefaultTableModel(            new Object [][] {                {null, null, null, null},                {null, null, null, null},                {null, null, null, null},                {null, null, null, null}            },            new String [] {                "Title 1", "Title 2", "Title 3", "Title 4"            }        ));        jScrollPane1.setViewportView(jTable1);        jPanel4.add(jScrollPane1, java.awt.BorderLayout.CENTER);        gridBagConstraints = new java.awt.GridBagConstraints();        gridBagConstraints.gridx = 0;        gridBagConstraints.gridy = 1;        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;        gridBagConstraints.weightx = 1.0;        gridBagConstraints.weighty = 1.0;        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);        jPanel1.add(jPanel4, gridBagConstraints);        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();        setBounds((screenSize.width-600)/2, (screenSize.height-400)/2, 600, 400);    }    // </editor-fold>//GEN-END:initComponents    private void jComboBoxWardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxWardActionPerformed        listPatientInWard();    }//GEN-LAST:event_jComboBoxWardActionPerformed        private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed        actionCommand = false;        dispose();    }//GEN-LAST:event_jButtonCancelActionPerformed        private void jButtonPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintActionPerformed            Vector vpatient = new Vector();            Vector vvisit = new Vector();            int size = jTable1.getRowCount();            for(int i = 0 ; i<size ; i++)            {                Boolean bl = (Boolean)jTable1.getValueAt(i, 5);               if(bl.booleanValue()){                   ListTransfer lt  = (ListTransfer) vListTransfer.get(i);                   Patient patient = theHC.thePatientControl.readPatientByPatientIdRet(lt.patient_id);                   vpatient.add(patient);                   Visit visit = theHC.theVisitControl.readVisitByVnRet(lt.vn);                   vvisit.add(visit);               }            }            dispose();            theHC.thePrintControl.printIpdNameCardAllWard(vpatient, vvisit);        }//GEN-LAST:event_jButtonPrintActionPerformed                        /** Closes the dialog */    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog        setVisible(false);        closeDialog = true;        dispose();    }//GEN-LAST:event_closeDialog               // Variables declaration - do not modify//GEN-BEGIN:variables    private javax.swing.JButton jButtonCancel;    private javax.swing.JButton jButtonPrint;    private javax.swing.JComboBox jComboBoxWard;    private javax.swing.JLabel jLabelWard;    private javax.swing.JPanel jPanel1;    private javax.swing.JPanel jPanel2;    private javax.swing.JPanel jPanel3;    private javax.swing.JPanel jPanel4;    private javax.swing.JScrollPane jScrollPane1;    private com.hosv3.gui.component.HJTableSort jTable1;    // End of variables declaration//GEN-END:variables    private void setDataToObject(){                theVisit.ward = ComboboxModel.getCodeComboBox(jComboBoxWard);    }        /*-----------------------------------------------------------*/    private void setDialog(){//        setSize(250,150);        Toolkit thekit = getToolkit();        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);    }        public boolean showDialog(){                   setDataAll();        listPatientInWard();        setVisible(true);        return closeDialog;    }    public void setLanguage(String msg)    {        GuiLang.setLanguage(jLabelWard);	GuiLang.setLanguage(jButtonCancel);	GuiLang.setLanguage(jButtonPrint);	GuiLang.setLanguage(col_jTable);    }    private void updateOGListTransferV(Vector v){        TaBleModel tm = new TaBleModel(col_jTable,v.size());        ListTransfer ltf;        for(int i=0,size=v.size();i<size;i++)        {               ltf = (ListTransfer)v.get(i);            tm.setValueAt(String.valueOf((i+1)),i,0);            tm.setValueAt(ltf.hn,i,1);            tm.setValueAt(ltf.vn,i,2);            String name = theHC.theLookupControl.readPrefixString(ltf.prefix);            name = name + " " + ltf.fname + "  " + ltf.lname;            tm.setValueAt(name,i,3);               tm.setValueAt(ltf.bed+"   ",i,4);//            javax.swing.JCheckBox jc = new JCheckBox();;//            jc.setSelected(new JCheckBox("",true),i,);            tm.setValueAt(Boolean.valueOf(true),i,5);        }         tm.setEditingCol(4,5);        jTable1.setModel(tm);        jTable1.getColumnModel().getColumn(0).setPreferredWidth(20); // ???        jTable1.getColumnModel().getColumn(1).setPreferredWidth(50); // HN        jTable1.getColumnModel().getColumn(1).setCellRenderer(hnRender); // HN        jTable1.getColumnModel().getColumn(2).setPreferredWidth(50); // VN        jTable1.getColumnModel().getColumn(2).setCellRenderer(vnRender); // VN        jTable1.getColumnModel().getColumn(3).setPreferredWidth(200); // ????                    jTable1.getColumnModel().getColumn(4).setPreferredWidth(50); // ??ง        jTable1.getColumnModel().getColumn(5).setPreferredWidth(60);        jTable1.getColumnModel().getColumn(5).setCellRenderer(new CellRendererCheckBox());        jTable1.getColumnModel().getColumn(5).setCellEditor(new CheckBoxEditor(new JCheckBox()));    }    public void listPatientInWard(){         vListTransfer = theHC.theVisitControl.listQueueVisitInWard(                ComboboxModel.getCodeComboBox(jComboBoxWard));         updateOGListTransferV(vListTransfer);    }}