/*
 * DialogCalBilling.java
 *
 * Created on 29 พฤษภาคม 2547, 11:58 น.
 */
package com.hosv3.gui.dialog;
import java.awt.*;
import javax.swing.*;
import java.util.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;
import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hospital_os.object.*;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.ComBoBoxEditor;
import com.hospital_os.utility.CheckBoxEditor;
import com.hospital_os.utility.CellRendererComboBox;
import com.hospital_os.utility.CellRendererCheckBox;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.Constant;
/**
 *
 * @author  tong
 */
public class DialogCalBilling2 extends javax.swing.JFrame implements UpdateStatus {
    /** Creates new form DialogCalBilling */
    HosControl theHC;
    HosObject theHO;
    private boolean over_limit=false;
    private LookupControl theLookupControl;
    private BillingControl theBillingControl;
    private Vector vFixComboPayment;
    private double dpayershare = 0;
    public static boolean actionCommand = false;
    private double dlimitmoney = 0;
    private double totalPatientShare = 0;
    private double totalPayerShare = 0;
    private String[] col_jTablePayment = {"ลำดับ","สิทธิ"};
    private String[] col_jTableCalculateBilling = {"รายการ","สิทธิชำระ","ผู้ป่วยชำระ","สิทธิ","เบิกได้","ขอตรวจ"};
    private Vector[] vBoi;
    public DialogCalBilling2(HosControl hc,UpdateStatus us)
    {
        //super(us.getJFrame(), true);
        this.setIconImage(us.getJFrame().getIconImage());
        theHC = hc;
        theBillingControl = hc.theBillingControl;
        theLookupControl = hc.theLookupControl;
        theHO = hc.theHO;
        initComponents();
        this.jTableCalculateBilling.setGuiMode(true);
        this.jTablePayment.setGuiMode(true);
        setLanguage("");
        setDefaultDateDischage();
        setSize(640,480);
        setTitle(Constant.getTextBundle("รายการคำนวณค่าใช้จ่าย")); 
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();//thekit.getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
    }
    private void setVisit(Patient patient,Visit visit)
    {
        if(patient == null)
            return ;
        jTextFieldName.setText(
            theHC.theLookupControl.readPrefixString(patient.f_prefix_id)
            + " " + patient.patient_name + " " + patient.patient_last_name);
        jLabelDate.setText(DateUtil.getDateToString(DateUtil.getDateFromText(theHO.date_time),true));
        jLabelAgePatient.setText(theHO.theVisit.patient_age + " ปี");
        jLabelHNPatient.setText(theLookupControl.getRenderTextHN(patient.hn));
        if(visit.visit_type.equals(VisitType.OPD)){
            jLabelVN.setText("VN");
            jLabelVN.setForeground(Color.BLACK);
            jLabelVNPatient.setText(theLookupControl.getRenderTextVN(visit.vn));
            jLabelVNPatient.setForeground(Color.BLACK);
        }
        else{
            jLabelVN.setText("AN");
            jLabelVN.setForeground(Color.RED);
            jLabelVNPatient.setText(theLookupControl.getRenderTextVN(visit.vn));
            jLabelVNPatient.setForeground(Color.RED);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCalculateBilling = new com.hosv3.gui.component.HJTableSort();
        jPanel10 = new javax.swing.JPanel();
        jLabelPayment = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabelPayerShare = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabelPatientShare = new javax.swing.JLabel();
        jLabelLimitMoney = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabelDate = new javax.swing.JLabel();
        jLabelDay = new javax.swing.JLabel();
        jLabelAge = new javax.swing.JLabel();
        jLabelAgePatient = new javax.swing.JLabel();
        jLabelVN = new javax.swing.JLabel();
        jLabelHN = new javax.swing.JLabel();
        jLabelVNPatient = new javax.swing.JLabel();
        jLabelHNPatient = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jButtonSavePaid = new javax.swing.JButton();
        jButtonCalculate = new javax.swing.JButton();
        jButtonSaveBill = new javax.swing.JButton();
        jButtonFDischarge = new javax.swing.JButton();
        jPanel21 = new javax.swing.JPanel();
        dateComboBoxCheck = new com.hospital_os.utility.DateComboBox();
        jLabel11 = new javax.swing.JLabel();
        timeTextFieldCheck = new com.hospital_os.utility.TimeTextField();
        jLabel12 = new javax.swing.JLabel();
        jCheckBoxDateDischarge = new javax.swing.JCheckBox();
        jPanel9 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabelSumPayerShare = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabelSumPatientShare = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTablePayment = new com.hosv3.gui.component.HJTableSort();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("ข้อมูลการเงิน"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTableCalculateBilling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableCalculateBillingMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCalculateBilling);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane3, gridBagConstraints);

        jPanel10.setLayout(new java.awt.GridBagLayout());

        jLabelPayment.setText("Payment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabelPayment, gridBagConstraints);

        jLabel8.setText("PayerShare");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel10.add(jLabel8, gridBagConstraints);

        jLabelPayerShare.setText("........");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel10.add(jLabelPayerShare, gridBagConstraints);

        jLabel10.setText("PatientShare");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 15, 0, 0);
        jPanel10.add(jLabel10, gridBagConstraints);

        jLabelPatientShare.setText(".........");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel10.add(jLabelPatientShare, gridBagConstraints);

        jLabelLimitMoney.setText("LimitMoney");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel10.add(jLabelLimitMoney, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel3.add(jPanel10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("ข้อมูลทั่วไปของผู้ป่วย"));
        jPanel5.setMinimumSize(new java.awt.Dimension(300, 110));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel1.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabel1, gridBagConstraints);

        jLabelDate.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelDate, gridBagConstraints);

        jLabelDay.setText("Date");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelDay, gridBagConstraints);

        jLabelAge.setText("อายุ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelAge, gridBagConstraints);

        jLabelAgePatient.setText("jLabel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelAgePatient, gridBagConstraints);

        jLabelVN.setText("VN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelVN, gridBagConstraints);

        jLabelHN.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelHN, gridBagConstraints);

        jLabelVNPatient.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelVNPatient, gridBagConstraints);

        jLabelHNPatient.setText("jLabel4");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabelHNPatient, gridBagConstraints);

        jTextFieldName.setFont(new java.awt.Font("Tahoma", 0, 18));
        jTextFieldName.setForeground(java.awt.Color.blue);
        jTextFieldName.setText("jLabel2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jTextFieldName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel4.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel1.add(jPanel4, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonSavePaid.setText("ชำระเงิน");
        jButtonSavePaid.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jButtonSavePaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSavePaidActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel6.add(jButtonSavePaid, gridBagConstraints);

        jButtonCalculate.setText("Calculate");
        jButtonCalculate.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jButtonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCalculateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jButtonCalculate, gridBagConstraints);

        jButtonSaveBill.setText("บันทึก");
        jButtonSaveBill.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jButtonSaveBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveBillActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel6.add(jButtonSaveBill, gridBagConstraints);

        jButtonFDischarge.setText("จำหน่าย");
        jButtonFDischarge.setMargin(new java.awt.Insets(2, 10, 2, 10));
        jButtonFDischarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFDischargeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        jPanel6.add(jButtonFDischarge, gridBagConstraints);

        jPanel21.setLayout(new java.awt.GridBagLayout());

        dateComboBoxCheck.setMinimumSize(new java.awt.Dimension(100, 25));
        dateComboBoxCheck.setPreferredSize(new java.awt.Dimension(100, 25));
        dateComboBoxCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateComboBoxCheckKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 3);
        jPanel21.add(dateComboBoxCheck, gridBagConstraints);

        jLabel11.setText("น.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        jPanel21.add(jLabel11, gridBagConstraints);

        timeTextFieldCheck.setMaximumSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.setMinimumSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.setPreferredSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeTextFieldCheckMouseClicked(evt);
            }
        });
        timeTextFieldCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeTextFieldCheckKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel21.add(timeTextFieldCheck, gridBagConstraints);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/clock.gif"))); // NOI18N
        jLabel12.setToolTipText("เวลาที่ตรวจ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel21.add(jLabel12, gridBagConstraints);

        jCheckBoxDateDischarge.setText("วันที่");
        jCheckBoxDateDischarge.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDateDischarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDateDischargeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel21.add(jCheckBoxDateDischarge, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jPanel21, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPanel6, gridBagConstraints);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel3.setText("PayerShare");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jLabel3, gridBagConstraints);

        jLabelSumPayerShare.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabelSumPayerShare.setText("...................");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel11.add(jLabelSumPayerShare, gridBagConstraints);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18));
        jLabel5.setText("PatientShare");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel11.add(jLabel5, gridBagConstraints);

        jLabelSumPatientShare.setFont(new java.awt.Font("Tahoma", 1, 24));
        jLabelSumPatientShare.setForeground(new java.awt.Color(255, 51, 51));
        jLabelSumPatientShare.setText("...................");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel11.add(jLabelSumPatientShare, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 11);
        jPanel9.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPanel9, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("สิทธิการรักษา"));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTablePayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePaymentMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTablePayment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void jButtonFDischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFDischargeActionPerformed


        jButtonCalculateActionPerformed(null);
        if(over_limit){
            this.setStatus("วงเงินเกินขอบเขตของสิทธิกรุณาปรับรายการใหม่อีกครั้ง", UpdateStatus.WARNING);
            return;
        }
        theBillingControl.saveBillingInvoice(this.vBoi);
        //แก้ให้การบันทึกแค่ทำรายการใบแจ้งหนี้เฉย ๆ เพราะถ้าคำนวนค่าใช้จ่ายรวมจะมีหลายใบมากเปลือง
        if(theHO.theVisit.visit_type.equals(VisitType.OPD)){
            Vector billInv = theHC.theBillingControl.listBillingInvoiceByVisitID(theHO.theVisit.getObjectId());
            theHC.theBillingControl.calculateAllBillingInvoice(billInv,"0");
        }
        if(this.jCheckBoxDateDischarge.isSelected())
            theHO.theVisit.visit_financial_record_date_time = this.dateComboBoxCheck.getText()
                + "," + this.timeTextFieldCheck.getText() + ":00";
        theHC.theBillingControl.dischargeFinancial(null,null,"0");
        this.dispose();

    }//GEN-LAST:event_jButtonFDischargeActionPerformed


    private void jButtonSaveBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveBillActionPerformed


        jButtonCalculateActionPerformed(null);
        if(over_limit){
            this.setStatus("วงเงินเกินขอบเขตของสิทธิกรุณาปรับรายการใหม่อีกครั้ง", UpdateStatus.WARNING);
            return;
        }
        theBillingControl.saveBillingInvoice(this.vBoi);
        //แก้ให้การบันทึกแค่ทำรายการใบแจ้งหนี้เฉย ๆ เพราะถ้าคำนวนค่าใช้จ่ายรวมจะมีหลายใบมากเปลือง
        if(theHO.theVisit.visit_type.equals(VisitType.OPD)){
            Vector billInv = theHC.theBillingControl.listBillingInvoiceByVisitID(theHO.theVisit.getObjectId());
            theHC.theBillingControl.calculateAllBillingInvoice(billInv,"0");
        }
        this.dispose();

    }//GEN-LAST:event_jButtonSaveBillActionPerformed


    private void jTableCalculateBillingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCalculateBillingMouseReleased


    }//GEN-LAST:event_jTableCalculateBillingMouseReleased



	private void jButtonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCalculateActionPerformed
        getBillingOrderItemV();
        setBillingOrderItemV(this.vBoi);
        setTotalPaid();
    }//GEN-LAST:event_jButtonCalculateActionPerformed


        private void jButtonSavePaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSavePaidActionPerformed


        jButtonCalculateActionPerformed(null);
        if(over_limit){
            this.setStatus("วงเงินเกินขอบเขตของสิทธิกรุณาปรับรายการใหม่อีกครั้ง", UpdateStatus.WARNING);
            return;
        }
        theBillingControl.saveBillingInvoice(vBoi);
        //ถ้าเป็นผู้ป่วยนอกจะขึ้น dialog รับชำระเงินให้ทันที
        //if(theHO.theVisit.visit_type.equals(VisitType.OPD)){
            Vector billInv = theHC.theBillingControl.listBillingInvoiceByVisitID(
                theHO.theVisit.getObjectId());
            theHC.theBillingControl.calculateAllBillingInvoice(billInv,"0");
            Billing billing = new Billing();
            if(theHO.vBilling!=null)
                billing = (Billing)theHO.vBilling.get(theHO.vBilling.size()-1);
            DialogPatientPaid.showDialog(theHC,this,billing,theHO.theVisit);
            this.jButtonCalculate.setEnabled(false);
            this.jButtonSavePaid.setEnabled(false);
        //}
        this.dispose();

        }//GEN-LAST:event_jButtonSavePaidActionPerformed


	private void jTablePaymentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePaymentMouseReleased


        int row = jTablePayment.getSelectedRow();
        if(row==-1) return;
        setPayment(row);
        setBillingOrderItemV(vBoi);

    }//GEN-LAST:event_jTablePaymentMouseReleased

        private void dateComboBoxCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateComboBoxCheckKeyReleased

}//GEN-LAST:event_dateComboBoxCheckKeyReleased

        private void timeTextFieldCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeTextFieldCheckMouseClicked
            timeTextFieldCheck.selectAll();
}//GEN-LAST:event_timeTextFieldCheckMouseClicked

        private void timeTextFieldCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTextFieldCheckKeyReleased

}//GEN-LAST:event_timeTextFieldCheckKeyReleased

        private void jCheckBoxDateDischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDateDischargeActionPerformed
            dateComboBoxCheck.setText(DateUtil.convertFieldDate(theHO.date_time));
            timeTextFieldCheck.setText(theHO.date_time.substring(11));
            dateComboBoxCheck.setEnabled(jCheckBoxDateDischarge.isSelected());
            timeTextFieldCheck.setEnabled(jCheckBoxDateDischarge.isSelected());
}//GEN-LAST:event_jCheckBoxDateDischargeActionPerformed


    public void setPayment(int row)
    {
        if(row == -1) return;
        over_limit = false;
        Payment pm = (Payment)theHO.vVisitPayment.get(row);
        if(pm.use_money_limit.equalsIgnoreCase("null"))
            pm.use_money_limit = "0";
        try{
            dlimitmoney = Double.parseDouble(pm.money_limit);
        }
        catch(Exception ex) {
            dlimitmoney = 0;
        }
        ///////////////////////////////////////////////////////////////////////
        jLabelPayment.setText((String)jTablePayment.getValueAt(row,1));
        if(dlimitmoney >0){
            if(dpayershare > dlimitmoney){
                over_limit = true;
                jLabelLimitMoney.setText(Constant.getTextBundle("เกินวงเงิน") +
                        " " + dlimitmoney + " " + Constant.getTextBundle("บาท"));
                jLabelLimitMoney.setBackground(new Color(255,9,210));
                jLabelLimitMoney.setOpaque(true);
                jButtonSavePaid.setEnabled(false);
            }
            else{
                jLabelLimitMoney.setText(Constant.getTextBundle("วงเงิน") +
                        " " +  dlimitmoney + " " + Constant.getTextBundle("บาท"));
                jLabelLimitMoney.setOpaque(false);
                jButtonSavePaid.setEnabled(true);
            }
        }
        else{
            jLabelLimitMoney.setText(Constant.getTextBundle("ไม่มีวงเงิน"));
            jLabelLimitMoney.setOpaque(false);
            jButtonSavePaid.setEnabled(true);
        }
    }
    /**
     *  ทำการเปลี่ยนข้อมูลลง Vector
     *  สำหรับรายการที่มีการเปลี่ยนแปลงสิทธิการรักษาโดยจะย้ายไปอยู่อีก vector หนึ่ง
     */
    private Vector[] getBillingOrderItemV()
    {
        int index = this.jTablePayment.getSelectedRow();
        //โดยการตรวจสอบรายการเลือก ComboBox ที่เลือก
        for(int i=vBoi[index].size()-1;i>=0;i--)
        {
            Constant.println("index-"+index);
            BillingOrderItem boi = (BillingOrderItem)vBoi[index].get(i);
            Boolean bl = (Boolean)jTableCalculateBilling.getValueAt(i,4);
            boi.draw = bl.booleanValue()?"1":"0";
            Constant.println("index-"+index+":"+bl.booleanValue());
            JComboBox jcb = (JComboBox)jTableCalculateBilling.getValueAt(i,3);
            if(jcb.getSelectedIndex()!=index){
                Payment payment = (Payment)theHO.vVisitPayment.get(jcb.getSelectedIndex());
                boi.payment_id = payment.getObjectId();
                boi.plan_id = payment.plan_kid;
                vBoi[index].remove(boi);
                vBoi[jcb.getSelectedIndex()].add(boi);
            }
        }
        theBillingControl.getBoiFromBoi(vBoi);
        return vBoi;
    }
    /**list สิทธิการรักษาของผู้ป่วย
    private void setDataTableToVectorOrder(Vector vc)
    {
        for(int i = vc.size()-1 ; i >=0 ; i--)
        {
            BillingOrderItem orderitem = (BillingOrderItem)vc.get(i);
            vc.remove(i);
            orderitem.payment_id = Gutil.getGuiData((JComboBox)jTableCalculateBilling.getValueAt(i, 3));//plan;
            orderitem.plan_id = checkPaymentAndPlan(orderitem.payment_id);
            Boolean bl = (Boolean)jTableCalculateBilling.getValueAt(i, 5);
            orderitem.request = bl.booleanValue()?"1":"0";
            bl = (Boolean)jTableCalculateBilling.getValueAt(i, 4);
            orderitem.draw = bl.booleanValue()?"1":"0";
            vc.add(i,orderitem);
        }
    }*/
    private String checkPaymentAndPlan(String payment_id)
    {   String code = new String();
        for(int i = 0; i< theHO.vVisitPayment.size();i++)
        {
            Payment p = new Payment();
            p = (Payment)theHO.vVisitPayment.get(i);
            if(p.getObjectId().equalsIgnoreCase(payment_id))
            {
                code = p.plan_kid;
                p = null;
                break;
            }
            p = null;
        }
        return code;
    }
    public void setBillingOrderItemV(Vector[] vc)
    {
        double dpayershare = 0;
        double dpatientshare = 0;
        int billing = 0;
        int index = this.jTablePayment.getSelectedRow();
        vBoi = vc;
        if(vBoi==null){
            vBoi = new Vector[theHO.vVisitPayment.size()];
            for(int i=0;i<vBoi.length;i++)
                vBoi[i] = new Vector();
        }
        TaBleModel tm= new TaBleModel(col_jTableCalculateBilling,vBoi[index].size());
        for(int i=0 ;i<vBoi[index].size(); i++)
        {
            BillingOrderItem boi = (BillingOrderItem)vBoi[index].get(i);
            Payment pm = theHO.getVPayment(boi.payment_id);
            JComboBox jcb = new JComboBox();
            ComboboxModel.initComboBox(jcb,vFixComboPayment);
            Gutil.setGuiData(jcb,pm.plan_kid);
            tm.setValueAt(boi.common_name, i,0);
            tm.setValueAt(Constant.dicimal(Constant.calBil(boi.payershare)), i,1);
            tm.setValueAt(Constant.dicimal(Constant.calBil(boi.patientshare)), i,2);
            tm.setValueAt(jcb, i,3);
            tm.setValueAt(Boolean.valueOf(Gutil.isSelected(boi.draw)), i,4);
            tm.setValueAt(Boolean.valueOf(Gutil.isSelected(boi.request)), i,5);
            dpayershare = dpayershare + Double.parseDouble(Constant.dicimal(
                Constant.calBil(boi.payershare)));
            dpatientshare = dpatientshare + Double.parseDouble(Constant.dicimal(
                Constant.calBil(boi.patientshare)));
            if(Gutil.isSelected(boi.charge_complete))      billing =1;
            else    billing =0;
        }
        jLabelPatientShare.setText(Constant.dicimal(String.valueOf(dpatientshare)));
        jLabelPayerShare.setText(Constant.dicimal(String.valueOf(dpayershare)));
        ///////////////////////////////////////////////////////////////////////////////

        if(billing == 0)     tm.setEditingCol(3,4);
        jTableCalculateBilling.setModel(tm);
        jTableCalculateBilling.setRowHeight(24);
        jTableCalculateBilling.getColumnModel().getColumn(0).setPreferredWidth(300);// รายการ
        jTableCalculateBilling.getColumnModel().getColumn(1).setPreferredWidth(70);// สิทธิ์ชำระ
        jTableCalculateBilling.getColumnModel().getColumn(1).setCellRenderer(TableRenderer.getRendererRight());
        jTableCalculateBilling.getColumnModel().getColumn(2).setPreferredWidth(70);// ผู้ป่วยชำระ
        jTableCalculateBilling.getColumnModel().getColumn(2).setCellRenderer(TableRenderer.getRendererRight());
        jTableCalculateBilling.getColumnModel().getColumn(3).setPreferredWidth(300);// สิทธิที่ใช้
        jTableCalculateBilling.getColumnModel().getColumn(3).setCellRenderer(new CellRendererComboBox());
        jTableCalculateBilling.getColumnModel().getColumn(3).setCellEditor(new ComBoBoxEditor(new JComboBox()));
        jTableCalculateBilling.getColumnModel().getColumn(4).setPreferredWidth(60);// เบิกได้
        jTableCalculateBilling.getColumnModel().getColumn(4).setCellRenderer(new CellRendererCheckBox());
        jTableCalculateBilling.getColumnModel().getColumn(4).setCellEditor(new CheckBoxEditor(new JCheckBox()));
        jTableCalculateBilling.getColumnModel().getColumn(5).setPreferredWidth(60);// ขอตรวจ
        jTableCalculateBilling.getColumnModel().getColumn(5).setCellRenderer(new CellRendererCheckBox());
        jTableCalculateBilling.getColumnModel().getColumn(5).setCellEditor(new CheckBoxEditor(new JCheckBox()));
    }
    /**
     *  แสดงสิทธิการรักษาของผู้ป่วย
     */
    public void setPaymentV(Vector vc)
    {
        vFixComboPayment = new Vector();
        Payment p = new Payment();
        TaBleModel tm ;
        if(vc == null) {
            tm= new TaBleModel(col_jTablePayment,0);
            jTablePayment.setModel(tm);
            return;
        }
        tm= new TaBleModel(col_jTablePayment,vc.size());
        for(int i=0 ;i<vc.size(); i++)
        {
            p = (Payment)vc.get(i);
            tm.setValueAt(String.valueOf(i+1),i,0);
            Plan plan = theLookupControl.readPlanById(p.plan_kid);
            tm.setValueAt( plan.description,i,1);
            vFixComboPayment.add(plan);
            plan = null;
        }
        jTablePayment.setModel(tm);
        jTablePayment.getColumnModel().getColumn(0).setPreferredWidth(100);// ลำดับที่
        jTablePayment.getColumnModel().getColumn(0).setCellRenderer(TableRenderer.getRendererRight());
        jTablePayment.getColumnModel().getColumn(1).setPreferredWidth(800);// สิทธิที่ใช้
    }
    /**
     *theHO.getVisitPaymentActive()
     */
    public void showDialog(Vector vOrderItem)
    {
        /**หารายการคิดเงิน*/
        setVisit(theHO.thePatient,theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        this.jTablePayment.setRowSelectionInterval(0,0);
        Vector[] vboi = theBillingControl.getBoiFromOrder(vOrderItem);
        setBillingOrderItemV(vboi);
        setTotalPaid();
        setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.DateComboBox dateComboBoxCheck;
    private javax.swing.JButton jButtonCalculate;
    private javax.swing.JButton jButtonFDischarge;
    private javax.swing.JButton jButtonSaveBill;
    private javax.swing.JButton jButtonSavePaid;
    private javax.swing.JCheckBox jCheckBoxDateDischarge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelAge;
    private javax.swing.JLabel jLabelAgePatient;
    private javax.swing.JLabel jLabelDate;
    private javax.swing.JLabel jLabelDay;
    private javax.swing.JLabel jLabelHN;
    private javax.swing.JLabel jLabelHNPatient;
    private javax.swing.JLabel jLabelLimitMoney;
    private javax.swing.JLabel jLabelPatientShare;
    private javax.swing.JLabel jLabelPayerShare;
    private javax.swing.JLabel jLabelPayment;
    private javax.swing.JLabel jLabelSumPatientShare;
    private javax.swing.JLabel jLabelSumPayerShare;
    private javax.swing.JLabel jLabelVN;
    private javax.swing.JLabel jLabelVNPatient;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private com.hosv3.gui.component.HJTableSort jTableCalculateBilling;
    private com.hosv3.gui.component.HJTableSort jTablePayment;
    private javax.swing.JLabel jTextFieldName;
    private com.hospital_os.utility.TimeTextField timeTextFieldCheck;
    // End of variables declaration//GEN-END:variables


     public void setLanguage(String msg)
    {
        GuiLang.setLanguage(jLabel8);//payerShare
	GuiLang.setLanguage(jLabel10);//patientShare
	GuiLang.setLanguage(jButtonSavePaid);//Bill
	GuiLang.setLanguage(jButtonCalculate);//Cal
	GuiLang.setLanguage(jLabelAge);
	GuiLang.setLanguage(jLabelDay);
	GuiLang.setLanguage(jLabel1);
	GuiLang.setLanguage(jLabelVN);
        GuiLang.setLanguage(jLabelHN);
	GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabelPayment);
	GuiLang.setLanguage(jLabelLimitMoney);
	GuiLang.setLanguage(jButtonSaveBill);
        GuiLang.setLanguage(jButtonFDischarge);
	GuiLang.setLanguage(col_jTablePayment);
        GuiLang.setLanguage(col_jTableCalculateBilling);
        GuiLang.setTextBundle(jPanel5);
        GuiLang.setTextBundle(jPanel2);
        GuiLang.setTextBundle(jPanel3);
        GuiLang.setLanguage(jCheckBoxDateDischarge);
	GuiLang.setLanguage(jLabel11);
     }
    public boolean confirmBox(String str, int status) {
        Constant.println("DialogCalBilling:Incomplete");
        return false;
    }
    public JFrame getJFrame() {
        return this;
    }
    public void setStatus(String str, int status) {
        str = Constant.getTextBundle(str);
        JOptionPane.showMessageDialog(this,str);
    }
    private void setTotalPaid() {
        totalPatientShare = 0;
        totalPayerShare = 0;
        for(int j=0;j<vBoi.length; j++) {
            for(int i=0 ;i<vBoi[j].size(); i++) {
                BillingOrderItem orderitem = (BillingOrderItem)vBoi[j].get(i);
                totalPayerShare = totalPayerShare + Double.parseDouble(Constant.dicimal(
                    Constant.calBil(orderitem.payershare)));
                totalPatientShare = totalPatientShare + Double.parseDouble(Constant.dicimal(
                    Constant.calBil(orderitem.patientshare)));
            }
        }
        jLabelSumPatientShare.setText(String.valueOf(totalPatientShare));
        jLabelSumPayerShare.setText(String.valueOf(totalPayerShare));
        jButtonFDischarge.setVisible(false);
        jButtonSavePaid.setVisible(false);
        if(totalPatientShare>0.1)
                jButtonSavePaid.setVisible(true);
        else
            jButtonFDischarge.setVisible(true);
    }

    private void setDefaultDateDischage() {
        jCheckBoxDateDischarge.setSelected(false);
        jCheckBoxDateDischargeActionPerformed(null);
    }
}
