/*
 * ListVisitBySearchDB.java
 *
 * Created on 17 ตุลาคม 2546, 18:21 น.
 */
package com.hosv3.gui.dialog;


import javax.swing.table.*;
import java.util.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.CellRendererHos;
import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.gui.component.*;
import com.hosv3.utility.connection.*;

/**
 *
 * @author  Administrator
 */
public class PanelPatientList extends javax.swing.JPanel {
    private UpdateStatus theUpdateStatus;  
    /** ใช้ในการควบคุมการทำงานร่วมกันของ GUI */
    javax.swing.JFrame aMain;
    Vector thePatient;
    HosControl theHC;
    PatientControl thePatientControl;
    LookupControl theLookupControl;
    VisitControl theVisitControl;
    SystemControl theSystemControl;
    DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
    CellRendererPatient cellRendererPatient;
    // Render Hn ให้แสดงเป็นแบบสั้น sumo 26/7/2549
    CellRendererHos hnRender = new CellRendererHos(CellRendererHos.HN);
    ///////////////////////////////////////////////////////////////////
    // ตัวตรวจสอบหากค้นหาจาก Xn จะให้แสดงหมายเลข Xn แทนชื่อมารดาในตารางแสดงผลการค้นหา sumo 10/4/2549
    boolean flag = false;
    private int rowPatient = -1;
    private String fName = "";
    private String lName = "";
    int type_gui = 0;
    private String[] column = {"HN","ชื่อ","สกุล","อายุ","เลขบัตรประชาชน","ชื่อมารดา"};
    private String[] column2 = {"HN","ชื่อ","สกุล","อายุ","เลขบัตรประชาชน","Xn"};
    /** Creates new form ListVisitBySearchDB */
    public PanelPatientList()
    {
        initComponents();        
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
    }
    
    public PanelPatientList(HosControl hc, javax.swing.JFrame ctrl,int type)
    {   
        aMain = ctrl;
        initComponents();
        type_gui = type;
        theHC = hc;
        theSystemControl = hc.theSystemControl;
        thePatientControl = hc.thePatientControl;
        theLookupControl = hc.theLookupControl;
        theVisitControl = hc.theVisitControl;
    hnRender = new CellRendererHos(CellRendererHos.HN,theLookupControl.getSequenceDataHN().pattern);
        cellRendererPatient = new CellRendererPatient(true);
        setLanguage("");     
        clearGUI();
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
    } 
    public void requestFocusAtFName()
    {
        this.jTextFieldXn.requestFocus();
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelTop = new javax.swing.JPanel();
        jPanelTop1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldXn = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelCenter = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.BorderLayout());

        setMinimumSize(new java.awt.Dimension(450, 300));
        setPreferredSize(new java.awt.Dimension(450, 300));
        jPanelTop.setLayout(new java.awt.GridBagLayout());

        jPanelTop1.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("\u0e04\u0e33\u0e04\u0e49\u0e19");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelTop1.add(jLabel3, gridBagConstraints);

        jTextFieldXn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldXnActionPerformed(evt);
            }
        });
        jTextFieldXn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldXnKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelTop1.add(jTextFieldXn, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jButtonSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonSearchFocusGained(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelTop1.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 1);
        jPanelTop.add(jPanelTop1, gridBagConstraints);

        add(jPanelTop, java.awt.BorderLayout.NORTH);

        jPanelCenter.setLayout(new java.awt.GridBagLayout());

        jTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableKeyReleased(evt);
            }
        });
        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMouseReleased(evt);
            }
        });

        jScrollPane.setViewportView(jTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 1, 1);
        jPanelCenter.add(jScrollPane, gridBagConstraints);

        add(jPanelCenter, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchPatientInDB();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonSearchFocusGained
// TODO add your handling code here:
        //  jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jButtonSearchFocusGained

    private void jTextFieldXnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldXnKeyReleased

        if(evt.getKeyCode()==evt.VK_SPACE)
        {
            searchPatientInDB();
            jTextFieldXn.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldXnKeyReleased

    private void jTextFieldXnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldXnActionPerformed
        searchPatientInDB();
    }                                                private void jTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-LAST:event_jTextFieldXnActionPerformed
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN )//GEN-FIRST:event_jTableKeyReleased
        {
            rowPatient=jTable.getSelectedRow();            
        }
        if(evt.getKeyCode()==evt.VK_SPACE)
        {
            if(rowPatient==-1) return;
            Patient pt =(Patient)thePatient.get(rowPatient);
            thePatientControl.readPatientByPatientID(pt.getObjectId());
        }
    }//GEN-LAST:event_jTableKeyReleased
    private void jTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseReleased
        rowPatient=jTable.getSelectedRow();
        if(rowPatient==-1) return;
        Patient pt =(Patient)thePatient.get(rowPatient);
        //ตรวจสอบว่าคนที่แสดงอยู่นี้เป็นประชากรหรือผู้ป่วยหากว่าเป็นผู้ป่วยก็ตามนี้
        //หากว่าไม่ใช่ก็ให้ทำการ ส่งข้อมูลไปให้หน้าจอ socialdata แสดงผลออกมาให้จงได้
        //คงต้องทำ managePersonNotify แล้วละ
        if(pt.getObjectId()!=null)
            thePatientControl.readPatientByPatientID(pt.getObjectId());  
        else
            thePatientControl.readFamilyByFamilyId(pt.family_id);  
//        jTable.setToolTipText(""); 
        
    }//GEN-LAST:event_jTableMouseReleased
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JPanel jPanelTop1;
    private javax.swing.JScrollPane jScrollPane;
    private com.hosv3.gui.component.HJTableSort jTable;
    private javax.swing.JTextField jTextFieldXn;
    // End of variables declaration//GEN-END:variables
    
    /**
     *  เมื่อเลือกผู้ป่วยให้ notify ส่งข้อมูลไปทุก panel
     */
    /**
     * ค้นหาผู้ป่านจากฐานข้อมูลเพื่อให้ notify กลับมาแสดงใน table 
     */
    private void searchPatientInDB()
    {
        //ตรวจสอบว่า field hn เป็นค่าว่างหรือไม่
        thePatient = thePatientControl.listPatientByKeyword(jTextFieldXn.getText());
        updateOGPatientV(thePatient);
        if(thePatient != null)
        {
            if(!thePatient.isEmpty())
            {                
                jTable.requestFocus();
                jTable.setRowSelectionInterval(0,0);                
                rowPatient = 0;    
            }
        }
    }
    
    public void gc()
    {     
        //    jComboBoxPname = null;
         jPanelCenter = null;
         jButtonSearch = null;
         jTable = null;
         jPanelTop1 = null;
         jPanelTop = null;
         jScrollPane = null;
    }
    
    
    /**
     * แสดงข้อมูลตารางลงตาราง 
     */
    public void updateOGPatientV(Vector thePatient)
    {
       TaBleModel tm;
       if(thePatient==null)
       {
            tm = new TaBleModel(column,0);
            jTable.setModel(tm);
            return;
       }
       if(flag == true)
       {
           tm = new TaBleModel(column2,thePatient.size());
       }
       else
       {
           tm = new TaBleModel(column,thePatient.size());
       }
       String date_time = theHC.theLookupControl.getTextCurrentDate();
       for(int i=0,size=thePatient.size();i<size;i++)
       {
           Patient pd = (Patient)thePatient.get(i);
           String year = DateUtil.calculateAge(pd.patient_birthday,date_time);
           if(!year.equals("")) year = year + " ปี";
           tm.setValueAt(pd.hn,i,0);
           //ค้นหาบ้านรายคนให้เรียบร้อยเพียงครั้งเดียวก็พอ
           tm.setValueAt(pd,i,1);
           tm.setValueAt(pd.patient_last_name,i,2);
           tm.setValueAt(year,i,3);
           tm.setValueAt(pd.pid,i,4);
           if(flag == true)
           {
               tm.setValueAt(pd.xn,i,5);
           }
           else
           {
               tm.setValueAt(pd.mother_firstname,i,5);
           }
       }
       jTable.setModel(tm);
       jTable.getColumnModel().getColumn(0).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(0).setCellRenderer(rendererRight);
       // Render Hn ให้แสดงเป็นแบบสั้น sumo 26/7/2549
       jTable.getColumnModel().getColumn(0).setCellRenderer(hnRender);
       ///////////////////////////////////////////////////////////////
       jTable.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(1).setCellRenderer(cellRendererPatient);
       jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable.getColumnModel().getColumn(3).setCellRenderer(rendererRight);
       jTable.getColumnModel().getColumn(4).setPreferredWidth(140);
       jTable.getColumnModel().getColumn(4).setCellRenderer(rendererRight);
       jTable.getColumnModel().getColumn(5).setPreferredWidth(100);
       if(flag == true)
       {
           jTable.getColumnModel().getColumn(5).setCellRenderer(rendererRight);
       }
       
    }    
    /**
     * แสดงข้อมูลถ้าไม่เจอให้ส่งข้อมูลไปยัง socialData 
     */
    
     public void setLanguage(String msg)
    {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(column);
        GuiLang.setLanguage(column2);
     }
     
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setFnameLname(String first_name,String list_name)
    {           
        if(first_name == null)
        {
            first_name = "";
        }
        if(list_name == null)
        {
            list_name = "";
        }  
        if("".equals(first_name) && "".equals(list_name))
        {          
            if(thePatient != null)
            {
                updateOGPatientV(thePatient);
                if(!thePatient.isEmpty())
                {
                    jTable.requestFocus();
                    if(rowPatient!=-1) jTable.setRowSelectionInterval(rowPatient,rowPatient);
                }
            }
        }        
        if(first_name.trim().length() >0 || list_name.trim().length() >0 )
        {   
            this.jTextFieldXn.setText(first_name + " " + list_name);
            searchPatientInDB();
        }
    }
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setHNPID(String hn,String pid)
    {   
        if(hn.trim().length() >0 || pid.trim().length() >0 )
        {   
            this.jTextFieldXn.setText(hn + " " + pid);
            searchPatientInDB();
        }
    }
    
    /**
     *  ใช้ในการ clear ค่าใน form
     */
    public void clearGUI(){   
        updateOGPatientV(null);
    }   
    
    /**
     *@Author : amp
     *@date : 09/02/2549
     *@see : เคลียร์ค่า Vector
     */
    public void setVthePatientToNull()
    {
        thePatient = null;
    }
    
}
