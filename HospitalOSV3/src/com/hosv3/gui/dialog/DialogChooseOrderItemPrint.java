/*
 * DialogChooseOrderItemPrint.java
 *
 * Created on 2 พฤศจิกายน 2547, 16:44 น.
 */
package com.hosv3.gui.dialog;
import com.hosv3.utility.Constant;
import java.awt.*;
import java.util.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;
import com.hosv3.control.*;
import com.hosv3.object.printobject.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.ComboFix;

/**
 *
 * @author  henbe
 * ห้ามเปลี่ยนเป็น JFrame เพราะว่าหน้าจอนี้จะเป็นการรับค่าจากผู้ใช้อย่างเดียวไม่ได้ทำงานอื่นๆ
 * ซึ่งเมื่อรับค่าจากผู้ใช้แล้วโปรแกรมจะ return boolean ไปให้หน้าจอหลักเพื่อใช้ในการพิมพ์ต่อไป
 */
public class DialogChooseOrderItemPrint extends javax.swing.JDialog
{
    
    /** Creates new form DialogChooseOrderItemPrint*/
    Patient thePatient = null;
    Employee theEmployee = null;
    String employeeid = "0";
    Visit theVisit =null;
    Vector vDoctor ;
    boolean action = false;
    String nameDoctor = "";
    HosControl theHC = null;
    HosObject theHO = null;
    OrderControl theOrderControl = null;
    
    int typePrint = 0;
    int valuePrint = 0;
    PrintSelectDrugList thePrintSelectDrugList = new PrintSelectDrugList();
    
    public DialogChooseOrderItemPrint(Frame parent,HosControl hc,int preveiw) //,OrderControl orderControl)
    {
        super(parent,true);
        initComponents();
        setTitle(Constant.getTextBundle("เลือก รายการพิมพ์"));
        theHC = hc;
        theHO = hc.theHO;
        theOrderControl = hc.theOrderControl;
        thePatient = theHO.thePatient;
        theVisit = theHO.theVisit;
        valuePrint = preveiw;
        //setIconImage(parent.getIconImage());
        setLanguage("");
        setinitLookup();
        setDoctor();
        setDialog();
    }
    
    public void setinitLookup()
    {
        ComboFix p=new ComboFix();
        p.code = "";
        p.name = Constant.getTextBundle("นอกเหนือจากแพทย์");
        vDoctor = theHC.theOrderControl.queryStaffDoctorVerifyOrder(theVisit.getObjectId());
        if(vDoctor !=null)
        {
            ComboboxModel.initComboBox(jComboBoxListDoctor,vDoctor);
        }
        jComboBoxListDoctor.insertItemAt((Object)p,0);
        ComboboxModel.setCodeComboBox(jComboBoxListDoctor, p.code);
        
        
    }
    public static boolean showDialog(HosControl hc,PrintSelectDrugList psdl,int preview)
    {
        DialogChooseOrderItemPrint dlg = new DialogChooseOrderItemPrint(
                hc.theUS.getJFrame(), hc, preview);
        dlg.thePrintSelectDrugList = psdl;
        dlg.setVisible(true);
        return dlg.action;
    }
    public void setPreview(int preview)
    {
        valuePrint = preview;
        setVisible(true);
        Constant.println("setPreview+++++++++++++++++++++++++++++++++++++++++++++");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupPrintType = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jCheckBoxDrug = new javax.swing.JCheckBox();
        jCheckBoxSupply = new javax.swing.JCheckBox();
        jCheckBoxLab = new javax.swing.JCheckBox();
        jCheckBoxXRay = new javax.swing.JCheckBox();
        jCheckBoxService = new javax.swing.JCheckBox();
        jCheckBoxAll = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jButtonPrinting = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jRadioButtonPrintAll = new javax.swing.JRadioButton();
        jRadioButtonChooseDoctor = new javax.swing.JRadioButton();
        jComboBoxListDoctor = new javax.swing.JComboBox();

        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(new javax.swing.border.TitledBorder("\u0e01\u0e25\u0e38\u0e48\u0e21\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e1e\u0e34\u0e21\u0e1e\u0e4c"));
        jCheckBoxDrug.setSelected(true);
        jCheckBoxDrug.setText("Drug");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxDrug, gridBagConstraints);

        jCheckBoxSupply.setSelected(true);
        jCheckBoxSupply.setText("Supply");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxSupply, gridBagConstraints);

        jCheckBoxLab.setSelected(true);
        jCheckBoxLab.setText("Lab");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxLab, gridBagConstraints);

        jCheckBoxXRay.setSelected(true);
        jCheckBoxXRay.setText("XRay");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxXRay, gridBagConstraints);

        jCheckBoxService.setSelected(true);
        jCheckBoxService.setText("Service");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxService, gridBagConstraints);

        jCheckBoxAll.setSelected(true);
        jCheckBoxAll.setText("All");
        jCheckBoxAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAllActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel2.add(jCheckBoxAll, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButtonPrinting.setText("Printing");
        jButtonPrinting.setActionCommand("jButton1");
        jButtonPrinting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintingActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel3.add(jButtonPrinting, gridBagConstraints);

        jButtonClose.setText("Close");
        jButtonClose.setActionCommand("jButton1");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 0);
        jPanel3.add(jButtonClose, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 2);
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        buttonGroupPrintType.add(jRadioButtonPrintAll);
        jRadioButtonPrintAll.setSelected(true);
        jRadioButtonPrintAll.setText("PrintAll");
        jRadioButtonPrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPrintAllActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 2);
        jPanel4.add(jRadioButtonPrintAll, gridBagConstraints);

        buttonGroupPrintType.add(jRadioButtonChooseDoctor);
        jRadioButtonChooseDoctor.setText("ChooseDoctor");
        jRadioButtonChooseDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonChooseDoctorActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 2, 0, 0);
        jPanel4.add(jRadioButtonChooseDoctor, gridBagConstraints);

        jComboBoxListDoctor.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 3, 0, 0);
        jPanel4.add(jComboBoxListDoctor, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(jPanel4, gridBagConstraints);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents
        private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
            // TODO add your handling code here:
            dispose();
    }//GEN-LAST:event_jButtonCloseActionPerformed
            private void jRadioButtonChooseDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonChooseDoctorActionPerformed
                // TODO add your handling code here:
                if(jRadioButtonChooseDoctor.isSelected())
                {
                    setEnablejComboBoxListDoctor(true);
                }
    }//GEN-LAST:event_jRadioButtonChooseDoctorActionPerformed
                private void jRadioButtonPrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPrintAllActionPerformed
                    // TODO add your handling code here:
                    if(jRadioButtonPrintAll.isSelected())
                    {
                        setEnablejComboBoxListDoctor(false);
                    }
    }//GEN-LAST:event_jRadioButtonPrintAllActionPerformed
                    private void jCheckBoxAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAllActionPerformed
                        // TODO add your handling code here:
                        if(jCheckBoxAll.isSelected())
                        {
                            jCheckBoxDrug.setSelected(true);
                            jCheckBoxLab.setSelected(true);
                            jCheckBoxService.setSelected(true);
                            jCheckBoxSupply.setSelected(true);
                            jCheckBoxXRay.setSelected(true);
                            jCheckBoxDrug.setEnabled(false);
                            jCheckBoxLab.setEnabled(false);
                            jCheckBoxService.setEnabled(false);
                            jCheckBoxSupply.setEnabled(false);
                            jCheckBoxXRay.setEnabled(false);
                        }
                        else
                        {
                            jCheckBoxDrug.setSelected(false);
                            jCheckBoxLab.setSelected(false);
                            jCheckBoxService.setSelected(false);
                            jCheckBoxSupply.setSelected(false);
                            jCheckBoxXRay.setSelected(false);
                            jCheckBoxDrug.setEnabled(true);
                            jCheckBoxLab.setEnabled(true);
                            jCheckBoxService.setEnabled(true);
                            jCheckBoxSupply.setEnabled(true);
                            jCheckBoxXRay.setEnabled(true);
                        }
    }//GEN-LAST:event_jCheckBoxAllActionPerformed
                        private void jButtonPrintingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintingActionPerformed
                            // TODO add your handling code here:
                            updateGOPrintSelectDrugList();
                            action = true;
                            setVisible(false);
                            //theHC.thePrintControl.printSelectDrugList(thePrintSelectDrugList,valuePrint);
                            // theOrderControl.printOrderItem(thePatient, array, valuePrint, selectDrug(), selectXRay(), selectService(),selectLab(), selectSupply(),typePrint,employeeid,nameDoctor,vDoctor);
                            
    }//GEN-LAST:event_jButtonPrintingActionPerformed
                        
                        /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        // System.exit(0);
        dispose();
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        //   new DialogChooseOrderItemPrint(null).setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupPrintType;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonPrinting;
    private javax.swing.JCheckBox jCheckBoxAll;
    private javax.swing.JCheckBox jCheckBoxDrug;
    private javax.swing.JCheckBox jCheckBoxLab;
    private javax.swing.JCheckBox jCheckBoxService;
    private javax.swing.JCheckBox jCheckBoxSupply;
    private javax.swing.JCheckBox jCheckBoxXRay;
    private javax.swing.JComboBox jComboBoxListDoctor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButtonChooseDoctor;
    private javax.swing.JRadioButton jRadioButtonPrintAll;
    // End of variables declaration//GEN-END:variables
    //private void setDataDoctorPrint()
    private void updateGOPrintSelectDrugList()
    {
        
        // if(jComboBoxDoctor.getItemCount()==0) return;
        
        if(jRadioButtonChooseDoctor.isSelected())
        {
//             typePrint = 2;
//             employeeid = Gutil.getGuiData(jComboBoxListDoctor);
//             nameDoctor = ComboboxModel.getStringConboBox(jComboBoxListDoctor);
            thePrintSelectDrugList.typePrint = 2;
            thePrintSelectDrugList.employeeid = Gutil.getGuiData(jComboBoxListDoctor);
            thePrintSelectDrugList.nameDoctor = ComboboxModel.getStringConboBox(jComboBoxListDoctor);
        }
        else
        {
//            typePrint = 1;
//            employeeid = "";
//            nameDoctor = "";
            thePrintSelectDrugList.typePrint = 1;
            thePrintSelectDrugList.employeeid = "";
            thePrintSelectDrugList.nameDoctor = "";
        }
        thePrintSelectDrugList.selectdrug = jCheckBoxDrug.isSelected();
        thePrintSelectDrugList.selectlab = jCheckBoxLab.isSelected();
        thePrintSelectDrugList.selectservice = jCheckBoxService.isSelected();
        thePrintSelectDrugList.selectsupply = jCheckBoxSupply.isSelected();
        thePrintSelectDrugList.selectxray = jCheckBoxXRay.isSelected();
    }
    
    private void setDoctor()
    {
        if(theEmployee !=null)
            if(theEmployee.authentication_id.equalsIgnoreCase(Authentication.DOCTOR))
            {
            //   jComboBoxListDoctor.insertItemAt((Object)p,0);
            ComboboxModel.setCodeComboBox(jComboBoxListDoctor, theEmployee.getObjectId());
            setChooseDoctor(true);
            setEnablejComboBoxListDoctor(true);
            }
        
    }
    
    private void setEnablejComboBoxListDoctor(boolean b)
    {
        jComboBoxListDoctor.setEnabled(b);
    }
    private void setChooseDoctor(boolean b)
    {
        jRadioButtonChooseDoctor.setSelected(b);
    }
    private void setDialog()
    {
        setSize(320,180);
        
        Toolkit thekit = getToolkit();
        
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
        
    }
    
    public void setLanguage(String msg)
    {
        GuiLang.setLanguage(jButtonPrinting);
        GuiLang.setLanguage(jCheckBoxDrug);
        GuiLang.setLanguage(jCheckBoxLab);
        GuiLang.setLanguage(jCheckBoxService);
        GuiLang.setLanguage(jCheckBoxSupply);
        GuiLang.setLanguage(jCheckBoxXRay);
        GuiLang.setLanguage(jCheckBoxAll);
        GuiLang.setLanguage(jButtonClose);
        GuiLang.setLanguage(jRadioButtonPrintAll);
        GuiLang.setLanguage(jRadioButtonChooseDoctor);
        GuiLang.setTextBundle(jPanel2);
    }
    
}
