/*
 * DialogLabReferOut.java
 *
 * Created on 16 พฤษภาคม 2547, 14:20 น.
 *
 */
package com.hosv3.gui.dialog;
import java.util.*;
import java.awt.*;
import javax.swing.*;

import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.subject.*;
import com.hosv3.utility.connection.*;
import com.hosv3.usecase.transaction.*;

import com.hospital_os.object.*; 
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hosv3.utility.Constant;

/**
 *
 * @author amp
 * 
 */
public class DialogLabReferOut extends javax.swing.JFrame
        implements UpdateStatus,ManageLabXrayResp
{
    public boolean actionCommand = false;  
    JFrame aMain;
    HosControl theHC;
    UpdateStatus theUS;
    LookupControl theLookupControl;
    OrderControl theOrderControl;
    OrderSubject theOrderSubject;
    SetupControl theSetupControl;
    PatientControl thePatientControl; 
    SystemControl theSystemControl;
    PanelSetupSearchSub  psep;
    private Vector vFormLab; //เก็บ object ของ FormLab
    private Vector vLabreferout;//เก็บ object ของ orderItemlabreferout 
    
    private Visit theVisit;
    private Patient thePatient;
    private FormLabreferout theFormLabreferout;    
    private String[] col_jTableListFormLab = {"ชื่อแบบฟอร์ม","วันที่เก็บตัวอย่าง","จุดที่ส่งตรวจ"};
    private String[] col_jTableListLab = {"ชื่อ"};
    //private OrderItemLabreferout theOrderItemLabreferout;
    /** Creates new form DialogAppointment */
    public DialogLabReferOut(HosControl hc,UpdateStatus us)
    {
        setIconImage(us.getJFrame().getIconImage());
        aMain = us.getJFrame(); 
        theHC = hc;
        theLookupControl = hc.theLookupControl;
        theOrderControl = hc.theOrderControl;
        theOrderSubject = hc.theHS.theOrderSubject;
        theSetupControl = hc.theSetupControl;
        thePatientControl = hc.thePatientControl; 
        theSystemControl = hc.theSystemControl;
        theVisit = hc.theHO.theVisit;
        thePatient = hc.theHO.thePatient;
        theFormLabreferout = new FormLabreferout();
        theUS = this;
        initComponents();
        this.jButtonAdd.setVisible(false);
//        this.jButtonAddLab.setVisible(false);
        this.jButtonDel.setVisible(false);
        this.jTableListFormLab.setGuiMode(true);
        this.jTableListLab.setGuiMode(true);
        setLanguage("");   
        setDataAll();
        searchFormLab();
    }
    
    private void setDataAll()
    {   
        theHC.theHS.theResultSubject.attachManageLab(this);
        ComboboxModel.initComboBox(jComboBoxServicePoint, theLookupControl.listServicePoint());
        ComboboxModel.initComboBox(jComboBoxDoctor, theLookupControl.listDoctor());
        jTextFieldNameForm.setText("");
        Patient thePatientT = new Patient();        
        thePatientT = thePatientControl.readPatientByPatientIdRet(thePatient.getObjectId());
        jTextFieldHN.setText(theLookupControl.getRenderTextHN(thePatient.hn));
        jTextFieldPatientName.setText(thePatient.patient_name + " " + thePatient.patient_last_name);
        dateComboBoxCollectionDate.setEditable(true);
        jTextFieldDx.setText("");
        jTextAreaDescription.setText(""); 
        jTextFieldHosReferOut.setText("");
        jTextFieldHosReferOut.setEditable(false);
        setFormLabV(null);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldHN = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaDescription = new javax.swing.JTextArea();
        jComboBoxServicePoint = new javax.swing.JComboBox();
        jComboBoxDoctor = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonClose = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldDx = new javax.swing.JTextField();
        jTextFieldPatientName = new javax.swing.JTextField();
        dateComboBoxCollectionDate = new com.hospital_os.utility.DateComboBox();
        jLabel7 = new javax.swing.JLabel();
        jTextFieldHosReferOut = new javax.swing.JTextField();
        jButtonHos = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldNameForm = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableListLab = new com.hosv3.gui.component.HJTableSort();
        jPanel6 = new javax.swing.JPanel();
        jButtonAddLab = new javax.swing.JButton();
        jButtonDeleteLab = new javax.swing.JButton();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldOtherPlace = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListFormLab = new com.hosv3.gui.component.HJTableSort();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
                formWindowClosing(evt);
            }
        });

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(600, 500));
        jPanel2.setPreferredSize(new java.awt.Dimension(600, 500));
        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e23\u0e32\u0e22\u0e25\u0e30\u0e40\u0e2d\u0e35\u0e22\u0e14\u0e41\u0e25\u0e1a Refer Out"));
        jPanel7.setMinimumSize(new java.awt.Dimension(320, 32));
        jPanel7.setPreferredSize(new java.awt.Dimension(320, 32));
        jLabel2.setText("Hn");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel2, gridBagConstraints);

        jTextFieldHN.setEditable(false);
        jTextFieldHN.setBorder(null);
        jTextFieldHN.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldHN.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jTextFieldHN, gridBagConstraints);

        jLabel3.setText("FName+Lname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel3, gridBagConstraints);

        jLabel4.setText("CollectionDate");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel4, gridBagConstraints);

        jLabel6.setText("Detail");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel6, gridBagConstraints);

        jLabel10.setText("ServicePointSendLab");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel10, gridBagConstraints);

        jLabel11.setText("RequestBy");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel11, gridBagConstraints);

        jScrollPane2.setMaximumSize(new java.awt.Dimension(250, 150));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(50, 50));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(50, 50));
        jTextAreaDescription.setLineWrap(true);
        jTextAreaDescription.setWrapStyleWord(true);
        jTextAreaDescription.setMaximumSize(new java.awt.Dimension(1024, 1024));
        jTextAreaDescription.setMinimumSize(new java.awt.Dimension(10, 10));
        jTextAreaDescription.setPreferredSize(new java.awt.Dimension(10, 10));
        jScrollPane2.setViewportView(jTextAreaDescription);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jScrollPane2, gridBagConstraints);

        jComboBoxServicePoint.setMinimumSize(new java.awt.Dimension(31, 21));
        jComboBoxServicePoint.setPreferredSize(new java.awt.Dimension(31, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jComboBoxServicePoint, gridBagConstraints);

        jComboBoxDoctor.setMinimumSize(new java.awt.Dimension(31, 21));
        jComboBoxDoctor.setPreferredSize(new java.awt.Dimension(31, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jComboBoxDoctor, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(350, 26));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 26));
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonSave.setText("Save");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jButtonSave, gridBagConstraints);

        jButtonClose.setText("\u0e1b\u0e34\u0e14");
        jButtonClose.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonClose.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonClose.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonClose.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonClose.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonCloseActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jButtonClose, gridBagConstraints);

        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jButtonDel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(jPanel1, gridBagConstraints);

        jLabel9.setText("Dx");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel9, gridBagConstraints);

        jTextFieldDx.setMinimumSize(new java.awt.Dimension(4, 21));
        jTextFieldDx.setPreferredSize(new java.awt.Dimension(4, 21));
        jTextFieldDx.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldDxActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jTextFieldDx, gridBagConstraints);

        jTextFieldPatientName.setEditable(false);
        jTextFieldPatientName.setBorder(null);
        jTextFieldPatientName.setMinimumSize(new java.awt.Dimension(100, 21));
        jTextFieldPatientName.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jTextFieldPatientName, gridBagConstraints);

        dateComboBoxCollectionDate.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                dateComboBoxCollectionDateFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(dateComboBoxCollectionDate, gridBagConstraints);

        jLabel7.setText("Hospital");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanel7.add(jTextFieldHosReferOut, gridBagConstraints);

        jButtonHos.setText("...");
        jButtonHos.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonHos.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonHos.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonHos.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonHos.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonHosActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jButtonHos, gridBagConstraints);

        jLabel12.setText("FormName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel7.add(jLabel12, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel7.add(jTextFieldNameForm, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23 Order Lab"));
        jTableListLab.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String []
            {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableListLab);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel5.add(jScrollPane3, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonAddLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/plus16.gif")));
        jButtonAddLab.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddLab.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddLab.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddLab.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddLab.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonAddLabActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jButtonAddLab, gridBagConstraints);

        jButtonDeleteLab.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDeleteLab.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteLab.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteLab.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteLab.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteLab.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDeleteLabActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel6.add(jButtonDeleteLab, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel5.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel7.add(jPanel5, gridBagConstraints);

        jTextFieldCode.setMinimumSize(new java.awt.Dimension(40, 21));
        jTextFieldCode.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                jTextFieldCodeFocusLost(evt);
            }
        });
        jTextFieldCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextFieldCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel7.add(jTextFieldCode, gridBagConstraints);

        jTextFieldOtherPlace.setMinimumSize(new java.awt.Dimension(250, 21));
        jTextFieldOtherPlace.setPreferredSize(new java.awt.Dimension(250, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel7.add(jTextFieldOtherPlace, gridBagConstraints);

        jLabel8.setText("OtherPlace");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 3, 0, 0);
        jPanel7.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel7, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e41\u0e1a\u0e1a\u0e1f\u0e2d\u0e23\u0e4c\u0e21\u0e41\u0e25\u0e1a"));
        jPanel3.setMinimumSize(new java.awt.Dimension(200, 107));
        jPanel3.setPreferredSize(new java.awt.Dimension(200, 165));
        jPanel3.setRequestFocusEnabled(false);
        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTableListFormLab.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTableListFormLabKeyReleased(evt);
            }
        });
        jTableListFormLab.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jTableListFormLabMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableListFormLab);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-665)/2, (screenSize.height-467)/2, 665, 467);
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldCodeFocusLost
        Office office = null;
        if(jTextFieldCode.getText().length()==5){
            office = theHC.theLookupControl.readHospitalByCode(jTextFieldCode.getText());
            if(office != null){
                theFormLabreferout.site_id = office.getObjectId();
            }
            else{
                theFormLabreferout.site_id = null;
            }
        }      
        if(office!=null){          
             jTextFieldHosReferOut.setText(office.name);
        }
        else{
            jTextFieldHosReferOut.setText("");
            jTextFieldCode.setText("");
        }
        if(jTextFieldHosReferOut.getText().equals("")){
            jTextFieldCode.setText("");
        }
    }//GEN-LAST:event_jTextFieldCodeFocusLost

    private void jTextFieldCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodeKeyReleased
    if(jTextFieldCode.getText().length()==5){
            Office office = theHC.theLookupControl.readHospitalByCode(jTextFieldCode.getText());
            if(office == null){  
                jTextFieldCode.setText("");
                jTextFieldHosReferOut.setText("");
                theFormLabreferout.site_id = null;
                return;
            }
            if(office.getObjectId()!=null){
                theFormLabreferout.site_id = office.getObjectId();
                jTextFieldHosReferOut.setText(office.name);                
            }
            else{
                jTextFieldHosReferOut.setText("");
            }
            jTextFieldCode.transferFocus();
        }
    }//GEN-LAST:event_jTextFieldCodeKeyReleased
    private void jButtonDeleteLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteLabActionPerformed
        int[] row = jTableListLab.getSelectedRows();
        OrderItemLabreferout oilro = new OrderItemLabreferout();            
        if(row == null || row.length == 0 ){
            theUS.setStatus("กรุณาเลือกรายการแลปที่ต้องการลบ", UpdateStatus.WARNING);
            return;
        }
	for(int i = row.length-1 ; i >= 0; i--){
            oilro = (OrderItemLabreferout) vLabreferout.get(row[i]);
            if(oilro != null){   
                if(oilro.getObjectId()!= null){   
                    vLabreferout.remove( row[i] );
                    setLabreferout(vLabreferout);
                    theOrderControl.deleteOrderItemLabReferOut(oilro);                    
                }
                else{
                    vLabreferout.remove(row[i]);
                    setLabreferout(vLabreferout);
                }
            }
            oilro = null;
        }
    }//GEN-LAST:event_jButtonDeleteLabActionPerformed
    private void jButtonAddLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddLabActionPerformed
        PanelSetupSearchSub.showDialog(theHC,this,9,"LabReferOut",jTableListLab);
    }//GEN-LAST:event_jButtonAddLabActionPerformed
    private void jButtonHosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHosActionPerformed
        Office of = new Office();
        of.setObjectId(theFormLabreferout.site_id);                
        if(DialogOffice.showDialog(theHC,this,of)){
            theFormLabreferout.site_id = of.getObjectId();
            jTextFieldHosReferOut.setText(of.name);
            jTextFieldCode.setText(of.getObjectId());
        }
    }//GEN-LAST:event_jButtonHosActionPerformed
    private void dateComboBoxCollectionDateFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateComboBoxCollectionDateFocusLost
        
    }//GEN-LAST:event_dateComboBoxCollectionDateFocusLost
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        deleteFormLab();
        searchFormLab();
        clearAll();
        setLabreferout(null);
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        setVisible(false);        
        dispose();
    }//GEN-LAST:event_formWindowClosing
    private void jTextFieldDxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDxActionPerformed
        
    }    private void comboBoxClinic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-LAST:event_jTextFieldDxActionPerformed
    }//GEN-FIRST:event_comboBoxClinic1ActionPerformed
    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-LAST:event_comboBoxClinic1ActionPerformed
        dispose();//GEN-FIRST:event_jButtonCloseActionPerformed
    }//GEN-LAST:event_jButtonCloseActionPerformed
    private void jTableListFormLabMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListFormLabMouseReleased
        if(jTableListFormLab.getSelectedRow() < 0){
             JOptionPane.showMessageDialog(this, Constant.getTextBundle("ยังไม่มีข้อมูล"), Constant.getTextBundle("Error"), JOptionPane.ERROR_MESSAGE);            
        }
        else{
             selectFormLab();             
        }
    }//GEN-LAST:event_jTableListFormLabMouseReleased
    private void jTableListFormLabKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListFormLabKeyReleased
        if(evt.getKeyChar()==evt.VK_UP || evt.getKeyChar()==evt.VK_DOWN){
            jTableListFormLabMouseReleased(null);
        }
    }//GEN-LAST:event_jTableListFormLabKeyReleased
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
         actionCommand = true;           
         if(theFormLabreferout==null)
             theFormLabreferout = new FormLabreferout();
         updateGOForLabReferOut(theFormLabreferout);
         theOrderControl.saveAboutLabReferOut(theFormLabreferout
            , vLabreferout,this); 
         //ผิดแพทเทอร์น -nueng ไม่อยากทำ notify
         searchFormLab(); 
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        theFormLabreferout = null;
        clearAll();
        setLabreferout(null); 
        insertFormLab();
        jButtonDel.setEnabled(false);
    }//GEN-LAST:event_jButtonAddActionPerformed
    ///////////////////////////////////////////////////////////////////////////
    /**
     *ไม่ให้สามารถแก้ไขได้ เมื่อยังไม่กดปุ่ม +
     *หรือต้องการแก้ไข
     */
    private void setEnableAll(boolean var){   
        dateComboBoxCollectionDate.setEnabled(var);
        jTextAreaDescription.setEditable(var);
        jComboBoxServicePoint.setEnabled(var);        
        jComboBoxDoctor.setEnabled(var);  
        jTextFieldDx.setEditable(var);        
        jTextFieldNameForm.setEnabled(var);        
        
        jButtonAddLab.setEnabled(var);        
        jButtonDeleteLab.setEnabled(var);  
        jButtonDel.setEnabled(var);        
        jButtonHos.setEnabled(var);        
        jButtonSave.setEnabled(var);     
    }
    
    ///////////////////////////////////////////////////////////////////////////
    /**
     *ค้นหาว่าในคนนั้นเพิ่มฟอร์ม lab บ้างแล้วยัง
     *เพื่อให้สามารถแก้ไขได้
     */
    private void searchFormLab(){         
        vFormLab = new Vector();
        vFormLab =  theOrderControl.listFormLabReferOutByVID(theVisit.getObjectId());                
        setFormLabV(vFormLab);               
    }
    
    ///////////////////////////////////////////////////////////////////////////
    /**
     *show formlab ที่มีการ add ไว้
     */
    private void setFormLabV(Vector vFormLab){   
        FormLabreferout flo = new FormLabreferout(); 
        TaBleModel tm ;
        if(vFormLab != null){   
            tm= new TaBleModel(col_jTableListFormLab,vFormLab.size());            
            for(int i=0 ;i<vFormLab.size(); i++){  
                flo = (FormLabreferout)vFormLab.get(i);
                ServicePoint sp = new ServicePoint();
                sp = theSetupControl.listServicePointByPk(flo.servicepoint);
                tm.setValueAt(flo.form_name,i,0);                
                tm.setValueAt(DateUtil.convertFieldDate(flo.date_collection),i,1);
                tm.setValueAt(sp.name,i,2);
            }           
        }
        else{   
            tm= new TaBleModel(col_jTableListFormLab,0);
        }
        jTableListFormLab.setModel(tm); 
    } 
    ////////////////////////////////////////////////////////////////////////////
    /**
     *show ตามที่เลือก
     */
    private void selectFormLab(){   
        int row = jTableListFormLab.getSelectedRow();
        dateComboBoxCollectionDate.setText((String)jTableListFormLab.getValueAt(row, 1));        
        FormLabreferout flo = (FormLabreferout)vFormLab.get(row);
        theFormLabreferout = flo;
        jTextFieldNameForm.setText(flo.form_name);
        Gutil.setGuiData(jComboBoxServicePoint,flo.servicepoint);
        Gutil.setGuiData(jComboBoxDoctor,flo.requested_by);
        jTextFieldDx.setText(flo.clinical_diagnosis);     
        jTextAreaDescription.setText(flo.detail_speciment);
        if(flo.site_id.equalsIgnoreCase("null") || flo.site_id.equals("")){        
            jTextFieldHosReferOut.setText("");
        }
        else{
            Office of = (Office)theLookupControl.readHospitalByCode(flo.site_id);
            jTextFieldHosReferOut.setText(of.name);                                    
            jTextFieldCode.setText(of.getCode());
        }
        // เพิ่มฟิลด์เก็บสถานพยาบาลอื่นๆ ที่ไม่มีใน list --Sumo--27/2/2549--
        jTextFieldOtherPlace.setText(flo.other_place);
        if(flo==null) 
            return;     
        vLabreferout = theOrderControl.listLabReferOutByFLROID(flo.getObjectId());
        setLabreferout(vLabreferout);
        setEnableAll(true);
    } 
  
    ////////////////////////////////////////////////////////////////////////////
    /**
     *เซตตาราง Labreferout
     */
    private void setLabreferout(Vector vLabreferout){   
        TaBleModel tm ;
        if(vLabreferout != null){
            tm= new TaBleModel(col_jTableListLab,vLabreferout.size());
            for(int i=0 ;i<vLabreferout.size(); i++){  
                tm.setValueAt(((OrderItemLabreferout)vLabreferout.get(i)).common_name,i,0);
            }            
        }
        else{   
            tm= new TaBleModel(col_jTableListLab,0);
        }
        jTableListLab.setModel(tm);                  
    }
    
    //////////////////////////////////////////////////////////////////////////
    /**
     *เคลียร์ text เพื่อรอลงข้อมูล
     */
    private void clearAll(){   
        jTextAreaDescription.setText("");
        jTextFieldDx.setText("");
        jTextFieldCode.setText("");
        jTextFieldHosReferOut.setText("");
        jTextFieldNameForm.setText(""); 
        jTextFieldOtherPlace.setText("");
    }
    
    ///////////////////////////////////////////////////////////////////////////
    /**
     *เพื่อเคลียร์ obj ให้เป็นค่าว่างไว้
     */
    private void insertFormLab(){
        if(theFormLabreferout == null)
            theFormLabreferout = new FormLabreferout();
        vLabreferout = new Vector();
    }
    
    //////////////////////////////////////////////////////////////////////////
    /**
     *ลบ FormLab
     */
    private boolean deleteFormLab(){   
        int row = jTableListFormLab.getSelectedRow();
        if(row ==-1){
            return false;
        }
        if(!theUS.confirmBox(Constant.getTextBundle("คุณต้องการลบฟอร์มแลปนี้ใช่หรือไม่")
            ,UpdateStatus.WARNING)){
            return false;
        }
        theOrderControl.deleteFormLabReferOut((FormLabreferout)vFormLab.get(row)
                ,vLabreferout,theUS); 
        vFormLab = null;
        vLabreferout = null;
        return true;
    }  
    
    //////////////////////////////////////////////////////////////////////////
    /**
     *เซตค่า OrderItemLabreferout
     *ให้ค่ากับ Vector Labreferout
     **/  
    public void updateGOOrderItemLabreferout(OrderItem orderItem){
        OrderItemLabreferout oilro = new OrderItemLabreferout();
        oilro.order_item_id = orderItem.getObjectId();
        oilro.common_name = orderItem.common_name;
        oilro.item_id = orderItem.item_code; 
        if(oilro != null){
            if(vLabreferout==null)
                vLabreferout = new Vector();
            if(vLabreferout.size()==0){
                vLabreferout.add(oilro);
                setLabreferout(vLabreferout);
            }
            else{
                int same =0;
                int rowsame =0;
                for(int i = 0 ; i< vLabreferout.size() ; i++){   
                    if(((OrderItemLabreferout)vLabreferout.get(i)).order_item_id.equals(orderItem.getObjectId())){ 
                        same = 1;
                        rowsame = i ;
                    }
                }
                if(same == 0){   
                    vLabreferout.add(oilro);                    
                    setLabreferout(vLabreferout);
                }
            }            
        }     
    }   
    //////////////////////////////////////////////////////////////////////////
    /**
     *เซตข้อมูลจาก GUI เข้า Object
     */
    private void updateGOForLabReferOut(FormLabreferout theFormLabreferout){ 
        theFormLabreferout.patient_id = thePatient.getObjectId();         
        theFormLabreferout.visit_id = theVisit.getObjectId();
        theFormLabreferout.date_collection = dateComboBoxCollectionDate.getText();
        theFormLabreferout.form_name = jTextFieldNameForm.getText();
        theFormLabreferout.servicepoint = ComboboxModel.getCodeComboBox(jComboBoxServicePoint);
        theFormLabreferout.requested_by = ComboboxModel.getCodeComboBox(jComboBoxDoctor);
        theFormLabreferout.clinical_diagnosis = jTextFieldDx.getText();        
        theFormLabreferout.detail_speciment = jTextAreaDescription.getText();
        // เพิ่มฟิลด์เก็บสถานพยาบาลอื่นๆ ที่ไม่มีใน list --Sumo--27/2/2549--
        theFormLabreferout.other_place = jTextFieldOtherPlace.getText();
    }
    ////////////////////////////////////////////////////////////////////////////
    /**
     *ใช้ในการ showDialog
     *ซึ่งเป็น static Function ใช้เมื่อDialog เรียกDialog
     */
    public static boolean showDialog(HosControl hc,UpdateStatus us){
        DialogLabReferOut dlg = new DialogLabReferOut(hc,us);
        dlg.setLabreferout(null);
        dlg.setInitDialog();
        dlg.setSize(640,480);
        dlg.setTitle("Lab Referout");
        dlg.setLanguage("");
        Toolkit thekit = dlg.getToolkit();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        dlg.setLocation((screenSize.width-dlg.getSize().width)/2, (screenSize.height-dlg.getSize().height)/2);
        dlg.setVisible(true);
        if(dlg.actionCommand){
            return true;
        }
        dlg=null;
        System.gc();
        return false;
    }      
    ////////////////////////////////////////////////////////////////////////////
    /**
     * เซตภาษา 
     */
    public void setLanguage(String msg)
    {
            GuiLang.setLanguage(jPanel3);
            GuiLang.setLanguage(jPanel5);
            GuiLang.setLanguage(jPanel7);
            GuiLang.setLanguage(jButtonClose);
            GuiLang.setLanguage(jButtonSave);
            GuiLang.setLanguage(jLabel4);
            GuiLang.setLanguage(jLabel6);
            GuiLang.setLanguage(jLabel3);
            GuiLang.setLanguage(jLabel2);
            GuiLang.setLanguage(jLabel7);
            GuiLang.setLanguage(jLabel10);
            GuiLang.setLanguage(jLabel9);
            GuiLang.setLanguage(jLabel11);
            GuiLang.setLanguage(jLabel12);
            GuiLang.setLanguage(jLabel8);

            GuiLang.setLanguage(this.col_jTableListLab);
            GuiLang.setLanguage(this.col_jTableListFormLab);
      } 
      //////////////////////////////////////////////////////////////////////////
      /**
       *เซตค่าเริ่มต้นDialog
       */
      private void setInitDialog(){
          if(theHC.theHO.theServicePoint != null)
            com.hospital_os.utility.Gutil.setGuiData(jComboBoxServicePoint, theHC.theHO.theServicePoint.getCode());
          if(theHC.theHO.theVisit != null && theHC.theHO.theVisit.doctor_dx != null)
            jTextFieldDx.setText(theHC.theHO.theVisit.doctor_dx);
      }
      //////////////////////////////////////////////////////////////////////////
      public boolean confirmBox(String str, int status) {
          int i = JOptionPane.showConfirmDialog(this,str,Constant.getTextBundle("เตือน")
                ,JOptionPane.YES_NO_OPTION);
          return (i==JOptionPane.YES_OPTION);
      }
      //////////////////////////////////////////////////////////////////////////
      public JFrame getJFrame() {
          return this;
      }
      //////////////////////////////////////////////////////////////////////////
      public void setStatus(String str, int status) {
          str = Constant.getTextBundle(str);
          if(status==UpdateStatus.COMPLETE || status==UpdateStatus.NORMAL)
              status = JOptionPane.INFORMATION_MESSAGE;
          else
              status = JOptionPane.ERROR_MESSAGE;
          JOptionPane.showMessageDialog(this, str, Constant.getTextBundle("สถานะ"), status); 
      }
      
      public void notifyAddLabReferOut(String str, int status) {
        if(theHC.theHO.vLabReferOut != null){
            for(int i=0;i<theHC.theHO.vLabReferOut.size();i++){
                OrderItem oi = (OrderItem) theHC.theHO.vLabReferOut.get(i);
                updateGOOrderItemLabreferout(oi);
            }
        }
      }
      
      public void notifyDeleteFilmXray(String str, int status) {
      }
      
      public void notifyDeleteLabOrder(String str, int status) {
      }
      
      public void notifyDeleteLabResult(String str, int status) {
      }
      
      public void notifyDeleteResultXray(String str, int status) {
      }
      
      public void notifyDeleteXrayPosition(String str, int status) {
      }
      
      public void notifyManagePatientLabReferIn(String str, int status) {
      }
      
      public void notifyReportResultLab(String str, int status) {
      }
      
      public void notifySaveFilmXray(String str, int status) {
      }
      
      public void notifySaveLabResult(String str, int status) {
      }
      
      public void notifySaveResultXray(String str, int status) {
      }
      
      public void notifySaveXrayPosition(String str, int status) {
      }
      
      public void notifyXrayReportComplete(String str, int status) {
      }
      
      public void notifyAddLabReferIn(String str, int status) {
      }
      
      public void notifySaveRemainLabResult(String str, int status) {
      }
      
      public void notifySendResultLab(String str, int status) {
      }
      
      public void notifyDeleteQueueLab(String str, int status) {
      }

    public static boolean showDialog(HosControl theHC, UpdateStatus theUS, Vector vOrderItemLab, int[] a) 
    {
        DialogLabReferOut dlg = new DialogLabReferOut(theHC,theUS);
        dlg.setInitDialog();
        dlg.setSize(640,480);
        dlg.setTitle("Lab Referout");
        dlg.setLanguage("");
        for(int i=0;i<a.length;i++){
            OrderItem oi = (OrderItem)vOrderItemLab.get(a[i]);
            dlg.updateGOOrderItemLabreferout(oi);
        }
        Toolkit thekit = dlg.getToolkit();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        dlg.setLocation((screenSize.width-dlg.getSize().width)/2, (screenSize.height-dlg.getSize().height)/2);
        dlg.setVisible(true);
        if(dlg.actionCommand){
            return true;
        }
        dlg=null;
        System.gc();
        return false;
    }
      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private com.hospital_os.utility.DateComboBox dateComboBoxCollectionDate;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddLab;
    private javax.swing.JButton jButtonClose;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonDeleteLab;
    private javax.swing.JButton jButtonHos;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jComboBoxDoctor;
    private javax.swing.JComboBox jComboBoxServicePoint;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    protected javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    protected com.hosv3.gui.component.HJTableSort jTableListFormLab;
    private com.hosv3.gui.component.HJTableSort jTableListLab;
    private javax.swing.JTextArea jTextAreaDescription;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDx;
    private javax.swing.JTextField jTextFieldHN;
    private javax.swing.JTextField jTextFieldHosReferOut;
    private javax.swing.JTextField jTextFieldNameForm;
    private javax.swing.JTextField jTextFieldOtherPlace;
    private javax.swing.JTextField jTextFieldPatientName;
    // End of variables declaration//GEN-END:variables
}
