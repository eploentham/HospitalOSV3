/*
 * DialogOrderSet.java
 *
 * Created on 21 เมษายน 2547, 15:40 น.
 */
package com.hosv3.gui.dialog;
import com.hosv3.utility.Constant;
import java.awt.*;
import java.util.*;

import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
/**
 *
 * @author  tong
 */
public class DialogOrderSet extends javax.swing.JDialog {

    HosControl theHC;
	HosObject theHO;
    //private Vector vOwner ;
    /** Vector ของ object DrugSetGroup*/
    private Vector vDrugSetGroup;
    /** Vector ของ object DrugSet*/
    private Vector vDrugSet;
    private Vector vItem;
    /** Vector ของ object DoseDrugSet*/
    private Vector vDoseDrugSet;
   
    /**ใช้ในการ set ค่าให้กับ combobox*/
    private ComboboxModel theComboboxModel;
   
    private Visit theVisit;
    private String[] col_jTableListDetailOrderSet = {"รายการItem"};
    private String[] col_jTableLisrOrderSet = {"รายการชุดตรวจ","เจ้าของรายการ"};
    
    /** Creates new form DialogOrderSet */
     public DialogOrderSet(HosControl hc,UpdateStatus us) 
     {
        super(hc.theUS.getJFrame(),true);
        initComponents();
        setDialog();
        setLanguage("");
        theHC = hc;
        theHO = hc.theHO;
        setComboBox();
        //setIconImage(us.getJFrame().getIconImage());
     }

    /** ใช้ในการ กำหนดค่าให้กับ combobox ที่อยู่ใน panel
     *ข้อมูลเข้า ไม่มี
     ข้อมูลออก ไม่มี
     */
    private void setComboBox()
    {   
        //amp:20/07/2549:เพื่อให้ user อื่นสามารถเพิ่มยาชุดได้ด้วย
        Vector vOwner = theHC.theLookupControl.listDrugSetOwner();
        theComboboxModel.initComboBox(jComboBoxListOwner,vOwner);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jComboBoxListOwner = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableLisrOrderSet = new com.hosv3.gui.component.HJTableSort();
        jTextFieldSearch = new javax.swing.JTextField();
        jCheckBoxGroup = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableListDetailOrderSet = new com.hosv3.gui.component.HJTableSort();
        jPanel4 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e0a\u0e38\u0e14\u0e2a\u0e31\u0e48\u0e07\u0e15\u0e23\u0e27\u0e08\u0e23\u0e31\u0e01\u0e29\u0e32");
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("\u0e04\u0e49\u0e19\u0e2b\u0e32\u0e0a\u0e38\u0e14\u0e15\u0e23\u0e27\u0e08\u0e23\u0e31\u0e01\u0e29\u0e32"));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel11.setMinimumSize(new java.awt.Dimension(260, 165));
        jPanel11.setPreferredSize(new java.awt.Dimension(260, 165));
        jComboBoxListOwner.setEnabled(false);
        jComboBoxListOwner.setMinimumSize(new java.awt.Dimension(26, 24));
        jComboBoxListOwner.setPreferredSize(new java.awt.Dimension(26, 24));
        jComboBoxListOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxListOwnerActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 1, 1);
        jPanel11.add(jComboBoxListOwner, gridBagConstraints);

        jTableLisrOrderSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableLisrOrderSet.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableLisrOrderSetMouseReleased(evt);
            }
        });
        jTableLisrOrderSet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableLisrOrderSetKeyReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableLisrOrderSet);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        jPanel11.add(jScrollPane1, gridBagConstraints);

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel11.add(jTextFieldSearch, gridBagConstraints);

        jCheckBoxGroup.setText("\u0e40\u0e08\u0e49\u0e32\u0e02\u0e2d\u0e07\u0e22\u0e32\u0e0a\u0e38\u0e14");
        jCheckBoxGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        jPanel11.add(jCheckBoxGroup, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel2.add(jPanel11, gridBagConstraints);

        jTableListDetailOrderSet.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableListDetailOrderSet);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 5);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setText("+");
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(30, 26));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(30, 26));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(30, 26));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jButtonAdd, gridBagConstraints);

        jButtonCancel.setText("\u0e1b\u0e34\u0e14");
        jButtonCancel.setMaximumSize(new java.awt.Dimension(71, 25));
        jButtonCancel.setMinimumSize(new java.awt.Dimension(71, 25));
        jButtonCancel.setPreferredSize(new java.awt.Dimension(71, 25));
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jButtonCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 5, 5);
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTableLisrOrderSetKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableLisrOrderSetKeyReleased
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
            jTableLisrOrderSetMouseReleased(null);
    }//GEN-LAST:event_jTableLisrOrderSetKeyReleased

    private void jCheckBoxGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxGroupActionPerformed
        this.jComboBoxListOwner.setEnabled(this.jCheckBoxGroup.isSelected());
    }//GEN-LAST:event_jCheckBoxGroupActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSearchActionPerformed
        showOrderSetToTableListOrderSet(jTextFieldSearch.getText());
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        dispose();
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        int[] selectrow = jTableListDetailOrderSet.getSelectedRows();
        theHC.theOrderControl.saveOrderItemFromDrugSet(vItem,vDrugSet,selectrow);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableLisrOrderSetMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableLisrOrderSetMouseReleased
        if(jTableLisrOrderSet.getSelectedRow() != -1 )
        showOrderSetToTableListOrderSetDetail();
    }//GEN-LAST:event_jTableLisrOrderSetMouseReleased

    private void jComboBoxListOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxListOwnerActionPerformed
        showOrderSetToTableListOrderSet();
    }//GEN-LAST:event_jComboBoxListOwnerActionPerformed
    
     /**
        ทำการนำค่าจาก การเลือกรายการของตาราง listOrderSet มาค้นหา
        ข้อมูลใน control 
     *  เพื่อจะ set ลง table
     */
    private void showOrderSetToTableListOrderSetDetail(){
        int selectrow = jTableLisrOrderSet.getSelectedRow();
        String key_id = ((DrugSetGroup)vDrugSetGroup.get(selectrow)).getObjectId();
           vDrugSet = theHC.theOrderControl.listDrugSetByGroup(key_id);
//        if(vDrugSet!= null){
//            for(int i=0; i<vDrugSet.size(); i++){
//                DrugSet ds = (DrugSet)vDrugSet.get(i);
//                Item item = theHC.theLookupControl.readItemById(ds.item_code); 
//                if(item.active.equals("0"))
//                    vDrugSet.remove(vDrugSet.get(i));
//            }
//        }
//        updateOGItemV(vDrugSet);        
        vItem =  theHC.theOrderControl.listItemFromItemSetByItemGroupId(key_id);
        updateOGItemV(vItem);

    }
    /** 
        ใช้ในการให้ค่ากับตาราง jTableListDetailOrderSet
        ข้อมูลเข้า เป็น Vector ของ DrugSet
     *  ข้อมูลออก ไม่มี
     */
    private void updateOGItemV(Vector vc)
    {
//        vDrugSet = vc;
        TaBleModel tm ;
        if(vc == null || vc.isEmpty()){
            tm= new TaBleModel(col_jTableListDetailOrderSet,0);
            jTableListDetailOrderSet.setModel(tm);
            return;
        }
        tm= new TaBleModel(col_jTableListDetailOrderSet,vc.size());
        Item item;
        for(int i=0 ;i<vc.size(); i++){  
//            DrugSet p = (DrugSet)vc.get(i);
              item = (Item)vc.get(i);  
            tm.setValueAt(item.common_name,i,0);
            item = null;
        }
        jTableListDetailOrderSet.setModel(tm);
        jTableListDetailOrderSet.setRowSelectionInterval(0
            , jTableListDetailOrderSet.getRowCount()-1);
        jTableListDetailOrderSet.getColumnModel().getColumn(0).setPreferredWidth(100); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
    }
   
    /**
        ทำการนำค่าจาก control ขึ้นมาเก็บไว้ในตัวแปร
     *  เพื่อจะ set ลง table
     */
    private void showOrderSetToTableListOrderSet()
    {
        showOrderSetToTableListOrderSet("%");
    }
    private void showOrderSetToTableListOrderSet(String keyword)
    {       
         //   vDrugSetGroup;
        String owner = theComboboxModel.getCodeComboBox(jComboBoxListOwner);
        if(!this.jCheckBoxGroup.isSelected())
            owner = "";
        vDrugSetGroup =  theHC.theOrderControl.listDrugSetGroupBySearch(keyword,owner,jCheckBoxGroup.isSelected());
        updateOGDrugSetGroupV(vDrugSetGroup);
    }
    /** 
        ใช้ในการให้ค่ากับตาราง ListOrderSet 
        ข้อมูลเข้า เป็น Vector ของ DrugSetGroup
     *  ข้อมูลออก ไม่มี
     */
    private void updateOGDrugSetGroupV(Vector vc)
    {
        TaBleModel tm ;
        if(vc == null) {
            tm= new TaBleModel(col_jTableLisrOrderSet,0);
            jTableLisrOrderSet.setModel(tm);
            this.updateOGItemV(null);
            return;
        }
        tm= new TaBleModel(col_jTableLisrOrderSet,vc.size());
        Vector vError = new Vector();
        for(int i=0 ;i<vc.size(); i++)
        {  
            DrugSetGroup p = (DrugSetGroup)vc.get(i);
            tm.setValueAt(p.descroption,i,0);
            Employee owner = theHC.theLookupControl.readEmployeeById(p.oner_drug);
            if(owner!=null)
                tm.setValueAt(owner.fname + " " + owner.lname,i,1);
            else
            {   
                tm.setValueAt(Constant.getTextBundle("ไม่พบเจ้าของยาชุด"),i,1);
                vError.add(String.valueOf(i));
            }
        }
        /** จัดการเมื่อ error จากการ ลบ user ที่ใช้งาน 
         * แต่ไม่ไปลบใน รายการชุดที่ใช้บ่อย
         */
        if(vError.size() >0)
        { 
            for(int n = vError.size()-1 ; n >= 0 ; n--)
            {
                int nume = Integer.parseInt((String)vError.get(n));
                vc.remove(nume);
            }
            vDrugSetGroup = vc;
            updateOGDrugSetGroupV(vDrugSetGroup);
        }
        else
        {
            jTableLisrOrderSet.setModel(tm);
            this.updateOGItemV(null);
            jTableLisrOrderSet.getColumnModel().getColumn(0).setPreferredWidth(100); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
            jTableLisrOrderSet.getColumnModel().getColumn(1).setPreferredWidth(100); // จำนวน
        }
    }
    
    private void setDialog()
    {
        setSize(480, 340);
        setTitle(Constant.getTextBundle("รายการชุดสั่งตรวจรักษา"));
//        setLanguage("");
        Toolkit thekit = getToolkit();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
    }
    public void showDialog(Visit visit)
    { 
        theVisit = visit;
        if(theHO.theEmployee.authentication_id.equals(Authentication.DOCTOR))
            Gutil.setGuiData(jComboBoxListOwner,theHO.theEmployee.getObjectId());
        setVisible(true);
    }
    
    
    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
   //     new DialogOrderSet(new javax.swing.JFrame(), true).setVisible(true);
        LookupControl lc = new LookupControl();
        OrderControl oc = new OrderControl(null,null,null);
        DialogOrderSet.showDialog(new javax.swing.JFrame(), true,lc,oc,sc.visit);
    }*/
    
    public void setLanguage(String msg)
    {
        GuiLang.setLanguage(jButtonAdd);
	GuiLang.setLanguage(jButtonCancel);
        GuiLang.setLanguage(col_jTableLisrOrderSet);
        GuiLang.setLanguage(col_jTableListDetailOrderSet);
	GuiLang.setTextBundle(jPanel2);
        GuiLang.setLanguage(jCheckBoxGroup);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JCheckBox jCheckBoxGroup;
    private javax.swing.JComboBox jComboBoxListOwner;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTableLisrOrderSet;
    private com.hosv3.gui.component.HJTableSort jTableListDetailOrderSet;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
