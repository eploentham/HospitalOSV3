/*
 * DialogOrderHistory.java
 *
 * Created on 28 เมษายน 2547, 11:10 น.
 */
package com.hosv3.gui.dialog;
import java.util.*;
import java.awt.*;
import javax.swing.*;
import com.hosv3.object.*;
import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.utility.connection.*; 
//import com.hosv3.gui.panel.transaction.*;

import com.hospital_os.object.*;
import com.hospital_os.object.specialQuery.*; 
import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.Constant;
import com.hospital_os.utility.CellRendererHos;
/**
 *
 * @author amp
 * 
 */
public class DialogHistoryOrder extends javax.swing.JFrame 
implements UpdateStatus{

    HosObject theHO;
    UpdateStatus theUS;
    public boolean actionCommand = false;
    /**ใช้ในการ query ข้อมูลของ รายการ order*/
    private OrderControl theOrderControl;
    /**ใช้ในการ query ข้อมูลของ รายการ combobox*/
    LookupControl theLookupControl;
    /**ใช้ในการ query ข้อมูลของ รายการ order*/
    private VisitControl theVisitControl;
    /**ใช้ในการ query ข้อมูลของ รายการ system*/
    private SystemControl theSystemControl;
    private PatientControl thePatientControl;
    private HosControl theHC;
    /**เก็บ Object ของ patient*/    
    private Patient thePatient; 
    /**เก็บ Object ของ patient*/    
    private OrderItem theOrderItem; 
    /**เก็บ Object ของ OrderItem*/
    private Vector vOrderHistory;
    /** ใช้ในการตรวจสอบการ Double-Click */
    public long firstClickTime = 0;
    
    private SpecialQueryOrderHistoryDrug theSpecialQueryOrderHistoryDrug;
    private Uom theUom;
    private DrugFrequency theDrugFrequency;
    private DrugInstruction theDrugInstruction;
    
    public SetupControl theSetupControl;
    private Visit theVisit;
    public static boolean closeDialog = false;
    private String[] col_jTableListOrder = {"วันที่สั่ง","ชื่อสามัญ","จำนวน","สถานะ","Dose การใช้ยา"};
    CellRendererHos dateRender = new CellRendererHos(CellRendererHos.DATE_TIME);

    private Vector vOrder;

    private Vector vXray;

    private Vector vLab;

    private Vector vVitalSign;
    /** Creates new form DialogOrderHistory */
    public DialogHistoryOrder(HosControl hc,UpdateStatus us)
    {   
        setIconImage(us.getJFrame().getIconImage());
        theUS = us;
        theHC = hc;
        theLookupControl = hc.theLookupControl;
        theOrderControl = hc.theOrderControl;
        theVisitControl = hc.theVisitControl;
        theSystemControl = hc.theSystemControl;
        theSetupControl = hc.theSetupControl;
        thePatientControl = hc.thePatientControl;
        theHO = hc.theHO;
        initComponents(); 
        setDialog();
        jCheckBoxDrug.setSelected(theHO.scrollPaneDrug);
        jCheckBoxVitalSign.setSelected(theHO.scrollPaneVitalSign);
        jCheckBoxLab.setSelected(theHO.scrollPaneLab);
        jCheckBoxXray.setSelected(theHO.scrollPaneXray);
        setLanguage();
    }
    public void setLanguage(){

        GuiLang.setLanguage(this.jCheckBoxDrug);
        GuiLang.setLanguage(this.jCheckBoxLab);
        GuiLang.setLanguage(this.jCheckBoxVitalSign);
        GuiLang.setLanguage(this.jCheckBoxXray);
        GuiLang.setLanguage(this.jPanel1);
        GuiLang.setLanguage(this.jPanelSearch);
        GuiLang.setLanguage(this.jTableListVisit);
        GuiLang.setLanguage(this.jTableListLab);
        GuiLang.setLanguage(this.jTableListOrder);
        GuiLang.setLanguage(this.jTableListVitalSign);
        GuiLang.setLanguage(this.jTableListXray);
        GuiLang.setLanguage(this.col_jTableListOrder);
        GuiLang.setLanguage(this.jScrollPane6);
        GuiLang.setLanguage(this.jScrollPaneDrug);
        GuiLang.setLanguage(this.jScrollPaneLab);
        GuiLang.setLanguage(this.jScrollPaneVitalSign);
        GuiLang.setLanguage(this.jScrollPaneXray);
    }
    //////////////////////////////////////////////////////////////////////////
    /**
     *dialog ที่ใช้ในการส่งข้อความเตื่อนผู้ใช้
     */
     public void setStatus(String str, int status) {   
        str = Constant.getTextBundle(str);
        JOptionPane.showMessageDialog(this, str, Constant.getTextBundle("เตือน"), JOptionPane.ERROR_MESSAGE); 
    }
     //////////////////////////////////////////////////////////////////////////
     /**
      *dialog ที่ใข้ในการให้ผู้ใข้ทำการยีนยันสิ่งต่าง
      */
    public boolean confirmBox(String str, int status) {
        int i = JOptionPane.showConfirmDialog(this,str,Constant.getTextBundle("เตือน")
                ,JOptionPane.YES_NO_OPTION);
        return (i==JOptionPane.YES_OPTION);
    }
    public JFrame getJFrame() {
        return this;
    }    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanelSearch = new javax.swing.JPanel();
        jCheckBoxVitalSign = new javax.swing.JCheckBox();
        jCheckBoxDrug = new javax.swing.JCheckBox();
        jCheckBoxLab = new javax.swing.JCheckBox();
        jCheckBoxXray = new javax.swing.JCheckBox();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableListVisit = new com.hosv3.gui.component.HJTableSort();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPaneDrug = new javax.swing.JScrollPane();
        jTableListOrder = new com.hosv3.gui.component.HJTableSort();
        jScrollPaneVitalSign = new javax.swing.JScrollPane();
        jTableListVitalSign = new com.hosv3.gui.component.HJTableSort();
        jScrollPaneXray = new javax.swing.JScrollPane();
        jTableListXray = new com.hosv3.gui.component.HJTableSort();
        jScrollPaneLab = new javax.swing.JScrollPane();
        jTableListLab = new com.hosv3.gui.component.HJTableSort();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("null");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jSplitPane1.setDividerLocation(200);

        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jCheckBoxVitalSign.setText("ผลการวัด VitalSign");
        jCheckBoxVitalSign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxVitalSignActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 1);
        jPanelSearch.add(jCheckBoxVitalSign, gridBagConstraints);

        jCheckBoxDrug.setText("การตรวจรักษาที่เป็นยา");
        jCheckBoxDrug.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDrugActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 1);
        jPanelSearch.add(jCheckBoxDrug, gridBagConstraints);

        jCheckBoxLab.setText("ผลทางห้องปฏิบัติการ");
        jCheckBoxLab.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxLabActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 1);
        jPanelSearch.add(jCheckBoxLab, gridBagConstraints);

        jCheckBoxXray.setText("รายการตรวจเอ็กซเรย์");
        jCheckBoxXray.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAllGroup3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 1);
        jPanelSearch.add(jCheckBoxXray, gridBagConstraints);

        jScrollPane6.setBorder(javax.swing.BorderFactory.createTitledBorder("การรับบริการ"));
        jScrollPane6.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane6.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableListVisit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListVisitMouseReleased(evt);
            }
        });
        jTableListVisit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListVisitKeyReleased(evt);
            }
        });
        jScrollPane6.setViewportView(jTableListVisit);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelSearch.add(jScrollPane6, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanelSearch);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jScrollPaneDrug.setBorder(javax.swing.BorderFactory.createTitledBorder("รายการยา"));
        jScrollPaneDrug.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPaneDrug.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableListOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListOrderKeyReleased(evt);
            }
        });
        jTableListOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListOrderMouseReleased(evt);
            }
        });
        jScrollPaneDrug.setViewportView(jTableListOrder);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPaneDrug, gridBagConstraints);

        jScrollPaneVitalSign.setBorder(javax.swing.BorderFactory.createTitledBorder("รายการตรวจร่างกาย"));
        jScrollPaneVitalSign.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPaneVitalSign.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableListVitalSign.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListVitalSignKeyReleased(evt);
            }
        });
        jTableListVitalSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListVitalSignMouseReleased(evt);
            }
        });
        jScrollPaneVitalSign.setViewportView(jTableListVitalSign);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPaneVitalSign, gridBagConstraints);

        jScrollPaneXray.setBorder(javax.swing.BorderFactory.createTitledBorder("การตรวจเอ็กซเรย์"));
        jScrollPaneXray.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPaneXray.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableListXray.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListXrayKeyReleased(evt);
            }
        });
        jTableListXray.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListXrayMouseReleased(evt);
            }
        });
        jScrollPaneXray.setViewportView(jTableListXray);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPaneXray, gridBagConstraints);

        jScrollPaneLab.setBorder(javax.swing.BorderFactory.createTitledBorder("ผลการตรวจแลป"));
        jScrollPaneLab.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPaneLab.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableListLab.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableListLabKeyReleased(evt);
            }
        });
        jTableListLab.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableListLabMouseReleased(evt);
            }
        });
        jScrollPaneLab.setViewportView(jTableListLab);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPaneLab, gridBagConstraints);

        jScrollPane1.setViewportView(jPanel1);

        jSplitPane1.setRightComponent(jScrollPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jSplitPane1, gridBagConstraints);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-612)/2, (screenSize.height-436)/2, 612, 436);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableListOrderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListOrderMouseReleased
        //showResult();
    }//GEN-LAST:event_jTableListOrderMouseReleased

    private void jTableListOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListOrderKeyReleased

    }//GEN-LAST:event_jTableListOrderKeyReleased

    private void jTableListVisitMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListVisitMouseReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListVisitMouseReleased

    private void jTableListVisitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListVisitKeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListVisitKeyReleased

    private void jTableListVitalSignMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListVitalSignMouseReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListVitalSignMouseReleased

    private void jTableListVitalSignKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListVitalSignKeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListVitalSignKeyReleased

    private void jTableListXrayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListXrayMouseReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListXrayMouseReleased

    private void jTableListXrayKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListXrayKeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListXrayKeyReleased

    private void jTableListLabMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListLabMouseReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListLabMouseReleased

    private void jTableListLabKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListLabKeyReleased
// TODO add your handling code here:
    }//GEN-LAST:event_jTableListLabKeyReleased

    private void jCheckBoxAllGroup3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAllGroup3ActionPerformed
        setShowCheckBox();
    }//GEN-LAST:event_jCheckBoxAllGroup3ActionPerformed

    private void jCheckBoxLabActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxLabActionPerformed
        setShowCheckBox();
    }//GEN-LAST:event_jCheckBoxLabActionPerformed

    private void jCheckBoxDrugActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDrugActionPerformed
        setShowCheckBox();
    }//GEN-LAST:event_jCheckBoxDrugActionPerformed
    
    private void jCheckBoxVitalSignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxVitalSignActionPerformed
        setShowCheckBox();
    }//GEN-LAST:event_jCheckBoxVitalSignActionPerformed
	    
	private void comboBoxClinic1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxClinic1ActionPerformed
    }//GEN-LAST:event_comboBoxClinic1ActionPerformed
              
    public boolean showDialog(Patient p)
    {    
        if(p == null){
            theUS.setStatus("กรุณาเลือกผู้ป่วย", UpdateStatus.WARNING);
            return false;
        }
        if(!p.getObjectId().equals(theHO.opatient)){
            theHO.scrollPaneDrug = false;
            theHO.scrollPaneVitalSign = false;
            theHO.scrollPaneLab = false;
            theHO.scrollPaneXray = false;
            jCheckBoxDrug.setSelected(theHO.scrollPaneDrug);
            jCheckBoxVitalSign.setSelected(theHO.scrollPaneVitalSign);
            jCheckBoxLab.setSelected(theHO.scrollPaneLab);
            jCheckBoxXray.setSelected(theHO.scrollPaneXray);
            theHO.opatient = p.getObjectId();
        }
        thePatient = p;
        setPatient(p);
        setLanguage(); 
        setVisible(true);
        return closeDialog;
    }
    /**
     *set table OrderHistory ที่ได้จากการค้นหาตาม case ต่างๆ
     *@deprecated ฟังชันมีการ คิวรีหลายครั้งให้ทำให้เป็น special query เพียงครั้งเดียวพอ
     */
    private void setOrderItemV(Vector vOrderHistory)
    {   
        TaBleModel tm ;
        if(vOrderHistory != null)
        {   
            tm= new TaBleModel(col_jTableListOrder,vOrderHistory.size());
            for(int i=0 ;i<vOrderHistory.size(); i++)
            {  
                //ดีแล้ว แก้ให้เป็นคีวรีซับซ้อน special_query ดีกว่า
                OrderItem oi = (OrderItem)vOrderHistory.get(i);           
                tm.setValueAt(DateUtil.getDateFromText(oi.vertify_time),i,0); 
                tm.setValueAt(oi.common_name,i,1);
                tm.setValueAt(oi.qty,i,2);
                OrderItemStatus ois = (OrderItemStatus)theLookupControl
                    .readOrderItemStatus(oi.status);
                tm.setValueAt(ois.description,i,3);  
                
                if(oi.isDrug())
                    theSpecialQueryOrderHistoryDrug = theOrderControl.selectOrderItemDrugByOrderItemId(oi.getObjectId());

                String dose_all="";
                if(theSpecialQueryOrderHistoryDrug != null)
                {
                    if((theSpecialQueryOrderHistoryDrug.special).equals("0"))
                    {
                        dose_all = theSpecialQueryOrderHistoryDrug.instruction
                        + " " + theSpecialQueryOrderHistoryDrug.dose
                        + " " + theSpecialQueryOrderHistoryDrug.use_uom
                        + " " + theSpecialQueryOrderHistoryDrug.frequency
                        + " " + oi.qty
                        + " " + theSpecialQueryOrderHistoryDrug.purch_uom;
                    }
                    else
                    {
                        dose_all = theSpecialQueryOrderHistoryDrug.special_text + " " + oi.qty + " " + theSpecialQueryOrderHistoryDrug.purch_uom;
                    }              
                }                        
                tm.setValueAt(dose_all,i,4);
            }
        }
        else
        {   
            tm= new TaBleModel(col_jTableListOrder,0);
        }
        jTableListOrder.setModel(tm);
        jTableListOrder.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableListOrder.getColumnModel().getColumn(0).setPreferredWidth(120); 
        jTableListOrder.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTableListOrder.getColumnModel().getColumn(2).setPreferredWidth(30);
        jTableListOrder.getColumnModel().getColumn(2).setCellRenderer(TableRenderer.getRendererRight());
        jTableListOrder.getColumnModel().getColumn(3).setPreferredWidth(50); 
        jTableListOrder.getColumnModel().getColumn(4).setPreferredWidth(150);
    }
    
    /**
     *จะ show ผลของ Lab หรือ XRay ที่รายงานผลเรียบร้อยแล้ว
     *ข้อมูลเข้า: category_group,status ของตาราง OrderItem
     *ข้อมูลออก: ผลที่ได้จากการรายงาน
     */
 
    
    private void setDialog()
    {        
        setSize(640,480);
        setTitle(Constant.getTextBundle("ประวัติการสั่งตรวจรักษา"));
        Toolkit thekit = getToolkit();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        setLocation((screenSize.width-getSize().width)/2, (screenSize.height-getSize().height)/2);
    }
    
    public void setPatient(Patient pt){
        this.vLab=null;
        this.vOrder=null;
        this.vVitalSign=null;
        this.vXray=null;
        this.thePatient = pt;
        setVisitV(theHO.vVisit);
        setShowCheckBox();
    }
    
    private void setShowCheckBox() {
        this.jScrollPaneDrug.setVisible(false);
        this.jScrollPaneVitalSign.setVisible(false);
        this.jScrollPaneLab.setVisible(false);
        this.jScrollPaneXray.setVisible(false);
        if(this.jCheckBoxDrug.isSelected()) {
            if(vOrder==null){
                vOrder = theOrderControl.listOrderHistoryByGroupPatientId(
                        CategoryGroup.isDrug(),thePatient.getObjectId());
                setOrderItemV(vOrder);
            }
            this.jScrollPaneDrug.setVisible(true);
            theHO.scrollPaneDrug = true;
        }else
            theHO.scrollPaneDrug = false;
        if(this.jCheckBoxVitalSign.isSelected())
        {
            if(vVitalSign==null){
                vVitalSign = theOrderControl.listEVitalSign(thePatient.getObjectId());
                setVitalSignV(vVitalSign);
            }
            this.jScrollPaneVitalSign.setVisible(true);
            theHO.scrollPaneVitalSign = true;
        }else
            theHO.scrollPaneVitalSign = false;
        if(this.jCheckBoxLab.isSelected()) {
            if(vLab==null){
                vLab = theOrderControl.listELab(thePatient.getObjectId());
                setLabV(vLab);
            }
            this.jScrollPaneLab.setVisible(true);
            theHO.scrollPaneLab = true;
        }else
            theHO.scrollPaneLab = false;
        if(this.jCheckBoxXray.isSelected()){
            if(vXray==null) {
                vXray = theOrderControl.listEXray(thePatient.getObjectId());
                setXrayV(vXray);
            }
            this.jScrollPaneXray.setVisible(true);
            theHO.scrollPaneXray = true;
        }else
            theHO.scrollPaneXray = false;
        this.jPanel1.updateUI();
    }

    private void setVisitV(Vector vVisit) 
    {
        if(vVisit==null){
            TaBleModel tm= new TaBleModel(null,0);
            jTableListVisit.setModel(tm);
            return;
        }
        String[] col = {"วันที่-เวลา","type","Dx","Dx Note"};
        GuiLang.setLanguage(col);
        TaBleModel tm= new TaBleModel(col,vVisit.size());
        for(int i=0 ;i<vVisit.size(); i++)
        {  
            Visit str = (Visit)vVisit.get(i);
            tm.setValueAt(DateUtil.getDateFromText(str.begin_visit_time),i,0);
            if(str.visit_type.equals("1"))
                tm.setValueAt("ใน",i,1);
            else
                tm.setValueAt("นอก",i,1);
            tm.setValueAt(str.doctor_dx,i,2);
            tm.setValueAt(str.diagnosis_note,i,3);
        }
        jTableListVisit.setModel(tm);
        jTableListVisit.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableListVisit.getColumnModel().getColumn(0).setPreferredWidth(1500); 
        jTableListVisit.getColumnModel().getColumn(1).setPreferredWidth(550);
        jTableListVisit.getColumnModel().getColumn(2).setPreferredWidth(1500);
        jTableListVisit.getColumnModel().getColumn(3).setPreferredWidth(1500);
    }
    private void setVitalSignV(Vector vVitalSign) 
    {
        String[] col = {"วันที่-เวลา","น้ำหนัก","ส่วนสูง","อุณหภูมิ","ความดัน","ชีพจร","การหายใจ","BMI"};
        GuiLang.setLanguage(col);
        TaBleModel tm= new TaBleModel(col,vVitalSign.size());
        for(int i=0 ;i<vVitalSign.size(); i++)
        {  
            String[] str = (String[])vVitalSign.get(i);
            for(int j=0;j<str.length;j++){
                if(j==0){
                    tm.setValueAt(DateUtil.getDateFromText(str[j]),i,j);
                }
                else
                    tm.setValueAt(str[j],i,j);
            }
        }
        this.jTableListVitalSign.setModel(tm);
        jTableListVitalSign.getColumnModel().getColumn(0).setPreferredWidth(220); 
        jTableListVitalSign.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        for(int i=1;i<8;i++)
            jTableListVitalSign.getColumnModel().getColumn(i).setCellRenderer(TableRenderer.getRendererRight());
    }

    private void setLabV(Vector vLab) {
        String[] col = {"วันที่-เวลา","กลุ่ม","ชื่อ","ผล","ค่าปกติ"};
        GuiLang.setLanguage(col);
        TaBleModel tm= new TaBleModel(col,vLab.size());
        String old_group=null;
        for(int i=0 ;i<vLab.size(); i++)//row
        {  
            String[] str = (String[])vLab.get(i);
            for(int j=0;j<str.length;j++)//column
                if(j==0)
                    tm.setValueAt(DateUtil.getDateFromText(str[j]),i,j);
                else if(j==1){
                    if(!str[j].equals(old_group))
                        tm.setValueAt(str[j],i,j);
                    else
                        tm.setValueAt("",i,j);
                    old_group = str[j];
                }
                else
                    tm.setValueAt(str[j],i,j);
        }
        this.jTableListLab.setModel(tm);
        jTableListLab.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableListLab.getColumnModel().getColumn(0).setPreferredWidth(220);
        jTableListLab.getColumnModel().getColumn(1).setPreferredWidth(150);
        jTableListLab.getColumnModel().getColumn(2).setPreferredWidth(150);
        jTableListLab.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableListLab.getColumnModel().getColumn(3).setCellRenderer(TableRenderer.getRendererRight());
        jTableListLab.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableListLab.getColumnModel().getColumn(4).setCellRenderer(TableRenderer.getRendererRight());
    }

    private void setXrayV(Vector vXray) {        
        String[] col = {"วันที่-เวลา","รายการ","ผลการตรวจ"};
        GuiLang.setLanguage(col);
        TaBleModel tm= new TaBleModel(col,vXray.size());
        for(int i=0 ;i<vXray.size(); i++)
        {  
            String[] str = (String[])vXray.get(i);
            for(int j=0;j<str.length;j++)
                if(j==0){
                    tm.setValueAt(DateUtil.getDateFromText(str[j]),i,j);
                }
                else
                    tm.setValueAt(str[j],i,j);
        }
        this.jTableListXray.setModel(tm);
        jTableListXray.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableListXray.getColumnModel().getColumn(0).setPreferredWidth(550); 
        jTableListXray.getColumnModel().getColumn(1).setPreferredWidth(1500); 
        jTableListXray.getColumnModel().getColumn(2).setPreferredWidth(1500); 
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBoxDrug;
    private javax.swing.JCheckBox jCheckBoxLab;
    private javax.swing.JCheckBox jCheckBoxVitalSign;
    private javax.swing.JCheckBox jCheckBoxXray;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelSearch;
    protected javax.swing.JScrollPane jScrollPane1;
    protected javax.swing.JScrollPane jScrollPane6;
    protected javax.swing.JScrollPane jScrollPaneDrug;
    protected javax.swing.JScrollPane jScrollPaneLab;
    protected javax.swing.JScrollPane jScrollPaneVitalSign;
    protected javax.swing.JScrollPane jScrollPaneXray;
    private javax.swing.JSplitPane jSplitPane1;
    protected com.hosv3.gui.component.HJTableSort jTableListLab;
    protected com.hosv3.gui.component.HJTableSort jTableListOrder;
    protected com.hosv3.gui.component.HJTableSort jTableListVisit;
    protected com.hosv3.gui.component.HJTableSort jTableListVitalSign;
    protected com.hosv3.gui.component.HJTableSort jTableListXray;
    // End of variables declaration//GEN-END:variables
}
