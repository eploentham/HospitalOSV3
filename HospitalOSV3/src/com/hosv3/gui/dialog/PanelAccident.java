/*
 * PanelAccident.java
 *
 * Created on 24 พฤษภาคม 2549, 17:53 น.
 */

package com.hosv3.gui.dialog;
import java.util.*;
            
import com.hospital_os.object.*; 
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hosv3.utility.Constant;
import com.hosv3.control.lookup.*;
import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;

/**
 *
 * @author  Padungrat(tong)
 */
public class PanelAccident extends javax.swing.JPanel
{
    
    HosControl theHC;
    HosObject theHO;
    public boolean actionCommand = false;
    LookupControl theLookupControl;    
    VisitControl theVisitControl;
    PatientControl thePatientControl;
    SetupControl theSetupControl;
    String date;
    Accident theAccident = new Accident();
    AccidentGroup theAccidentGroup = new AccidentGroup();
    Vector comboboxaddresscgw = new Vector();
    Vector comboboxaddressamp = new Vector();
    Vector comboboxaddresstmb = new Vector();
    Vector vAeType;
    Vector vEmType;
     private DialogCostDetail dcd;  
    javax.swing.JTabbedPane jTabbedPaneGroupAcc = null;
    private String[] col_jTableListAccident = {"HN","VN","วันที่"};
    boolean forAccident = true;
    /** 
     *เก็บผลจากการค้นหาเป็น vector จากการค้นหาข้อมูลอุบัติเหตุ
     */
    private Vector vAccident;
   /*
     *เก็บข้อมุลตำแหน่งที่เลือกข้อมูลขาก Vector
     */
    int row=0;

    public static boolean closeDialog = false;

    private UpdateStatus theUS;
 
    /** Creates new form PanelAccident */
    public PanelAccident() {
        initComponents();
        setLanguage("");
        jComboBoxAetype.setEditable(false);
        jComboBoxEmtype.setEditable(false);
    }
    
    public void setControl(HosControl hc,UpdateStatus us)
    {
        theLookupControl = hc.theLookupControl;        
        theVisitControl = hc.theVisitControl;
        thePatientControl = hc.thePatientControl;
        theSetupControl = hc.theSetupControl;
        theHC = hc;
        theUS = us;
        theHO = hc.theHO;
        hosComboBoxAccident.setControl(null,new AccidentTypeLookup(theHC.theLookupControl),new AccidentType2());
        setLookup();
        setDataAll();
        setComboBoxEdit(true);
    }
    public void setUpdateStatus(UpdateStatus us){
        //theUS = us;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupAccident = new javax.swing.ButtonGroup();
        jComboBoxAetype = new javax.swing.JComboBox();
        jPanelName = new javax.swing.JPanel();
        jLabelHN = new javax.swing.JLabel();
        jTextFieldPatientName = new javax.swing.JTextField();
        jLabelName = new javax.swing.JLabel();
        hNTextFieldHN = new com.hospital_os.utility.HNTextField();
        jPanelPatient = new javax.swing.JPanel();
        jPanelStaff = new javax.swing.JPanel();
        jLabelStaffHistory = new javax.swing.JLabel();
        jLabelStaffRefer = new javax.swing.JLabel();
        jTextFieldStaffRefer = new javax.swing.JTextField();
        jTextFieldStaffHistory = new javax.swing.JTextField();
        jLabelStaffHistoryTel = new javax.swing.JLabel();
        jLabelStaffReferTel = new javax.swing.JLabel();
        jTextFieldStaffReferTel = new javax.swing.JTextField();
        jTextFieldStaffHistoryTel = new javax.swing.JTextField();
        jPanelAccidentType = new javax.swing.JPanel();
        jRadioButtonAccident = new javax.swing.JRadioButton();
        jRadioButtonEmergency = new javax.swing.JRadioButton();
        jComboBoxEmtype = new javax.swing.JComboBox();
        jPanelAccidentTypeC = new javax.swing.JPanel();
        hosComboBoxAccident = new com.hosv3.gui.component.HosComboBox();
        jLabelNameAccidentTypeC = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelPtStatus = new javax.swing.JLabel();
        jComboBoxPtStatus = new javax.swing.JComboBox();
        jLabelClaimCode = new javax.swing.JLabel();
        integerTextFieldClaimCode = new com.hospital_os.utility.IntegerTextField();
        jButtonCost = new javax.swing.JButton();
        jLabelRoadName = new javax.swing.JLabel();
        jTextFieldRoadName = new javax.swing.JTextField();
        jPanelProperties = new javax.swing.JPanel();
        jCheckBoxNecklace = new javax.swing.JCheckBox();
        jTextFieldNecklace = new javax.swing.JTextField();
        jCheckBoxClock = new javax.swing.JCheckBox();
        jTextFieldClock = new javax.swing.JTextField();
        jCheckBoxRing = new javax.swing.JCheckBox();
        jTextFieldRing = new javax.swing.JTextField();
        jCheckBoxMoney = new javax.swing.JCheckBox();
        jTextFieldMoney = new javax.swing.JTextField();
        jCheckBoxOther = new javax.swing.JCheckBox();
        jTextFieldOther = new javax.swing.JTextField();
        panelCatAddress = new com.hosv3.gui.component.PanelCatAddress();
        jPanelAccident = new javax.swing.JPanel();
        jPanelAddress = new javax.swing.JPanel();
        jComboBoxInOut = new javax.swing.JComboBox();
        jLabelInOut = new javax.swing.JLabel();
        jComboBoxAccRd = new javax.swing.JComboBox();
        jLabelAccRd = new javax.swing.JLabel();
        jPanelTypeForRoad = new javax.swing.JPanel();
        jPanelStation = new javax.swing.JPanel();
        jLabelPtMoblle = new javax.swing.JLabel();
        jComboBoxPtMobile = new javax.swing.JComboBox();
        jLabelAccuUse = new javax.swing.JLabel();
        jComboBoxAccUse = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxAccPro = new javax.swing.JComboBox();
        jLabelAccAlc = new javax.swing.JLabel();
        jLabelAccPro = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabelKillo = new javax.swing.JLabel();
        jTextFieldKilo = new javax.swing.JTextField();
        jTextFieldAccMu = new javax.swing.JTextField();
        jLabelAccMu = new javax.swing.JLabel();
        jComboBoxAccAlc = new javax.swing.JComboBox();
        jPanelTime = new javax.swing.JPanel();
        jLabelDateAccidentT = new javax.swing.JLabel();
        dateComboBoxDateAccident = new com.hospital_os.utility.DateComboBox();
        jTextFieldTime = new com.hospital_os.utility.TimeTextField();
        jLabelDateAccident = new javax.swing.JLabel();
        jPanelDateToHos = new javax.swing.JPanel();
        jLabelDateToHos = new javax.swing.JLabel();
        dateComboBoxDateAccidentToHos = new com.hospital_os.utility.DateComboBox();
        jTextFieldTimeToHos = new com.hospital_os.utility.TimeTextField();
        jLabelDateAccident2 = new javax.swing.JLabel();

        jComboBoxAetype.setMinimumSize(new java.awt.Dimension(180, 24));
        jComboBoxAetype.setPreferredSize(new java.awt.Dimension(180, 24));

        setLayout(new java.awt.GridBagLayout());

        jPanelName.setLayout(new java.awt.GridBagLayout());

        jLabelHN.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelName.add(jLabelHN, gridBagConstraints);

        jTextFieldPatientName.setEditable(false);
        jTextFieldPatientName.setBorder(null);
        jTextFieldPatientName.setMinimumSize(new java.awt.Dimension(180, 21));
        jTextFieldPatientName.setPreferredSize(new java.awt.Dimension(180, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelName.add(jTextFieldPatientName, gridBagConstraints);

        jLabelName.setText("FName+Lname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelName.add(jLabelName, gridBagConstraints);

        hNTextFieldHN.setColumns(9);
        hNTextFieldHN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        hNTextFieldHN.setMinimumSize(new java.awt.Dimension(50, 21));
        hNTextFieldHN.setPreferredSize(new java.awt.Dimension(78, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanelName.add(hNTextFieldHN, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        add(jPanelName, gridBagConstraints);

        jPanelPatient.setBorder(javax.swing.BorderFactory.createTitledBorder("ข้อมูลอุบัติเหตุ"));
        jPanelPatient.setLayout(new java.awt.GridBagLayout());

        jPanelStaff.setLayout(new java.awt.GridBagLayout());

        jLabelStaffHistory.setText("ผู้ให้ประวัติ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelStaff.add(jLabelStaffHistory, gridBagConstraints);

        jLabelStaffRefer.setText("ผู้นำส่ง");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelStaff.add(jLabelStaffRefer, gridBagConstraints);

        jTextFieldStaffRefer.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldStaffRefer.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelStaff.add(jTextFieldStaffRefer, gridBagConstraints);

        jTextFieldStaffHistory.setMinimumSize(new java.awt.Dimension(100, 24));
        jTextFieldStaffHistory.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelStaff.add(jTextFieldStaffHistory, gridBagConstraints);

        jLabelStaffHistoryTel.setText("โทร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanelStaff.add(jLabelStaffHistoryTel, gridBagConstraints);

        jLabelStaffReferTel.setText("โทร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanelStaff.add(jLabelStaffReferTel, gridBagConstraints);

        jTextFieldStaffReferTel.setMinimumSize(new java.awt.Dimension(69, 24));
        jTextFieldStaffReferTel.setPreferredSize(new java.awt.Dimension(69, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelStaff.add(jTextFieldStaffReferTel, gridBagConstraints);

        jTextFieldStaffHistoryTel.setMinimumSize(new java.awt.Dimension(69, 24));
        jTextFieldStaffHistoryTel.setPreferredSize(new java.awt.Dimension(69, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelStaff.add(jTextFieldStaffHistoryTel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 10, 0, 5);
        jPanelPatient.add(jPanelStaff, gridBagConstraints);

        jPanelAccidentType.setLayout(new java.awt.GridBagLayout());

        buttonGroupAccident.add(jRadioButtonAccident);
        jRadioButtonAccident.setSelected(true);
        jRadioButtonAccident.setText("อุบัติเหตุจราจร");
        jRadioButtonAccident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonAccidentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelAccidentType.add(jRadioButtonAccident, gridBagConstraints);

        buttonGroupAccident.add(jRadioButtonEmergency);
        jRadioButtonEmergency.setText("อุบัติเหตุทั่วไป");
        jRadioButtonEmergency.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonEmergencyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelAccidentType.add(jRadioButtonEmergency, gridBagConstraints);

        jComboBoxEmtype.setEnabled(false);
        jComboBoxEmtype.setMinimumSize(new java.awt.Dimension(180, 24));
        jComboBoxEmtype.setPreferredSize(new java.awt.Dimension(180, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanelAccidentType.add(jComboBoxEmtype, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 0);
        jPanelPatient.add(jPanelAccidentType, gridBagConstraints);

        jPanelAccidentTypeC.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanelAccidentTypeC.add(hosComboBoxAccident, gridBagConstraints);

        jLabelNameAccidentTypeC.setText("ลักษณะการเกิดอุบัติเหตุ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelAccidentTypeC.add(jLabelNameAccidentTypeC, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 5);
        jPanelPatient.add(jPanelAccidentTypeC, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelPtStatus.setText("PtStatus");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jLabelPtStatus, gridBagConstraints);

        jComboBoxPtStatus.setMinimumSize(new java.awt.Dimension(210, 24));
        jComboBoxPtStatus.setPreferredSize(new java.awt.Dimension(210, 24));
        jComboBoxPtStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPtStatusActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel1.add(jComboBoxPtStatus, gridBagConstraints);

        jLabelClaimCode.setText("Claim Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabelClaimCode, gridBagConstraints);

        integerTextFieldClaimCode.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel1.add(integerTextFieldClaimCode, gridBagConstraints);

        jButtonCost.setText("เบิกค่าใช้จ่ายสูง");
        jButtonCost.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonCost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCostActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jButtonCost, gridBagConstraints);

        jLabelRoadName.setText("สถานที่เกิดเหตุ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jLabelRoadName, gridBagConstraints);

        jTextFieldRoadName.setColumns(8);
        jTextFieldRoadName.setMinimumSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel1.add(jTextFieldRoadName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jPanel1, gridBagConstraints);

        jPanelProperties.setBorder(javax.swing.BorderFactory.createTitledBorder("ทรัพย์สินของผู้ป่วย"));
        jPanelProperties.setLayout(new java.awt.GridBagLayout());

        jCheckBoxNecklace.setText("สร้อย");
        jCheckBoxNecklace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNecklaceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 12, 0, 0);
        jPanelProperties.add(jCheckBoxNecklace, gridBagConstraints);

        jTextFieldNecklace.setEnabled(false);
        jTextFieldNecklace.setPreferredSize(new java.awt.Dimension(30, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 7, 0, 5);
        jPanelProperties.add(jTextFieldNecklace, gridBagConstraints);

        jCheckBoxClock.setText("นาฬิกา");
        jCheckBoxClock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxClockActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelProperties.add(jCheckBoxClock, gridBagConstraints);

        jTextFieldClock.setEnabled(false);
        jTextFieldClock.setPreferredSize(new java.awt.Dimension(30, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 0, 5);
        jPanelProperties.add(jTextFieldClock, gridBagConstraints);

        jCheckBoxRing.setText("แหวน");
        jCheckBoxRing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxRingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelProperties.add(jCheckBoxRing, gridBagConstraints);

        jTextFieldRing.setEnabled(false);
        jTextFieldRing.setPreferredSize(new java.awt.Dimension(30, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 0, 5);
        jPanelProperties.add(jTextFieldRing, gridBagConstraints);

        jCheckBoxMoney.setText("เงิน");
        jCheckBoxMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMoneyActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelProperties.add(jCheckBoxMoney, gridBagConstraints);

        jTextFieldMoney.setEnabled(false);
        jTextFieldMoney.setPreferredSize(new java.awt.Dimension(30, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 0, 5);
        jPanelProperties.add(jTextFieldMoney, gridBagConstraints);

        jCheckBoxOther.setText("อื่นๆ (ระบุ)");
        jCheckBoxOther.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxOtherActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 2, 0);
        jPanelProperties.add(jCheckBoxOther, gridBagConstraints);

        jTextFieldOther.setEnabled(false);
        jTextFieldOther.setPreferredSize(new java.awt.Dimension(30, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 7, 2, 5);
        jPanelProperties.add(jTextFieldOther, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel3.add(jPanelProperties, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(panelCatAddress, gridBagConstraints);

        jPanelAccident.setBorder(javax.swing.BorderFactory.createTitledBorder("อุบัติเหตุจราจร"));
        jPanelAccident.setLayout(new java.awt.GridBagLayout());

        jPanelAddress.setLayout(new java.awt.GridBagLayout());

        jComboBoxInOut.setPreferredSize(new java.awt.Dimension(26, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanelAddress.add(jComboBoxInOut, gridBagConstraints);

        jLabelInOut.setText("In_out");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelAddress.add(jLabelInOut, gridBagConstraints);

        jComboBoxAccRd.setPreferredSize(new java.awt.Dimension(26, 24));
        jComboBoxAccRd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAccRdActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanelAddress.add(jComboBoxAccRd, gridBagConstraints);

        jLabelAccRd.setText("Acc_rd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelAddress.add(jLabelAccRd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 2);
        jPanelAccident.add(jPanelAddress, gridBagConstraints);

        jPanelTypeForRoad.setLayout(new java.awt.GridBagLayout());

        jPanelStation.setLayout(new java.awt.GridBagLayout());

        jLabelPtMoblle.setText("PtMobile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelStation.add(jLabelPtMoblle, gridBagConstraints);

        jComboBoxPtMobile.setPreferredSize(new java.awt.Dimension(26, 24));
        jComboBoxPtMobile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxPtMobileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 0);
        jPanelStation.add(jComboBoxPtMobile, gridBagConstraints);

        jLabelAccuUse.setText("Acc_Use");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelStation.add(jLabelAccuUse, gridBagConstraints);

        jComboBoxAccUse.setPreferredSize(new java.awt.Dimension(26, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 0);
        jPanelStation.add(jComboBoxAccUse, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelTypeForRoad.add(jPanelStation, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanelAccident.add(jPanelTypeForRoad, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jComboBoxAccPro.setMinimumSize(new java.awt.Dimension(150, 21));
        jComboBoxAccPro.setPreferredSize(new java.awt.Dimension(150, 24));
        jComboBoxAccPro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAccProActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel2.add(jComboBoxAccPro, gridBagConstraints);

        jLabelAccAlc.setText("Acc_Alc");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel2.add(jLabelAccAlc, gridBagConstraints);

        jLabelAccPro.setText("Acc_Pro");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(jLabelAccPro, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabelKillo.setText("Kilo");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jLabelKillo, gridBagConstraints);

        jTextFieldKilo.setMinimumSize(new java.awt.Dimension(46, 24));
        jTextFieldKilo.setPreferredSize(new java.awt.Dimension(26, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jTextFieldKilo, gridBagConstraints);

        jTextFieldAccMu.setMinimumSize(new java.awt.Dimension(46, 24));
        jTextFieldAccMu.setPreferredSize(new java.awt.Dimension(26, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jTextFieldAccMu, gridBagConstraints);

        jLabelAccMu.setText("Acc_mu");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel4.add(jLabelAccMu, gridBagConstraints);

        jComboBoxAccAlc.setMinimumSize(new java.awt.Dimension(100, 18));
        jComboBoxAccAlc.setPreferredSize(new java.awt.Dimension(100, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jComboBoxAccAlc, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 0);
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 2);
        jPanelAccident.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
        jPanel3.add(jPanelAccident, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 5);
        jPanelPatient.add(jPanel3, gridBagConstraints);

        jPanelTime.setLayout(new java.awt.GridBagLayout());

        jLabelDateAccidentT.setText("เวลา");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelTime.add(jLabelDateAccidentT, gridBagConstraints);

        dateComboBoxDateAccident.setMinimumSize(new java.awt.Dimension(100, 20));
        dateComboBoxDateAccident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxDateAccidentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanelTime.add(dateComboBoxDateAccident, gridBagConstraints);

        jTextFieldTime.setToolTipText("");
        jTextFieldTime.setMinimumSize(new java.awt.Dimension(45, 20));
        jTextFieldTime.setName("timeTextFieldTimeAppointment"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelTime.add(jTextFieldTime, gridBagConstraints);

        jLabelDateAccident.setText("DateAccident");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelTime.add(jLabelDateAccident, gridBagConstraints);

        jPanelDateToHos.setLayout(new java.awt.GridBagLayout());

        jLabelDateToHos.setText("วันที่มา รพ.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDateToHos.add(jLabelDateToHos, gridBagConstraints);

        dateComboBoxDateAccidentToHos.setMinimumSize(new java.awt.Dimension(100, 20));
        dateComboBoxDateAccidentToHos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxDateAccidentToHosActionPerformed(evt);
            }
        });
        jPanelDateToHos.add(dateComboBoxDateAccidentToHos, new java.awt.GridBagConstraints());

        jTextFieldTimeToHos.setToolTipText("");
        jTextFieldTimeToHos.setMinimumSize(new java.awt.Dimension(45, 20));
        jTextFieldTimeToHos.setName("timeTextFieldTimeAppointment"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDateToHos.add(jTextFieldTimeToHos, gridBagConstraints);

        jLabelDateAccident2.setText("เวลา");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelDateToHos.add(jLabelDateAccident2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanelTime.add(jPanelDateToHos, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 0, 5);
        jPanelPatient.add(jPanelTime, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 12, 0, 0);
        add(jPanelPatient, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxOtherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxOtherActionPerformed
        if(jCheckBoxOther.isSelected())
        {
            jTextFieldOther.setEnabled(jCheckBoxOther.isSelected());
            jTextFieldOther.setText("...");
        }
        else
        {
            jTextFieldOther.setEnabled(jCheckBoxOther.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxOtherActionPerformed

    private void jCheckBoxMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMoneyActionPerformed
        if(jCheckBoxMoney.isSelected())
        {
            jTextFieldMoney.setEnabled(jCheckBoxMoney.isSelected());
            jTextFieldMoney.setText("...");
        }
        else
        {
            jTextFieldMoney.setEnabled(jCheckBoxMoney.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxMoneyActionPerformed

    private void jCheckBoxRingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxRingActionPerformed
        if(jCheckBoxRing.isSelected())
        {
            jTextFieldRing.setEnabled(jCheckBoxRing.isSelected());
             jTextFieldRing.setText("...");
        }
        else
        {
            jTextFieldRing.setEnabled(jCheckBoxRing.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxRingActionPerformed

    private void jCheckBoxClockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxClockActionPerformed
        if(jCheckBoxClock.isSelected())
        {
            jTextFieldClock.setEnabled(jCheckBoxClock.isSelected());
            jTextFieldClock.setText("...");
        }
        else
        {
            jTextFieldClock.setEnabled(jCheckBoxClock.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxClockActionPerformed

    private void jCheckBoxNecklaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNecklaceActionPerformed
        if(jCheckBoxNecklace.isSelected())
        {
            jTextFieldNecklace.setEnabled(jCheckBoxNecklace.isSelected());
            jTextFieldNecklace.setText("...");
        }
        else
        {
            jTextFieldNecklace.setEnabled(jCheckBoxNecklace.isSelected());
        }
    }//GEN-LAST:event_jCheckBoxNecklaceActionPerformed

    private void dateComboBoxDateAccidentToHosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxDateAccidentToHosActionPerformed
        dateComboBoxDateAccidentToHos.setText(DateUtil.convertFieldDate(dateComboBoxDateAccidentToHos.getText())); 
    }//GEN-LAST:event_dateComboBoxDateAccidentToHosActionPerformed

    private void dateComboBoxDateAccidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxDateAccidentActionPerformed
        dateComboBoxDateAccident.setText(DateUtil.convertFieldDate(dateComboBoxDateAccident.getText())); 
    }//GEN-LAST:event_dateComboBoxDateAccidentActionPerformed

    private void jButtonCostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCostActionPerformed
        showDialogCost();
    }//GEN-LAST:event_jButtonCostActionPerformed

    private void jRadioButtonEmergencyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonEmergencyActionPerformed
        showComboboxGeneral(jRadioButtonEmergency.isSelected());
    }//GEN-LAST:event_jRadioButtonEmergencyActionPerformed

    private void jRadioButtonAccidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonAccidentActionPerformed
        showComboboxGeneral(jRadioButtonEmergency.isSelected());
    }//GEN-LAST:event_jRadioButtonAccidentActionPerformed

    private void jComboBoxAccProActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAccProActionPerformed
        jComboBoxAccPro.setToolTipText(String.valueOf(jComboBoxAccPro.getSelectedItem()));
    }//GEN-LAST:event_jComboBoxAccProActionPerformed

    private void jComboBoxAccRdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxAccRdActionPerformed
        jComboBoxAccRd.setToolTipText(String.valueOf(jComboBoxAccRd.getSelectedItem()));
    }//GEN-LAST:event_jComboBoxAccRdActionPerformed

    private void jComboBoxPtMobileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPtMobileActionPerformed
        jComboBoxPtMobile.setToolTipText(String.valueOf(jComboBoxPtMobile.getSelectedItem()));
    }//GEN-LAST:event_jComboBoxPtMobileActionPerformed

    private void jComboBoxPtStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxPtStatusActionPerformed
        jComboBoxPtStatus.setToolTipText(String.valueOf(jComboBoxPtStatus.getSelectedItem()));
    }//GEN-LAST:event_jComboBoxPtStatusActionPerformed
    
    public void checkValueChange()
    {
        
        if(!theVisitControl.checkValueChangeAccidentType(hosComboBoxAccident.getText(), theAccident,theUS))
        {
           Gutil.setGuiData(hosComboBoxAccident,theAccident.b_setup_accident_type_id);
        }
        
    }
    
    
    public void showDialogCost()
    {   
         if(theAccident == null){
             theUS.setStatus("กรุณาเลือกรายการอุบัติเหตุก่อน",UpdateStatus.WARNING);
             return ;
         }
         if(dcd == null)
            dcd = new DialogCostDetail(theUS.getJFrame(),true,theVisitControl);   
         boolean b = dcd.showDialog(theAccident);
    }
    
    private void setDataAll()
    {   
        Site site = theLookupControl.readSite();
        if(site!=null)
            this.panelCatAddress.setAddress(site.changwat, site.amphor,site.tambon);
        ComboboxModel.initComboBox(jComboBoxAccRd, theLookupControl.listAccrdType());
        ComboboxModel.initComboBox(jComboBoxInOut, theLookupControl.listAccinoutType());
        ComboboxModel.initComboBox(jComboBoxPtStatus, theLookupControl.listPtStatusType());
        ComboboxModel.initComboBox(jComboBoxPtMobile, theLookupControl.listPtMobile());
        ComboboxModel.initComboBox(jComboBoxAccUse, theLookupControl.listAccuseType());
        ComboboxModel.initComboBox(jComboBoxAccAlc, theLookupControl.listAnswer(1));
        ComboboxModel.initComboBox(jComboBoxAccPro, theLookupControl.listAccproType());
        jComboBoxAccPro.setToolTipText(String.valueOf(jComboBoxAccPro.getSelectedItem()));
        jComboBoxAccRd.setToolTipText(String.valueOf(jComboBoxAccRd.getSelectedItem()));
        jComboBoxPtMobile.setToolTipText(String.valueOf(jComboBoxPtMobile.getSelectedItem()));
        jComboBoxPtStatus.setToolTipText(String.valueOf(jComboBoxPtStatus.getSelectedItem()));
    }
    public void setInitValue(String hn,String name)
    {
        hNTextFieldHN.setText("");
        jTextFieldPatientName.setText("");
        if(name !=null && hn != null)
        {
            hNTextFieldHN.setText(theLookupControl.getRenderTextHN(hn));
            jTextFieldPatientName.setText(name);
        }
    }
    
    /**
     * กำหนดให้ Combobox Emergency แสดงข้อมูล
     */
    public void showComboboxGeneral(boolean show)
    {
        jComboBoxAetype.setEnabled(!show);
        jComboBoxEmtype.setEnabled(show);
        jComboBoxPtMobile.setEnabled(!show);
        jComboBoxAccUse.setEnabled(!show);
        jComboBoxAccAlc.setEnabled(!show);
        jComboBoxAccPro.setEnabled(!show);
        jComboBoxAccRd.setEnabled(!show);
        jComboBoxInOut.setEnabled(!show);
        jTextFieldKilo.setEnabled(!show);
        jTextFieldAccMu.setEnabled(!show);
    }
    /**
     * ใช้ในการกำหนดข้อมูลลง Combobox
     * @deprecated ผิดหลักการต้องทำตาราง lookup มารองรับด้วย
     */
    private void  setLookup()
    {   
        panelCatAddress.setControl(theHC, theUS);
        //accident
        vAeType = new Vector();
        AccAeType cf;
        /***************1******************/
        cf = new AccAeType();
        cf.setObjectId("V");
        cf.description = GuiLang.setLanguage("ใช้พรบ.ผู้ประสบภัยจากรถ");
        vAeType.add(cf);
        /***************2******************/
        cf = new AccAeType();
        cf.setObjectId("O");
        cf.description = GuiLang.setLanguage("ใช้กองทุนเงินทดแทน");
        vAeType.add(cf);
        /***************3******************/
        cf = new AccAeType();
        cf.setObjectId("B");
        cf.description = GuiLang.setLanguage("ใช้ทั้งพรบ.ผู้ประสบภัยจากรถและกองทุนเงินทดแทน");
        vAeType.add(cf);
        /**********************************/
        ComboboxModel.initComboBox(jComboBoxAetype, vAeType);
        //emergency
        vEmType = new Vector();
        AccEmType cf1;
        /***************1******************/
        cf1 = new AccEmType();
        cf1.setObjectId("1");
        cf1.description = GuiLang.setLanguage("ต้องการรักษาเป็นการด่วน");
        vEmType.add(cf1);
        /***************2******************/
        cf1 = new AccEmType();
        cf1.setObjectId("2");
        cf1.description = GuiLang.setLanguage("ต้องผ่าตัดด่วน");
        vEmType.add(cf1);
        /***************3******************/
        cf1 = new AccEmType();
        cf1.setObjectId("3");
        cf1.description = GuiLang.setLanguage("โรคที่คณะกรรมการกำหนด");
        vEmType.add(cf1);
        /**********************************/
        ComboboxModel.initComboBox(jComboBoxEmtype, vEmType);    
        hosComboBoxAccident.refresh();
    }
    
    /**
     * ใช้ในการกำหนดให้ combobox ใช้งานได้หรือไม่
     */
    public void setComboBoxEdit(boolean b)
    {   
        dateComboBoxDateAccident.setEditable(b);
        dateComboBoxDateAccidentToHos.setEditable(b);
        
        panelCatAddress.setEnabled(b);
    }
    /**
     * ใช้สำหรับการกำหนดให้ panel แสดงข้อมูลแบบ บุคคล หรือแบบหมู่
     * ถ้า foraccident เป็น true จะเป็นข้อมูลแบบบุคคล
     * ถ้า foraccident เป็น false จะเป็นข้อมูลแบบหมู่
     * และ ถ้า accidentgroup เป็น true จะแสดงข้อมูลรายละเอียดการเพิ่มแบบหมู่
     *     ถ้า accidentgroup เป็น false จะแสดงข้อมูลรายละเอียดการเพิ่มแบบแบบบุคคล
     *@param foraccident เป็น boolean
     *@param accidentgroup เป็น boolean
     *@author Padungrat(tong)
     *@date 25/05/2549,10:35
     */
    public void setAccidentGroup(boolean foraccident,boolean accidentgroup)
    {   forAccident = foraccident;
        if(!foraccident)
        {
            showGroupAccident(accidentgroup);
        }
        
        
        setVisiableGroup(accidentgroup);
        setVisiableAccident(!accidentgroup);
    }
    
    public void showGroupAccident(boolean accidentgroup)
    {
//        if(jTabbedPaneGroupAcc == null)
//        {
//            jTabbedPaneGroupAcc = new javax.swing.JTabbedPane();
//        }
////        jPanelDataDetail.removeAll();
////        jPanel9.remove(jTabbedPaneGroupAcc);
//        
//        int count = jTabbedPaneGroupAcc.getComponentCount();
//        for(int i = count-1; i >=0 ;i--)
//        {   
//            Constant.println("remove index at : " + i);
//            jTabbedPaneGroupAcc.remove(i);
//        }
//            
//       
//        
//        jTabbedPaneGroupAcc.addTab("ข้อมูลอุบัติเหตุ", jPanelAccident);
//        
//        if(!accidentgroup)
//        {
//            jTabbedPaneGroupAcc.addTab("ข้อมูลผู้ป่วย", jPanelPatient);
//            jTabbedPaneGroupAcc.setSelectedComponent(jPanelPatient);
//        }
//        jPanelName.setVisible(!accidentgroup);
//	java.awt.GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
//        gridBagConstraints.gridx = 0;
//        gridBagConstraints.gridy = 1;
//        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
//        gridBagConstraints.weightx = 1.0;
//        gridBagConstraints.weighty = 1.0;
//        jPanel9.add(jTabbedPaneGroupAcc, gridBagConstraints);
    }
    
    public void setVisiableGroup(boolean visiable )
    {
        if(!forAccident)
        {
        }
    }
    
    public void setVisiableAccident(boolean visiable)
    {
       if(!forAccident)
       {
       }
    }
    /**
     * @author henbe
     * ตอนบันทึกจะต้องตรวจสอบด้วยว่าค่าที่บันทึกนั้นเปลี่ยนแปลงถูกต้องหรือเปล่า
     **/
    public Accident getAccident()
    {
        if(theAccident==null )
        {
            Constant.println("private void updateGOAccident(Accident a), a is null");
            theAccident = new Accident();
        }
        theAccident.acctime = jTextFieldTime.getText();
        theAccident.name_rd = jTextFieldRoadName.getText();
        theAccident.acctb = panelCatAddress.getTambon();
        theAccident.accam = panelCatAddress.getAmpur();
        theAccident.acccw = panelCatAddress.getChangwat();
        theAccident.date_accident = dateComboBoxDateAccident.getText();//dateTextFieldDateAccident.getTextBDate();
        theAccident.ptstatus = ComboboxModel.getCodeComboBox(jComboBoxPtStatus);
//        theAccident.acc_rd = ComboboxModel.getCodeComboBox(jComboBoxAccRd);
//        theAccident.in_out = ComboboxModel.getCodeComboBox(jComboBoxInOut);
//        theAccident.kilo = jTextFieldKilo.getText();
//        theAccident.accmu = jTextFieldAccMu.getText();
//        theAccident.ptmobie = ComboboxModel.getCodeComboBox(jComboBoxPtMobile);
//        theAccident.acc_use = ComboboxModel.getCodeComboBox(jComboBoxAccUse);
//        theAccident.acc_alc = ComboboxModel.getCodeComboBox(jComboBoxAccAlc);
//        theAccident.acc_pro = ComboboxModel.getCodeComboBox(jComboBoxAccPro);
        //Constant.println("ComboBox : " + ComboboxModel.getCodeComboBox(jComboBoxAccPro));
        
        //tong 23/05/49
        theAccident.to_hos_time = jTextFieldTimeToHos.getText();
        theAccident.to_hos_date = dateComboBoxDateAccidentToHos.getText();
        theAccident.staff_refer_patient = jTextFieldStaffRefer.getText();
        theAccident.staff_refer_patient_tel = jTextFieldStaffReferTel.getText();
        theAccident.staff_history_patient = jTextFieldStaffHistory.getText();
        theAccident.staff_history_patient_tel = jTextFieldStaffHistoryTel.getText();
        
        theAccident.proprietress_clock = setTextClockEnabled(jCheckBoxClock.isSelected(), jTextFieldClock.getText());
        theAccident.proprietress_money = setTextMoneyEnabled(jCheckBoxMoney.isSelected(), jTextFieldMoney.getText());
        theAccident.proprietress_necklace =     setTextNecklaceEnabled(jCheckBoxNecklace.isSelected(), jTextFieldNecklace.getText());
        theAccident.proprietress_other =     setTextOtherEnabled(jCheckBoxOther.isSelected(), jTextFieldOther.getText());
        theAccident.proprietress_ring = setTextRingEnabled(jCheckBoxRing.isSelected(), jTextFieldRing.getText());
        theAccident.b_setup_accident_type_id = hosComboBoxAccident.getText();
        
        if(jRadioButtonAccident.isSelected())
        {
            theAccident.occur_type = "A";
            theAccident.accident_type =
                    ComboboxModel.getCodeComboBox(jComboBoxAetype);
            theAccident.emergency_type = "";
            theAccident.ptmobie = ComboboxModel.getCodeComboBox(jComboBoxPtMobile);
            theAccident.acc_use = ComboboxModel.getCodeComboBox(jComboBoxAccUse);
            theAccident.acc_alc = ComboboxModel.getCodeComboBox(jComboBoxAccAlc);
            theAccident.acc_pro = ComboboxModel.getCodeComboBox(jComboBoxAccPro);
            theAccident.acc_rd = ComboboxModel.getCodeComboBox(jComboBoxAccRd);
            theAccident.in_out = ComboboxModel.getCodeComboBox(jComboBoxInOut);
            theAccident.kilo = jTextFieldKilo.getText();
            theAccident.accmu = jTextFieldAccMu.getText();
        }
        else
        {
            theAccident.occur_type = "E";
            theAccident.emergency_type =
                    ComboboxModel.getCodeComboBox(jComboBoxEmtype);
            theAccident.accident_type = "";
            theAccident.ptmobie = "";
            theAccident.acc_use = "";
            theAccident.acc_alc = "";
            theAccident.acc_pro = "";
            theAccident.acc_rd = "";
            theAccident.in_out = "";
            theAccident.kilo = "";
            theAccident.accmu = "";
        }
        theAccident.claim_code = integerTextFieldClaimCode.getText();
        return theAccident;
    }
    
    public void setAccident(Accident accdent)
    {   
        theAccident = accdent;
        if(theAccident==null) 
            theAccident = theHO.initAccident(date);
            
        jTextFieldAccMu.setText(theAccident.accmu);
        jTextFieldKilo.setText(theAccident.kilo);
        jTextFieldRoadName.setText(theAccident.name_rd);
        jTextFieldTime.setText(theAccident.acctime);
        jTextFieldTimeToHos.setText("");
        jTextFieldStaffHistoryTel.setText("");
        jTextFieldStaffRefer.setText("");
        jTextFieldStaffReferTel.setText("");
        jTextFieldStaffHistory.setText("");
        jTextFieldClock.setText("");
        jTextFieldRing.setText("");
        jTextFieldMoney.setText("");
        jTextFieldNecklace.setText("");
        jTextFieldOther.setText("");
        jTextFieldPatientName.setText("");

        Patient pt = thePatientControl.readPatientByPatientIdRet(theAccident.patient_id);
        if(pt!=null)
            jTextFieldPatientName.setText(pt.patient_name + " " + pt.patient_last_name);
        else
            jTextFieldPatientName.setText("");
        jTextFieldTime.setText(theAccident.acctime);
        jTextFieldRoadName.setText(theAccident.name_rd);
        Gutil.setGuiData(jComboBoxAccRd, theAccident.acc_rd);
        Gutil.setGuiData(jComboBoxInOut,theAccident.in_out);
        jTextFieldKilo.setText(theAccident.kilo);
        jTextFieldAccMu.setText(theAccident.accmu);

        if(theAccident.occur_type.equals("A"))
        {
            jRadioButtonAccident.setSelected(true);
            jComboBoxAetype.setEnabled(true);
            jComboBoxEmtype.setEnabled(false);
        }    
        else
        {   jRadioButtonEmergency.setSelected(true);
        jComboBoxAetype.setEnabled(false);
        jComboBoxEmtype.setEnabled(true);
        }
        this.jRadioButtonAccidentActionPerformed(null);
        panelCatAddress.setAddress(theAccident.acccw,theAccident.accam,theAccident.acctb);
        Gutil.setGuiData(jComboBoxPtStatus,theAccident.ptstatus);
        Gutil.setGuiData(jComboBoxPtMobile,theAccident.ptmobie);
        Gutil.setGuiData(jComboBoxAccUse,theAccident.acc_use);
        Gutil.setGuiData(jComboBoxAccAlc,theAccident.acc_alc);
        Constant.println("Road Type : " + theAccident.acc_pro);
        Gutil.setGuiData(jComboBoxAccPro,theAccident.acc_pro);
        hNTextFieldHN.setText(theLookupControl.getRenderTextHN(theAccident.hn));
        dateComboBoxDateAccident.setText(DateUtil.convertFieldDate(theAccident.date_accident));

        jTextFieldTimeToHos.setText(theAccident.to_hos_time);

        dateComboBoxDateAccidentToHos.setText(DateUtil.convertFieldDate(theAccident.to_hos_date));
        jTextFieldStaffRefer.setText(theAccident.staff_refer_patient);
        jTextFieldStaffReferTel.setText(theAccident.staff_refer_patient_tel);
        jTextFieldStaffHistory.setText(theAccident.staff_history_patient);
        jTextFieldStaffHistoryTel.setText(theAccident.staff_history_patient_tel);
        hosComboBoxAccident.refresh();
        Gutil.setGuiData(hosComboBoxAccident,theAccident.b_setup_accident_type_id);
        if(theAccident.proprietress_clock.trim().length() > 0)
            setTextClockEnabled(true,theAccident.proprietress_clock);
        else
            setTextClockEnabled(false,"");
        if(theAccident.proprietress_money.trim().length() > 0)
            setTextMoneyEnabled(true,theAccident.proprietress_money);
        else
            setTextMoneyEnabled(false,"");
        if(theAccident.proprietress_necklace.trim().length() > 0)
            setTextNecklaceEnabled(true,theAccident.proprietress_necklace);
        else
            setTextNecklaceEnabled(false,"");
        if(theAccident.proprietress_other.trim().length() > 0)
            setTextOtherEnabled(true,theAccident.proprietress_other);
        else
            setTextOtherEnabled(false,"");
        if(theAccident.proprietress_ring.trim().length() > 0)
            setTextRingEnabled(true,theAccident.proprietress_ring);
        else
            setTextRingEnabled(false,"");
        if(theAccident.claim_code.equals(""))
            integerTextFieldClaimCode.setText("");
        else
            integerTextFieldClaimCode.setText(theAccident.claim_code);
        if(!theAccident.accident_type.equals(""))
            Gutil.setGuiData(jComboBoxAetype,theAccident.accident_type);
        if(!theAccident.emergency_type.equals(""))
            Gutil.setGuiData(jComboBoxEmtype,theAccident.emergency_type);
    }
    /**
     * ใช้ในการกำหนดให้เพิ่ม้อมูลรายละเอียดของ เงินได้
     * @param enable เป็น boolean ใช้กำหนดให้สามารถใช้งานได้หรือไม่
     * @author Padungrat(tong)
     * @date 23/05/2549,15:40
     */
    public String setTextMoneyEnabled(boolean enable,String text)
    {
        jTextFieldMoney.setEnabled(enable);
        jTextFieldMoney.setText(text);
        jCheckBoxMoney.setSelected(enable);
        if(enable)
        {
            jTextFieldMoney.requestFocus();
            return jTextFieldMoney.getText();
        }
        return "";
    }
    /**
     * ใช้ในการกำหนดให้เพิ่ม้อมูลรายละเอียดของ แหวน ได้
     * @param enable เป็น boolean ใช้กำหนดให้สามารถใช้งานได้หรือไม่
     * @author Padungrat(tong)
     * @date 23/05/2549,15:40
     */
    public String setTextRingEnabled(boolean enable,String text)
    {
        jTextFieldRing.setEnabled(enable);
        jTextFieldRing.setText(text);
        jCheckBoxRing.setSelected(enable);
        if(enable)
        {
            jTextFieldRing.requestFocus();
            return jTextFieldRing.getText();
        }
        else
        {
            return "";
        }
    }
    /**
     * ใช้ในการกำหนดให้เพิ่ม้อมูลรายละเอียดของ อื่นๆ ได้
     * @param enable เป็น boolean ใช้กำหนดให้สามารถใช้งานได้หรือไม่
     * @author Padungrat(tong)
     * @date 23/05/2549,15:40
     */
    public String setTextOtherEnabled(boolean enable,String text)
    {
        jTextFieldOther.setEnabled(enable);
        jTextFieldOther.setText(text);
        jCheckBoxOther.setSelected(enable);
        if(enable)
        {
            jTextFieldOther.requestFocus();    
            return jTextFieldOther.getText();
        }
        else
        {
            return "";
        }
    }

    /**
     * ใช้ในการกำหนดให้เพิ่ม้อมูลรายละเอียดของ นาฬิกา
     * @param enable เป็น boolean ใช้กำหนดให้สามารถใช้งานได้หรือไม่
     * @author Padungrat(tong)
     * @date 23/05/2549,15:40
     */
    public String setTextClockEnabled(boolean enable,String text)
    {   
        jTextFieldClock.setEnabled(enable);
        jTextFieldClock.setText(text);
        jCheckBoxClock.setSelected(enable);
        if(enable)
        {   
            jTextFieldClock.requestFocus();
            return jTextFieldClock.getText();
        }
        else
        {
            return "";
        }
    }
    
    /**
     * ใช้ในการกำหนดให้เพิ่ม้อมูลรายละเอียดของ สร้อย

     * @param enable เป็น boolean ใช้กำหนดให้สามารถใช้งานได้หรือไม่
     * @author Padungrat(tong)
     * @date 23/05/2549,15:40
     */
    public String setTextNecklaceEnabled(boolean enable,String text)
    {
        jTextFieldNecklace.setEnabled(enable);
        jTextFieldNecklace.setText(text);
        jCheckBoxNecklace.setSelected(enable);
        if(enable)
        {   jTextFieldNecklace.requestFocus();
            return jTextFieldNecklace.getText();
        }
        else
        {
            return "";
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupAccident;
    private com.hospital_os.utility.DateComboBox dateComboBoxDateAccident;
    private com.hospital_os.utility.DateComboBox dateComboBoxDateAccidentToHos;
    private com.hospital_os.utility.HNTextField hNTextFieldHN;
    private com.hosv3.gui.component.HosComboBox hosComboBoxAccident;
    private com.hospital_os.utility.IntegerTextField integerTextFieldClaimCode;
    private javax.swing.JButton jButtonCost;
    private javax.swing.JCheckBox jCheckBoxClock;
    private javax.swing.JCheckBox jCheckBoxMoney;
    private javax.swing.JCheckBox jCheckBoxNecklace;
    private javax.swing.JCheckBox jCheckBoxOther;
    private javax.swing.JCheckBox jCheckBoxRing;
    private javax.swing.JComboBox jComboBoxAccAlc;
    private javax.swing.JComboBox jComboBoxAccPro;
    private javax.swing.JComboBox jComboBoxAccRd;
    private javax.swing.JComboBox jComboBoxAccUse;
    private javax.swing.JComboBox jComboBoxAetype;
    private javax.swing.JComboBox jComboBoxEmtype;
    private javax.swing.JComboBox jComboBoxInOut;
    private javax.swing.JComboBox jComboBoxPtMobile;
    private javax.swing.JComboBox jComboBoxPtStatus;
    private javax.swing.JLabel jLabelAccAlc;
    private javax.swing.JLabel jLabelAccMu;
    private javax.swing.JLabel jLabelAccPro;
    private javax.swing.JLabel jLabelAccRd;
    private javax.swing.JLabel jLabelAccuUse;
    private javax.swing.JLabel jLabelClaimCode;
    private javax.swing.JLabel jLabelDateAccident;
    private javax.swing.JLabel jLabelDateAccident2;
    private javax.swing.JLabel jLabelDateAccidentT;
    private javax.swing.JLabel jLabelDateToHos;
    private javax.swing.JLabel jLabelHN;
    private javax.swing.JLabel jLabelInOut;
    private javax.swing.JLabel jLabelKillo;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelNameAccidentTypeC;
    private javax.swing.JLabel jLabelPtMoblle;
    private javax.swing.JLabel jLabelPtStatus;
    private javax.swing.JLabel jLabelRoadName;
    private javax.swing.JLabel jLabelStaffHistory;
    private javax.swing.JLabel jLabelStaffHistoryTel;
    private javax.swing.JLabel jLabelStaffRefer;
    private javax.swing.JLabel jLabelStaffReferTel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelAccident;
    private javax.swing.JPanel jPanelAccidentType;
    private javax.swing.JPanel jPanelAccidentTypeC;
    private javax.swing.JPanel jPanelAddress;
    private javax.swing.JPanel jPanelDateToHos;
    private javax.swing.JPanel jPanelName;
    private javax.swing.JPanel jPanelPatient;
    private javax.swing.JPanel jPanelProperties;
    private javax.swing.JPanel jPanelStaff;
    private javax.swing.JPanel jPanelStation;
    private javax.swing.JPanel jPanelTime;
    private javax.swing.JPanel jPanelTypeForRoad;
    private javax.swing.JRadioButton jRadioButtonAccident;
    private javax.swing.JRadioButton jRadioButtonEmergency;
    private javax.swing.JTextField jTextFieldAccMu;
    private javax.swing.JTextField jTextFieldClock;
    private javax.swing.JTextField jTextFieldKilo;
    private javax.swing.JTextField jTextFieldMoney;
    private javax.swing.JTextField jTextFieldNecklace;
    private javax.swing.JTextField jTextFieldOther;
    private javax.swing.JTextField jTextFieldPatientName;
    private javax.swing.JTextField jTextFieldRing;
    private javax.swing.JTextField jTextFieldRoadName;
    private javax.swing.JTextField jTextFieldStaffHistory;
    private javax.swing.JTextField jTextFieldStaffHistoryTel;
    private javax.swing.JTextField jTextFieldStaffRefer;
    private javax.swing.JTextField jTextFieldStaffReferTel;
    private com.hospital_os.utility.TimeTextField jTextFieldTime;
    private com.hospital_os.utility.TimeTextField jTextFieldTimeToHos;
    private com.hosv3.gui.component.PanelCatAddress panelCatAddress;
    // End of variables declaration//GEN-END:variables
    public void setLanguage(String msg)
      {
        
            GuiLang.setLanguage(jButtonCost);
            GuiLang.setLanguage(jCheckBoxClock);
            GuiLang.setLanguage(jCheckBoxMoney);
            GuiLang.setLanguage(jCheckBoxNecklace);
            GuiLang.setLanguage(jCheckBoxOther);
            GuiLang.setLanguage(jCheckBoxRing);
            GuiLang.setLanguage(this.jLabelDateAccident2);
            GuiLang.setLanguage(this.jLabelDateAccidentT);
            
            GuiLang.setLanguage(jLabelAccAlc);
            GuiLang.setLanguage(jLabelAccMu);
            GuiLang.setLanguage(jLabelAccPro);
            GuiLang.setLanguage(jLabelAccRd);
            GuiLang.setLanguage(jLabelAccuUse);
            GuiLang.setLanguage(jLabelClaimCode);
            GuiLang.setLanguage(jLabelDateAccident);
            GuiLang.setLanguage(jLabelDateToHos);
            GuiLang.setLanguage(jLabelHN);
            GuiLang.setLanguage(jLabelInOut);
            GuiLang.setLanguage(jLabelKillo);
            GuiLang.setLanguage(jLabelName);
            GuiLang.setLanguage(jLabelPtMoblle);
            GuiLang.setLanguage(jLabelPtStatus);
            GuiLang.setLanguage(jLabelRoadName);
            GuiLang.setLanguage(jLabelStaffHistory);
            GuiLang.setLanguage(jLabelStaffHistoryTel);
            GuiLang.setLanguage(jLabelStaffRefer);
            GuiLang.setLanguage(jLabelNameAccidentTypeC);
            GuiLang.setLanguage(jLabelStaffReferTel);
            GuiLang.setLanguage(jRadioButtonAccident);
            GuiLang.setLanguage(jRadioButtonEmergency);
            
            GuiLang.setLanguage(jPanelProperties);
            GuiLang.setLanguage(jPanelPatient);
            GuiLang.setLanguage(jPanelAccident);
      
      }  

}
