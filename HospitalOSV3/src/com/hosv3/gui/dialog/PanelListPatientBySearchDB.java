/*
 * ListVisitBySearchDB.java
 *
 * Created on 17 ตุลาคม 2546, 18:21 น.
 */
package com.hosv3.gui.dialog;


import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.table.*;
import java.util.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.CellRendererHos;
import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.gui.component.*;

/**
 * @deprecated henbe unused
 * @author  Administrator
 */
public class PanelListPatientBySearchDB extends javax.swing.JPanel {
    /** ใช้ในการควบคุมการทำงานร่วมกันของ GUI */
    javax.swing.JFrame aMain;
    Vector thePatient;
    HosControl theHC;
    PatientControl thePatientControl;
    LookupControl theLookupControl;
    VisitControl theVisitControl;
    SystemControl theSystemControl;
    DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
    CellRendererPatient cellRendererPatient;
    // Render Hn ให้แสดงเป็นแบบสั้น sumo 26/7/2549
    CellRendererHos hnRender = new CellRendererHos(CellRendererHos.HN);
    ///////////////////////////////////////////////////////////////////
    // ตัวตรวจสอบหากค้นหาจาก Xn จะให้แสดงหมายเลข Xn แทนชื่อมารดาในตารางแสดงผลการค้นหา sumo 10/4/2549
    boolean flag = false;
    private int rowPatient = -1;
    int type_gui = 0;
    private String[] column = {"HN","ชื่อ","สกุล","อายุ","เลขบัตรประชาชน","ชื่อมารดา"};
    private String[] column2 = {"HN","ชื่อ","สกุล","อายุ","เลขบัตรประชาชน","XN"};
    /** Creates new form ListVisitBySearchDB */
    public PanelListPatientBySearchDB()
    {
        initComponents();        
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        this.pIDSearchPanel.setAutoAlert(false);
    }
    
    public PanelListPatientBySearchDB(HosControl hc, javax.swing.JFrame ctrl,int type)
    {   
        initComponents();
        setControl(hc,ctrl,type);
    } 
    public void setControl(HosControl hc, javax.swing.JFrame ctrl,int type){
        aMain = ctrl;
        type_gui = type;
        theHC = hc;
        theSystemControl = hc.theSystemControl;
        thePatientControl = hc.thePatientControl;
        theLookupControl = hc.theLookupControl;
        theVisitControl = hc.theVisitControl;
    hnRender = new CellRendererHos(CellRendererHos.HN,theLookupControl.getSequenceDataHN().pattern);
        cellRendererPatient = new CellRendererPatient(true);
        ComboboxModel.initComboBox(jComboBoxNCDGroup,theHC.theLookupControl.listNCDGroup());
        setLanguage("");     
        clearGUI();
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
    }
    
    public void requestFocusAtFName()
    {
        jTextFieldFname.requestFocus();        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanelCenter = new javax.swing.JPanel();
        jScrollPane = new javax.swing.JScrollPane();
        jTable = new com.hosv3.gui.component.HJTableSort();
        jPanelTop1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButtonSearch = new javax.swing.JButton();
        pIDSearchPanel = new com.hosv3.gui.component.PIDPanel();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxNCDGroup = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldNCDNumber = new javax.swing.JTextField();
        jCheckBoxNCD = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldXn = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldHN = new javax.swing.JTextField();
        jLabelFname = new javax.swing.JLabel();
        jTextFieldFname = new javax.swing.JTextField();
        jLabelLname = new javax.swing.JLabel();
        jTextFieldLname = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();

        setMinimumSize(new java.awt.Dimension(450, 300));
        setPreferredSize(new java.awt.Dimension(450, 300));
        setLayout(new java.awt.GridBagLayout());

        jPanelCenter.setLayout(new java.awt.GridBagLayout());

        jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableMouseReleased(evt);
            }
        });
        jTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableKeyReleased(evt);
            }
        });
        jScrollPane.setViewportView(jTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 1, 1);
        jPanelCenter.add(jScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 11, 11);
        add(jPanelCenter, gridBagConstraints);

        jPanelTop1.setLayout(new java.awt.GridBagLayout());

        jLabel2.setFont(defaultFont1);
        jLabel2.setText("หมายเลขบัตร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelTop1.add(jLabel2, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        jButtonSearch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jButtonSearchFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 10, 0, 0);
        jPanelTop1.add(jButtonSearch, gridBagConstraints);

        pIDSearchPanel.setAutoAlert(false);
        pIDSearchPanel.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                pIDSearchPanelFocusLost(evt);
            }
        });
        pIDSearchPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pIDSearchPanelKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 12, 0, 0);
        jPanelTop1.add(pIDSearchPanel, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jComboBoxNCDGroup.setFont(defaultFont1);
        jComboBoxNCDGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxNCDGroupActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jComboBoxNCDGroup, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("หมายเลข");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabel5, gridBagConstraints);

        jTextFieldNCDNumber.setFont(defaultFont1);
        jTextFieldNCDNumber.setMinimumSize(new java.awt.Dimension(90, 20));
        jTextFieldNCDNumber.setPreferredSize(new java.awt.Dimension(90, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextFieldNCDNumber, gridBagConstraints);

        jCheckBoxNCD.setFont(defaultFont1);
        jCheckBoxNCD.setSelected(true);
        jCheckBoxNCD.setText("กลุ่ม NCD");
        jCheckBoxNCD.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxNCD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxNCDActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jCheckBoxNCD, gridBagConstraints);

        jLabel3.setFont(defaultFont1);
        jLabel3.setText("XN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 20, 0, 0);
        jPanel1.add(jLabel3, gridBagConstraints);

        jTextFieldXn.setFont(defaultFont1);
        jTextFieldXn.setMinimumSize(new java.awt.Dimension(90, 20));
        jTextFieldXn.setPreferredSize(new java.awt.Dimension(90, 20));
        jTextFieldXn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldXnActionPerformed(evt);
            }
        });
        jTextFieldXn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldXnKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jTextFieldXn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelTop1.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(defaultFont1);
        jLabel1.setText("HN");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldHN.setFont(defaultFont1);
        jTextFieldHN.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldHN.setMinimumSize(new java.awt.Dimension(90, 20));
        jTextFieldHN.setPreferredSize(new java.awt.Dimension(90, 20));
        jTextFieldHN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldHNActionPerformed(evt);
            }
        });
        jTextFieldHN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldHNKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jTextFieldHN, gridBagConstraints);

        jLabelFname.setFont(defaultFont1);
        jLabelFname.setText("Fname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabelFname, gridBagConstraints);

        jTextFieldFname.setFont(defaultFont1);
        jTextFieldFname.setMinimumSize(new java.awt.Dimension(90, 20));
        jTextFieldFname.setPreferredSize(new java.awt.Dimension(90, 20));
        jTextFieldFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFnameActionPerformed(evt);
            }
        });
        jTextFieldFname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldFnameKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jTextFieldFname, gridBagConstraints);

        jLabelLname.setFont(defaultFont1);
        jLabelLname.setText("Lname");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jLabelLname, gridBagConstraints);

        jTextFieldLname.setFont(defaultFont1);
        jTextFieldLname.setMinimumSize(new java.awt.Dimension(90, 20));
        jTextFieldLname.setPreferredSize(new java.awt.Dimension(90, 20));
        jTextFieldLname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLnameActionPerformed(evt);
            }
        });
        jTextFieldLname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldLnameKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jTextFieldLname, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelTop1.add(jPanel2, gridBagConstraints);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        jPanelTop1.add(jComboBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 11);
        add(jPanelTop1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxNCDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxNCDActionPerformed
        this.jComboBoxNCDGroup.setEnabled(jCheckBoxNCD.isSelected());
    }//GEN-LAST:event_jCheckBoxNCDActionPerformed

    private void jComboBoxNCDGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxNCDGroupActionPerformed
        
    }//GEN-LAST:event_jComboBoxNCDGroupActionPerformed

    private void pIDSearchPanelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pIDSearchPanelKeyReleased
        
    }//GEN-LAST:event_pIDSearchPanelKeyReleased

    private void pIDSearchPanelFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pidPanelFocusLost
        
    }//GEN-LAST:event_pidPanelFocusLost

    private void jTextFieldXnKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldXnKeyReleased
        jTextFieldHN.setText("");
        jTextFieldFname.setText("");
        jTextFieldLname.setText("");
        pIDSearchPanel.setText("");
    }//GEN-LAST:event_jTextFieldXnKeyReleased

    private void jTextFieldLnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldLnameKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            jTextFieldXn.setText("");
        }
    }//GEN-LAST:event_jTextFieldLnameKeyReleased

    private void jTextFieldFnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldFnameKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE)
        {
            jTextFieldXn.setText("");
        }
        if(evt.getKeyCode() != KeyEvent.VK_ESCAPE)
        {
            jTextFieldXn.setText("");
        }
    }//GEN-LAST:event_jTextFieldFnameKeyReleased

    private void jTextFieldHNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHNKeyReleased
        if(evt.getKeyCode() != KeyEvent.VK_BACK_SPACE){
            jTextFieldXn.setText("");
        }
    }//GEN-LAST:event_jTextFieldHNKeyReleased

    private void jTextFieldXnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldXnActionPerformed
        searchPatient();
    }//GEN-LAST:event_jTextFieldXnActionPerformed

    private void jTextFieldHNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldHNActionPerformed
        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldHNActionPerformed
    private void jButtonSearchFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jButtonSearchFocusGained
        // TODO add your handling code here:
      //  jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jButtonSearchFocusGained

	private void jTextFieldLnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLnameActionPerformed
        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldLnameActionPerformed

    private void jTextFieldFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFnameActionPerformed
        jButtonSearchActionPerformed(null);
    }//GEN-LAST:event_jTextFieldFnameActionPerformed

    private void jTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableKeyReleased
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
        {
            rowPatient=jTable.getSelectedRow();            
        }
        else if(evt.getKeyCode()==evt.VK_SPACE)
        {
            jTableMouseReleased(null);
        }
        else if(evt.getKeyCode()==evt.VK_ESCAPE)
        {
            this.aMain.dispose();
        }
    }//GEN-LAST:event_jTableKeyReleased

    private void jTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMouseReleased
        rowPatient = jTable.getSelectedRow();
        if(rowPatient==-1) return;
        Patient pt =(Patient)thePatient.get(rowPatient);
        //ตรวจสอบว่าคนที่แสดงอยู่นี้เป็นประชากรหรือผู้ป่วยหากว่าเป็นผู้ป่วยก็ตามนี้
        //หากว่าไม่ใช่ก็ให้ทำการ ส่งข้อมูลไปให้หน้าจอ socialdata แสดงผลออกมาให้จงได้
        //คงต้องทำ managePersonNotify แล้วละ
        if(pt.getObjectId()!=null)
            thePatientControl.readPatientByPatientID(pt.getObjectId());  
        else
            thePatientControl.readFamilyByFamilyId(pt.family_id);  
    }//GEN-LAST:event_jTableMouseReleased

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchPatient();
    }//GEN-LAST:event_jButtonSearchActionPerformed
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxNCD;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBoxNCDGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabelFname;
    private javax.swing.JLabel jLabelLname;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelCenter;
    private javax.swing.JPanel jPanelTop1;
    private javax.swing.JScrollPane jScrollPane;
    private com.hosv3.gui.component.HJTableSort jTable;
    private javax.swing.JTextField jTextFieldFname;
    private javax.swing.JTextField jTextFieldHN;
    private javax.swing.JTextField jTextFieldLname;
    private javax.swing.JTextField jTextFieldNCDNumber;
    private javax.swing.JTextField jTextFieldXn;
    private com.hosv3.gui.component.PIDPanel pIDSearchPanel;
    // End of variables declaration//GEN-END:variables
    
    /**
     *  เมื่อเลือกผู้ป่วยให้ notify ส่งข้อมูลไปทุก panel
     */
    /**
     * ค้นหาผู้ป่านจากฐานข้อมูลเพื่อให้ notify กลับมาแสดงใน table 
     */
    private void searchPatient()
    {
        //ตรวจสอบว่า field hn เป็นค่าว่างหรือไม่
        flag = false;
        if(!jTextFieldHN.getText().equals(""))
        {
            thePatient = thePatientControl.listPatientByHn(jTextFieldHN.getText().trim());
        }     
        else if(!pIDSearchPanel.getText().equals(""))
        {  
            thePatient = thePatientControl.listPatientByPID(pIDSearchPanel.getText());
        }
        else if(!jTextFieldFname.getText().equals("")
            || !jTextFieldLname.getText().equals(""))
        {    
            thePatient = thePatientControl.listPatientByName("",jTextFieldFname.getText()
                ,jTextFieldLname.getText());           
        }
        else if(!jTextFieldXn.getText().equals(""))
        {
            thePatient = thePatientControl.listPatientByXn(jTextFieldXn.getText());
            flag = true;
        }
        else if(!this.jTextFieldNCDNumber.getText().equals(""))
        {
            if(this.jCheckBoxNCD.isSelected())
                thePatient = thePatientControl.listPatientByNCD(Gutil.getGuiData(jComboBoxNCDGroup)
                    ,jTextFieldNCDNumber.getText());
            else
                thePatient = thePatientControl.listPatientByNCD(null,jTextFieldNCDNumber.getText());
            flag = true;
        }
        else
        {
            JOptionPane.showMessageDialog(this,Constant.getTextBundle("กรุณากรอกข้อมูลอย่างน้อย 1 รายการ"), 
                    Constant.getTextBundle("คำเตือน"),JOptionPane.WARNING_MESSAGE);
        }       
        setPatientV(thePatient);
        if(thePatient != null)
        {
            if(!thePatient.isEmpty())
            {                
//                jTable.requestFocus();
                jTable.setRowSelectionInterval(0,0);                
                rowPatient = 0;    
                //ไม่ให้ทำการเลือกเพราะว่ามีปัญหาเรื่องถ้ากดค้นหาจะปิด Dialog เลย
//                if(thePatient.size()==1) jTableMouseReleased(null);
            }
        }
//        jTable.requestFocus();
    }
    
    public void gc()
    {     
         jTextFieldFname = null;
        //    jComboBoxPname = null;
         jPanelCenter = null;
         jTextFieldLname = null;
         jButtonSearch = null;
         jTable = null;
         jPanelTop1 = null;
         jScrollPane = null;
         jLabelLname = null;
    }
    
    
    /**
     * แสดงข้อมูลตารางลงตาราง 
     */
    public void setPatientV(Vector thePatient)
    {
       TaBleModel tm;
       if(thePatient==null)
       {
            tm = new TaBleModel(column,0);
            jTable.setModel(tm);
            return;
       }
       if(flag == true)
       {
           tm = new TaBleModel(column2,thePatient.size());
       }
       else
       {
           tm = new TaBleModel(column,thePatient.size());
       }
       String date_time = theHC.theHO.date_time;
       for(int i=0,size=thePatient.size();i<size;i++)
       {
           Patient pd = (Patient)thePatient.get(i);
           String year = DateUtil.calculateAge(pd.birthday,date_time);
           if(!year.equals("")) year = year + " ปี";
           tm.setValueAt(pd.hn,i,0);
           //ค้นหาบ้านรายคนให้เรียบร้อยเพียงครั้งเดียวก็พอ
           tm.setValueAt(pd.fname,i,1);
           tm.setValueAt(pd.lname,i,2);           
           tm.setValueAt(year,i,3);
           tm.setValueAt(pd.pid.trim(),i,4);
           if(flag == true)
           {
               tm.setValueAt(pd.xn,i,5);
           }
           else
           {
               tm.setValueAt(pd.mother_fname,i,5);
           }
       }
       jTable.setModel(tm);
       jTable.getColumnModel().getColumn(0).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(0).setCellRenderer(rendererRight);
       // Render Hn ให้แสดงเป็นแบบสั้น sumo 26/7/2549
       jTable.getColumnModel().getColumn(0).setCellRenderer(hnRender);
       ///////////////////////////////////////////////////////////////
       jTable.getColumnModel().getColumn(1).setPreferredWidth(100);
       //jTable.getColumnModel().getColumn(1).setCellRenderer(cellRendererPatient);
       jTable.getColumnModel().getColumn(2).setPreferredWidth(100);
       jTable.getColumnModel().getColumn(3).setPreferredWidth(50);
       jTable.getColumnModel().getColumn(3).setCellRenderer(rendererRight);
       jTable.getColumnModel().getColumn(4).setPreferredWidth(140);
       jTable.getColumnModel().getColumn(4).setCellRenderer(rendererRight);
       jTable.getColumnModel().getColumn(5).setPreferredWidth(100);
       if(flag == true)
       {
           jTable.getColumnModel().getColumn(5).setCellRenderer(rendererRight);
       }
       
    }    
    /**
     * แสดงข้อมูลถ้าไม่เจอให้ส่งข้อมูลไปยัง socialData 
     */
    
     public void setLanguage(String msg)
    {
        GuiLang.setLanguage(jLabel1);
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabelFname);
        GuiLang.setLanguage(jLabelLname);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jCheckBoxNCD);
        GuiLang.setLanguage(column);
        GuiLang.setLanguage(column2);
     }
     
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setFnameLname(String first_name,String list_name)
    {           
        if(first_name == null)
        {
            first_name = "";
        }
        if(list_name == null)
        {
            list_name = "";
        }  
        if("".equals(first_name) && "".equals(list_name))
        {          
            if(thePatient != null)
            {
                setPatientV(thePatient);
                if(!thePatient.isEmpty())
                {
//                    jTable.requestFocus();
                    if(rowPatient!=-1) jTable.setRowSelectionInterval(rowPatient,rowPatient);
                }
            }
        }        
        if(first_name.trim().length() >0 || list_name.trim().length() >0 )
        {   
            jTextFieldFname.setText(first_name);
            jTextFieldLname.setText(list_name);
            searchPatient();
        }
    }
    /**
     *  set ค่าเพื่อให้ค้นหาเลย
     */
    public void setHNPID(String hn,String pid)
    {   
        if(hn.trim().length() >0 || pid.trim().length() >0 )
        {   
            jTextFieldHN.setText(hn);
            pIDSearchPanel.setText(pid);
            searchPatient();
        }
    }
    
    /**
     *  ใช้ในการ clear ค่าใน form
     */
    public void clearGUI(){   
        jTextFieldFname.setText("");
        jTextFieldLname.setText("");
        jTextFieldHN.setText("");
        pIDSearchPanel.setText("");        
        setPatientV(null);
    }   
    
    /**
     *@Author : amp
     *@date : 09/02/2549
     *@see : เคลียร์ค่า Vector
     */
    public void setVthePatientToNull()
    {
        thePatient = null;
    }
    
}
