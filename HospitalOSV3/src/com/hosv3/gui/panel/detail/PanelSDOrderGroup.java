/*
 * PanelSDSetupOrderGroup.java
 *
 * Created on April 2, 2009, 1:20 PM
 */

package com.hosv3.gui.panel.detail;

import com.hospital_os.object.CategoryGroupItem;
import com.hospital_os.usecase.connection.Persistent;
import com.hospital_os.utility.ComboboxModel;
import com.hosv3.utility.Constant;
import com.hosv3.control.HosControl;
import com.hosv3.control.LookupControl;
import com.hosv3.control.SetupControl;
import com.hosv3.gui.component.PanelSetupImp;
import com.hosv3.utility.GuiLang;
import com.hosv3.utility.connection.UpdateStatus;
import java.util.Vector;

/**
 *
 * @author  Administrator
 */
public class PanelSDOrderGroup extends javax.swing.JPanel implements PanelSetupImp{
     LookupControl theLookupControl;
    ComboboxModel theComboboxModel;
    UpdateStatus theUS;
    SetupControl theSetupControl;
    Vector categorygroup = new Vector();
    Vector category = new Vector();
    Vector depPanelV = new Vector();
    private CategoryGroupItem theCategoryGroupItem;
    int offset = 23;
    int next = 0;
    int prev = 0;
    int saved = 0; // 0 คือ ไม่สามารถ insertได้ 1 คือ insert ได้
    String[] col = {"รหัส","ชื่อ"};
    /** Creates new form PanelSDSetupOrderGroup */
    public PanelSDOrderGroup() 
    {
        initComponents();
        setLanguage();
        //jTable1.setGuiMode(true);
    }
    public PanelSDOrderGroup(HosControl hc,UpdateStatus us)
    {
        initComponents();
        setLanguage();      
        //jTable1.setGuiMode(true);  
        setControl(hc,us);
    }    /////////////////////Use this for decrease memory usage
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxCategoryGroup = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();

        setFont(defaultFont1);
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setMaximumSize(new java.awt.Dimension(300, 120));
        jPanel2.setMinimumSize(new java.awt.Dimension(300, 120));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 120));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(defaultFont1);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/hosv3/property/thai"); // NOI18N
        jLabel1.setText(bundle.getString("CODE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldCode.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel2.add(jTextFieldCode, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText(bundle.getString("NAME")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jTextFieldName, gridBagConstraints);

        jLabel3.setFont(defaultFont1);
        jLabel3.setText(bundle.getString("GROUP")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jLabel3, gridBagConstraints);

        jComboBoxCategoryGroup.setFont(defaultFont1);
        jComboBoxCategoryGroup.setMaximumSize(new java.awt.Dimension(150, 24));
        jComboBoxCategoryGroup.setMinimumSize(new java.awt.Dimension(150, 24));
        jComboBoxCategoryGroup.setPreferredSize(new java.awt.Dimension(150, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jComboBoxCategoryGroup, gridBagConstraints);

        jCheckBox1.setFont(defaultFont1);
        jCheckBox1.setText(bundle.getString("ACTIVE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel2.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JComboBox jComboBoxCategoryGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables

    public void clearAll() {
        this.setTheCategoryGroupItem(new CategoryGroupItem());
    }

    public Persistent getXPer() {
        return this.getTheCategoryGroupItem();
    }

    public void setXPer(Persistent x) {
        this.setTheCategoryGroupItem((CategoryGroupItem)x);
    }

    public void setLanguage() {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabel1);        
        GuiLang.setLanguage(jLabel2);  
        GuiLang.setLanguage(jCheckBox1);  
        GuiLang.setLanguage(col);
    }

    public void setControl(HosControl hc, UpdateStatus us) {
        theUS = us;
        theLookupControl = hc.theLookupControl;
        theSetupControl = hc.theSetupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        setupLookup();
        setEnabled(false);
    }

    public void setEnabled(boolean var)
    {   
        jTextFieldCode.setEditable(var);
        jTextFieldName.setEnabled(var);
        //jButtonSave.setEnabled(var);
        jCheckBox1.setEnabled(var);
        jComboBoxCategoryGroup.setEnabled(var);
        //jButtonDel.setEnabled(var);
    /*    if(!var)
        {   jComboBoxCategoryGroup.setBackground(new Color(255,255,255));
            jComboBoxCategoryGroup.setForeground(new Color(0,0,0));
        }    
     */
    }
    
    public void setupLookup() {
        categorygroup = theLookupControl.listCategoryGroup();
        ComboboxModel.initComboBox(jComboBoxCategoryGroup,categorygroup);
    }

    public boolean deleteXPer(Persistent x) {
        return (this.theSetupControl.deleteCategoryGroupItem((CategoryGroupItem)x)>0);
    }

    public boolean saveXPer(Persistent x) {
       //return false;
      return (this.theSetupControl.saveCategoryGroupItem((CategoryGroupItem)x)>0);
    }

    public Vector listXPer(String key, String active, int offset) {
        return theSetupControl.listCategoryGroupItemByName(key,active);
    }

    public boolean isActiveVisible() {
        return true;
    }

    public static String TITLE = Constant.getTextBundle("กลุ่มรายการ ตรวจรักษา");
    public String getTitle() {
        return TITLE;
    }

    public CategoryGroupItem getTheCategoryGroupItem() {
        if(theCategoryGroupItem == null)
            theCategoryGroupItem = new CategoryGroupItem();
        theCategoryGroupItem.category_group_item_id = jTextFieldCode.getText();
        theCategoryGroupItem.description = jTextFieldName.getText();
        theCategoryGroupItem.category_group_code = ComboboxModel.getCodeComboBox(jComboBoxCategoryGroup);
        if(jCheckBox1.isSelected())
            theCategoryGroupItem.active = "1";
        else
            theCategoryGroupItem.active = "0";  
        return theCategoryGroupItem;
    }

    public void setTheCategoryGroupItem(CategoryGroupItem Item) {
        theCategoryGroupItem = Item;
        jTextFieldCode.setText(Item.category_group_item_id);
        jTextFieldName.setText(Item.description);
        ComboboxModel.setCodeComboBox(jComboBoxCategoryGroup, Item.category_group_code);
        if(Item.active!=null&&Item.active.equals("1"))
            jCheckBox1.setSelected(true);
        else
            jCheckBox1.setSelected(false);
    }

    public boolean isStartVisible() {
        return false;
    }
        

}
