/*
 * PanelSDContract.java
 *
 * Created on 11 เมษายน 2550, 13:50 น.
 */

package com.hosv3.gui.panel.detail;

import com.hospital_os.object.CategoryGroupItem;
import com.hospital_os.object.Contract;
import com.hospital_os.object.ContractAdjust;
import com.hospital_os.object.Option;
import com.hospital_os.usecase.connection.Persistent;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.control.HosControl;
import com.hosv3.control.LookupControl;
import com.hosv3.control.SetupControl;
import com.hosv3.gui.component.PanelSetupImp;
import com.hosv3.usecase.setup.ManageOptionReq;
import com.hosv3.utility.Constant;
import com.hosv3.utility.GuiLang;
import com.hosv3.utility.TableRenderer;
import com.hosv3.utility.connection.UpdateStatus;
import java.util.Vector;

/**
 *
 * @author  Aut
 */
public class PanelSDContract extends javax.swing.JPanel 
        implements PanelSetupImp, ManageOptionReq
{
    LookupControl theLookupControl;
    SetupControl theSetupControl;
    UpdateStatus theUS;
    Vector depPanelV = new Vector();
    
    public Contract theContract;
    public ContractAdjust theContractAdjust;
    private Vector cData;
    private String[] column = {"กลุ่มรายการ","ส่วนลด(%)"};
    
    /** Creates new form PanelSDContract */
    public PanelSDContract(HosControl hc, UpdateStatus us) {
        initComponents();
        setControl(hc,us);
        setLanguage();
    }
    
    public PanelSDContract() {
        initComponents();
        setLanguage();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableContractData = new com.hosv3.gui.component.HJTableSort();
        jPanel9 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxCategory = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jCheckBoxDraw = new javax.swing.JCheckBox();
        jTextFieldContract = new com.hospital_os.utility.DoubleTextField();
        jPanel11 = new javax.swing.JPanel();
        jButtonAdd1 = new javax.swing.JButton();
        jButtonDel1 = new javax.swing.JButton();
        jButtonSave1 = new javax.swing.JButton();
        jButtonDel2 = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        setMaximumSize(new java.awt.Dimension(300, 2147483647));
        setMinimumSize(new java.awt.Dimension(300, 400));
        setPreferredSize(new java.awt.Dimension(300, 400));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(defaultFont1);
        jLabel1.setText("\u0e23\u0e2b\u0e31\u0e2a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldCode.setFont(defaultFont1);
        jTextFieldCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel2.add(jTextFieldCode, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText("\u0e0a\u0e37\u0e48\u0e2d\u0e2a\u0e48\u0e27\u0e19\u0e25\u0e14");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        jTextFieldName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameActionPerformed(evt);
            }
        });
        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel2.add(jTextFieldName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        add(jPanel2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "\u0e04\u0e23\u0e2d\u0e1a\u0e04\u0e25\u0e38\u0e21\u0e01\u0e25\u0e38\u0e48\u0e21\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanel5.setMinimumSize(new java.awt.Dimension(118, 250));
        jPanel5.setPreferredSize(new java.awt.Dimension(463, 250));
        jTableContractData.setFont(defaultFont1);
        jTableContractData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableContractDataKeyReleased(evt);
            }
        });
        jTableContractData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableContractDataMouseReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTableContractData);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 11);
        jPanel5.add(jScrollPane2, gridBagConstraints);

        jPanel9.setLayout(new java.awt.GridBagLayout());

        jPanel9.setOpaque(false);
        jLabel6.setFont(defaultFont1);
        jLabel6.setText("\u0e01\u0e25\u0e38\u0e48\u0e21\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel9.add(jLabel6, gridBagConstraints);

        jComboBoxCategory.setFont(defaultFont1);
        jComboBoxCategory.setMaximumSize(new java.awt.Dimension(150, 24));
        jComboBoxCategory.setMinimumSize(new java.awt.Dimension(150, 24));
        jComboBoxCategory.setPreferredSize(new java.awt.Dimension(150, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 0);
        jPanel9.add(jComboBoxCategory, gridBagConstraints);

        jLabel7.setFont(defaultFont1);
        jLabel7.setText("\u0e2a\u0e48\u0e27\u0e19\u0e25\u0e14(%)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel9.add(jLabel7, gridBagConstraints);

        jCheckBoxDraw.setFont(defaultFont1);
        jCheckBoxDraw.setText("\u0e40\u0e1a\u0e34\u0e01\u0e08\u0e48\u0e32\u0e22\u0e44\u0e14\u0e49");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel9.add(jCheckBoxDraw, gridBagConstraints);

        jTextFieldContract.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldContract.setFont(defaultFont1);
        jTextFieldContract.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldContract.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldContract.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldContractActionPerformed(evt);
            }
        });
        jTextFieldContract.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldContractKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 10, 0, 0);
        jPanel9.add(jTextFieldContract, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 11, 0, 11);
        jPanel5.add(jPanel9, gridBagConstraints);

        jPanel11.setLayout(new java.awt.GridBagLayout());

        jButtonAdd1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd1.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd1.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd1.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAdd1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel11.add(jButtonAdd1, gridBagConstraints);

        jButtonDel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel1.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel1.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel1.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDel1ActionPerformed(evt);
            }
        });

        jPanel11.add(jButtonDel1, new java.awt.GridBagConstraints());

        jButtonSave1.setFont(defaultFont1);
        jButtonSave1.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave1.setMaximumSize(new java.awt.Dimension(67, 24));
        jButtonSave1.setMinimumSize(new java.awt.Dimension(67, 24));
        jButtonSave1.setPreferredSize(new java.awt.Dimension(67, 24));
        jButtonSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSave1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel11.add(jButtonSave1, gridBagConstraints);

        jButtonDel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/refash.gif")));
        jButtonDel2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel2.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel2.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDel2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 6;
        gridBagConstraints.gridy = 0;
        jPanel11.add(jButtonDel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 11, 11);
        jPanel5.add(jPanel11, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel5, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonDel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDel2ActionPerformed
        
    }//GEN-LAST:event_jButtonDel2ActionPerformed

    private void jTextFieldContractKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldContractKeyReleased
         if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
            this.jTableContractData.requestFocus();
    }//GEN-LAST:event_jTextFieldContractKeyReleased

    private void jTextFieldContractActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldContractActionPerformed
        jButtonSave1ActionPerformed(evt);
    }//GEN-LAST:event_jTextFieldContractActionPerformed

    private void jTextFieldNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameActionPerformed
        saveXPer((Contract)getXPer());
    }//GEN-LAST:event_jTextFieldNameActionPerformed

    private void jTextFieldNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameKeyReleased
        if(evt.getKeyCode()==evt.VK_UP)
            jTextFieldCode.requestFocus();
//        if(evt.getKeyCode()==evt.VK_DOWN || evt.getKeyCode()==evt.VK_TAB)
//            jButtonSave.requestFocus();
        if(evt.getKeyCode()==evt.VK_ESCAPE)
            cancelinsertGroupContract();
    }//GEN-LAST:event_jTextFieldNameKeyReleased

    private void jTextFieldCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodeKeyReleased
        if(evt.getKeyCode()==evt.VK_DOWN)
            jTextFieldName.requestFocus();
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_ESCAPE)
            cancelinsertGroupContract();
    }//GEN-LAST:event_jTextFieldCodeKeyReleased

    private void jButtonSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSave1ActionPerformed
        saveContractAdjust();
        this.jTableContractData.requestFocus();
    }//GEN-LAST:event_jButtonSave1ActionPerformed

    private void jButtonDel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDel1ActionPerformed
        deleteContractAdjust();
        setEnableDataGroup(false);
    }//GEN-LAST:event_jButtonDel1ActionPerformed

    private void jButtonAdd1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAdd1ActionPerformed
        setEnableDataGroup(true);
        setClearData();
        theContractAdjust = new ContractAdjust();
    }//GEN-LAST:event_jButtonAdd1ActionPerformed

    private void jTableContractDataKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableContractDataKeyReleased
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
            selectContractData();
        if(evt.getKeyCode()==evt.VK_SPACE)
            jTextFieldContract.requestFocus();
        if(evt.getKeyCode()==evt.VK_INSERT)
            jButtonAdd1ActionPerformed(null);
        if(evt.getKeyCode()==evt.VK_DELETE)
            jButtonDel1ActionPerformed(null);
//        if(evt.getKeyCode()==evt.VK_ESCAPE)
//            jTableGroupContract.requestFocus();
    }//GEN-LAST:event_jTableContractDataKeyReleased

    private void jTableContractDataMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableContractDataMouseReleased
        selectContractData();
        jTextFieldContract.requestFocus();
    }//GEN-LAST:event_jTableContractDataMouseReleased
    
    public void cancelinsertGroupContract()
    {
        setEnableGroup(false);
//        selectGroupContract();
//        jTableGroupContract.requestFocus();
    }
    
    public void selectContractData()
    {
        int[] rows = jTableContractData.getSelectedRows();
        if(rows.length==1)
        {
            int row = jTableContractData.getSelectedRow();
            theContractAdjust = (ContractAdjust)cData.get(row);
            //Constant.println(theContractAdjust.getObjectId());
            ComboboxModel.setCodeComboBox(jComboBoxCategory,theContractAdjust.covered_id);
            jTextFieldContract.setText((String)jTableContractData.getValueAt(row, 1));
            if(theContractAdjust.draw.equals("1"))
                jCheckBoxDraw.setSelected(true);
            else
                jCheckBoxDraw.setSelected(false);
            setEnableDataGroup(true);
        }
        else{
            setEnableDataGroup(true);
            jComboBoxCategory.setEnabled(false);
            jCheckBoxDraw.setEnabled(false);
            jTextFieldContract.setText("");
        }
    }
    
    public void setClearData()
    {
      jTextFieldContract.setText("");
      jCheckBoxDraw.setSelected(false);
    }
    
    public void deleteContractAdjust()
    {   
        int[]  row = jTableContractData.getSelectedRows();
        int ret = theSetupControl.deleteContractAdjust(cData,row);
        if(ret == 0)
        {
            return;
        }
        selectContractAdjust();
        //selectGroupContract();
    }
    
    public void setEnabled(boolean enabled) 
    {
        
        setEnableDataGroup(enabled);
        setEnableGroup(enabled);
    }
    
    public void setEnableGroup(boolean var)
    {
       jTextFieldCode.setEnabled(var);
       jTextFieldName.setEnabled(var);
    }
    
    public void setEnableDataGroup(boolean var)
    {
       jComboBoxCategory.setEnabled(var);
       jTextFieldContract.setEditable(var);
       jCheckBoxDraw.setEnabled(var);
    }
    
    public void saveContractAdjust()
    {
        int[] rows = this.jTableContractData.getSelectedRows();
        if(rows.length==1)
        {
            if(theContractAdjust==null)
                theContractAdjust = new ContractAdjust();
            theContractAdjust.adjustment = Gutil.getGuiData(jTextFieldContract);
            theContractAdjust.covered_id = Gutil.getGuiData(jComboBoxCategory);
            theContractAdjust.contract_id = theContract.getObjectId();
            if(jCheckBoxDraw.isSelected())
                theContractAdjust.draw = "1";
            else    
                theContractAdjust.draw = "0";

            if(theSetupControl.saveContractAdjust(theContractAdjust)>0) 
                selectContractAdjust();
        }
        else{
            String price = Gutil.getGuiData(jTextFieldContract);
            if(theSetupControl.saveContractAdjust(cData,rows,price)>0)
                selectContractAdjust();
        }
    }
    
    public void selectContractAdjust()
    {
        cData = theSetupControl.listContractAdjust(theContract.getObjectId());
        setContractAdjustV(cData);
    }
    
    public void clearAll() {
        theContract = new Contract();
        
        jTextFieldCode.setText("");
        jTextFieldName.setText("");
        this.setContractAdjustV(null);
        this.setEnabled(true);
    }

    public Persistent getXPer() {
        if(theContract==null)
            theContract = new Contract();
        theContract.contract_id = jTextFieldCode.getText();
        theContract.description = jTextFieldName.getText();
        theContract.method = "1";
        
        return theContract;
    }

    public void setXPer(Persistent x) {
        theContract = (Contract)x;
        
        jTextFieldCode.setText(theContract.contract_id);
        jTextFieldName.setText(theContract.description);
        selectContractAdjust();        
    }
    
    public void setContractAdjustV(Vector v)
    {
        cData = v;
        if(cData==null)
            cData = new Vector();
       TaBleModel tm = new TaBleModel(column,cData.size());
       for(int i=0;i<cData.size();i++)
       {
            ContractAdjust cd = (ContractAdjust)cData.get(i);
            if(!cd.covered_id.equals("null"))
            {
                CategoryGroupItem cgi = (CategoryGroupItem)theLookupControl
                    .readCategoryGroupItemById(cd.covered_id);
                try{  
                    tm.setValueAt(cgi.description,i,0);
                    tm.setValueAt(cd.adjustment,i, 1);
                }
                catch(Exception ex)
                {
                    tm.setValueAt("",i,0);
                    tm.setValueAt("",i, 1);
                }
            }
       }
       jTableContractData.setModel(tm);
       jTableContractData.getColumnModel().getColumn(0).setPreferredWidth(500);
       jTableContractData.getColumnModel().getColumn(1).setPreferredWidth(100);
       jTableContractData.getColumnModel().getColumn(1).setCellRenderer(TableRenderer.getRendererRight());
    }
    
    public void setLanguage() {
        GuiLang.setLanguage(jLabel1);
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(jLabel7);
        GuiLang.setLanguage(jCheckBoxDraw);
        GuiLang.setLanguage(jButtonSave1);
    }

    public void setControl(HosControl hc, UpdateStatus us) {
        theLookupControl = hc.theLookupControl;
        theSetupControl = hc.theSetupControl;
        setupLookup();        
    }

    public void setupLookup() {
        ComboboxModel.initComboBox(jComboBoxCategory,theLookupControl.listCategoryGroupItem());
    }

    public boolean deleteXPer(Persistent x) {
        int ret = theSetupControl.deleteContract(theContract,0);
        if(ret==0)
            return false;
        else {
            refreshDepPanel();
            return true;
        }
    }

    public boolean saveXPer(Persistent x) {
        theSetupControl.saveContract(theContract);
        this.jTableContractData.requestFocus();
        setEnableGroup(false);
        setEnableDataGroup(true);
        selectContractAdjust();
        refreshDepPanel();
        return false;
    }

    public Vector listXPer(String key, String active, int offset) {        
        return theSetupControl.listContractGroupByNameId(key);
    }

    public boolean isActiveVisible() {
        return false;
    }

//    public boolean isButtonDelVisible() {
//        return true;
//    }

    public String getTitle() {
        return Constant.getTextBundle("รายการส่วนลด");
    }    
    
    /**
     *เพิ่ม panel ที่เกิดผลกระทบเมื่อมีการเปลี่ยนแปลงข้อมูลใน panel นี้
     *ฟังก์ชันถูกเรียกในคลาส HosPanelSetup
     *@author aut
     *@param panel ลูก ที่ imp interface ManageOptionReq
     */
    public void addDepPanel(ManageOptionReq panel) {
        if(panel!=null)
            depPanelV.add(panel);
    }

    
    public void refreshDepPanel() {
        for(int i=0;i<depPanelV.size();i++) {
            ((ManageOptionReq)depPanelV.get(i)).notifyreFrashPanel();
        }
    }

    public void notifysetEnableForLift(boolean b) {
    }

    public int editOption(Option option) {
        return -1;
    }

    public Vector listOptionAll() {
        return null;
    }

    public void notifyreFrashPanel() {
        setupLookup();
    }

    public Option readOption() {
        return null;
    }

    public void reFrashPanel() {
    }

    public int saveOption(Option option) {
        return -1;
    }

    public void setEnableForLift(boolean b) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    protected javax.swing.JButton jButtonAdd1;
    protected javax.swing.JButton jButtonDel1;
    protected javax.swing.JButton jButtonDel2;
    protected javax.swing.JButton jButtonSave1;
    private javax.swing.JCheckBox jCheckBoxDraw;
    private javax.swing.JComboBox jComboBoxCategory;
    protected javax.swing.JLabel jLabel1;
    protected javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTableContractData;
    protected javax.swing.JTextField jTextFieldCode;
    private com.hospital_os.utility.DoubleTextField jTextFieldContract;
    private javax.swing.JTextField jTextFieldName;
    // End of variables declaration//GEN-END:variables
    
}
