/*
 * PanelVitalSign.java
 *
 * Created on 18 ตุลาคม 2546, 9:45 น.
 */
package com.hosv3.gui.panel.detail;

import com.hosv3.control.*;  
import com.hosv3.utility.connection.*;
import com.hosv3.subject.*;
import com.hosv3.utility.*;
import com.hosv3.object.*;

import com.hospital_os.object.*; 
import com.hospital_os.gui.connection.*; 
import com.hospital_os.utility.*;
import com.hosv3.utility.Constant;
import com.hosv3.utility.DateUtil;

import javax.swing.*;
import java.util.*;
import java.awt.event.*;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
/**
 *
 *
 * @author henbe
 */
public class PDVitalSign extends javax.swing.JPanel implements InfPanelObject,InfPanelVitalSign, DocumentListener
{   
    static final long serialVersionUID=0;
    HosObject theHO;
    HosControl theHC;
    HosSubject theHS;
    UpdateStatus theUS;
  
    String[] col_jTableVitalSign = {"วัน-เวลาตรวจ"};
    CellRendererHos dateRender = new CellRendererHos(CellRendererHos.DATE_TIME);
    private Vector vVitalSign;
    private VitalSign theVitalSign;
    /** Creates new form PanelVitalSign */
    @SuppressWarnings("LeakingThisInConstructor")
    public PDVitalSign()
    { 
        initComponents(); 
        setLanguage(null);
        jTableVitalSign.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        doubleTextFieldBMI.getDocument().addDocumentListener(this);
    }
    
    /*neung
     *ทำการตรวจสอบว่าผู้ใช้เป็นใคร
     *และไม่สามารถทำอะไรได้บ้าง ก็จะทำการเซตvisitbleปุ่มนั้นไป
     */
    private void setAuthentication(Employee theEmployee)
    {
        if(theEmployee.authentication_id.equals(Authentication.XRAY) 
            || theEmployee.authentication_id.equals(Authentication.LAB))
        {
            jButtonAddVital.setVisible(false);
            jButtonDelVital.setVisible(false);
            setEnabled(false);
        }
    }
    
    public void setControl(HosControl hc, UpdateStatus us)
    {   
        theHC = hc;
        theHO = hc.theHO;
        theHS = hc.theHS;
        theUS = us;
        setAuthentication(theHO.theEmployee);
        initComboBox();
    }
    
    public void initComboBox()
    {
        Vector vNutritionType = theHC.theLookupControl.listNutritionType();
        ComboboxModel.initComboBox(jComboBoxNutrition,vNutritionType); 
        dateComboBoxCheck.setEditable(true);
    }
    /**
     *เอาไว้เช็คอายุว่าไม่เกิน 6 ปี ให้แสดงภาวะโภชนาการแต่หลายคนต้องการช่วงอายุอื่นๆ ด้ว
     *เลยต้องเอาออกให้แสดงได้ทุกกรณ
     **/ 
    public void setVisit(Visit v)
    {
//        jComboBoxNutrition.setVisible(false);
//        jLabelNutri.setVisible(false);
//        try{
//            if(v!=null && Integer.parseInt(v.patient_age) <= 6){
//                jComboBoxNutrition.setVisible(true);
//                jLabelNutri.setVisible(true);
//            } 
//        }
//        catch(Exception e){
//           Constant.println("==============================================");
//           Constant.println(e.getMessage());
//           Constant.println("==============================================");
//        }
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jScrollPaneVital = new javax.swing.JScrollPane();
        jTableVitalSign = new com.hosv3.gui.component.HJTableSort();
        jPanel8 = new javax.swing.JPanel();
        jButtonAddVital = new javax.swing.JButton();
        jButtonDelVital = new javax.swing.JButton();
        btnAddFromSelected = new javax.swing.JButton();
        jPanelBody2 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabelWeight = new javax.swing.JLabel();
        jTextFieldWeight = new com.hospital_os.utility.DoubleTextField();
        jLabelWeightUnit = new javax.swing.JLabel();
        jLabelHeight = new javax.swing.JLabel();
        jTextFieldHeight = new com.hospital_os.utility.DoubleTextField();
        jLabelHeightUnit = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldPressure1 = new com.hospital_os.utility.DoubleTextField();
        jTextFieldPressure2 = new com.hospital_os.utility.DoubleTextField();
        jLabelPresUnit = new javax.swing.JLabel();
        jLabelPressure = new javax.swing.JLabel();
        jLabelTemp = new javax.swing.JLabel();
        jTextFieldTemp = new com.hospital_os.utility.DoubleTextField();
        jLabelPulse = new javax.swing.JLabel();
        jLabelRespiration = new javax.swing.JLabel();
        jTextFieldPulse = new com.hospital_os.utility.DoubleTextField();
        jTextFieldRespiration = new com.hospital_os.utility.DoubleTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabelBMI = new javax.swing.JLabel();
        doubleTextFieldBMI = new com.hospital_os.utility.DoubleTextField();
        jLabelNutri = new javax.swing.JLabel();
        jComboBoxNutrition = new javax.swing.JComboBox();
        jPanel17 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaVitalSignNote = new javax.swing.JTextArea();
        jPanel16 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        dateComboBoxCheck = new com.hospital_os.utility.DateComboBox();
        jLabel6 = new javax.swing.JLabel();
        timeTextFieldCheck = new com.hospital_os.utility.TimeTextField();
        jLabel9 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabelWaistline = new javax.swing.JLabel();
        jLabeljLabelWaistlineUnit = new javax.swing.JLabel();
        jTextFieldWaistlineInch = new com.hospital_os.utility.DoubleTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelPulseUnit = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelResUnit = new javax.swing.JLabel();
        jLabeljLabelWaistlineUnit1 = new javax.swing.JLabel();
        jTextFieldWaistlineCen = new com.hospital_os.utility.DoubleTextField();

        setLayout(new java.awt.GridBagLayout());

        jScrollPaneVital.setMinimumSize(new java.awt.Dimension(250, 60));
        jScrollPaneVital.setPreferredSize(new java.awt.Dimension(250, 60));

        jTableVitalSign.setFont(defaultFont1);
        jTableVitalSign.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableVitalSignMouseReleased(evt);
            }
        });
        jTableVitalSign.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableVitalSignKeyReleased(evt);
            }
        });
        jScrollPaneVital.setViewportView(jTableVitalSign);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(jScrollPaneVital, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonAddVital.setFont(defaultFont1);
        jButtonAddVital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAddVital.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonAddVital.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonAddVital.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonAddVital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddVitalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        jPanel8.add(jButtonAddVital, gridBagConstraints);

        jButtonDelVital.setFont(defaultFont1);
        jButtonDelVital.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDelVital.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDelVital.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDelVital.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDelVital.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelVitalActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 3);
        jPanel8.add(jButtonDelVital, gridBagConstraints);

        btnAddFromSelected.setFont(btnAddFromSelected.getFont().deriveFont(btnAddFromSelected.getFont().getStyle() | java.awt.Font.BOLD));
        btnAddFromSelected.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/down-icon.png"))); // NOI18N
        btnAddFromSelected.setMaximumSize(new java.awt.Dimension(26, 26));
        btnAddFromSelected.setMinimumSize(new java.awt.Dimension(26, 26));
        btnAddFromSelected.setPreferredSize(new java.awt.Dimension(26, 26));
        btnAddFromSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFromSelectedActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 3);
        jPanel8.add(btnAddFromSelected, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        add(jPanel8, gridBagConstraints);

        jPanelBody2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelBody2.setMaximumSize(new java.awt.Dimension(250, 214));
        jPanelBody2.setMinimumSize(new java.awt.Dimension(250, 214));
        jPanelBody2.setPreferredSize(new java.awt.Dimension(250, 214));
        jPanelBody2.setLayout(new java.awt.GridBagLayout());

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabelWeight.setFont(defaultFont1);
        jLabelWeight.setText("น้ำหนัก");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel14.add(jLabelWeight, gridBagConstraints);

        jTextFieldWeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldWeight.setFont(defaultFont1);
        jTextFieldWeight.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldWeight.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldWeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldWeightFocusLost(evt);
            }
        });
        jTextFieldWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldWeightKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel14.add(jTextFieldWeight, gridBagConstraints);

        jLabelWeightUnit.setFont(defaultFont1);
        jLabelWeightUnit.setText("กก.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel14.add(jLabelWeightUnit, gridBagConstraints);

        jLabelHeight.setFont(defaultFont1);
        jLabelHeight.setText("ส่วนสูง");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 0);
        jPanel14.add(jLabelHeight, gridBagConstraints);

        jTextFieldHeight.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldHeight.setFont(defaultFont1);
        jTextFieldHeight.setMinimumSize(new java.awt.Dimension(40, 21));
        jTextFieldHeight.setPreferredSize(new java.awt.Dimension(40, 21));
        jTextFieldHeight.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldHeightFocusLost(evt);
            }
        });
        jTextFieldHeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldHeightKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel14.add(jTextFieldHeight, gridBagConstraints);

        jLabelHeightUnit.setFont(defaultFont1);
        jLabelHeightUnit.setText("ซม.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        jPanel14.add(jLabelHeightUnit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelBody2.add(jPanel14, gridBagConstraints);

        jPanel4.setMinimumSize(new java.awt.Dimension(120, 21));
        jPanel4.setPreferredSize(new java.awt.Dimension(120, 21));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(defaultFont1);
        jLabel4.setText("/");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabel4, gridBagConstraints);

        jTextFieldPressure1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPressure1.setFont(defaultFont1);
        jTextFieldPressure1.setMinimumSize(new java.awt.Dimension(38, 21));
        jTextFieldPressure1.setPreferredSize(new java.awt.Dimension(38, 21));
        jTextFieldPressure1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPressure1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jTextFieldPressure1, gridBagConstraints);

        jTextFieldPressure2.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPressure2.setFont(defaultFont1);
        jTextFieldPressure2.setMinimumSize(new java.awt.Dimension(38, 21));
        jTextFieldPressure2.setPreferredSize(new java.awt.Dimension(38, 21));
        jTextFieldPressure2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPressure2KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jTextFieldPressure2, gridBagConstraints);

        jLabelPresUnit.setFont(defaultFont1);
        jLabelPresUnit.setText("mmHg");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel4.add(jLabelPresUnit, gridBagConstraints);

        jLabelPressure.setFont(defaultFont1);
        jLabelPressure.setText("ความดัน");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 5);
        jPanel4.add(jLabelPressure, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jPanel4, gridBagConstraints);

        jLabelTemp.setFont(defaultFont1);
        jLabelTemp.setText("อุณหภูมิ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jLabelTemp, gridBagConstraints);

        jTextFieldTemp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldTemp.setFont(defaultFont1);
        jTextFieldTemp.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldTemp.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldTemp.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldTempKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 1, 0, 0);
        jPanelBody2.add(jTextFieldTemp, gridBagConstraints);

        jLabelPulse.setFont(defaultFont1);
        jLabelPulse.setText("ชีพจร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jLabelPulse, gridBagConstraints);

        jLabelRespiration.setFont(defaultFont1);
        jLabelRespiration.setText("การหายใจ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        jPanelBody2.add(jLabelRespiration, gridBagConstraints);

        jTextFieldPulse.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldPulse.setFont(defaultFont1);
        jTextFieldPulse.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldPulse.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldPulse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPulseKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 1, 0, 0);
        jPanelBody2.add(jTextFieldPulse, gridBagConstraints);

        jTextFieldRespiration.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldRespiration.setFont(defaultFont1);
        jTextFieldRespiration.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldRespiration.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldRespiration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRespirationActionPerformed(evt);
            }
        });
        jTextFieldRespiration.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldRespirationKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 1, 0, 0);
        jPanelBody2.add(jTextFieldRespiration, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jLabelBMI.setFont(defaultFont1);
        jLabelBMI.setText("BMI");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 1, 0);
        jPanel15.add(jLabelBMI, gridBagConstraints);

        doubleTextFieldBMI.setColumns(5);
        doubleTextFieldBMI.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        doubleTextFieldBMI.setFont(defaultFont1);
        doubleTextFieldBMI.setMinimumSize(new java.awt.Dimension(50, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel15.add(doubleTextFieldBMI, gridBagConstraints);

        jLabelNutri.setFont(defaultFont1);
        jLabelNutri.setText("Nutri");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel15.add(jLabelNutri, gridBagConstraints);

        jComboBoxNutrition.setFont(defaultFont1);
        jComboBoxNutrition.setMinimumSize(new java.awt.Dimension(85, 24));
        jComboBoxNutrition.setPreferredSize(new java.awt.Dimension(85, 24));
        jComboBoxNutrition.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jComboBoxNutritionKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 20;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel15.add(jComboBoxNutrition, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jPanel15, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(defaultFont1);
        jLabel3.setText("Note");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        jPanel17.add(jLabel3, gridBagConstraints);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jTextAreaVitalSignNote.setFont(defaultFont1);
        jTextAreaVitalSignNote.setLineWrap(true);
        jTextAreaVitalSignNote.setWrapStyleWord(true);
        jTextAreaVitalSignNote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextAreaVitalSignNoteKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTextAreaVitalSignNote);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jPanel17, gridBagConstraints);

        jPanel16.setLayout(new java.awt.GridBagLayout());

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("วันที่");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel16.add(jLabel5, gridBagConstraints);

        dateComboBoxCheck.setFont(defaultFont1);
        dateComboBoxCheck.setMinimumSize(new java.awt.Dimension(100, 23));
        dateComboBoxCheck.setPreferredSize(new java.awt.Dimension(100, 23));
        dateComboBoxCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateComboBoxCheckKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel16.add(dateComboBoxCheck, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText("น.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        jPanel16.add(jLabel6, gridBagConstraints);

        timeTextFieldCheck.setFont(defaultFont1);
        timeTextFieldCheck.setMinimumSize(new java.awt.Dimension(45, 23));
        timeTextFieldCheck.setPreferredSize(new java.awt.Dimension(45, 23));
        timeTextFieldCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeTextFieldCheckKeyReleased(evt);
            }
        });
        timeTextFieldCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeTextFieldCheckMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel16.add(timeTextFieldCheck, gridBagConstraints);

        jLabel9.setFont(defaultFont1);
        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/clock.gif"))); // NOI18N
        jLabel9.setToolTipText("เวลาที่ตรวจ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel16.add(jLabel9, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanelBody2.add(jPanel16, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelWaistline.setFont(defaultFont1);
        jLabelWaistline.setText("C ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabelWaistline, gridBagConstraints);

        jLabeljLabelWaistlineUnit.setFont(defaultFont1);
        jLabeljLabelWaistlineUnit.setText("นิ้ว");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jLabeljLabelWaistlineUnit, gridBagConstraints);

        jTextFieldWaistlineInch.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldWaistlineInch.setFont(defaultFont1);
        jTextFieldWaistlineInch.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldWaistlineInch.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldWaistlineInch.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldWaistlineInchFocusLost(evt);
            }
        });
        jTextFieldWaistlineInch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldWaistlineInchKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel1.add(jTextFieldWaistlineInch, gridBagConstraints);

        jLabel2.setText("รอบเอว");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jLabel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanelBody2.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabelPulseUnit.setFont(defaultFont1);
        jLabelPulseUnit.setText("ครั้ง/นาที");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 0);
        jPanel2.add(jLabelPulseUnit, gridBagConstraints);

        jLabel1.setText("หรือ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 2, 0, 2);
        jPanel2.add(jLabel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelBody2.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelResUnit.setFont(defaultFont1);
        jLabelResUnit.setText("ครั้ง/นาที");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 1, 0, 0);
        jPanel3.add(jLabelResUnit, gridBagConstraints);

        jLabeljLabelWaistlineUnit1.setFont(defaultFont1);
        jLabeljLabelWaistlineUnit1.setText("ซม.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jLabeljLabelWaistlineUnit1, gridBagConstraints);

        jTextFieldWaistlineCen.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldWaistlineCen.setFont(defaultFont1);
        jTextFieldWaistlineCen.setMinimumSize(new java.awt.Dimension(45, 21));
        jTextFieldWaistlineCen.setPreferredSize(new java.awt.Dimension(45, 21));
        jTextFieldWaistlineCen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldWaistlineCenActionPerformed(evt);
            }
        });
        jTextFieldWaistlineCen.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldWaistlineCenFocusLost(evt);
            }
        });
        jTextFieldWaistlineCen.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldWaistlineCenKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        jPanel3.add(jTextFieldWaistlineCen, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelBody2.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(jPanelBody2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void timeTextFieldCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeTextFieldCheckMouseClicked
        timeTextFieldCheck.selectAll();
    }//GEN-LAST:event_timeTextFieldCheckMouseClicked

    private void jTextAreaCurrentFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextAreaCurrentFocusLost

    }//GEN-LAST:event_jTextAreaCurrentFocusLost

    private void jTextAreaMainSymptomFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextAreaMainSymptomFocusLost
        
    }//GEN-LAST:event_jTextAreaMainSymptomFocusLost

    private void timeTextFieldCheckKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_timeTextFieldCheckKeyReleased
    {//GEN-HEADEREND:event_timeTextFieldCheckKeyReleased
        //sumo:29/08/2549
//        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
//        {
//            jButtonSaveVsActionPerformed(null);
//        }
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            dateComboBoxCheck.requestFocus();            
        }
    }//GEN-LAST:event_timeTextFieldCheckKeyReleased

    private void dateComboBoxCheckKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_dateComboBoxCheckKeyReleased
    {//GEN-HEADEREND:event_dateComboBoxCheckKeyReleased
        //amp:05/04/2549
        if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            timeTextFieldCheck.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            jTextAreaVitalSignNote.requestFocus();            
        }
    }//GEN-LAST:event_dateComboBoxCheckKeyReleased

    private void jTextAreaVitalSignNoteKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextAreaVitalSignNoteKeyReleased
    {//GEN-HEADEREND:event_jTextAreaVitalSignNoteKeyReleased
        //amp:05/04/2549
        if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            dateComboBoxCheck.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            if(jComboBoxNutrition.isVisible())
            {
                jComboBoxNutrition.requestFocus();
            }
            else
            {
                jTextFieldRespiration.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextAreaVitalSignNoteKeyReleased

    private void jTextFieldRespirationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRespirationActionPerformed
//         jButtonSaveVs.requestFocus();
    }//GEN-LAST:event_jTextFieldRespirationActionPerformed

    private void jComboBoxNutritionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jComboBoxNutritionKeyReleased
//        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
//            jButtonSaveVs.requestFocus();
    }//GEN-LAST:event_jComboBoxNutritionKeyReleased

    private void jTextFieldRespirationKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldRespirationKeyReleased
        Constant.filterTextKey(jTextFieldRespiration,5);
        
        if(evt.getKeyCode() == KeyEvent.VK_UP)
        {
            jTextFieldPulse.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_ENTER)
            jTextFieldWaistlineCen.requestFocus();
    }//GEN-LAST:event_jTextFieldRespirationKeyReleased

    private void jTextFieldPulseKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPulseKeyReleased
        Constant.filterTextKey(jTextFieldPulse,5);
         if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER)
            jTextFieldRespiration.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldTemp.requestFocus();
    }//GEN-LAST:event_jTextFieldPulseKeyReleased

    private void jTextFieldTempKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldTempKeyReleased
        Constant.filterTextKey(jTextFieldTemp,5);
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
            jTextFieldPulse.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldPressure1.requestFocus();
        if( evt.getKeyCode() == KeyEvent.VK_ENTER || evt.getKeyCode() == KeyEvent.VK_RIGHT)
            jTextFieldWaistlineInch.requestFocus();
    }//GEN-LAST:event_jTextFieldTempKeyReleased

    private void jTextFieldPressure2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPressure2KeyReleased
        Constant.filterTextKey(jTextFieldPressure2,3);
        String press1 = jTextFieldPressure2.getText();
        if(evt.getKeyCode() == KeyEvent.VK_DOWN 
        || evt.getKeyCode() == KeyEvent.VK_ENTER
        || press1.length()==3
                )
            jTextFieldTemp.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldHeight.requestFocus();
    }//GEN-LAST:event_jTextFieldPressure2KeyReleased

    private void jTextFieldPressure1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPressure1KeyReleased
        Constant.filterTextKey(jTextFieldPressure1,3);
        String press1 = jTextFieldPressure1.getText();
        if(evt.getKeyCode() == KeyEvent.VK_DOWN 
        || evt.getKeyCode() == KeyEvent.VK_ENTER
        || press1.length()==3
                )
            jTextFieldPressure2.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldHeight.requestFocus();        
    }//GEN-LAST:event_jTextFieldPressure1KeyReleased

    private void jTextFieldHeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldHeightKeyReleased
        Constant.filterTextKey(jTextFieldHeight,6);
        // เมื่อกรอกส่วนสูงครบ 3 ตัว ให้ย้าย cursor ไปยังช่องความดันให้อัตโนมัติ sumo 1/8/2549
        String height = jTextFieldHeight.getText();
        if(evt.getKeyCode() == KeyEvent.VK_DOWN 
        || evt.getKeyCode() == KeyEvent.VK_ENTER
//        || height.length()==3
                )
            jTextFieldPressure1.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldWeight.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            jTextFieldWeight.requestFocus();
    }//GEN-LAST:event_jTextFieldHeightKeyReleased

    private void jTableVitalSignKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableVitalSignKeyReleased
        if(evt.getKeyCode()==KeyEvent.VK_UP
        || evt.getKeyCode()==KeyEvent.VK_DOWN){
            int row = jTableVitalSign.getSelectedRow();
            if(row==-1) return;
            VitalSign v = (VitalSign)vVitalSign.get(row);        
            setVitalSign(v);
        }
    }//GEN-LAST:event_jTableVitalSignKeyReleased

    private void jTextFieldHeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldHeightFocusLost
        String bmi = Constant.calculateBMI(jTextFieldWeight.getText()
            ,jTextFieldHeight.getText());
        doubleTextFieldBMI.setText(bmi);
        /*amp:27/04/2549 เพราะระดับโภชนาการไม่ต้องใช้ความสูงในการคำนวณแล้ว จึงไม่มีผลกับระดับโภชนาการ
        *int index = Constant.calculateIndexComboBoxNutrition(bmi,vNutritionType);        
        *jComboBoxNutrition.setSelectedIndex(index);*/     
    }//GEN-LAST:event_jTextFieldHeightFocusLost

    private void jTextFieldWeightKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWeightKeyReleased
        Constant.filterTextKey(jTextFieldWeight,6);
        // เมื่อกรอกน้ำหนักครบ 2 ตัว ให้ย้าย cursor ไปยังช่องส่วนสูงให้อัตโนมัติ sumo 1/8/2549
        String weight = jTextFieldHeight.getText();
        if(evt.getKeyCode() == KeyEvent.VK_DOWN 
        || evt.getKeyCode() == KeyEvent.VK_ENTER
        || weight.length()==2)
            jTextFieldHeight.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT || evt.getKeyCode() == KeyEvent.VK_ENTER)
            jTextFieldWeight.transferFocus();
    }//GEN-LAST:event_jTextFieldWeightKeyReleased

    private void jTextFieldWeightFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldWeightFocusLost
        String bmi = Constant.calculateBMI(jTextFieldWeight.getText()
            ,jTextFieldHeight.getText());
        doubleTextFieldBMI.setText(bmi);
        // Somprasong comment 08122010 replaced by compareNutrion() method
//        //int index = Constant.calculateIndexComboBoxNutrition(bmi,vNutritionType);
//        //amp:27/04/2549
//        String month = com.hospital_os.utility.DateUtil.countMonth(theHO.thePatient.patient_birthday);
//        int months = Integer.parseInt(month);
//        if(months >= 0 && months < 73)
//        {
//            int index = Constant.calculateIndexComboBoxNutrition(theHO.thePatient.f_sex_id,month,
//                    jTextFieldWeight.getText());
//            if(index == 5)
//            {
//                theUS.setStatus("ไม่ได้ชั่งน้ำหนัก", theUS.WARNING);
//                return;
//            }
//            if(index == 6)
//            {
//                theUS.setStatus("ไม่ได้ระบุเพศ", theUS.WARNING);
//                return;
//            }
//            jComboBoxNutrition.setSelectedIndex(index);
//        }
    }//GEN-LAST:event_jTextFieldWeightFocusLost

    private void jTableVitalSignMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVitalSignMouseReleased
        select();
    }//GEN-LAST:event_jTableVitalSignMouseReleased

    private void jButtonDelVitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelVitalActionPerformed
        delete();
    }//GEN-LAST:event_jButtonDelVitalActionPerformed

    private void jButtonAddVitalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddVitalActionPerformed
        add();
    }//GEN-LAST:event_jButtonAddVitalActionPerformed

    private void jTextFieldWaistlineCenFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldWaistlineCenFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldWaistlineCenFocusLost

    private void jTextFieldWaistlineCenKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWaistlineCenKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER)
            doubleTextFieldBMI.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            jTextFieldRespiration.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldWaistlineInch.requestFocus();
        if(jTextFieldWaistlineCen.getText().length()>=2)
        {
            java.text.DecimalFormat dfm = new java.text.DecimalFormat("0.00");
            double waistline_cen = Double.parseDouble(jTextFieldWaistlineCen.getText()) / 2.54;
            jTextFieldWaistlineInch.setText(String.valueOf(dfm.format(waistline_cen)));
        }
        if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            if(jComboBoxNutrition.isVisible())//amp:05/04/2549
            {
                jComboBoxNutrition.requestFocus();
            }
            else
            {
                jTextAreaVitalSignNote.requestFocus();
            }
        }
    }//GEN-LAST:event_jTextFieldWaistlineCenKeyReleased

    private void btnAddFromSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFromSelectedActionPerformed
        addFromSelected();
    }//GEN-LAST:event_btnAddFromSelectedActionPerformed

    private void jTextFieldWaistlineInchFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldWaistlineInchFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldWaistlineInchFocusLost

    private void jTextFieldWaistlineInchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldWaistlineInchKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP)
            jTextFieldPressure1.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
            jTextFieldTemp.requestFocus();
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
            jTextFieldPulse.requestFocus();
        if(jTextFieldWaistlineInch.getText().length()==2)
        {
            java.text.DecimalFormat dfm = new java.text.DecimalFormat("0.00");
            double waistline_inch = Double.parseDouble(jTextFieldWaistlineInch.getText()) * 2.54;
            jTextFieldWaistlineCen.setText(String.valueOf(dfm.format(waistline_inch)));
        }
    }//GEN-LAST:event_jTextFieldWaistlineInchKeyReleased

    private void jTextFieldWaistlineCenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldWaistlineCenActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldWaistlineCenActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFromSelected;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.hospital_os.utility.DateComboBox dateComboBoxCheck;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.utility.DoubleTextField doubleTextFieldBMI;
    private javax.swing.JButton jButtonAddVital;
    private javax.swing.JButton jButtonDelVital;
    private javax.swing.JComboBox jComboBoxNutrition;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBMI;
    private javax.swing.JLabel jLabelHeight;
    private javax.swing.JLabel jLabelHeightUnit;
    private javax.swing.JLabel jLabelNutri;
    private javax.swing.JLabel jLabelPresUnit;
    private javax.swing.JLabel jLabelPressure;
    private javax.swing.JLabel jLabelPulse;
    private javax.swing.JLabel jLabelPulseUnit;
    private javax.swing.JLabel jLabelResUnit;
    private javax.swing.JLabel jLabelRespiration;
    private javax.swing.JLabel jLabelTemp;
    private javax.swing.JLabel jLabelWaistline;
    private javax.swing.JLabel jLabelWeight;
    private javax.swing.JLabel jLabelWeightUnit;
    private javax.swing.JLabel jLabeljLabelWaistlineUnit;
    private javax.swing.JLabel jLabeljLabelWaistlineUnit1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanelBody2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneVital;
    private com.hosv3.gui.component.HJTableSort jTableVitalSign;
    private javax.swing.JTextArea jTextAreaVitalSignNote;
    private com.hospital_os.utility.DoubleTextField jTextFieldHeight;
    private com.hospital_os.utility.DoubleTextField jTextFieldPressure1;
    private com.hospital_os.utility.DoubleTextField jTextFieldPressure2;
    private com.hospital_os.utility.DoubleTextField jTextFieldPulse;
    private com.hospital_os.utility.DoubleTextField jTextFieldRespiration;
    private com.hospital_os.utility.DoubleTextField jTextFieldTemp;
    private com.hospital_os.utility.DoubleTextField jTextFieldWaistlineCen;
    private com.hospital_os.utility.DoubleTextField jTextFieldWaistlineInch;
    private com.hospital_os.utility.DoubleTextField jTextFieldWeight;
    private com.hospital_os.utility.TimeTextField timeTextFieldCheck;
    // End of variables declaration//GEN-END:variables
    
    /**
     * @authen henbe
     * ใครเขียนไม่ยอมบอกอะไรว้า henbe ask
     * ใช้ในการบันทึกข้อมูลDxจากผู้ใช้งาน
     */
 
    public void setEnabled(boolean b)
    {   
        jButtonAddVital.setEnabled(b);
        jButtonDelVital.setEnabled(b);
////        jButtonSaveVs.setEnabled(b);
        jTextFieldWeight.setEnabled(b);
        doubleTextFieldBMI.setEnabled(b);
        jTextFieldHeight.setEnabled(b);
        jTextFieldPressure1.setEnabled(b);
        jTextFieldPressure2.setEnabled(b);
        jTextFieldTemp.setEnabled(b);
        jTextFieldPulse.setEnabled(b);
        jTextFieldRespiration.setEnabled(b); 
        jComboBoxNutrition.setEnabled(b); 
        jTextAreaVitalSignNote.setEnabled(b);
        dateComboBoxCheck.setEnabled(b);
        timeTextFieldCheck.setEnabled(b);
        jTextFieldWaistlineCen.setEnabled(b);
        jTextFieldWaistlineInch.setEnabled(b);
    }
    
    private void setVitalSignV(Vector vVitalSign1)
    {   
        vVitalSign = vVitalSign1;
        TaBleModel tm ;
        if(vVitalSign == null || vVitalSign.size()==0)
        {
            tm= new TaBleModel(col_jTableVitalSign,0);
            jTableVitalSign.setModel(tm);  
            setVitalSign(null);            
            return;
        }
        tm = new TaBleModel(col_jTableVitalSign,vVitalSign.size());
        String date;
        for(int i=0 ;i<vVitalSign.size(); i++) 
        {  
            VitalSign vs = (VitalSign)vVitalSign.get(i);
            /*String date = DateUtil.getDateToString(DateUtil.getDateFromText(vs.record_date),false);
            tm.setValueAt(date + " " + vs.record_time,i,0);*/
            //amp:05/04/2549
            if(!"".equals(vs.check_time))
                tm.setValueAt(DateUtil.getDateFromText(vs.check_date+","+vs.check_time),i,0);
            else
                tm.setValueAt(DateUtil.getDateFromText(vs.record_date+","+vs.record_time),i,0);
        }
        date=null;
        //เป็นการกำหนดให้ table จำรายการที่ถูกเลือกไว้ก่อนที่จะ set vector ใส่เข้าไปใหม่
        //และจะทำการเช็คว่าข้อมูลนั้นมีอยู่หรือเปล่าถ้าไม่มีแล้วก็จะเลือกรายการแรกแทน
        int row = jTableVitalSign.getSelectedRow();
        if(row==-1 || row>=vVitalSign.size()) row = 0;
        jTableVitalSign.setModel(tm); 
        jTableVitalSign.getColumnModel().getColumn(0).setCellRenderer(dateRender);
        jTableVitalSign.setRowSelectionInterval(row,row);
        VitalSign vss = (VitalSign)vVitalSign.get(row);
        setVitalSign(vss);
    }
  
    public VitalSign getVitalSign()
    {
        if(theVitalSign == null)
        {
            theVitalSign = theHO.initVitalSign();
        }
        theVitalSign.weight = jTextFieldWeight.getText();
        theVitalSign.bmi = doubleTextFieldBMI.getText();
        theVitalSign.waistline = jTextFieldWaistlineCen.getText();
        theVitalSign.waistline_inch = jTextFieldWaistlineInch.getText();
        theVitalSign.height = jTextFieldHeight.getText();
        if(!jTextFieldPressure1.getText().equals("")
            && !jTextFieldPressure2.getText().equals(""))
        {
            theVitalSign.pressure = jTextFieldPressure1.getText()
                .concat("/").concat(jTextFieldPressure2.getText()); 
        }
        else
        {
            theVitalSign.pressure = "";
            jTextFieldPressure1.setText("");
            jTextFieldPressure2.setText("");
        }
        theVitalSign.temp = jTextFieldTemp.getText();
        theVitalSign.puls = jTextFieldPulse.getText();
        theVitalSign.res = jTextFieldRespiration.getText();
        theVitalSign.nutrition = ComboboxModel.getCodeComboBox(jComboBoxNutrition);
        theVitalSign.note = jTextAreaVitalSignNote.getText();
        
        theVitalSign.check_date = dateComboBoxCheck.getText();
        theVitalSign.check_time = timeTextFieldCheck.getText();
        
        return theVitalSign;
    }
    
    public VitalSign initVitalSign()
    {
        Constant.println("public VitalSign initVitalSign()");
        VitalSign theVitalSign = theHO.initVitalSign();
        //ดึงประวัติการเข้ารับบริการของผู้ป่วยตาม Pid เรียงตามวันที่ล่าสุดก่อน
        if(theHO.thePatient==null)
            return theVitalSign;
        
        if(theHO.vVisit==null)
            return theVitalSign;
        
        if(theHO.vVisit.size()==1)
            return theVitalSign;
        
        for(int i=0;i<=theHO.vVisit.size()-1;i++)
        {
            Visit lastvisit = (Visit)theHO.vVisit.get(i);
            // visit ครั้งสุดท้าย ผู้ป่วยมีอายุไม่ถึง 25 ปี จะไม่ดึงค่าส่วนสูงมาให้
            int lastage = 0;
            try{
                lastage = Integer.parseInt(lastvisit.patient_age);
                if(lastage >= 25){
                    Constant.println("lastage = Integer.parseInt(lastvisit.patient_age);" + lastvisit.patient_age);
                    //ดึงประวัติ VitalSign ของผู้ป่วยตาม Visit
                    String height = theHC.theVitalControl.readVitalHeight(lastvisit.getObjectId());
                    theVitalSign.height = height;
                    return theVitalSign;
                }
            }
            catch(Exception e){
                Constant.println(e.getMessage());
            }
        }
        return theVitalSign;
    }

    public void setVitalSignFromSelected(VitalSign v){
        theVitalSign = initVitalSign();

        doubleTextFieldBMI.setText(v.bmi);
        jTextFieldWeight.setText(v.weight);
        jTextFieldHeight.setText(v.height);
        jTextFieldWaistlineCen.setText(v.waistline);
        jTextFieldWaistlineInch.setText(v.waistline_inch);
        jTextFieldPressure1.setText("");
        jTextFieldPressure2.setText("");
        if(theVitalSign.pressure != null )
        {
            String pressure[] = v.pressure.split("/");
            if(pressure.length > 1){
                jTextFieldPressure1.setText(pressure[0]);
                jTextFieldPressure2.setText(pressure[1]);
            }
        }
        jTextFieldTemp.setText(v.temp);
        jTextFieldPulse.setText(v.puls);
        jTextFieldRespiration.setText(v.res);

        //amp:28/04/2549 ตรวจสอบระดับโภชนาการ
        String nutrition = checkNutrition(v.nutrition);
        ComboboxModel.setCodeComboBox(jComboBoxNutrition,nutrition);
        jTextAreaVitalSignNote.setText(v.note);
        this.dateComboBoxCheck.setText(DateUtil.convertFieldDate(theVitalSign.check_date));
        this.timeTextFieldCheck.setText(theVitalSign.check_time);
    }
    /**
     *
     * 
     * ส่วนสูง default ของ visit ครั้งก่อนในกรณีอายุ 25 ปี ขึ้นไป --Sumo---25/2/2549---
     */
    public void setVitalSign(VitalSign v)
    { 
        theVitalSign = v;
        if(v==null)
            theVitalSign = initVitalSign();

        doubleTextFieldBMI.setText(theVitalSign.bmi);
        jTextFieldWeight.setText(theVitalSign.weight); 
        jTextFieldHeight.setText(theVitalSign.height);
        jTextFieldWaistlineCen.setText(theVitalSign.waistline);
        jTextFieldWaistlineInch.setText(theVitalSign.waistline_inch);
        jTextFieldPressure1.setText(""); 
        jTextFieldPressure2.setText(""); 
        if(theVitalSign.pressure != null )
        {
            String pressure[] = theVitalSign.pressure.split("/");        
            if(pressure.length > 1){
                jTextFieldPressure1.setText(pressure[0]); 
                jTextFieldPressure2.setText(pressure[1]); 
            }
        }
        jTextFieldTemp.setText(theVitalSign.temp);
        jTextFieldPulse.setText(theVitalSign.puls); 
        jTextFieldRespiration.setText(theVitalSign.res);
        
        //amp:28/04/2549 ตรวจสอบระดับโภชนาการ
        String nutrition = checkNutrition(theVitalSign.nutrition);
        ComboboxModel.setCodeComboBox(jComboBoxNutrition,nutrition);   
        jTextAreaVitalSignNote.setText(theVitalSign.note);
        this.dateComboBoxCheck.setText(DateUtil.convertFieldDate(theVitalSign.check_date));
        this.timeTextFieldCheck.setText(theVitalSign.check_time);
    }
    
    private String checkNutrition(String nutrition)
    {
        String vital_nutrition = "";
        Vector vNutritionMap = theHC.theLO.vNutritionTypeMap;
        if(vNutritionMap!=null)
        {
            NutritionTypeMap nutritionTypeMap = null;
            for(int i=0,size=vNutritionMap.size(); i<size; i++)
            {
                nutritionTypeMap = (NutritionTypeMap)vNutritionMap.get(i);
                if(nutritionTypeMap.nutrition_old.equals(nutrition))
                {
                    vital_nutrition = nutritionTypeMap.nutrition_new; 
                    break;
                }                
            }
            if("".equals(vital_nutrition))
            {
                vital_nutrition = nutrition;
            }
            nutritionTypeMap = null;
        }
        else
        {
            vital_nutrition = nutrition;
        }
        vNutritionMap = null;        
        return vital_nutrition;
    }
    
    public void setLanguage(String msg)
    {
        GuiLang.setLanguage(col_jTableVitalSign);
        GuiLang.setLanguage(jButtonDelVital);
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(jLabelBMI);
        GuiLang.setLanguage(jLabelHeight);
        GuiLang.setLanguage(jLabelHeightUnit);
        GuiLang.setLanguage(jLabelNutri);
        GuiLang.setLanguage(jLabelPressure);
        GuiLang.setLanguage(jLabelPresUnit);
        GuiLang.setLanguage(jLabelPulse);
        GuiLang.setLanguage(jLabelPulseUnit);
        GuiLang.setLanguage(jLabelRespiration);
        GuiLang.setLanguage(jLabelResUnit);
        GuiLang.setLanguage(jLabelTemp);
        GuiLang.setLanguage(jLabelWaistline);
        GuiLang.setLanguage(jLabeljLabelWaistlineUnit);
        GuiLang.setLanguage(jLabelWeight);
        GuiLang.setLanguage(jLabelWeightUnit);
        GuiLang.setTextBundle(jPanelBody2);
    }

    public boolean addFromSelected() {
        int row = jTableVitalSign.getSelectedRow();
        if (row == -1) {
            return false;
        }
        jTableVitalSign.clearSelection();
        VitalSign vs = (VitalSign) vVitalSign.get(row);
        setVitalSignFromSelected(vs);
        jTextFieldWeight.requestFocus();
        return true;
    }

    public boolean add() {
        jTableVitalSign.clearSelection();
        setVitalSign(null);
        jTextFieldWeight.requestFocus();
        return true;
    }

    public boolean delete() {
        int[] row = jTableVitalSign.getSelectedRows();
        theHC.theVitalControl.deleteVitalSign(vVitalSign,row);
        return true;
    }

    public boolean save() {
        return saveVitalSign();
    }

    public boolean saveVitalSign() {
        VitalSign vs = getVitalSign();
        int ret = theHC.theVitalControl.saveVitalSign(vs);
        if(ret==2) jTextFieldWeight.requestFocus();
        if(ret==3) jTextFieldWeight.requestFocus();
        if(ret==4) jTextFieldHeight.requestFocus();
        if(ret==5) jTextFieldPressure1.requestFocus();
        if(ret==6) jTextFieldPressure1.requestFocus();
        if(ret==7) jTextFieldPressure2.requestFocus();
        if(ret==8) jTextFieldPressure2.requestFocus();
        if(ret==9) jTextFieldPulse.requestFocus();
        if(ret==10) jTextFieldRespiration.requestFocus();
        if(ret==11) jTextFieldTemp.requestFocus();
        if(ret==12) timeTextFieldCheck.requestFocus();
        return true;
    }

    public int search(String str) {
        return 0;
    }

    public boolean select() {
        int row = jTableVitalSign.getSelectedRow();
        if(row==-1)
            return false;
        VitalSign vs = (VitalSign)vVitalSign.get(row);        
        setVitalSign(vs);
        return true;
    }

    public boolean setObjectV(Vector v) {
        setVitalSignV(v);
        return true;
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        compareNutrition();
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        compareNutrition();
    }

    @Override
    public void changedUpdate(DocumentEvent e) {
        compareNutrition();
    }
    private void compareNutrition(){
        if(theHO.thePatient == null)
            return;
        String month = com.hospital_os.utility.DateUtil.countMonth(theHO.thePatient.patient_birthday);
        int months = Integer.parseInt(month);
        if (months >= 0 && months < 73) {
            int index = Constant.calculateIndexComboBoxNutrition(theHO.thePatient.f_sex_id, month,
                    jTextFieldWeight.getText());
            if (index == 5) {
                theUS.setStatus("ไม่ได้ชั่งน้ำหนัก", theUS.WARNING);
                return;
            }
            if (index == 6) {
                theUS.setStatus("ไม่ได้ระบุเพศ", theUS.WARNING);
                return;
            }
            jComboBoxNutrition.setSelectedIndex(index);
        }else{
            
        }
    }
}
