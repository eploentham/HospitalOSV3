package com.hosv3.gui.panel.transaction;
/*
 * PanelBilling.java
 *
 * Created on 29 กันยายน 2546, 9:35 น.
 * 
 */
import javax.swing.*;
import javax.swing.table.*;
import java.util.*;
import java.awt.event.*;

import com.hosv3.object.*;
import com.hosv3.subject.*;
import com.hosv3.control.*;
import com.hosv3.usecase.transaction.*;
import com.hosv3.utility.connection.UpdateStatus;
import com.hosv3.utility.*;
import com.hosv3.control.lookup.*;
import com.hosv3.gui.dialog.*;

import com.hospital_os.object.*;
import com.hospital_os.utility.Gutil;
import com.hosv3.utility.Constant;
import com.hospital_os.utility.TaBleModel;
/**
 *
 *
 * @author  henbe
 * กฏการตรวจสอบ gui
 * ต้องโยนการคิดทั้งหมดให้ control และ utility
 * จัดการแค่ 
 * set set
 * get updateGO
 * event-call actionPerformed
 * refresh notify
 *
 * กฏของ table 
 * เมื่อค้นเจอจะต้องเลือกตัวแรกให้เสมอ
 * 
 */
public class PanelBilling extends javax.swing.JPanel
implements ManagePatientResp,ManageVisitResp,ManageVPaymentResp
,ManageBillingResp{

    HosDialog theHD;
    HosObject theHO;
    HosControl theHC;
    HosSubject theHS;
    UpdateStatus theUS;
    private GPatientSuit theGPS;
    
    Visit theVisit;
    Vector vBillingInvoiceAll;
    Vector vBillingInvoice;
    Vector vBillingPlan;
    Vector vBilling;
    Vector vVisitPayment;
    Payment thePaymentNow;

    BillingControl theBillingControl;
    LookupControl theLookupControl;
    PatientControl thePatientControl;
    PrintControl thePrintControl;
    VisitControl theVisitControl;
    
    boolean checkComboBox = false;
    int last_select=0;
    DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
    
    static String[] column_jTableListDetailBilling = {"สิทธิ","สิทธิชำระ","ผู้ป่วยชำระ"};
    static String[] column_jTableCalBilling = {"วันที่สรุปค่าใช้จ่าย","จ่ายแล้ว","คงค้าง"};
    static String[] column_jTableVisitPayment = {"เลขที่บัตร","สิทธิ","ส่วนลด"};
    static String[] column_jTableBillingInvoice = {"ใบแจ้งหนี้"};
    
    //ใช้ในการแสดง tooltiptext ของ สิทธิการรักษา
     com.hospital_os.utility.CellRendererVisitPayment theCellRendererVisitPayment = new com.hospital_os.utility.CellRendererVisitPayment(true);
    int selectInTablePayment = -1;
     /*
     * Creates new form PanelBilling */
    public PanelBilling() {
        initComponents();
        setLanguage(null);
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        theCellRendererVisitPayment.setFont(this.defaultFont1);
//        jPanel21.setVisible(false);
    }
    
    public void setControl(HosControl hc, UpdateStatus us) {
        theHC = hc;
        theBillingControl = theHC.theBillingControl;
        theLookupControl = theHC.theLookupControl;
        thePatientControl = theHC.thePatientControl;
        thePrintControl = theHC.thePrintControl;
        theVisitControl = theHC.theVisitControl;
        theGPS = theHC.theGPS;
        theHO = hc.theHO;
        theHS = hc.theHS;
        theUS = us;
        
        theHS.theVisitSubject.attachManageVisit(this);
        theHS.thePatientSubject.attachManagePatient(this);
        theHS.theBillingSubject.attachManageBilling(this);
        theHS.theVPaymentSubject.attach(this);
       
        hJComboBoxPlan.setControl(new PlanLookup(hc.theLookupControl),true);
        dateComboBoxFrom.setEditable(true);
        dateComboBoxTo.setEditable(true);
        thePaymentNow = new Payment();
        setVisit(null);
        initAuthen(theHO.theEmployee);
//        setLanguage(null);
    }
    public void initAuthen(Employee e)
    {
        GActionAuthV gaav = theHO.theGActionAuthV;
        this.jButtonPreviewBilling.setVisible(gaav.isReadPBillingPVBill());
        this.jButtonPrintingBilling.setVisible(gaav.isReadPBillingPrintBill());
        this.jButtonSaveVisitPayment.setVisible(gaav.isReadPBillingSaveNewPayment());
        this.jButtonAddPayment.setVisible(gaav.isReadPBillingSaveNewPayment());
        this.jButtonDeletePayment.setVisible(gaav.isReadPBillingSaveNewPayment());
        
    }
    public void setDialog(HosDialog hd){
        theHD = hd;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        jPanelLeft = new javax.swing.JPanel();
        jPanel61 = new javax.swing.JPanel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTableVisitPayment = new com.hosv3.gui.component.HJTableSort();
        jPanel2 = new javax.swing.JPanel();
        jButtonDown = new javax.swing.JButton();
        jButtonUp = new javax.swing.JButton();
        jCheckBoxShowCancel = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        dateComboBoxFrom = new com.hospital_os.utility.DateComboBox();
        dateComboBoxTo = new com.hospital_os.utility.DateComboBox();
        jPanel81 = new javax.swing.JPanel();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldCardID = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabelMoneyLimit = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jPanel71 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jTextFieldHosMain = new javax.swing.JTextField();
        jButtonHosMain = new javax.swing.JButton();
        jButtonHosSub = new javax.swing.JButton();
        jTextFieldHosSub = new javax.swing.JTextField();
        jLabel62 = new javax.swing.JLabel();
        integerTextFieldHosMainCode1 = new com.hospital_os.utility.IntegerTextField();
        integerTextFieldHosSubCode = new com.hospital_os.utility.IntegerTextField();
        jLabel41 = new javax.swing.JLabel();
        hJComboBoxPlan = new com.hosv3.gui.component.HosComboBox();
        jPanel1 = new javax.swing.JPanel();
        jButtonSaveVisitPayment = new javax.swing.JButton();
        jButtonVp2Pp = new javax.swing.JButton();
        jButtonAddPayment = new javax.swing.JButton();
        jButtonDeletePayment = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jPanel20 = new javax.swing.JPanel();
        jButtonDeleteBilling = new javax.swing.JButton();
        jCheckBoxShowCancelBilling = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jPanel19 = new javax.swing.JPanel();
        jButtonPreviewBilling = new javax.swing.JButton();
        jButtonPrintingBilling = new javax.swing.JButton();
        jButtonPaid = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jLabelPatientShare = new javax.swing.JLabel();
        jLabelBath1 = new javax.swing.JLabel();
        doubleTextFieldPatientShare = new com.hospital_os.utility.DoubleTextField();
        jLabelBILLINGREMAINSUM = new javax.swing.JLabel();
        doubleTextFieldRemainSum = new com.hospital_os.utility.DoubleTextField();
        jLabelBath2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableCalBilling = new com.hosv3.gui.component.HJTableSort();
        jPanel15 = new javax.swing.JPanel();
        jButtonDeleteBillInvoice = new javax.swing.JButton();
        jButtonCallAllBillingInvoice = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListDetailBilling = new com.hosv3.gui.component.HJTableSort();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableBillingInvoice = new com.hosv3.gui.component.HJTableSort();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTablePatientPayment = new com.hosv3.gui.component.HJTableSort();
        jPanel23 = new javax.swing.JPanel();
        jButtonPp2Vp = new javax.swing.JButton();
        jButtonDelPPayment = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        dateComboBoxCheck = new com.hospital_os.utility.DateComboBox();
        jLabel10 = new javax.swing.JLabel();
        timeTextFieldCheck = new com.hospital_os.utility.TimeTextField();
        jLabel11 = new javax.swing.JLabel();
        jCheckBoxDateDischarge = new javax.swing.JCheckBox();
        jButtonFDischarge = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setBorder(javax.swing.BorderFactory.createTitledBorder("สิทธิการรักษา"));
        jPanelLeft.setToolTipText("");
        jPanelLeft.setMinimumSize(new java.awt.Dimension(251, 195));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(251, 195));
        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanel61.setMinimumSize(new java.awt.Dimension(250, 100));
        jPanel61.setPreferredSize(new java.awt.Dimension(250, 100));
        jPanel61.setLayout(new java.awt.GridBagLayout());

        jTableVisitPayment.setFont(defaultFont1);
        jTableVisitPayment.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableVisitPaymentKeyReleased(evt);
            }
        });
        jTableVisitPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableVisitPaymentMouseReleased(evt);
            }
        });
        jScrollPane12.setViewportView(jTableVisitPayment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel61.add(jScrollPane12, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonDown.setFont(defaultFont1);
        jButtonDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/down.gif"))); // NOI18N
        jButtonDown.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDown.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDown.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDown.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDownActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel2.add(jButtonDown, gridBagConstraints);

        jButtonUp.setFont(defaultFont1);
        jButtonUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/up.gif"))); // NOI18N
        jButtonUp.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonUp.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonUp.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonUp.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonUp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel2.add(jButtonUp, gridBagConstraints);

        jCheckBoxShowCancel.setFont(defaultFont1);
        jCheckBoxShowCancel.setToolTipText("แสดงสิทธิในกระบวนการที่ถูกยกเลิก");
        jCheckBoxShowCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowCancelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jCheckBoxShowCancel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel61.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelLeft.add(jPanel61, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel8.setFont(defaultFont1);
        jLabel8.setText("วันที่หมดอายุ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel6.add(jLabel8, gridBagConstraints);

        dateComboBoxFrom.setFont(defaultFont1);
        dateComboBoxFrom.setMinimumSize(new java.awt.Dimension(100, 22));
        dateComboBoxFrom.setPreferredSize(new java.awt.Dimension(100, 22));
        dateComboBoxFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxFromActionPerformed(evt);
            }
        });
        dateComboBoxFrom.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dateComboBoxFromFocusLost(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(dateComboBoxFrom, gridBagConstraints);

        dateComboBoxTo.setFont(defaultFont1);
        dateComboBoxTo.setMinimumSize(new java.awt.Dimension(100, 22));
        dateComboBoxTo.setPreferredSize(new java.awt.Dimension(100, 22));
        dateComboBoxTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dateComboBoxToActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(dateComboBoxTo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel3.add(jPanel6, gridBagConstraints);

        jPanel81.setLayout(new java.awt.GridBagLayout());

        jLabel31.setFont(defaultFont1);
        jLabel31.setText("วงเงิน");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel81.add(jLabel31, gridBagConstraints);

        jTextFieldCardID.setFont(defaultFont1);
        jTextFieldCardID.setMinimumSize(new java.awt.Dimension(120, 22));
        jTextFieldCardID.setPreferredSize(new java.awt.Dimension(120, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel81.add(jTextFieldCardID, gridBagConstraints);

        jLabel9.setFont(defaultFont1);
        jLabel9.setText("บาท");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel81.add(jLabel9, gridBagConstraints);

        jLabelMoneyLimit.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel81.add(jLabelMoneyLimit, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 11, 0, 0);
        jPanel3.add(jPanel81, gridBagConstraints);

        jLabel21.setFont(defaultFont1);
        jLabel21.setText("เลขที่บัตร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jLabel21, gridBagConstraints);

        jLabel72.setFont(defaultFont1);
        jLabel72.setText("สิทธิการรักษา");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jLabel72, gridBagConstraints);

        jPanel71.setLayout(new java.awt.GridBagLayout());

        jLabel52.setFont(defaultFont1);
        jLabel52.setText("สถานพยาบาลหลัก");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel71.add(jLabel52, gridBagConstraints);

        jTextFieldHosMain.setEditable(false);
        jTextFieldHosMain.setFont(defaultFont1);
        jTextFieldHosMain.setBorder(null);
        jTextFieldHosMain.setMinimumSize(new java.awt.Dimension(100, 22));
        jTextFieldHosMain.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel71.add(jTextFieldHosMain, gridBagConstraints);

        jButtonHosMain.setFont(defaultFont1);
        jButtonHosMain.setText("...");
        jButtonHosMain.setBorder(null);
        jButtonHosMain.setMaximumSize(new java.awt.Dimension(22, 22));
        jButtonHosMain.setMinimumSize(new java.awt.Dimension(22, 22));
        jButtonHosMain.setPreferredSize(new java.awt.Dimension(22, 22));
        jButtonHosMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHosMainActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel71.add(jButtonHosMain, gridBagConstraints);

        jButtonHosSub.setFont(defaultFont1);
        jButtonHosSub.setText("...");
        jButtonHosSub.setBorder(null);
        jButtonHosSub.setMaximumSize(new java.awt.Dimension(22, 22));
        jButtonHosSub.setMinimumSize(new java.awt.Dimension(22, 22));
        jButtonHosSub.setPreferredSize(new java.awt.Dimension(22, 22));
        jButtonHosSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonHosSubActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel71.add(jButtonHosSub, gridBagConstraints);

        jTextFieldHosSub.setEditable(false);
        jTextFieldHosSub.setFont(defaultFont1);
        jTextFieldHosSub.setBorder(null);
        jTextFieldHosSub.setMinimumSize(new java.awt.Dimension(100, 22));
        jTextFieldHosSub.setPreferredSize(new java.awt.Dimension(100, 22));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel71.add(jTextFieldHosSub, gridBagConstraints);

        jLabel62.setFont(defaultFont1);
        jLabel62.setText("สถานพยาบาลรอง");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel71.add(jLabel62, gridBagConstraints);

        integerTextFieldHosMainCode1.setColumns(5);
        integerTextFieldHosMainCode1.setFont(defaultFont1);
        integerTextFieldHosMainCode1.setMaximumSize(new java.awt.Dimension(59, 22));
        integerTextFieldHosMainCode1.setMinimumSize(new java.awt.Dimension(59, 22));
        integerTextFieldHosMainCode1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                integerTextFieldHosMainCode1FocusLost(evt);
            }
        });
        integerTextFieldHosMainCode1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                integerTextFieldHosMainCode1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel71.add(integerTextFieldHosMainCode1, gridBagConstraints);

        integerTextFieldHosSubCode.setColumns(5);
        integerTextFieldHosSubCode.setFont(defaultFont1);
        integerTextFieldHosSubCode.setMaximumSize(new java.awt.Dimension(59, 22));
        integerTextFieldHosSubCode.setMinimumSize(new java.awt.Dimension(59, 22));
        integerTextFieldHosSubCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                integerTextFieldHosSubCodeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel71.add(integerTextFieldHosSubCode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jPanel71, gridBagConstraints);

        jLabel41.setFont(defaultFont1);
        jLabel41.setText("วันที่ออกบัตร");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jLabel41, gridBagConstraints);

        hJComboBoxPlan.setFont(defaultFont1);
        hJComboBoxPlan.setMinimumSize(new java.awt.Dimension(200, 22));
        hJComboBoxPlan.setPreferredSize(new java.awt.Dimension(200, 22));
        hJComboBoxPlan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hJComboBoxPlanActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 11, 0, 0);
        jPanel3.add(hJComboBoxPlan, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonSaveVisitPayment.setFont(defaultFont1);
        jButtonSaveVisitPayment.setText("บันทึก");
        jButtonSaveVisitPayment.setToolTipText("Save");
        jButtonSaveVisitPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveVisitPaymentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSaveVisitPayment, gridBagConstraints);

        jButtonVp2Pp.setFont(defaultFont1);
        jButtonVp2Pp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/down.gif"))); // NOI18N
        jButtonVp2Pp.setToolTipText("บันทึกเป็นสิทธิ์ประจำตัวผู้ป่วย");
        jButtonVp2Pp.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonVp2Pp.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonVp2Pp.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonVp2Pp.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonVp2Pp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVp2PpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel1.add(jButtonVp2Pp, gridBagConstraints);

        jButtonAddPayment.setFont(defaultFont1);
        jButtonAddPayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAddPayment.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonAddPayment.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonAddPayment.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonAddPayment.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonAddPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddPaymentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jButtonAddPayment, gridBagConstraints);

        jButtonDeletePayment.setFont(defaultFont1);
        jButtonDeletePayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDeletePayment.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDeletePayment.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDeletePayment.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDeletePayment.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDeletePayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeletePaymentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 0);
        jPanel1.add(jButtonDeletePayment, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(6, 5, 5, 5);
        jPanelLeft.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanelLeft, gridBagConstraints);

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("รายการคิดเงิน"));
        jPanel11.setMinimumSize(new java.awt.Dimension(200, 200));
        jPanel11.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel11.setLayout(new java.awt.GridBagLayout());

        jPanel17.setMinimumSize(new java.awt.Dimension(250, 180));
        jPanel17.setPreferredSize(new java.awt.Dimension(250, 180));
        jPanel17.setLayout(new java.awt.GridBagLayout());

        jPanel20.setLayout(new java.awt.GridBagLayout());

        jButtonDeleteBilling.setFont(defaultFont1);
        jButtonDeleteBilling.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDeleteBilling.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDeleteBilling.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBilling.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBilling.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBillingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel20.add(jButtonDeleteBilling, gridBagConstraints);

        jCheckBoxShowCancelBilling.setFont(defaultFont1);
        jCheckBoxShowCancelBilling.setText("ยกเลิก");
        jCheckBoxShowCancelBilling.setToolTipText("แสดงรายการที่ถูกยกเลิก");
        jCheckBoxShowCancelBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowCancelBillingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel20.add(jCheckBoxShowCancelBilling, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel17.add(jPanel20, gridBagConstraints);

        jLabel1.setFont(defaultFont1);
        jLabel1.setText("รายการชำระเงิน");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel17.add(jLabel1, gridBagConstraints);

        jPanel19.setLayout(new java.awt.GridBagLayout());

        jButtonPreviewBilling.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/preview24.gif"))); // NOI18N
        jButtonPreviewBilling.setToolTipText("PreviewBilling");
        jButtonPreviewBilling.setActionCommand("Printing");
        jButtonPreviewBilling.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonPreviewBilling.setMinimumSize(new java.awt.Dimension(52, 26));
        jButtonPreviewBilling.setPreferredSize(new java.awt.Dimension(52, 26));
        jButtonPreviewBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPreviewBillingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel19.add(jButtonPreviewBilling, gridBagConstraints);

        jButtonPrintingBilling.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/print24.gif"))); // NOI18N
        jButtonPrintingBilling.setToolTipText("PrintingBilling");
        jButtonPrintingBilling.setActionCommand("Printing");
        jButtonPrintingBilling.setMargin(new java.awt.Insets(2, 4, 2, 4));
        jButtonPrintingBilling.setMinimumSize(new java.awt.Dimension(52, 26));
        jButtonPrintingBilling.setPreferredSize(new java.awt.Dimension(52, 26));
        jButtonPrintingBilling.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrintingBillingActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel19.add(jButtonPrintingBilling, gridBagConstraints);

        jButtonPaid.setFont(defaultFont1);
        jButtonPaid.setText("รับชำระเงิน");
        jButtonPaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPaidActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        jPanel19.add(jButtonPaid, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel17.add(jPanel19, gridBagConstraints);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabelPatientShare.setFont(defaultFont1);
        jLabelPatientShare.setText("ยอดค้างชำระ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel18.add(jLabelPatientShare, gridBagConstraints);

        jLabelBath1.setFont(defaultFont1);
        jLabelBath1.setText("บาท");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel18.add(jLabelBath1, gridBagConstraints);

        doubleTextFieldPatientShare.setBorder(null);
        doubleTextFieldPatientShare.setColumns(9);
        doubleTextFieldPatientShare.setEditable(false);
        doubleTextFieldPatientShare.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        doubleTextFieldPatientShare.setText("0");
        doubleTextFieldPatientShare.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel18.add(doubleTextFieldPatientShare, gridBagConstraints);

        jLabelBILLINGREMAINSUM.setFont(defaultFont1);
        jLabelBILLINGREMAINSUM.setText("ยอดค้างชำระรวม");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(jLabelBILLINGREMAINSUM, gridBagConstraints);

        doubleTextFieldRemainSum.setBorder(null);
        doubleTextFieldRemainSum.setColumns(9);
        doubleTextFieldRemainSum.setEditable(false);
        doubleTextFieldRemainSum.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        doubleTextFieldRemainSum.setText("0");
        doubleTextFieldRemainSum.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(doubleTextFieldRemainSum, gridBagConstraints);

        jLabelBath2.setFont(defaultFont1);
        jLabelBath2.setText("บาท");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel18.add(jLabelBath2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 1);
        jPanel17.add(jPanel18, gridBagConstraints);

        jTableCalBilling.setFont(defaultFont1);
        jTableCalBilling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableCalBillingMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(jTableCalBilling);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel17.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel11.add(jPanel17, gridBagConstraints);

        jPanel15.setLayout(new java.awt.GridBagLayout());

        jButtonDeleteBillInvoice.setFont(defaultFont1);
        jButtonDeleteBillInvoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDeleteBillInvoice.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDeleteBillInvoice.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBillInvoice.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBillInvoice.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDeleteBillInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteBillInvoiceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jButtonDeleteBillInvoice, gridBagConstraints);

        jButtonCallAllBillingInvoice.setFont(defaultFont1);
        jButtonCallAllBillingInvoice.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/money.gif"))); // NOI18N
        jButtonCallAllBillingInvoice.setToolTipText("คำนวณค่าใช้จ่ายรวม");
        jButtonCallAllBillingInvoice.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonCallAllBillingInvoice.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonCallAllBillingInvoice.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonCallAllBillingInvoice.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonCallAllBillingInvoice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCallAllBillingInvoiceActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        jPanel15.add(jButtonCallAllBillingInvoice, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 5);
        jPanel11.add(jPanel15, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(22, 80));

        jTableListDetailBilling.setFont(defaultFont1);
        jScrollPane1.setViewportView(jTableListDetailBilling);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel11.add(jScrollPane1, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(260, 132));

        jTableBillingInvoice.setFont(defaultFont1);
        jTableBillingInvoice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableBillingInvoiceKeyReleased(evt);
            }
        });
        jTableBillingInvoice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableBillingInvoiceMouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableBillingInvoice);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel11.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel11, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("สิทธิประจำตัวผู้ป่วย"));
        jPanel4.setMinimumSize(new java.awt.Dimension(120, 100));
        jPanel4.setPreferredSize(new java.awt.Dimension(120, 100));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTablePatientPayment.setFont(defaultFont1);
        jTablePatientPayment.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTablePatientPaymentMouseReleased(evt);
            }
        });
        jScrollPane4.setViewportView(jTablePatientPayment);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel4.add(jScrollPane4, gridBagConstraints);

        jPanel23.setLayout(new java.awt.GridBagLayout());

        jButtonPp2Vp.setFont(defaultFont1);
        jButtonPp2Vp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/up.gif"))); // NOI18N
        jButtonPp2Vp.setToolTipText("บันทึกเป็นสิทธิในกระบวนการ");
        jButtonPp2Vp.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonPp2Vp.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonPp2Vp.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonPp2Vp.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonPp2Vp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPp2VpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        jPanel23.add(jButtonPp2Vp, gridBagConstraints);

        jButtonDelPPayment.setFont(defaultFont1);
        jButtonDelPPayment.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDelPPayment.setToolTipText("บันทึกเป็นสิทธิในกระบวนการ");
        jButtonDelPPayment.setMargin(new java.awt.Insets(1, 1, 1, 1));
        jButtonDelPPayment.setMaximumSize(new java.awt.Dimension(26, 26));
        jButtonDelPPayment.setMinimumSize(new java.awt.Dimension(26, 26));
        jButtonDelPPayment.setPreferredSize(new java.awt.Dimension(26, 26));
        jButtonDelPPayment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelPPaymentActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHWEST;
        jPanel23.add(jButtonDelPPayment, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 6, 5);
        jPanel4.add(jPanel23, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(jPanel4, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel21.setLayout(new java.awt.GridBagLayout());

        dateComboBoxCheck.setMinimumSize(new java.awt.Dimension(100, 25));
        dateComboBoxCheck.setPreferredSize(new java.awt.Dimension(100, 25));
        dateComboBoxCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                dateComboBoxCheckKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 4, 0, 3);
        jPanel21.add(dateComboBoxCheck, gridBagConstraints);

        jLabel10.setText("น.");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 1);
        jPanel21.add(jLabel10, gridBagConstraints);

        timeTextFieldCheck.setMaximumSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.setMinimumSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.setPreferredSize(new java.awt.Dimension(46, 21));
        timeTextFieldCheck.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timeTextFieldCheckMouseClicked(evt);
            }
        });
        timeTextFieldCheck.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                timeTextFieldCheckKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel21.add(timeTextFieldCheck, gridBagConstraints);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/clock.gif"))); // NOI18N
        jLabel11.setToolTipText("เวลาที่ตรวจ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 1, 0, 3);
        jPanel21.add(jLabel11, gridBagConstraints);

        jCheckBoxDateDischarge.setText("วันที่");
        jCheckBoxDateDischarge.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxDateDischarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxDateDischargeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel21.add(jCheckBoxDateDischarge, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jPanel21, gridBagConstraints);

        jButtonFDischarge.setFont(defaultFont1);
        jButtonFDischarge.setText("จำหน่ายทางการเงิน");
        jButtonFDischarge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFDischargeActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jButtonFDischarge, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        add(jPanel5, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxShowCancelBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowCancelBillingActionPerformed
        refreshBilling();        
    }//GEN-LAST:event_jCheckBoxShowCancelBillingActionPerformed

    long firstClickTime = 0;
    private void jTableCalBillingMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableCalBillingMouseReleased
        int row = jTableCalBilling.getSelectedRow();
        try{
            long clickTime = System.currentTimeMillis();
            long clickInterval = clickTime - firstClickTime;
            if(clickInterval < 400)
            {
                firstClickTime = 0;
                Billing billing = (Billing)vBilling.get(row);
                //amp:04/01/2550:ที่เพิ่ม check active เพราะมีการแสดงตัวที่ถูกยกเลิกเพิ่มขึ้นมา
                //ดังนั้นตัวที่ถูกยกเลิกแล้วจะต้องทำอะไรไม่ได้เลย
                if("1".equals(billing.active))
                {
                    theHD.showDialogHistoryBilling(theHO.thePatient,billing.getObjectId());
                }
            }
            else
                firstClickTime = clickTime;
        }
        catch(Exception ex){
            ex.printStackTrace(Constant.getPrintStream());
        }
    }//GEN-LAST:event_jTableCalBillingMouseReleased

    private void jButtonPrintingBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrintingBillingActionPerformed
        int row = jTableCalBilling.getSelectedRow();
        if(row==-1)
        {
            theUS.setStatus("กรุณาเลือกรายการคิดเงิน",UpdateStatus.WARNING);
            return;
        }
        Billing billing = (Billing)vBilling.get(row);
        thePrintControl.printBilling(billing,0,theUS);
    }//GEN-LAST:event_jButtonPrintingBillingActionPerformed

    private void jButtonPreviewBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPreviewBillingActionPerformed
        int row = jTableCalBilling.getSelectedRow();
        if(row==-1){
            theUS.setStatus("กรุณาเลือกรายการคิดเงิน",UpdateStatus.WARNING);
            return;
        }
        Billing billing = (Billing)vBilling.get(row);
        thePrintControl.printBilling(billing,PrintControl.MODE_PREVIEW,theUS);
    }//GEN-LAST:event_jButtonPreviewBillingActionPerformed

    private void jTablePatientPaymentMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTablePatientPaymentMouseReleased
        
    }//GEN-LAST:event_jTablePatientPaymentMouseReleased

    private void jCheckBoxShowCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowCancelActionPerformed
        this.theHO.showVisitPaymentCancel = this.jCheckBoxShowCancel.isSelected();
        checkBoxShowCancelVisitPayment(this.jCheckBoxShowCancel.isSelected());
    }//GEN-LAST:event_jCheckBoxShowCancelActionPerformed

    private void jButtonDelPPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelPPaymentActionPerformed
        int[] select = jTablePatientPayment.getSelectedRows();
        thePatientControl.deletePatientPayment(vPatientPayment,select);
    }//GEN-LAST:event_jButtonDelPPaymentActionPerformed

    private void jButtonPp2VpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPp2VpActionPerformed
        int select = jTablePatientPayment.getSelectedRow();
        if(select < 0){
            theUS.setStatus("กรุณาเลือกสิทธิ์ที่ต้องการบันทึกเป็นสิทธิในกระบวนการ",UpdateStatus.WARNING);
            return;
        }
        PatientPayment payment = (PatientPayment)vPatientPayment.get(select);
        payment.setObjectId(null);
        theVisitControl.saveVPayment(payment,vVisitPayment);
    }//GEN-LAST:event_jButtonPp2VpActionPerformed

    Vector vPatientPayment;
    private void jButtonVp2PpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVp2PpActionPerformed
        int select = jTableVisitPayment.getSelectedRow();
        if(select < 0){
            theUS.setStatus("กรุณาเลือกสิทธิ์ที่ต้องการบันทึกเป็นสิทธิ์ประจำตัวผู้ป่วย",UpdateStatus.WARNING);
            return;
        }
        if(vPatientPayment==null)
            vPatientPayment = new Vector();
        Payment payment = (Payment)vVisitPayment.get(select);                
        thePatientControl.savePatientPayment(vPatientPayment,payment);
    }//GEN-LAST:event_jButtonVp2PpActionPerformed

    private void integerTextFieldHosSubCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_integerTextFieldHosSubCodeKeyReleased
        if(integerTextFieldHosSubCode.getText().length()==5)
        {
            Office office = theLookupControl.readHospitalByCode(integerTextFieldHosSubCode.getText());
            if(office == null)
            {
                return;
            }
            if(office.getObjectId()!=null)
            {
                jTextFieldHosSub.setText(office.name);
                if(thePaymentNow!=null)
                {
                    thePaymentNow.hosp_sub = office.getObjectId();
                }
            }
        }
    }//GEN-LAST:event_integerTextFieldHosSubCodeKeyReleased
    private void integerTextFieldHosMainCode1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_integerTextFieldHosMainCode1KeyReleased
        if(integerTextFieldHosMainCode1.getText().length()==5)
        {
            Office office = theLookupControl.readHospitalByCode(integerTextFieldHosMainCode1.getText());
            if(office == null)
            {
                return;
            }
            if(office.getObjectId()!=null)
            {
                jTextFieldHosMain.setText(office.name);
                if(thePaymentNow!=null)
                {
                    thePaymentNow.hosp_main = office.getObjectId();
                }
            }
        }
    }//GEN-LAST:event_integerTextFieldHosMainCode1KeyReleased
    private void integerTextFieldHosMainCode1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_integerTextFieldHosMainCode1FocusLost
       if(integerTextFieldHosMainCode1.getText().length()==5)
        {
            integerTextFieldHosSubCode.requestFocus();        
        }
    }//GEN-LAST:event_integerTextFieldHosMainCode1FocusLost
    private void dateComboBoxToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxToActionPerformed

    }//GEN-LAST:event_dateComboBoxToActionPerformed

    void dateComboBoxFromActionPerformed( java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dateComboBoxFromActionPerformed

    }//GEN-LAST:event_dateComboBoxFromActionPerformed

    private void dateComboBoxFromFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dateComboBoxFromFocusLost
        checkComboBox = false;
    }//GEN-LAST:event_dateComboBoxFromFocusLost

    private void jButtonAddPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddPaymentActionPerformed
        this.jTableVisitPayment.clearSelection();
        setPayment(new Payment());
        if(this.vVisitPayment==null)
            vVisitPayment = new Vector();
    }//GEN-LAST:event_jButtonAddPaymentActionPerformed

    private void hJComboBoxPlanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hJComboBoxPlanActionPerformed
        try{
            Plan plan = (Plan)hJComboBoxPlan.getSelectedItem();
            if(plan!=null)
                jLabelMoneyLimit.setText(plan.money_limit);
        }
        catch(ClassCastException cce){
            Constant.println("เพิ่มคำนำหน้าชื่อไม่ต้องทำอะไรหรอก");
        }
    }//GEN-LAST:event_hJComboBoxPlanActionPerformed

    private void jTableBillingInvoiceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableBillingInvoiceKeyReleased
        if((evt.getKeyCode() == KeyEvent.VK_UP) || (evt.getKeyCode() == KeyEvent.VK_DOWN))
            jTableBillingInvoiceMouseReleased(null);
    }//GEN-LAST:event_jTableBillingInvoiceKeyReleased

    private void jTableBillingInvoiceMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBillingInvoiceMouseReleased
        int row = jTableBillingInvoice.getSelectedRow();
        if((row == -1)) return;
        BillingInvoice bi = (BillingInvoice)vBillingInvoice.get(row);
        setBillingPlanV(vBillingInvoiceAll, bi);
    }//GEN-LAST:event_jTableBillingInvoiceMouseReleased
    private void jButtonDeleteBillingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBillingActionPerformed
        int row = jTableCalBilling.getSelectedRow();
        theBillingControl.cancelBill(vBilling,row);
    }//GEN-LAST:event_jButtonDeleteBillingActionPerformed
    
    private void jButtonCallAllBillingInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCallAllBillingInvoiceActionPerformed
        int row = jTableBillingInvoice.getSelectedRow();
        theBillingControl.calculateAllBillingInvoice(vBillingInvoiceAll,"", row);
    }//GEN-LAST:event_jButtonCallAllBillingInvoiceActionPerformed
    
    private void jButtonPaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPaidActionPerformed
        int row = jTableCalBilling.getSelectedRow();
        if((row == -1)) 
        {
            theUS.setStatus(Constant.getTextBundle("ไม่ได้เลือกรายการที่ต้องการชำระ") 
            + Constant.getTextBundle("หรือรายการยังไม่ได้ถูกคำนวณค่าใช้จ่ายรวม"),UpdateStatus.WARNING);
            return;
        }
        Billing billing = (Billing)vBilling.get(row);
        //amp:04/01/2550:ที่ไม่ได้เข้าไป check ใน control เพราะของเดิมมัน check ที่ gui อยู่ก่อนแล้ว
        //ถ้าให้ไปตรวจสอบที่ control จำเป็นต้องแก้ไข uc listReceiptByVisitIdBillingID ให้ส่ง billing
        //แทนที่จะส่ง billing.getObjectId() เนื่องจากต้องใช้ active ด้วย และ uc นี้ ตรวจสอบดูแล้วมีที่อื่นใช้อยู่ด้วย
        //และอีกอย่างให้เวลาจำกัด คือประมาณ 30 นาที และเกี่ยวกับการเงินด้วย ดังนั้น ถ้าแก้ไขแล้วต้องตรวจสอบอย่างดี
        //จึงคงไว้อย่างนี้ไปก่อน
        if("0".equals(billing.active))
        {
            theUS.setStatus(Constant.getTextBundle("รายการรับชำระถูกยกเลิกแล้ว") + " "
            + Constant.getTextBundle("ไม่สามารถรับชำระได้"),UpdateStatus.WARNING);
            return;
        }
        if((Double.parseDouble(billing.remain) == 0.0))
        {
            theUS.setStatus("รายการได้รับชำระครบแล้ว",UpdateStatus.WARNING);
            return;
        }
        theHD.showDialogPatientPaid(billing,theVisit);
    }//GEN-LAST:event_jButtonPaidActionPerformed
    
private void jButtonDeleteBillInvoiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteBillInvoiceActionPerformed
        int row = jTableBillingInvoice.getSelectedRow();
        if((row == -1)) return;
        BillingInvoice bi = (BillingInvoice)vBillingInvoice.get(row);
        theBillingControl.cancelBillingInvoice(vBillingInvoiceAll,bi.billing_invoice_no); 
}//GEN-LAST:event_jButtonDeleteBillInvoiceActionPerformed
    
    void jTableVisitPaymentMouseReleased( java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVisitPaymentMouseReleased
        int row = jTableVisitPayment.getSelectedRow();
        selectInTablePayment = row;
        if((selectInTablePayment == -1)) return;
        thePaymentNow = (Payment)vVisitPayment.get(selectInTablePayment);
        setPayment(thePaymentNow);
    }//GEN-LAST:event_jTableVisitPaymentMouseReleased
    
    void jTableVisitPaymentKeyReleased( java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableVisitPaymentKeyReleased
        if((((evt.getKeyCode() == KeyEvent.VK_UP)) || ((evt.getKeyCode() == KeyEvent.VK_DOWN)))){
            thePaymentNow = (Payment)vVisitPayment.get(jTableVisitPayment.getSelectedRow());
            setPayment(thePaymentNow);            
        }
    }//GEN-LAST:event_jTableVisitPaymentKeyReleased
    private void jButtonFDischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFDischargeActionPerformed
        Vector vOrder = theHC.theOrderControl.listOrderItemByRange(true,"","",""
                ,false);
        if(vOrder!=null && !vOrder.isEmpty() && jTableCalBilling.getRowCount()==0)
        {
            theUS.setStatus("กรุณาคำนวณค่าใช้จ่ายก่อน",UpdateStatus.WARNING);
            return;
        }
        if(this.jCheckBoxDateDischarge.isSelected())
            theHO.theVisit.visit_financial_record_date_time = this.dateComboBoxCheck.getText()
                + "," + this.timeTextFieldCheck.getText() + ":00";
        theVisitControl.dischargeFinancial();  ///notify other
    }//GEN-LAST:event_jButtonFDischargeActionPerformed
    private void jButtonHosSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHosSubActionPerformed
        Office of=new Office();
        if ((thePaymentNow != null))
            of.setObjectId(thePaymentNow.hosp_sub);
        else
            of.setObjectId(theHO.theSite.getObjectId());
        
        if(theHD.showDialogOffice(of)){
            thePaymentNow.hosp_sub = of.getObjectId();
            jTextFieldHosSub.setText(of.getName());
            integerTextFieldHosSubCode.setText(of.getObjectId());
        }
    }//GEN-LAST:event_jButtonHosSubActionPerformed
    
    private void jButtonHosMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonHosMainActionPerformed
        Office of=new Office();
        if ((thePaymentNow != null))
            of.setObjectId(thePaymentNow.hosp_main);
        else
            of.setObjectId(theHO.theSite.getObjectId());
        
        if(theHD.showDialogOffice(of)) {
            thePaymentNow.hosp_main = of.getObjectId();
            jTextFieldHosMain.setText(of.getName());
            integerTextFieldHosMainCode1.setText(of.getObjectId());
        }
    }//GEN-LAST:event_jButtonHosMainActionPerformed
    
    private void jButtonSaveVisitPaymentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveVisitPaymentActionPerformed
        if(vVisitPayment==null)
            vVisitPayment = new Vector();
        updateGOPayment(thePaymentNow);
        theVisitControl.saveVPayment(thePaymentNow,vVisitPayment);
    }//GEN-LAST:event_jButtonSaveVisitPaymentActionPerformed
    /**
     *  นำรายการที่ถูกเลือกเลือนลงมา  โดยการลบ รายการที่ถูกเลือกออกจากนั้นนำไปเพิ่มที่ตำแหน่งถัดมา
     */
    void jButtonDownActionPerformed( java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDownActionPerformed
        int select = jTableVisitPayment.getSelectedRow();
        selectInTablePayment = select;
     //   checkBoxShowCancelVisitPayment(false);
        theVisitControl.downVPaymentPriority(vVisitPayment,selectInTablePayment);
    }//GEN-LAST:event_jButtonDownActionPerformed
    
    void jButtonDeletePaymentActionPerformed( java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeletePaymentActionPerformed
        int[] row = jTableVisitPayment.getSelectedRows();
        theVisitControl.deleteVPayment(vVisitPayment,row,vBillingInvoice);
    }//GEN-LAST:event_jButtonDeletePaymentActionPerformed
    
    
    void jButtonUpActionPerformed( java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpActionPerformed
        int select = jTableVisitPayment.getSelectedRow();
        selectInTablePayment = select;
        //checkBoxShowCancelVisitPayment(false);
        theVisitControl.upVPaymentPriority(vVisitPayment,jTableVisitPayment.getSelectedRow());
    }//GEN-LAST:event_jButtonUpActionPerformed

    private void dateComboBoxCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateComboBoxCheckKeyReleased

}//GEN-LAST:event_dateComboBoxCheckKeyReleased

    private void timeTextFieldCheckMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timeTextFieldCheckMouseClicked
        timeTextFieldCheck.selectAll();
}//GEN-LAST:event_timeTextFieldCheckMouseClicked

    private void timeTextFieldCheckKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_timeTextFieldCheckKeyReleased

}//GEN-LAST:event_timeTextFieldCheckKeyReleased

    private void jCheckBoxDateDischargeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxDateDischargeActionPerformed
        dateComboBoxCheck.setText(DateUtil.convertFieldDate(theHO.date_time));
        timeTextFieldCheck.setText(theHO.date_time.substring(11));
        dateComboBoxCheck.setEnabled(jCheckBoxDateDischarge.isSelected());
        timeTextFieldCheck.setEnabled(jCheckBoxDateDischarge.isSelected());
}//GEN-LAST:event_jCheckBoxDateDischargeActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.DateComboBox dateComboBoxCheck;
    private com.hospital_os.utility.DateComboBox dateComboBoxFrom;
    private com.hospital_os.utility.DateComboBox dateComboBoxTo;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.utility.DoubleTextField doubleTextFieldPatientShare;
    private com.hospital_os.utility.DoubleTextField doubleTextFieldRemainSum;
    private com.hosv3.gui.component.HosComboBox hJComboBoxPlan;
    private com.hospital_os.utility.IntegerTextField integerTextFieldHosMainCode1;
    private com.hospital_os.utility.IntegerTextField integerTextFieldHosSubCode;
    private javax.swing.JButton jButtonAddPayment;
    private javax.swing.JButton jButtonCallAllBillingInvoice;
    private javax.swing.JButton jButtonDelPPayment;
    private javax.swing.JButton jButtonDeleteBillInvoice;
    private javax.swing.JButton jButtonDeleteBilling;
    private javax.swing.JButton jButtonDeletePayment;
    private javax.swing.JButton jButtonDown;
    private javax.swing.JButton jButtonFDischarge;
    private javax.swing.JButton jButtonHosMain;
    private javax.swing.JButton jButtonHosSub;
    private javax.swing.JButton jButtonPaid;
    private javax.swing.JButton jButtonPp2Vp;
    private javax.swing.JButton jButtonPreviewBilling;
    private javax.swing.JButton jButtonPrintingBilling;
    private javax.swing.JButton jButtonSaveVisitPayment;
    private javax.swing.JButton jButtonUp;
    private javax.swing.JButton jButtonVp2Pp;
    private javax.swing.JCheckBox jCheckBoxDateDischarge;
    private javax.swing.JCheckBox jCheckBoxShowCancel;
    private javax.swing.JCheckBox jCheckBoxShowCancelBilling;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelBILLINGREMAINSUM;
    private javax.swing.JLabel jLabelBath1;
    private javax.swing.JLabel jLabelBath2;
    private javax.swing.JLabel jLabelMoneyLimit;
    private javax.swing.JLabel jLabelPatientShare;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel61;
    private javax.swing.JPanel jPanel71;
    private javax.swing.JPanel jPanel81;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private com.hosv3.gui.component.HJTableSort jTableBillingInvoice;
    private com.hosv3.gui.component.HJTableSort jTableCalBilling;
    private com.hosv3.gui.component.HJTableSort jTableListDetailBilling;
    private com.hosv3.gui.component.HJTableSort jTablePatientPayment;
    private com.hosv3.gui.component.HJTableSort jTableVisitPayment;
    private javax.swing.JTextField jTextFieldCardID;
    private javax.swing.JTextField jTextFieldHosMain;
    private javax.swing.JTextField jTextFieldHosSub;
    private com.hospital_os.utility.TimeTextField timeTextFieldCheck;
    // End of variables declaration//GEN-END:variables

    
    /**
     * ใช้ในการหาข้อมูลรายการสิทธิที่ถูกยกเลิกหลังจากการคลิกเลือก CheckBox
     * @author padungrat(tong)
     * @param select เป็น boolean ที่กำดหนดว่าได้เลือกให้แสดงรายการที่ถูกยกเลิก
     * @date 05/04/2549,09:44
     * @deprecated henbe ถือว่าเป็นการคำนวนควรอยู่ใน control มากกว่า
     */
    public void checkBoxShowCancelVisitPayment(boolean select)
    {
        //ตรวจสอบว่าผู้ป่วยอยู่ในสถานะ visit หรือไม่
        if(this.theHO.theVisit==null)
        { 
            theUS.setStatus("ยังไม่ได้เลือกผู้ป่วยที่อยู่ในกระบวนการ",UpdateStatus.WARNING);
            return;
        }  
        //ตรวจสอบการเลือกรายการ
        if(select)
        {
            Vector vc =  this.theVisitControl.listVisitPaymentCancel(this.theHO.theVisit.getObjectId());
            if(vc != null)
            {
                for(int i=0,size=vc.size(); i<size; i++)
                {
                    Payment payment = (Payment)vc.get(i);
                    vVisitPayment.add(payment);
                }
            }
        }
        else
        {   
            for(int i =  vVisitPayment.size()-1 ; i >=0 ; i--)
            {
                Payment payment = (Payment)vVisitPayment.get(i);
                if(!Gutil.isSelected(payment.visit_payment_active))
                    vVisitPayment.remove(i);
            }
        }
        setPaymentV(vVisitPayment);
    }
    
    
    
    /**
     *  ให้ค่ากับ listBilling โดยการรับค่ามาเป็นแบบ Vector ของ String ที่เป็นวันที่
     */
    
    private void setBillingPlanV(Vector vc,BillingInvoice bi_in) 
    {
        
        if((vBillingPlan == null))
            vBillingPlan = new Vector();
        if((vBillingPlan.size() > 0))
            vBillingPlan.removeAllElements();
        TaBleModel tm;
        if((((vc == null)) || ((vc.size() == 0)))) {
            tm = new TaBleModel(column_jTableListDetailBilling,0);
            jTableListDetailBilling.setModel(tm);
            return;
        }
        ////////////////////////////////////////////////////////////////
        for(int i=0,size=vc.size();i<size;i++){
            BillingInvoice bij = (BillingInvoice)vc.get(i);
            if(bi_in.billing_invoice_no.equals(bij.billing_invoice_no)){
                vBillingPlan.add(bij);
            }
        }
        ////////////////////////////////////////////////////////////////
        tm = new TaBleModel(column_jTableListDetailBilling,vBillingPlan.size());
        if(theHO.vVisitPayment==null && theVisit!=null){
            theUS.setStatus("ไม่พบสิทธิการรักษาในการรับบริการนี้ในฐานข้อมูล โปรแกรมทำงานผิดพลาด",UpdateStatus.WARNING);
            return;
        }
        for(int i = 0 ; i < vBillingPlan.size(); i++) {
            String plan_desc = Constant.getTextBundle("ไม่ระบุ");
            BillingInvoice bi = (BillingInvoice)vBillingPlan.get(i);
            Payment payment=null;
            //Constant.println("PanelBilling theHO.vVisitPayment==null"+(theHO.vVisitPayment==null));
            for(int j=0;j<theHO.vVisitPayment.size();j++){
                payment = (Payment)theHO.vVisitPayment.get(j);
                if((payment.getObjectId()).equals(bi.payment_id)){
                    break;
                }
            }
            if((payment != null)){
                Plan plan = theLookupControl.readPlanById(payment.plan_kid);
                if((plan != null)) plan_desc = plan.description;
            }
            tm.setValueAt(plan_desc,i,0);
            tm.setValueAt(Constant.dicimal(bi.payer_share_ceil),i,1);
            tm.setValueAt(Constant.dicimal(bi.patient_share_ceil),i,2);
        }
        jTableListDetailBilling.setModel(tm);
        ((jTableListDetailBilling.getColumnModel()).getColumn(0)).setPreferredWidth(200); // ล็อก
        ((jTableListDetailBilling.getColumnModel()).getColumn(1)).setPreferredWidth(30); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        ((jTableListDetailBilling.getColumnModel()).getColumn(2)).setPreferredWidth(30); // จำนวน
        ((jTableListDetailBilling.getColumnModel()).getColumn(1)).setCellRenderer(rendererRight);
        ((jTableListDetailBilling.getColumnModel()).getColumn(2)).setCellRenderer(rendererRight);
    }
    
    /**
     * @author henbe
     * เป็นการแสดงข้อมูล Payment ไปยังหน้าจอแสดงรายละเอียด
     */
    private void updateGOPayment(Payment pm) 
    {
        this.thePaymentNow = pm;
        if(thePaymentNow==null)  thePaymentNow = new Payment();
        Plan plan = (Plan)hJComboBoxPlan.getSelectedItem();
        
        thePaymentNow.contract_kid = plan.contract_id;
        thePaymentNow.money_limit = plan.money_limit;
        thePaymentNow.visit_id = theVisit.getObjectId();
        thePaymentNow.plan_kid = plan.getObjectId();
        thePaymentNow.card_ins_date = dateComboBoxFrom.getText();// dateTextFieldFrom.getText();
        thePaymentNow.card_exp_date = dateComboBoxTo.getText();//dateTextFieldTo.getText();
        thePaymentNow.card_id = Gutil.CheckReservedWords(jTextFieldCardID.getText());
    }
    
    /**
     * @author henbe
     * เป็นการแสดงข้อมูล Vector of Payment ไปยังหน้าจอแสดงรายการสิทธิการรักษา
     * ควรแสดงรายการแรกโดยอัตโนมัติหากยังไม่เคยเลือกรายการใดๆ 
     * หากมีรายการเดิมที่เคยเลือกให้เลือกรายการเดิมแทน
     * ตัวแปรที่เก็บคือ last_select
     */
    private void setPaymentV(Vector theVP) 
    {
        vVisitPayment = theVP;
        if(vVisitPayment == null || vVisitPayment.size() == 0){
            TaBleModel tm = new TaBleModel(column_jTableVisitPayment,0);
            jTableVisitPayment.setModel(tm);
            setPayment(null);
            return;
        }

        TaBleModel tm = new TaBleModel(column_jTableVisitPayment,vVisitPayment.size());
        for(int i=0,size=vVisitPayment.size();i<size;i++) 
        {
            Payment pd = (Payment)vVisitPayment.get(i);            
            //String plan = theLookupControl.readPlanString(pd.plan_kid);
            String contract = theLookupControl.readContractString(pd.contract_kid);
            
            //amp:04/01/2550:เพื่อให้มีการแสดงด้วยว่าสิทธิไหนถูกยกเลิกไปบ้าง
            Plan plan = theLookupControl.readPlanById(pd.plan_kid);            

            tm.setValueAt(pd.card_id,i,0);
            //amp:04/01/2550:เพื่อให้มีการแสดงด้วยว่าสิทธิไหนถูกยกเลิกไปบ้าง
            tm.setValueAt(theVisitControl.getTextVisitPayment(pd,plan),i,1);
            //henbe:08/01/2550 เพื่อให้แสดงได้เหมือนเดิมก่อนที่แอ้มจะแก้เพราะว่ามันจำเป็นต้องยัด plan เข้าไปแต่ แอ้มไปเปลี่ยนมันแล้วก็เลย
            //แสดงผลไม่ถูกต้อง
            //tm.setValueAt(pd,i,1);
            tm.setValueAt(contract,i,2);
        }
        jTableVisitPayment.setModel(tm);
        jTableVisitPayment.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTableVisitPayment.getColumnModel().getColumn(1).setPreferredWidth(300);
        jTableVisitPayment.getColumnModel().getColumn(1).setCellRenderer(theCellRendererVisitPayment);
        jTableVisitPayment.getColumnModel().getColumn(2).setPreferredWidth(300);

        if(last_select>=0 && last_select < vVisitPayment.size())
            setPayment((Payment)vVisitPayment.get(last_select));
        else
            setPayment(null);
    }
    
    private void setPayment(Payment p_now) 
    {    
        thePaymentNow = p_now;
        jTextFieldCardID.setText("");
        jLabelMoneyLimit.setText("");
        jTextFieldHosMain.setText("");
        jTextFieldHosSub.setText("");
        dateComboBoxFrom.setText("");
        dateComboBoxTo.setText("");
        integerTextFieldHosMainCode1.setText("");
        integerTextFieldHosSubCode.setText("");
        
        if((thePaymentNow == null)) return;
        Office o = (Office)theLookupControl.readHospitalByCode(thePaymentNow.hosp_main);
        String hmain = "";
        String idmain ="";
        if((o != null))
        {
            hmain = o.getName();
            idmain = o.getObjectId();
        }
        o = (Office)theLookupControl.readHospitalByCode(thePaymentNow.hosp_sub);
        String hsub = "";
        String idsub = "";
        if((o != null))
        {
            hsub = o.getName();
            idsub = o.getObjectId();
        }
        dateComboBoxFrom.setText(DateUtil.convertFieldDate(thePaymentNow.card_ins_date));
        dateComboBoxTo.setText(DateUtil.convertFieldDate(thePaymentNow.card_exp_date));
        jTextFieldCardID.setText(thePaymentNow.card_id);
        /*ตรวจสอบว่ามีlimit money หรือไม่*/
        if(thePaymentNow.money_limit == null 
        || thePaymentNow.money_limit.equals("null")
        || thePaymentNow.money_limit.equals("")){
            jLabelMoneyLimit.setText("-");    
        }
        else{
            jLabelMoneyLimit.setText(thePaymentNow.money_limit);    
        }
        jTextFieldHosMain.setText(hmain);
        jTextFieldHosSub.setText(hsub);
        integerTextFieldHosMainCode1.setText(idmain);
        integerTextFieldHosSubCode.setText(idsub);
        if(thePaymentNow.plan_kid == null || thePaymentNow.plan_kid.equals(""))
                hJComboBoxPlan.setText(Plan.SELF_PAY);
        else    hJComboBoxPlan.setText(thePaymentNow.plan_kid);
        hJComboBoxPlan.setEnabled(thePaymentNow.getObjectId()==null);
    }
    
    public void refreshBilling(){
        Vector vBilling = theBillingControl.listBillingByVisitId(theHO.theVisit.getObjectId()
            ,jCheckBoxShowCancelBilling.isSelected());
        setBillingV(vBilling);
    }
    private void setBillingV(Vector bill) 
    {
        vBilling = bill;
        double visitRemain = 0;
        double visitPaid = 0;
        if((((vBilling == null)) || ((vBilling.size() == 0)))){
            doubleTextFieldPatientShare.setText("0");
            TaBleModel tm = new TaBleModel(column_jTableCalBilling,0);
            jTableCalBilling.setModel(tm);
            return;
        }
        //set textfield gui//////////////////////////////////////////
        for(int i = 0 ; i < vBilling.size() ; i++) {
                Billing billing = (Billing)vBilling.get(i);
                visitPaid = visitPaid + Double.parseDouble(billing.paid);
                visitRemain = visitRemain + Double.parseDouble(billing.remain);
        }
        doubleTextFieldPatientShare.setText(String.valueOf(visitRemain));//amp
        //set table gui//////////////////////////////////////////
        TaBleModel tm = new TaBleModel(column_jTableCalBilling,vBilling.size());
        for(int i = 0 ; i < vBilling.size(); i++) {
                Billing billing = (Billing)vBilling.get(i);
                String date = DateUtil.getDateToString(
                    DateUtil.getDateFromText(billing.receipt_date),true);
                if(billing.active.equals("0"))
                    date += " " + theLookupControl.readEmployeeNameById(billing.staff_cancle_financial);
                tm.setValueAt(date,i,0);
                tm.setValueAt(Constant.dicimal(billing.paid),i,1);
                tm.setValueAt(Constant.dicimal(billing.remain),i,2);
        }
        jTableCalBilling.setModel(tm);
        ((jTableCalBilling.getColumnModel()).getColumn(0)).setPreferredWidth(300);
        ((jTableCalBilling.getColumnModel()).getColumn(1)).setPreferredWidth(80);
        ((jTableCalBilling.getColumnModel()).getColumn(2)).setPreferredWidth(80);
        ((jTableCalBilling.getColumnModel()).getColumn(1)).setCellRenderer(rendererRight); 
        ((jTableCalBilling.getColumnModel()).getColumn(2)).setCellRenderer(rendererRight);
        (jTableCalBilling.getSelectionModel()).setSelectionInterval(0,0);
    }
    
    /**
     * ใช้ในการกำหนดให้ Enable ส่วนของ Payment ให้ทำงานหรือไม่ ตาม boolean
     * @param b เป็น boolean ที่กำหนดให้ทำงานได้หรือไม่ถ้าเป็น false ไม่สามารถทำงานได้ ถ้าเป็น true ทำงานได้
     * @author padungrat(tong)
     * @date 05/04/2549,15:07
     */
    public void setEnabledPayment(boolean b)
    {
        jButtonUp.setEnabled(b);
        jButtonDown.setEnabled(b);
        jButtonHosSub.setEnabled(b);
        jButtonHosMain.setEnabled(b);
//        hJComboBoxPlan.setEnabled(b);
        jTextFieldCardID.setEnabled(b);
        dateComboBoxFrom.setEnabled(b);
        dateComboBoxTo.setEnabled(b);
        jButtonDeletePayment.setEnabled(b);
        jButtonSaveVisitPayment.setEnabled(b);
    }
    
    /**
     * ใช้เมื่อ มีการคิดเงินแล้วทำให้ไม่สามารถที่จะลบสิทธิหรือเปลี่ยนสิทธิได้
     * หากมีฟังชันใดที่ทำงานซ้ำซ้อนกันให้ใช้วิธีการเรียกต่อกันแทนห้ามทำงานซ้ำซ้อนกัน
     * เช่นเรามี ฟังชันของ setEnabledPayment ก็ให้ฟังชันนี้เรียกใช้งานแทนที่จะนำโค้ดข้างในมาแปะ
     * @param b เป็น boolean ที่กำหนดให้ทำงานได้หรือไม่ถ้าเป็น false ไม่สามารถทำงานได้ ถ้าเป็น true ทำงานได้
     * @author henbe
     * @date 05/04/2549,15:07
     */
    public void setEnabled(boolean b)
    {
        setEnabledPayment(b);
        jButtonPaid.setEnabled(b);
        jButtonPp2Vp.setEnabled(b);
        jButtonVp2Pp.setEnabled(b);
        jButtonDelPPayment.setEnabled(b);
        jButtonFDischarge.setEnabled(b);
        jButtonDeleteBilling.setEnabled(b);
        jButtonAddPayment.setEnabled(b);
        jButtonDeleteBillInvoice.setEnabled(b);
        jButtonCallAllBillingInvoice.setEnabled(b);
        jButtonDown.setEnabled(b);
        jButtonFDischarge.setEnabled(b);
        jButtonHosMain.setEnabled(b);
        jButtonHosSub.setEnabled(b);
        jButtonUp.setEnabled(b);
        jTextFieldHosMain.setEnabled(b);
        jTextFieldHosSub.setEnabled(b);
        integerTextFieldHosMainCode1.setEnabled(b);
        integerTextFieldHosSubCode.setEnabled(b);
        jButtonPreviewBilling.setEnabled(b);
        jButtonPrintingBilling.setEnabled(b);
//        jCheckBoxDateDischarge.setSelected(false);
//        jCheckBoxDateDischargeActionPerformed(null);
//        jCheckBoxShowCancel.setEnabled(b);
//        jCheckBoxShowCancel.setSelected(false);
        jCheckBoxDateDischarge.setEnabled(b);
        dateComboBoxCheck.setEnabled(jCheckBoxDateDischarge.isSelected() && b);
        timeTextFieldCheck.setEnabled(jCheckBoxDateDischarge.isSelected() && b);
    }
    
    /**
     * @author henbe  
     * เป็นการแสดงข้อมูล Vector of BillingInvoice ไปยังหน้าจอ
     * ตัวแปรที่เก็บคือ last_select
     * 1.แสดงข้อมูลรายการคิดเงินควรใช้ Object Vector ตัวเดียวเท่านั้น
     * 2.ควรแสดงรายการแรกโดยอัตโนมัติหากยังไม่เคยเลือกรายการใดๆ 
     * 3.หากมีรายการเดิมที่เคยเลือกให้เลือกรายการเดิมแทน
     * 1 vBillingInvoiceAll,vBillingInvoice
     * เหตุที่ต้องมีการค้ดลอกข้อมูลใน Vector เพราะว่าจะเอาเลขใบแจ้งหนี้ที่ไม่ซ้ำกัน
     */
    private void setBillingInvoiceV(Vector billInv) 
    {
        vBillingInvoiceAll = billInv;
        vBillingInvoice = new Vector();
        /////////////////////////////////////////////////////////
        TaBleModel tm;
        String old_no = "0";
        if(billInv == null || billInv.size() == 0) {
            setBillingPlanV(null,null);
            tm = new TaBleModel(column_jTableBillingInvoice,0);
            jTableBillingInvoice.setModel(tm);
            return;
        }
        for(int i=0,size=billInv.size();i<size;i++){   
            BillingInvoice bi = (BillingInvoice)billInv.get(i);
            if((!bi.billing_invoice_no.equals(old_no)))
                vBillingInvoice.add(bi);
            old_no = bi.billing_invoice_no;
        }
        /////////////////////////////////////////////////////////
        tm = new TaBleModel(column_jTableBillingInvoice,vBillingInvoice.size());
        //double pt_share = 0.00;
        //double payerprice = 0.00;
 
        for(int i=0,size=vBillingInvoice.size();i<size;i++)
        {   
            BillingInvoice bi = (BillingInvoice)vBillingInvoice.get(i);
            String datasd =  Constant.getTextBundle("ครั้งที่") + 
                    " " + bi.billing_invoice_no + " " + 
                    Constant.getTextBundle("วันที่") + 
                    " " + DateUtil.getDateToStringShort(DateUtil.getDateFromText(bi.invoice_date),true);
            if(Gutil.isSelected(bi.billing_complete)) 
                datasd = datasd + " - " + Constant.getTextBundle("คำนวณเงินแล้ว");
            tm.setValueAt(datasd, i, 0);
        }
        jTableBillingInvoice.setModel(tm);
        //jTableBillingInvoice.setPreferredSize(new java.awt.Dimension(20,(26*vBillingInvoice.size())));
        jTableBillingInvoice.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jTableBillingInvoice.setRowSelectionInterval(0,0);
        setBillingPlanV(vBillingInvoiceAll,(BillingInvoice)vBillingInvoice.get(0));
    }
    
    /**
     * เมื่อมีการเพิ่มหรือลด component ก็ต้องมาเพิ่มในนี้ด้วยเป็นข้อบังคับห้ามลืมเป็นอันขาด
     * เพราะเอาไว้ใช้ในการเปลี่ยนภาษาให้เอาจาก xml มาแสดง
     * @author henbe
     */
   private void setLanguage(String msg) 
   {
        GuiLang.setLanguage(jLabel10);
        GuiLang.setLanguage(jCheckBoxShowCancel);
        GuiLang.setLanguage(jCheckBoxShowCancelBilling);
        GuiLang.setLanguage(jLabel1);
        GuiLang.setLanguage(jLabel41);
        GuiLang.setLanguage(jLabel52);
        GuiLang.setLanguage(jButtonHosMain);
        GuiLang.setLanguage(jButtonHosSub);
        GuiLang.setLanguage(jLabel62);
        GuiLang.setLanguage(jButtonDeletePayment);
        GuiLang.setLanguage(jButtonDown);
        GuiLang.setLanguage(jButtonUp);
        GuiLang.setLanguage(jLabel31);
        GuiLang.setLanguage(jLabel9);
        GuiLang.setLanguage(jLabel72);
        GuiLang.setLanguage(jButtonSaveVisitPayment);
        GuiLang.setLanguage(jLabel21);
        GuiLang.setLanguage(jLabel8);
        GuiLang.setLanguage(jButtonFDischarge);
        GuiLang.setLanguage(jLabelBath1);
        GuiLang.setLanguage(jLabelBath2);
        GuiLang.setLanguage(jLabelBILLINGREMAINSUM);
        GuiLang.setLanguage(jLabelPatientShare);
        GuiLang.setLanguage(jButtonPaid);
        GuiLang.setLanguage(jButtonCallAllBillingInvoice);
        
        GuiLang.setTextBundle(jPanelLeft);
        GuiLang.setTextBundle(jPanel4);
        GuiLang.setTextBundle(jPanel17); 
        GuiLang.setTextBundle(jPanel11);
        GuiLang.setTextBundle(jPanel20);  
        GuiLang.setLanguage(this.column_jTableBillingInvoice);
        GuiLang.setLanguage(this.column_jTableCalBilling);
        GuiLang.setLanguage(this.column_jTableListDetailBilling);
        GuiLang.setLanguage(this.column_jTableVisitPayment);
        GuiLang.setLanguage(this.jButtonPp2Vp);
        GuiLang.setLanguage(this.jButtonVp2Pp);
        GuiLang.setLanguage(jCheckBoxShowCancel);
        GuiLang.setLanguage(PanelVisit.column_jTablePatientPayment);
        GuiLang.setLanguage(jCheckBoxDateDischarge);
    }
    
    /**----------Start overwrite Method form Interface of ManageVisitResp---------
    //เพิ่งเพิ่ม ยอดค้างชำระรวม 
     //ใช้ฟังชันคิวรียอดค้างชำระรวมก็ได
     --**/
    private void setBillingPtV(Vector vSumTotal){
        
        double patientRemain = 0;
        if((vSumTotal == null)){
            doubleTextFieldRemainSum.setText(String.valueOf(patientRemain));    
            return;
        }
        for(int m=0; m<vSumTotal.size(); m++) {
            Billing billing = (Billing)vSumTotal.get(m);
            patientRemain = patientRemain + Double.parseDouble(billing.remain);
        }
        doubleTextFieldRemainSum.setText(String.valueOf(patientRemain));
    }
    
    private void setVisit(Visit v){
        
        theVisit = v;
        if((theVisit == null)){
            setEnabled(false);
            return;
        }
        if(theVisit.visit_financial_record_date_time != null && !theVisit.visit_financial_record_date_time.equals(""))
        {
            jCheckBoxDateDischarge.setSelected(true);
            dateComboBoxCheck.setText(DateUtil.convertFieldDate(theVisit.visit_financial_record_date_time));
            timeTextFieldCheck.setText(theVisit.visit_financial_record_date_time.substring(11));
        }
        else
        {
            jCheckBoxDateDischarge.setSelected(false);
            jCheckBoxDateDischargeActionPerformed(null);
        }
        if(theVisit.isLockingByOther(theHO.theEmployee.getObjectId())
        || theVisit.isOutProcess()
        || theVisit.isDischargeMoney()
        || theVisit.isInStat()
        || theVisit.isDropVisit()) {
            setEnabled(false);
            return;
        }
           
        setEnabled(true);
    }
 
    /**
     * @author henbe
     * ใช้ในการเคลียร์หน้าจอ หรือ refresh หน้านั้นทั้งหมด
     */
    private void set(HosObject ho)
    {   
        if(ho==null)
        {
            setVisit(null);
            setBillingInvoiceV(null);
            setBillingPlanV(null,null);
            setBillingPtV(null);
            setBillingV(null);
            setPayment(null);
            setPaymentV(null);
            this.setPatientPaymentV(null);
            hJComboBoxPlan.setText("");
        }
    }
    private void setPatientPaymentV(Vector pp)
    {
        this.vPatientPayment = pp;
        TaBleModel tm;
        jTableVisitPayment.getSelectionModel().clearSelection();
       if((vPatientPayment == null))
        {
            vPatientPayment = new Vector();
            tm = new TaBleModel(PanelVisit.column_jTablePatientPayment,0);
            jTablePatientPayment.setModel(tm);
            return;
        }
       tm = new TaBleModel(PanelVisit.column_jTablePatientPayment,vPatientPayment.size());
       for(int i=0,size = vPatientPayment.size() ; i<size; i++)
       {
           Payment pd = (Payment)vPatientPayment.get(i);
           tm.setValueAt(pd.card_id,i,0);
           Plan p = theLookupControl.readPlanById(pd.plan_kid);
           if(p!=null)
                tm.setValueAt(p.description,i,1);
       }
       jTablePatientPayment.setModel(tm);  
       jTablePatientPayment.getColumnModel().getColumn(0).setPreferredWidth(150);
       jTablePatientPayment.getColumnModel().getColumn(1).setPreferredWidth(300);
    }    
//////////////////////////////////////////////////////////////////////////////
    /**method when user select patient from service point*/
    public void notifyReadVisit(String str, int status) {
        setVisit(theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        setPatientPaymentV(theHO.vPatientPayment);
        setBillingV(theHO.vBilling);
        setBillingInvoiceV(theHO.vBillingInvoice);
        Vector vSumTotal = theHO.vBillingPatient;
        setBillingPtV(vSumTotal);
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyVisitPatient(String str, int status) {
        setVisit(theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        setBillingV(null);
        setBillingInvoiceV(null);
    }
 /**unlock visit and clear detail of this panel*/
    public void notifyUnlockVisit(String str, int status) {
        set(null);
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyObservVisit(String str, int status) {
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyAdmitVisit(String str, int status) {
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyCheckDoctorTreament(String msg, int state) {
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyDischargeDoctor(String str, int status) {
        setVisit(theHO.theVisit);
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyDropVisit(String str, int status) {
        set(null);
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifySendVisit(String str, int status) {
        set(null);
    }
 /**recive notify when user add privilege form PanelVisit*/
    public void notifyDischargeFinancial(String str, int status) {
        set(null);
    }
//////////////////////////////////////////////////////////////////////////////
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyCancelBillingInvoice(String str, int status) {
        setBillingInvoiceV(theHO.vBillingInvoice);
    }
/**calculate total billing invoice and remove billing receipt*/
    public void notifyCalculateAllBillingInvoice(String str, int status) {
        setBillingV(theHO.vBilling);
        setBillingInvoiceV(theHO.vBillingInvoice);
        try{
            Vector vSumTotal = theGPS.listBillingPatient();
            setBillingPtV(vSumTotal);
        }catch(Exception e){
            e.printStackTrace(Constant.getPrintStream());
        }
    }
/**กรณีที่คิดเงินแล้ว
     recive notifyPatientPaidMoney  from DialogPatientPaid in method saveBillingPaid*/
    public void notifyPatientPaidMoney(String str, int status) {
        if(theHO.theVisit!=null){
            refreshBilling();
        }
        Vector vSumTotal = theBillingControl.listBillingByPatientID(theHO.thePatient.getObjectId());
        setBillingPtV(vSumTotal);
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyCancelBill(String str, int status) {
        refreshBilling();
        Vector billInv = theBillingControl.listBillingInvoiceByVisitID(theHO.theVisit.getObjectId());
        setBillingInvoiceV(billInv);
        Vector vSumTotal = theBillingControl.listBillingByPatientID(
            theHO.thePatient.getObjectId());
        setBillingPtV(vSumTotal);
                
        
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyReverseFinancial(String str, int status) {
        setVisit(theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        refreshBilling();
        Vector billInv = theBillingControl.listBillingInvoiceByVisitID(theHO.theVisit.getObjectId());
        setBillingInvoiceV(billInv);
        Vector vSumTotal = theBillingControl.listBillingByPatientID(theHO.thePatient.getObjectId());
        setBillingPtV(vSumTotal);
    }
//////////////////////////////////////////////////////////////////////////////
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyManageAppointment(String str, int status) {
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyManageDrugAllergy(String str, int status) {
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifySavePatientPayment(String str, int status) {
        setPatientPaymentV(vPatientPayment);        
    }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyAddItemDrugAllergy(String str, int status) {
    }
//////////////////////////////////////////////////////////////////////////////
    /**recive notify when user add privilege form PanelVisit*/
     public void notifyDownVPaymentPriority(String str, int status) {
         int row = selectInTablePayment;//this.jTableVisitPayment.getSelectedRow();
         setPaymentV(theHO.vVisitPayment);
         if(row!=-1)
         {  if(row +1 < this.jTableVisitPayment.getRowCount() )
            {
                jTableVisitPayment.setRowSelectionInterval(row+1,row+1);
            }
         }
     }
    /**recive notify when user add privilege form PanelVisit*/
     public void notifySaveVPayment(String str, int status) {
         setPaymentV(theHO.vVisitPayment);
     }
    /**recive notify when user add privilege form PanelVisit*/
     public void notifyUpVPaymentPriority(String str, int status) {
         
         int row = selectInTablePayment;//this.jTableVisitPayment.getSelectedRow();
         setPaymentV(theHO.vVisitPayment);
         if(row!=-1)
         {  if(row-1 >=0)
            {
                jTableVisitPayment.setRowSelectionInterval(row-1,row-1);
            }
         }
     }
    /**recive notify when user add privilege form PanelVisit*/
    public void notifyDeleteVPayment(String str, int status) {
        setPaymentV(theHO.vVisitPayment);
    }
    
    public void notifyReverseDoctor(String str, int status) {
    }
    
    public void notifyDeletePatientPayment(String str, int status) {
        setPatientPaymentV(theHO.vPatientPayment);
    }
    
    public void notifyDeleteVisitPayment(String str, int status) {
    }
    
    public void notifyBillingInvoice(String str, int status) {
        refreshBilling();
        Vector billInv = theBillingControl.listBillingInvoiceByVisitID(theHO.theVisit.getObjectId());
        setBillingInvoiceV(billInv);
        Vector vSumTotal = theBillingControl.listBillingByPatientID(theHO.thePatient.getObjectId());
        setBillingPtV(vSumTotal);
    }
    
    public void notifyReadPatient(String str, int status) {
        setVisit(theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        setPatientPaymentV(theHO.vPatientPayment);
        setBillingV(theHO.vBilling);
        setBillingInvoiceV(theHO.vBillingInvoice);
        setBillingPtV(theHO.vBillingPatient);
    }
    public void notifyReadFamily(String str, int status) {
        setVisit(theHO.theVisit);
        setPaymentV(theHO.vVisitPayment);
        setPatientPaymentV(theHO.vPatientPayment);
        setBillingV(theHO.vBilling);
        setBillingInvoiceV(theHO.vBillingInvoice);
        setBillingPtV(theHO.vBillingPatient);
    }
    
    public void notifySavePatient(String str, int status) {
    }
    
    public void notifyDeletePatient(String str, int status) {
    }
    
    public void notifyRemainDoctorDischarge(String str, int status) {
        set(null);
    }
    
    public void notifySendVisitBackWard(String str, int status) {
        set(null);
    }
    
    public void notifySaveAppointment(String str, int status) {
    }
    
    public void notifyReverseAdmit(String str, int status) {
    }
    
    public void notifyResetPatient(String str, int status) {
        set(null);
    }

    public void notifySaveBorrowFilmXray(String str, int status) {
    }
    
}
