/*
 * PanelSetupGroupChronic.java
 *
 * Created on
 */
package com.hosv3.gui.panel.setup;
import com.hosv3.control.lookup.Icd10GroupChronicCodeLookup;
import com.hosv3.control.lookup.Icd10GroupChronicGroupLookup;
import com.hosv3.object.HosObject;
import java.awt.*;
import java.util.Vector;
import java.awt.event.*;
import javax.swing.*;

import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.GuiLang;
import com.hospital_os.utility.*;
import com.hospital_os.object.*;
/**
 *
 * @Label Author  ojika
 *@panal update: pee
 *@update :pu 09/09/08
 */
public class PanelSetupGroupChronic extends javax.swing.JPanel implements
        ManageOptionReq,ManageICD10GroupChronicReq
{
    Vector depPanelV = new Vector();
    UpdateStatus theUS;
    SetupControl theSetupControl;
    public GroupChronic theGroupChronic;
    public Vector vGroupChronic;
    
    //ICD10GroupChronic theICD10GroupChronic;
    Vector vICD10AllGroup = new Vector();
    Vector vICD10SpecifyCode = new Vector();
    HosObject theHO;
    
    int offset = 20;
    int next = 0;
    int prev = 0;
    int row = 0; //
    String[] col = {"ChronicCode","EngName","ThaiName","Icd10Code"};
    String col_icd[] = {"Icd10Code"};
    public PanelSetupGroupChronic()
    {
        initComponents();
        setLanguage();
    }
    public PanelSetupGroupChronic(HosControl hc,UpdateStatus us)
    {
        initComponents();
        setLanguage();
        setControl(hc,us);
    }/////////////////////Use this for decrease memory usage
    /**
     *@Author : amp
     *@date : 29/02/2549
     *@see : จัดการเกี่ยวกับภาษา
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabelTitle);
        GuiLang.setLanguage(jLabelSearch);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jCheckBoxSearchActive);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabelCode);
        GuiLang.setLanguage(jLabelEngname);
        GuiLang.setLanguage(jLabelThainame);
        GuiLang.setLanguage(jCheckBoxActive);
        GuiLang.setLanguage(jLabelGroup);
        GuiLang.setLanguage(jLabelSpecify);
        GuiLang.setLanguage(jButtonSaveGroupChronic);
        GuiLang.setLanguage(jPanelICD10Chronic);
        GuiLang.setLanguage(col);
        GuiLang.setLanguage(col_icd);
    }
    public void setControl(HosControl hc,UpdateStatus us)
    {
        theUS = us;
        theHO = hc.theHO;
        theSetupControl = hc.theSetupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        hc.theHS.theICD10GroupChronicSubject.attachICD10GCGroup(this);
        
        setEnableAll(false);
        jButtonAddGroupChronic.setEnabled(true);
        jButtonSaveGroupChronic.setEnabled(false);
        jCheckBoxSearchActive.setSelected(true);
        
        
        balloonTextFieldGroupICD10.setControl(new Icd10GroupChronicGroupLookup(hc.theLookupControl),theUS.getJFrame());
        balloonTextFieldGroupICD10.setEControl(new Icd10GroupChronicGroupLookup(theSetupControl));
        hc.theHS.theBalloonSubject.attachBalloon(balloonTextFieldGroupICD10);
        
        balloonTextFieldSpecICD10.setControl(new Icd10GroupChronicCodeLookup(hc.theLookupControl),theUS.getJFrame());
        balloonTextFieldSpecICD10.setEControl(new Icd10GroupChronicCodeLookup(theSetupControl));
        hc.theHS.theBalloonSubject.attachBalloon(balloonTextFieldSpecICD10);
    }
    /////////////////////Use this for decrease memory usage
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        headFont1 = new com.hospital_os.gui.font.HeadFont();
        jPanel4 = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListData = new com.hosv3.gui.component.HJTableSort();
        jCheckBoxSearchActive = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanelDescription = new javax.swing.JPanel();
        jPanelGroupChronic = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jTextFieldGroupCode = new javax.swing.JTextField();
        jLabelEngname = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaEngName = new javax.swing.JTextArea();
        jLabelThainame = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextAreaThaiName = new javax.swing.JTextArea();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jButtonAddGroupChronic = new javax.swing.JButton();
        jPanelICD10Chronic = new javax.swing.JPanel();
        jLabelGroup = new javax.swing.JLabel();
        balloonTextFieldGroupICD10 = new com.hosv3.gui.component.BalloonTextField2();
        jButtonDeleteGroupICD10 = new javax.swing.JButton();
        jLabelSpecify = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableGroupICD10 = new javax.swing.JTable();
        balloonTextFieldSpecICD10 = new com.hosv3.gui.component.BalloonTextField2();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableSpecICD10 = new javax.swing.JTable();
        jButtonDeleteSpecICD10 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonSaveGroupChronic = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabelTitle.setFont(fontFormatTitle1);
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("PANEL_SETUP_CHRONIC");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jLabelTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 400));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 400));
        jLabelSearch.setFont(defaultFont1);
        jLabelSearch.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel3.add(jLabelSearch, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.setMinimumSize(new java.awt.Dimension(11, 24));
        jTextFieldSCode.setPreferredSize(new java.awt.Dimension(11, 24));
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldSCodeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("Search");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTableListData.setFont(defaultFont1);
        jTableListData.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTableListDataKeyReleased(evt);
            }
        });
        jTableListData.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jTableListDataMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableListData);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jCheckBoxSearchActive.setFont(defaultFont1);
        jCheckBoxSearchActive.setSelected(true);
        jCheckBoxSearchActive.setText("Active");
        jCheckBoxSearchActive.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSearchActive.setMinimumSize(new java.awt.Dimension(55, 17));
        jCheckBoxSearchActive.setPreferredSize(new java.awt.Dimension(55, 17));
        jCheckBoxSearchActive.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBoxSearchActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel3.add(jCheckBoxSearchActive, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setFont(new java.awt.Font("Aharoni", 0, 10));
        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel5.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setFont(new java.awt.Font("Aharoni", 0, 10));
        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel5.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel3.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        add(jPanel3, gridBagConstraints);

        jPanelDescription.setLayout(new java.awt.GridBagLayout());

        jPanelDescription.setMinimumSize(new java.awt.Dimension(350, 400));
        jPanelDescription.setPreferredSize(new java.awt.Dimension(350, 400));
        jPanelGroupChronic.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setFont(defaultFont1);
        jLabelCode.setText("ChronicCode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jLabelCode, gridBagConstraints);

        jTextFieldGroupCode.setFont(defaultFont1);
        jTextFieldGroupCode.setMinimumSize(new java.awt.Dimension(11, 24));
        jTextFieldGroupCode.setPreferredSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jTextFieldGroupCode, gridBagConstraints);

        jLabelEngname.setFont(defaultFont1);
        jLabelEngname.setText("EngName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jLabelEngname, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(150, 60));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(150, 60));
        jTextAreaEngName.setColumns(10);
        jTextAreaEngName.setFont(defaultFont1);
        jTextAreaEngName.setLineWrap(true);
        jTextAreaEngName.setRows(5);
        jTextAreaEngName.setWrapStyleWord(true);
        jTextAreaEngName.setMargin(new java.awt.Insets(3, 3, 3, 3));
        jScrollPane2.setViewportView(jTextAreaEngName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jScrollPane2, gridBagConstraints);

        jLabelThainame.setFont(defaultFont1);
        jLabelThainame.setText("ThaiName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelGroupChronic.add(jLabelThainame, gridBagConstraints);

        jScrollPane3.setMinimumSize(new java.awt.Dimension(150, 60));
        jScrollPane3.setPreferredSize(new java.awt.Dimension(150, 60));
        jTextAreaThaiName.setColumns(10);
        jTextAreaThaiName.setFont(defaultFont1);
        jTextAreaThaiName.setLineWrap(true);
        jTextAreaThaiName.setRows(5);
        jTextAreaThaiName.setWrapStyleWord(true);
        jTextAreaThaiName.setMargin(new java.awt.Insets(3, 3, 3, 3));
        jTextAreaThaiName.setMinimumSize(new java.awt.Dimension(150, 48));
        jTextAreaThaiName.setPreferredSize(new java.awt.Dimension(150, 48));
        jScrollPane3.setViewportView(jTextAreaThaiName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jScrollPane3, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxActive.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanelGroupChronic.add(jCheckBoxActive, gridBagConstraints);

        jButtonAddGroupChronic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/plus16.gif")));
        jButtonAddGroupChronic.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddGroupChronic.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddGroupChronic.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddGroupChronic.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddGroupChronic.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonAddGroupChronicActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jButtonAddGroupChronic, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanelDescription.add(jPanelGroupChronic, gridBagConstraints);

        jPanelICD10Chronic.setLayout(new java.awt.GridBagLayout());

        jPanelICD10Chronic.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Icd10Code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jLabelGroup.setFont(defaultFont1);
        jLabelGroup.setText("AllGroup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelICD10Chronic.add(jLabelGroup, gridBagConstraints);

        balloonTextFieldGroupICD10.setFont(defaultFont1);
        balloonTextFieldGroupICD10.setMinimumSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelICD10Chronic.add(balloonTextFieldGroupICD10, gridBagConstraints);

        jButtonDeleteGroupICD10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDeleteGroupICD10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteGroupICD10.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDeleteGroupICD10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelICD10Chronic.add(jButtonDeleteGroupICD10, gridBagConstraints);

        jLabelSpecify.setFont(defaultFont1);
        jLabelSpecify.setText("SpecifyCode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        jPanelICD10Chronic.add(jLabelSpecify, gridBagConstraints);

        jTableGroupICD10.setFont(defaultFont1);
        jTableGroupICD10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane4.setViewportView(jTableGroupICD10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelICD10Chronic.add(jScrollPane4, gridBagConstraints);

        balloonTextFieldSpecICD10.setFont(defaultFont1);
        balloonTextFieldSpecICD10.setMinimumSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanelICD10Chronic.add(balloonTextFieldSpecICD10, gridBagConstraints);

        jTableSpecICD10.setFont(defaultFont1);
        jTableSpecICD10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane5.setViewportView(jTableSpecICD10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 0);
        jPanelICD10Chronic.add(jScrollPane5, gridBagConstraints);

        jButtonDeleteSpecICD10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDeleteSpecICD10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteSpecICD10.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDeleteSpecICD10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        jPanelICD10Chronic.add(jButtonDeleteSpecICD10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDescription.add(jPanelICD10Chronic, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanelDescription, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonSaveGroupChronic.setFont(defaultFont1);
        jButtonSaveGroupChronic.setText("Save");
        jButtonSaveGroupChronic.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSaveGroupChronic.setMaximumSize(new java.awt.Dimension(33, 24));
        jButtonSaveGroupChronic.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonSaveGroupChronic.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSaveGroupChronic.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSaveGroupChronicActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSaveGroupChronic, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSearchActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxSearchActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxSearchActiveActionPerformed
        searchGroupChronic();        
    }//GEN-LAST:event_jCheckBoxSearchActiveActionPerformed

    private void jButtonDeleteSpecICD10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteSpecICD10ActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteSpecICD10ActionPerformed
        deleteSpecICD10();
    }//GEN-LAST:event_jButtonDeleteSpecICD10ActionPerformed
    
    private void jButtonDeleteGroupICD10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteGroupICD10ActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteGroupICD10ActionPerformed
        deleteGroupICD10();
    }//GEN-LAST:event_jButtonDeleteGroupICD10ActionPerformed
    
    private void jButtonAddGroupChronicActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddGroupChronicActionPerformed
    {//GEN-HEADEREND:event_jButtonAddGroupChronicActionPerformed
        setGroupChronic(null);
        setTableGroupICD10(null);
        setTableSpecICD10(null);
        theHO.vICD10GCGroup = new Vector();
        theHO.vICD10GCSpecifyCode = new Vector();
        setEnableAll(true);
        jTableListData.clearSelection();
    }//GEN-LAST:event_jButtonAddGroupChronicActionPerformed
    private void jButtonSaveGroupChronicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveGroupChronicActionPerformed
        saveGroupChronic();
    }//GEN-LAST:event_jButtonSaveGroupChronicActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        searchGroupChronic();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jTableListDataMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableListDataMouseReleased
    {//GEN-HEADEREND:event_jTableListDataMouseReleased
        selectListGroupChronic();
    }//GEN-LAST:event_jTableListDataMouseReleased
    private void jTableListDataKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTableListDataKeyReleased
    {//GEN-HEADEREND:event_jTableListDataKeyReleased
        selectListGroupChronic();
    }//GEN-LAST:event_jTableListDataKeyReleased
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextGroupChronic();
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        prevGroupChronic();
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchGroupChronic();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    
    private void setEnableAll(boolean var)
    {
        jTextFieldGroupCode.setEnabled(var);
        jTextAreaThaiName.setEnabled(var);
        jTextAreaEngName.setEnabled(var);
        jButtonSaveGroupChronic.setEnabled(var);
    }
    
    private void clearAll()
    {
        jTextFieldGroupCode.setText("");
        jTextAreaThaiName.setText("");
        jTextAreaEngName.setText("");
    }
    private void nextGroupChronic()
    {
        if(vGroupChronic!=null && (vGroupChronic.size() == this.next))
        {
            theUS.setStatus("ข้อมูลที่แสดงเป็นหน้าสุดท้ายแล้ว",UpdateStatus.WARNING);
            return;
        }
        setTable(vGroupChronic,1);
    }
    private void prevGroupChronic()
    {
        if(this.prev == 0)
        {
            theUS.setStatus("ข้อมูลที่แสดงเป็นหน้าแรกแล้ว",UpdateStatus.WARNING);
            return;
        }
        setTable(vGroupChronic,0);
    }
  /*
   * เพื่อทำการ set ค่าให้กับ object theChronic
   * Input  : ข้อมูลจาก text
   * output : Object theGroupChronic
   */
    private GroupChronic getGroupChronic()
    {
        if(theGroupChronic == null)
            theGroupChronic = new GroupChronic();        
        theGroupChronic.group_chronic_id = Gutil.CheckReservedWords(jTextFieldGroupCode.getText().trim());
        theGroupChronic.description_th = Gutil.CheckReservedWords(jTextAreaThaiName.getText().trim());
        theGroupChronic.description_en = Gutil.CheckReservedWords(jTextAreaEngName.getText().trim());
        theGroupChronic.setActive(jCheckBoxActive.isSelected());
        return theGroupChronic;
    }
    /* เพื่อทำการแสดงค่าข้อมูลในหน้าจอ
    /* input  : object theGrouChronic
    /* output :
    */
    private void setGroupChronic(GroupChronic gc)
    {
        theGroupChronic = gc;
        if(theGroupChronic == null)
            theGroupChronic = new GroupChronic();
        jTextFieldGroupCode.setText(theGroupChronic.group_chronic_id);
        jTextAreaEngName.setText(theGroupChronic.description_en);
        jTextAreaThaiName.setText(theGroupChronic.description_th);
        jCheckBoxActive.setSelected(theGroupChronic.getActive());
    }
    
    /**
     *set ค่า ICD10 ประเภทเฉพาะรหัสของกลุ่มโรค Chronic
     *@author pu
     *@date 09/09/08
     *
     */
    private void setTableSpecICD10(Vector vc)
    {
        this.vICD10SpecifyCode = vc;     
        if(vc==null || vc.isEmpty())
        {
            TaBleModel tm = new TaBleModel(col_icd,0);
            jTableSpecICD10.setModel(tm);
            return;
        }
        TaBleModel tm = new TaBleModel(col_icd,vc.size());
        for(int i=0 ;i<vc.size();i++)
        {
            GroupIcd10 of = (GroupIcd10)vc.get(i);
            tm.setValueAt(of.icdcode,i,0);
        }
        jTableSpecICD10.setModel(tm);
    }
    
    /**
     *set ค่า ICD10 ประเภททั้งกลุ่มของกลุ่มโรค Chronic
     *@author pu
     *@date 09/09/08
     *
     */
    private void setTableGroupICD10(Vector vc)
    {
        this.vICD10AllGroup = vc;
        if(vc == null || vc.isEmpty())
        {
            TaBleModel tm = new TaBleModel(col_icd,0);
            jTableGroupICD10.setModel(tm);
            return;
        }
        
        TaBleModel tm = new TaBleModel(col_icd,vc.size());
        for(int i=0 ;i<vc.size();i++)
        {
            GroupIcd10 of = (GroupIcd10)vc.get(i);
            tm.setValueAt(of.icdcode,i,0);
        }
        jTableGroupICD10.setModel(tm);
    }
    
    private void deleteGroupICD10()
    {
        int rows[] = jTableGroupICD10.getSelectedRows();
        theSetupControl.deleteICD10GroupChronic(rows,vICD10AllGroup,true);        
        searchGroupChronic();
    }
    
    private void deleteSpecICD10()
    {
        int rows[] = jTableSpecICD10.getSelectedRows();
        theSetupControl.deleteICD10GroupChronic(rows,vICD10SpecifyCode,false);
        searchGroupChronic();
        
    }
  /*
   * เพื่อทำการบันทึกกลุ่มโรคเรื้อรัง
   * input  : object theGroupChronic
   * output : ผลการบันทึกข้อมูล
   */
    private void saveGroupChronic()
    {
//        int res = theSetupControl.saveGroupChronic(getGroupChronic());
        int res = theSetupControl.saveGroupChronicICD10(getGroupChronic(),this.vICD10AllGroup,this.vICD10SpecifyCode);
        if(res>0)
        {
            setEnableAll(false);
            searchGroupChronic();
            setTableGroupICD10(theHO.vICD10GCGroup);
            setTableSpecICD10(theHO.vICD10GCSpecifyCode);
            refreshDepPanel();
        }
    }
    
   /*
    * เพื่อทำการ ลบข้อมูล GroupChronic
    * input  : object theGroupChronic
    * output :
    */
    private void deleteGroupChronic()
    {
        int ret = theSetupControl.deleteGroupChronic(theGroupChronic);
        if(ret==0)
                return;
        theGroupChronic=null;
        vGroupChronic.remove(row+prev);
        setEnableAll(false);
        clearAll();
        searchGroupChronic();
        refreshDepPanel();
    }
   /*
    * เพื่อแสดงข้อมูลจาก listในหน้าจอ
    * input  : vector vGroupChronic
    * output :
    * @update : pu 09/09/08
    * 
    */
    private void selectListGroupChronic()
    {
        row = jTableListData.getSelectedRow();
        setEnableAll(true);
        theGroupChronic = (GroupChronic)vGroupChronic.get(row+prev);
        setGroupChronic(theGroupChronic);
        if(theGroupChronic != null)
        {
            this.theSetupControl.listICD10GroupChronicGroup(theGroupChronic);
            this.theSetupControl.listICD10GroupChronicSpecifyCode(theGroupChronic);
        }       
    }
    
    private void searchGroupChronic()
    {   next = 0;
        prev = 0;
        String search = Gutil.CheckReservedWords(jTextFieldSCode.getText());
        String active = new String();
        if(jCheckBoxSearchActive.isSelected())
        {
            active = "1";
        }
        else
        {
            active = "0" ;
        }
        vGroupChronic= theSetupControl.listGroupChronicAll(search, active);
        setTable(vGroupChronic,1);
    }
    private void setTable(Vector vGroup,int off)
    {
        GroupChronic of = new GroupChronic();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(vGroup != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vGroup.size())
                {   next = vGroup.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                     next = offset;
                }
                if(next >= vGroup.size())
                {   next= vGroup.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (GroupChronic)vGroup.get(i+prev);
                tm.setValueAt(of.group_chronic_id,i,0);
                tm.setValueAt(of.description_en,i,1);
                tm.setValueAt(of.description_th,i, 2);
                tm.setValueAt(this.theSetupControl.getStringICD10Chronic(of).toString(),i,3);
            }
            jTableListData.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTableListData.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTableListData.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTableListData.getColumnModel().getColumn(1).setPreferredWidth(175);
        jTableListData.getColumnModel().getColumn(2).setPreferredWidth(175);
        jTableListData.getColumnModel().getColumn(3).setPreferredWidth(175);
    }
    
    public static void main(String args[])
    {
        JFrame frm = new JFrame("Test");
        frm.getContentPane().setLayout(new BorderLayout());
        PanelSetupGroupChronic pgc = new PanelSetupGroupChronic();
        frm.getContentPane().add(pgc,  BorderLayout.CENTER);
        frm.addWindowListener(new WindowAdapter()
        {   public void windowClosing(WindowEvent e)
            {    System.exit(0);
            }
        });
        frm.pack();
        frm.setVisible(true);
    }
    public void notifyreFrashPanel()
    {
    }
    public void notifysetEnableForLift(boolean b)
    {
    }
    public int editOption(Option option)
    {
        Constant.println("PanelSetupGroupChronic function is not use.");
        return -1;
    }
    public Vector listOptionAll()
    {
        Constant.println("PanelSetupGroupChronic function is not use.");
        return null;
    }
    public void reFrashPanel()
    {
    }
    public Option readOption()
    {
        Constant.println("PanelSetupGroupChronic function is not use.");
        return null;
    }
    public int saveOption(Option option)
    {
        Constant.println("PanelSetupGroupChronic function is not use.");
        return -1;
    }
    public void setEnableForLift(boolean b)
    {
    }
    
    /**
     *เพิ่ม panel ที่เกิดผลกระทบเมื่อมีการเปลี่ยนแปลงข้อมูลใน panel นี้
     *ฟังก์ชันถูกเรียกในคลาส HosPanelSetup
     *@author aut
     *@param panel ลูก ที่ imp interface ManageOptionReq
     */
    public void addDepPanel(ManageOptionReq panel)
    {
        if(panel!=null)
            depPanelV.add(panel);
    }
    
    public void refreshDepPanel()
    {
        for(int i=0;i<depPanelV.size();i++)
        {
            ((ManageOptionReq)depPanelV.get(i)).notifyreFrashPanel();
        }
    }

    public void notifySetTableICD10GCGroup(String str, int status)
    {        
        setTableGroupICD10(theHO.vICD10GCGroup);
        balloonTextFieldGroupICD10.setText("");
        theUS.setStatus("เลือกรหัส ICD10 แล้ว",UpdateStatus.COMPLETE);
    }

    public void notifySetTableICD10GCSpecifyCode(String str, int status)
    {
        setTableSpecICD10(theHO.vICD10GCSpecifyCode);
        balloonTextFieldSpecICD10.setText("");
        theUS.setStatus("เลือกรหัส ICD10 แล้ว",UpdateStatus.COMPLETE);
    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hosv3.gui.component.BalloonTextField2 balloonTextFieldGroupICD10;
    private com.hosv3.gui.component.BalloonTextField2 balloonTextFieldSpecICD10;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private com.hospital_os.gui.font.HeadFont headFont1;
    private javax.swing.JButton jButtonAddGroupChronic;
    private javax.swing.JButton jButtonDeleteGroupICD10;
    private javax.swing.JButton jButtonDeleteSpecICD10;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    protected javax.swing.JButton jButtonSaveGroupChronic;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxSearchActive;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelEngname;
    private javax.swing.JLabel jLabelGroup;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSpecify;
    private javax.swing.JLabel jLabelThainame;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanelDescription;
    private javax.swing.JPanel jPanelGroupChronic;
    private javax.swing.JPanel jPanelICD10Chronic;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTable jTableGroupICD10;
    private com.hosv3.gui.component.HJTableSort jTableListData;
    private javax.swing.JTable jTableSpecICD10;
    private javax.swing.JTextArea jTextAreaEngName;
    private javax.swing.JTextArea jTextAreaThaiName;
    private javax.swing.JTextField jTextFieldGroupCode;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables
}
