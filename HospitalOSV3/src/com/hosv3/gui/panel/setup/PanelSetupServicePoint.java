/*
 * PanelSetupServicePoint.java
 *
 * Created on 5 ตุลาคม 2546, 12:37 น.
 */
package com.hosv3.gui.panel.setup;
import java.util.Vector;

import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.subject.*;
import com.hosv3.gui.dialog.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.GuiLang;
import com.hosv3.utility.Constant;
import com.hospital_os.object.*;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.gui.component.*;

/**
 *
 * @Panel Author ojika 
 * @Panel update tong
 */
public class PanelSetupServicePoint extends javax.swing.JPanel implements 
ManageServicePointReq,PanelSetup
,ManageOptionReq
{
    HosControl theHC;
    LookupControl theLookupControl;
    ComboboxModel theComboboxModel;
    UpdateStatus theUS;
    SetupControl theSetupControl;
    SetupSubject theSetupSubject;
    Vector theServicePointV = new Vector();
    Vector theEmployeeV = new Vector();
    Vector depPanelV = new Vector();
    ServicePoint theServicePoint = new ServicePoint();
    PanelSetupSearchSub  psep;
    int offset = 23;
    int next = 0;
    int prev = 0;
    int saved = 0; // 0 คือ ไม่สามารถ insertได้ 1 คือ insert ได้
    /** pu : 29/08/2549 : เก็บ Index ของจุดบริการตัวล่างสุดของหน้าปัจจุบัน*/
    int curNext = 0;
    /** pu : 29/08/2549 : เก็บ Index ของจุดบริการตัวล่างสุดของหน้าก่อนหน้าปัจจุบัน*/
    int curPrev = 0;
    String[] col_TaBleModel = {"ชื่อผู้ใช้","ชื่อ-สกุล"};
    String[] col = {"รหัส","ชื่อ"};
    public PanelSetupServicePoint()
    {
        initComponents();
        setLanguage();
    }
    public PanelSetupServicePoint(HosControl hc,UpdateStatus us)
    {
        initComponents();
        setLanguage();
        setControl(hc,us);
    }
    public void setTitleLabel(String str)
    {
        jLabel4.setText(str);
    }
    /**
     *@Author : amp
     *@date : 02/02/2549
     *@see : จัดการเกี่ยวกับภาษา
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabelICD9code);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabel1);
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel4);
        GuiLang.setLanguage(jCheckBoxS);
        GuiLang.setLanguage(jButtonSave);
        GuiLang.setLanguage(jCheckBox1);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(col);
        GuiLang.setLanguage(col_TaBleModel);
    }
    /////////////////////Use this for decrease memory usage
    
    public void setControl(HosControl hc,UpdateStatus us)
    {
        
        theHC = hc;
        theUS = us;
        theLookupControl = hc.theLookupControl;
        theSetupControl = hc.theSetupControl;
        theSetupSubject = hc.theHS.theSetupSubject;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        setupLookup();
        setEnableAll(false);
    }
    /////////////////////Use this for decrease memory usage
    private void initData()
    {
        theServicePoint = new ServicePoint();
    }
    public void setupLookup()
    {
        ComboboxModel.initComboBox(jComboBoxGroup,theLookupControl.listServiceType());
        ComboboxModel.initComboBox(jComboBoxSubGroup,theLookupControl.listServiceSubType());
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        tableResultsModel1 = new com.hospital_os.utility.TableResultsModel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jCheckBoxS = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jPanel7 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jComboBoxGroup = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxSubGroup = new javax.swing.JComboBox();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.hosv3.gui.component.HJTableSort();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jButtonAddMember = new javax.swing.JButton();
        jButtonDelMenber = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(fontFormatTitle1);
        jLabel4.setText("\u0e08\u0e38\u0e14\u0e1a\u0e23\u0e34\u0e01\u0e32\u0e23\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e19\u0e2d\u0e01");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel4.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setFont(defaultFont1);
        jLabelICD9code.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 11);
        jPanel3.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jCheckBoxS.setFont(defaultFont1);
        jCheckBoxS.setSelected(true);
        jCheckBoxS.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("ACTIVE"));
        jCheckBoxS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel3.add(jCheckBoxS, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTable1.setModel(tableResultsModel1);
        jTable1.setFont(defaultFont1);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel7.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel7.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMaximumSize(new java.awt.Dimension(350, 190));
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 135));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 135));
        jLabel1.setFont(defaultFont1);
        jLabel1.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("CODE"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldCode.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jTextFieldCode, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("NAME"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jTextFieldName, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("GROUP"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jLabel5, gridBagConstraints);

        jComboBoxGroup.setFont(defaultFont1);
        jComboBoxGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jComboBoxGroup, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SUB_GROUP"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        jComboBoxSubGroup.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 5);
        jPanel2.add(jComboBoxSubGroup, gridBagConstraints);

        jCheckBox1.setFont(defaultFont1);
        jCheckBox1.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("ACTIVE"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel2.add(jCheckBox1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel5.setMinimumSize(new java.awt.Dimension(350, 250));
        jPanel5.setPreferredSize(new java.awt.Dimension(350, 250));
        jLabel3.setFont(defaultFont1);
        jLabel3.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("CLINIC_MEMBER"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel5.add(jLabel3, gridBagConstraints);

        jScrollPane2.setFont(defaultFont1);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(200, 230));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(200, 230));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(200, 230));
        jTable2.setModel(tableResultsModel1);
        jTable2.setFont(defaultFont1);
        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel5.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel5, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel.setEnabled(false);
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01 ");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jPanel6.setFont(defaultFont1);
        jButtonAddMember.setFont(defaultFont1);
        jButtonAddMember.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddMember.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddMember.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddMember.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddMember.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddMemberActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel6.add(jButtonAddMember, gridBagConstraints);

        jButtonDelMenber.setFont(defaultFont1);
        jButtonDelMenber.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelMenber.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelMenber.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelMenber.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelMenber.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelMenber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelMenberActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel6.add(jButtonDelMenber, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel6, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxSActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxSActionPerformed
        //pu : 29/08/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการ
        this.curNext = 0;
        this.curPrev = 0;
        searchServicePoint();
    }//GEN-LAST:event_jCheckBoxSActionPerformed
    private void jComboBoxGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxGroupActionPerformed

    }//GEN-LAST:event_jComboBoxGroupActionPerformed
    private void jButtonAddMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddMemberActionPerformed
        showUserServicePoint();
        jButtonDelMenber.setEnabled(true);
        selectServicePoint();
    }//GEN-LAST:event_jButtonAddMemberActionPerformed
    private void jButtonDelMenberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelMenberActionPerformed
        deleteMember();
    }//GEN-LAST:event_jButtonDelMenberActionPerformed
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        deleteServicePoint();
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        //pu : 29/08/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการ
        this.curNext = 0;
        this.curPrev = 0;
        searchServicePoint();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveServicePoint();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        insertServicePoint();
    }//GEN-LAST:event_jButtonAddActionPerformed
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextServicePoint();
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        prevServicePoint();
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        //pu : 29/08/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการ
        this.curNext = 0;
        this.curPrev = 0;
        searchServicePoint();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        selectServicePoint();
    }//GEN-LAST:event_jTable1MouseReleased
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
	if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
            selectServicePoint();
	}//GEN-LAST:event_jTable1KeyReleased
    private void deleteMember()
    {   
        int[] row = jTable2.getSelectedRows();        
        if(row.length ==0)
        { 
            theUS.setStatus("กรุณาเลือกบุคคลากรที่ต้องการลบ",theUS.WARNING);
            return;
        }
        int ret= theSetupControl.deleteServicePointDoctor(theEmployeeV,row,theServicePoint);
        if(ret>=0)
        {
            theEmployeeV = theLookupControl.listEmployeeBySpid(theServicePoint.getObjectId());
            setTableEmployee(theEmployeeV);
        }
    }
    
    private void nextServicePoint()
    {   
        setTable(theServicePointV,1);
    }
    
    private void prevServicePoint()
    {   
        setTable(theServicePointV,0);
    }
    
    private void insertServicePoint()
    {   
        saved = 1;
        theServicePoint = new ServicePoint();
        setEnableAll(true);
        clearAll();
        theEmployeeV=null;
        setTableEmployee(null);
    }
    private void deleteServicePoint()
    {   
        if(havePatientInServicePoint()){
            theUS.setStatus(Constant.getTextBundle("มีผู้ป่วยอยู่ในจุดบริการ")+
                    theServicePoint.name+
                    Constant.getTextBundle("ไม่สามารถลบจุดบริการนี้ได้"), theUS.WARNING);
            return;
        }
        int ans = theSetupControl.deleteServicePoint(theServicePoint);
        if(ans==1)
        {
            //pu : 29/08/2549 : เก็บ Index ปัจจุบันของหน้ารายการที่กำลังบันทึก
            int count = next - prev;
            this.curNext = next - count;
            this.curPrev = prev - offset;
            clearAll();
            searchServicePoint();           
            theEmployeeV=null;
            setTableEmployee(null);
            refreshDepPanel();
        }
    }
    
    private boolean havePatientInServicePoint()
    {
        boolean have = false;
        Vector vc = null;
        if(this.theServicePoint != null)
        {
            vc = this.theLookupControl.listVisitQueueTransfer(theServicePoint.getObjectId(), "", "");
            if(vc != null && vc.size() != 0)
                have = true;
        }
        return have;
    }
    
    private void clearAll()
    {
        jTextFieldCode.setText("");
        jTextFieldName.setText("");
        jTextFieldCode.requestFocus();
        jCheckBox1.setSelected(true);
    }
    private void setEnableAll(boolean var)
    {
        jTextFieldCode.setEditable(var);
        jTextFieldName.setEditable(var);
        jButtonSave.setEnabled(var);
        jCheckBox1.setEnabled(var);
        jButtonAddMember.setEnabled(var);
        jButtonDel.setEnabled(var);
    }
    private void selectServicePoint()
    {
        setEnableAll(true);
        int row = jTable1.getSelectedRow();
        theServicePoint = (ServicePoint)theServicePointV.get(row+prev);
        
        jTextFieldCode.setText(theServicePoint.service_point_id);
        jTextFieldName.setText(theServicePoint.name);
        ComboboxModel.setCodeComboBox(jComboBoxGroup, theServicePoint.service_type_id);
        ComboboxModel.setCodeComboBox(jComboBoxSubGroup, theServicePoint.service_sub_type_id);
        if(theServicePoint.active.equals("1"))
            jCheckBox1.setSelected(true);
        else
            jCheckBox1.setSelected(false);
        
        if(theServicePoint.service_type_id.equals("3"))
        {
            searchServicePointDoctor(theServicePoint.getObjectId());
        }
        else
        {
            jButtonAddMember.setEnabled(false);
            theEmployeeV=null;
            setTableEmployee(null);
        }
    }
    private void searchServicePointDoctor(String pk)
    {
        jButtonAddMember.setEnabled(true);
        theEmployeeV = theLookupControl.listEmployeeBySpid(theServicePoint.getObjectId());
        setTableEmployee(theEmployeeV);
    }
    private void searchServicePoint()
    {   //pu : 29/08/2549 : กำหนดค่า Index ให้กับหน้าที่ต้องการแสดงรายการ
        next = this.curNext;
        prev =  this.curPrev;
        String search = jTextFieldSCode.getText();
        String active = "0";
        if(jCheckBoxS.isSelected())
            active = "1";
        theServicePointV =  theSetupControl.listServicePointByName(search, active);
        setTable(theServicePointV,1);
        
    }
    private void setTable(Vector voffice,int off)
    {
        ServicePoint of = new ServicePoint();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null && voffice.size() != 0)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= theServicePointV.size())
                {   next = theServicePointV.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                     next = offset;
                }
                if(next >= theServicePointV.size())
                {   next= theServicePointV.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (ServicePoint)voffice.get(i+prev);
                tm.setValueAt(of.service_point_id,i,0);
                tm.setValueAt(of.name,i,1);
            }
            jTable1.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTable1.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
    }
    private void saveServicePoint()
    {
        theServicePoint.service_point_id = jTextFieldCode.getText();
        theServicePoint.name = jTextFieldName.getText();
        theServicePoint.service_type_id = ComboboxModel.getCodeComboBox(jComboBoxGroup);
        theServicePoint.service_sub_type_id = ComboboxModel.getCodeComboBox(jComboBoxSubGroup);
        if(jCheckBox1.isSelected())
            theServicePoint.active = "1";
        else
            theServicePoint.active = "0";
        
        int ans = theSetupControl.saveServicePoint(theServicePoint,theEmployeeV);
        if(ans>=0)
        {
            //pu : 29/08/2549 : เก็บ Index ปัจจุบันของหน้ารายการที่กำลังบันทึก
            int count = next - prev;
            this.curNext = next - count;
            this.curPrev = prev - offset;
            searchServicePoint();
            refreshDepPanel();
        }
    }
    private void showUserServicePoint()
    {
        theSetupSubject.delEmployeeInService(this);
        if(psep==null)
        {
            psep = new PanelSetupSearchSub(theHC,theUS,1);
            psep.setTitle(Constant.getTextBundle("กำหนด แพทย์ ให้อยู่ในห้องตรวจ"));
        }
        psep.setServicePoint(theServicePoint);
        if(psep.showSearch())
            psep = null;
    }
    private void setTableEmployee(Vector vc)
    {
        TaBleModel tm;
        Employee of = new Employee();
        if(vc != null)
        {   tm = new TaBleModel(col_TaBleModel,vc.size());
            for(int i=0 ;i<vc.size();i++)
            {
                of = (Employee)vc.get(i);
                tm.setValueAt(of.employee_id,i,0);
                tm.setValueAt(of.fname + " " + of.lname ,i,1);
            }
        }
        else
        {
            tm = new TaBleModel(col_TaBleModel,0);
        }
        jTable2.setModel(tm);
        jTable2.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        jTable2.getColumnModel().getColumn(1).setPreferredWidth(200); // จำนวน
    }
    public void notifyreFrashPanel()
    {
        setupLookup();
    }
    public void notifysetEnableForLift(boolean b)
    {
        jButtonDel.setVisible(b);
    }
    public void addEmployeeInServicePoint(Employee employee)
    {
    }
    public int deleteServicePoint(ServicePoint theServicePointV)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public int deleteServicePointDoctor(String servicePointDoctor)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public int deleteServicePointDoctorBySPoint(String theServicePointV)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public int editServicePoint(ServicePoint theServicePointV)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public ServicePoint listServicePointByCode(String code)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public Vector listServicePointByName(String pk, String active)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public ServicePoint listServicePointByPk(String pk)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public Vector listServicePointDoctor(String pk)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public ServicePointDoctor listServicePointDoctorByEmPoint(String emid, String pointid)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public int saveServicePoint(ServicePoint theServicePointV)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public int saveServicePointDoctor(ServicePointDoctor servicepointdoctor)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public int editOption(Option option)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public Vector listOptionAll()
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public void reFrashPanel()
    {
    }
    public Option readOption()
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return null;
    }
    public int saveOption(Option option)
    {
        Constant.println("PanelSetupServicePoint function is not use.");
        return -1;
    }
    public void setEnableForLift(boolean b)
    {
    }
    
    public void notifyaddEmployeeInServicePoint(Employee employee)
    {
    }
    
    /**
     *เพิ่ม panel ที่เกิดผลกระทบเมื่อมีการเปลี่ยนแปลงข้อมูลใน panel นี้
     *ฟังก์ชันถูกเรียกในคลาส HosPanelSetup
     *@author aut
     *@param panel ลูก ที่ imp interface ManageOptionReq
     */
    public void addDepPanel(ManageOptionReq panel) {
        if(panel!=null)
            depPanelV.add(panel);
    }

    
    public void refreshDepPanel() {
        for(int i=0;i<depPanelV.size();i++) {
            ((ManageOptionReq)depPanelV.get(i)).notifyreFrashPanel();
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddMember;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonDelMenber;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBoxS;
    private javax.swing.JComboBox jComboBoxGroup;
    private javax.swing.JComboBox jComboBoxSubGroup;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private com.hosv3.gui.component.HJTableSort jTable2;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldSCode;
    private com.hospital_os.utility.TableResultsModel tableResultsModel1;
    // End of variables declaration//GEN-END:variables
}
