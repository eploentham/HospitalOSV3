/*
 * PanelSetupPlan.java
 *
 * Created on 12 ตุลาคม 2546, 18:08 น.
 */
package com.hosv3.gui.panel.setup;
import java.awt.event.*;
import java.util.*;
import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.utility.connection.*;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.object.*;
import com.hospital_os.utility.ComboFix;
import com.hosv3.control.lookup.R53CardInsTypeLookup;
/**
 *
 * @panel author : amp
 */
public class PanelSetupPlan extends javax.swing.JPanel   implements 
ManageOptionReq
{
    Vector depPanelV = new Vector();
    Plan thePlan = new Plan();
    UpdateStatus theUS;
    SetupControl theSetupControl;
    LookupControl theLookupControl;
    Vector vPlan = new Vector();
    int offset = 23;
    int next = 0;
    int prev = 0;
    int curNext = 0;
    int curPrev = 0;
    String[] col = {"รหัส","ชื่อสิทธิ"};
    public PanelSetupPlan()
    {
        initComponents();
        setLanguage();
    }
    public PanelSetupPlan(HosControl hc,UpdateStatus us)
    {
        initComponents();
        setLanguage();
        setControl(hc,us);
    }
    
    /**
     *@Author : amp
     *@date : 29/02/2549
     *@see : จัดการเกี่ยวกับภาษา
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabelICD9code);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabel1);
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel4);
        GuiLang.setLanguage(jCheckBoxActive);
        GuiLang.setLanguage(jButtonSave);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(jLabel7);
        GuiLang.setLanguage(jLabel8);
        GuiLang.setLanguage(jLabel9);
        GuiLang.setLanguage(jLabel13);
        GuiLang.setLanguage(jCheckBoxActive1);
        GuiLang.setLanguage(col);
    }
    /////////////////////Use this for decrease memory usage
    public void setControl(HosControl hc,UpdateStatus us)
    {
        setEnableAll(false);
        jTable1.setGuiMode(true);
        theSetupControl = hc.theSetupControl;
        theLookupControl = hc.theLookupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        setupLookup();
        theUS = us;
        dateTextFieldActiveFrom.setEditable(true);
        dateTextFieldActiveTo.setEditable(true);
    }
    
    public void setupLookup()
    {
        ComboboxModel.initComboBox(jComboBoxPayer,theLookupControl.listPayer());
        ComboboxModel.initComboBox(jComboBoxContract,theLookupControl.listContract());
        jComboBoxLookup1.setControl(null,new R53CardInsTypeLookup(
            theLookupControl.theConnectionInf),new ComboFix());
    }
    /////////////////////Use this for decrease memory usage
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        tableResultsModel1 = new com.hospital_os.utility.TableResultsModel();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jPanel6 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldPttype = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jComboBoxPayer = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jComboBoxContract = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jCheckBoxActive1 = new javax.swing.JCheckBox();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldMoneyLimit = new javax.swing.JTextField();
        dateTextFieldActiveFrom = new com.hospital_os.utility.DateComboBox();
        dateTextFieldActiveTo = new com.hospital_os.utility.DateComboBox();
        jPanel5 = new javax.swing.JPanel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldSort = new javax.swing.JTextField();
        jComboBoxLookup1 = new com.hosv3.gui.component.HosComboBox();
        jLabelInfection = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(fontFormatTitle1);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/hosv3/property/thai"); // NOI18N
        jLabel4.setText(bundle.getString("LIST_PLAN")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel4.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelICD9code.setFont(defaultFont1);
        jLabelICD9code.setText(bundle.getString("SEARCH")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 11);
        jPanel3.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText(bundle.getString("SEARCH")); // NOI18N
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));

        jTable1.setModel(tableResultsModel1);
        jTable1.setFont(defaultFont1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText(bundle.getString("ACTIVE")); // NOI18N
        jCheckBoxActive.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxActiveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel3.add(jCheckBoxActive, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif"))); // NOI18N
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel6.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif"))); // NOI18N
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel6.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(defaultFont1);
        jLabel1.setText(bundle.getString("CODE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 1, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText(bundle.getString("PTTTYPE")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldPttype.setFont(defaultFont1);
        jTextFieldPttype.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldPttypeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jTextFieldPttype, gridBagConstraints);

        jLabel3.setFont(defaultFont1);
        jLabel3.setText(bundle.getString("NAME")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel3, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        jTextFieldName.setMinimumSize(new java.awt.Dimension(180, 29));
        jTextFieldName.setPreferredSize(new java.awt.Dimension(180, 29));
        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldNameKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jTextFieldName, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText(bundle.getString("PAYER")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        jComboBoxPayer.setFont(defaultFont1);
        jComboBoxPayer.setMaximumSize(new java.awt.Dimension(150, 24));
        jComboBoxPayer.setMinimumSize(new java.awt.Dimension(150, 24));
        jComboBoxPayer.setPreferredSize(new java.awt.Dimension(150, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jComboBoxPayer, gridBagConstraints);

        jLabel7.setFont(defaultFont1);
        jLabel7.setText(bundle.getString("CONTRACT")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel7, gridBagConstraints);

        jComboBoxContract.setFont(defaultFont1);
        jComboBoxContract.setMaximumSize(new java.awt.Dimension(150, 24));
        jComboBoxContract.setMinimumSize(new java.awt.Dimension(150, 24));
        jComboBoxContract.setPreferredSize(new java.awt.Dimension(150, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jComboBoxContract, gridBagConstraints);

        jLabel8.setFont(defaultFont1);
        jLabel8.setText(bundle.getString("PLAN_ACTIVEFROM")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel8, gridBagConstraints);

        jLabel9.setFont(defaultFont1);
        jLabel9.setText(bundle.getString("PLAN_ACTIVETO")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel9, gridBagConstraints);

        jCheckBoxActive1.setFont(defaultFont1);
        jCheckBoxActive1.setText(bundle.getString("ACTIVE")); // NOI18N
        jCheckBoxActive1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBoxActive1KeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jCheckBoxActive1, gridBagConstraints);

        jLabel13.setFont(defaultFont1);
        jLabel13.setText(bundle.getString("MoneyLimit")); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 5, 1, 5);
        jPanel2.add(jLabel13, gridBagConstraints);

        jTextFieldMoneyLimit.setFont(defaultFont1);
        jTextFieldMoneyLimit.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        jTextFieldMoneyLimit.setMinimumSize(new java.awt.Dimension(85, 21));
        jTextFieldMoneyLimit.setPreferredSize(new java.awt.Dimension(85, 21));
        jTextFieldMoneyLimit.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldMoneyLimitKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(jTextFieldMoneyLimit, gridBagConstraints);

        dateTextFieldActiveFrom.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(dateTextFieldActiveFrom, gridBagConstraints);

        dateTextFieldActiveTo.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel2.add(dateTextFieldActiveTo, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jTextFieldCode.setFont(defaultFont1);
        jTextFieldCode.setMaximumSize(new java.awt.Dimension(150, 24));
        jTextFieldCode.setMinimumSize(new java.awt.Dimension(70, 21));
        jTextFieldCode.setPreferredSize(new java.awt.Dimension(70, 21));
        jTextFieldCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldCodeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jTextFieldCode, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("ลำดับ\n");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jLabel5, gridBagConstraints);

        jTextFieldSort.setFont(defaultFont1);
        jTextFieldSort.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jTextFieldSort.setMaximumSize(new java.awt.Dimension(150, 24));
        jTextFieldSort.setMinimumSize(new java.awt.Dimension(30, 21));
        jTextFieldSort.setPreferredSize(new java.awt.Dimension(30, 21));
        jTextFieldSort.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSortKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 5);
        jPanel5.add(jTextFieldSort, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 1, 1, 5);
        jPanel2.add(jPanel5, gridBagConstraints);

        jComboBoxLookup1.setMinimumSize(new java.awt.Dimension(81, 24));
        jComboBoxLookup1.setPreferredSize(new java.awt.Dimension(81, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 5);
        jPanel2.add(jComboBoxLookup1, gridBagConstraints);

        jLabelInfection.setText(bundle.getString("PTTTYPE")); // NOI18N
        jLabelInfection.setToolTipText("รายงาน 18 แฟ้ม 53");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabelInfection, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jButtonAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonAddKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 2);
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDel.setEnabled(false);
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });
        jButtonDel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonDelKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText(bundle.getString("SAVE")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jButtonSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonSaveKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxActiveActionPerformed
        curNext = 0;
        curPrev = 0;
        searchPlan();
    }//GEN-LAST:event_jCheckBoxActiveActionPerformed

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jTable1.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jCheckBoxActive1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBoxActive1KeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            jTextFieldMoneyLimit.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jButtonAdd.requestFocus();
        }
    }//GEN-LAST:event_jCheckBoxActive1KeyReleased

    private void jTextFieldSortKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSortKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jTextFieldPttype.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldSortKeyReleased

    private void jTextFieldMoneyLimitKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldMoneyLimitKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jCheckBoxActive1.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            dateTextFieldActiveTo.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldMoneyLimitKeyReleased

    private void jTextFieldNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldNameKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jComboBoxPayer.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            jTextFieldPttype.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldNameKeyReleased

    private void jTextFieldPttypeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPttypeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jTextFieldName.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            jTextFieldSort.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldPttypeKeyReleased

    private void jTextFieldCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN){
            jTextFieldPttype.requestFocus();
        }
    }//GEN-LAST:event_jTextFieldCodeKeyReleased

    private void jButtonSaveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSaveKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_LEFT){
            jButtonDel.requestFocus();
        }
    }//GEN-LAST:event_jButtonSaveKeyReleased

    private void jButtonDelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonDelKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_LEFT){
            jButtonAdd.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT){
            jButtonSave.requestFocus();
        }
    }//GEN-LAST:event_jButtonDelKeyReleased

    private void jButtonAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAddKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT){
            jButtonDel.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_UP){
            jCheckBoxActive1.requestFocus();
        }
    }//GEN-LAST:event_jButtonAddKeyReleased
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
      deletePlan();
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        curNext = 0;
        curPrev = 0;
        searchPlan();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        getPlan();
        int mode = theSetupControl.savePlan(thePlan);
        if(mode > 0)
        {
            setEnableAll(false);
            int count = next - prev;
            curNext = next - count;
            curPrev = prev - offset;
            searchPlan();
            refreshDepPanel();
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
       setPlan(null);
    }//GEN-LAST:event_jButtonAddActionPerformed
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextPlan();
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
       prevPlan();
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        curNext = 0;
        curPrev = 0;
        searchPlan();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        int row = this.jTable1.getSelectedRow();
        String of = (String)this.jTable1.getValueAt(row, 0);
        this.jTextFieldCode.setText(of);
        this.jTextFieldName.setText((String)this.jTable1.getValueAt(row, 1));
        for(int i =0 ; i< vPlan.size() ; i++)
        {
            thePlan = (Plan)vPlan.get(i);
            if(of.equals(thePlan.plan_id))
                break;
        }
        this.setPlan(thePlan);
    }//GEN-LAST:event_jTable1MouseReleased
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
       jTable1MouseReleased(null);
    }//GEN-LAST:event_jTable1KeyReleased
    
    private void nextPlan()
    {   
        setPlanV(vPlan,1);
    }
    
    private void prevPlan()
    {  
        setPlanV(vPlan,0);
    }
    private void deletePlan()
    {   
        theSetupControl.deletePlan(thePlan);  
        setEnableAll(false);
        setPlan(null);
        int count = next - prev;
        curNext = next - count;
        curPrev = prev - offset;
        searchPlan();
        refreshDepPanel();
    }
    private void setEnableAll(boolean var)
    {
        jTextFieldCode.setEditable(var);
        jTextFieldPttype.setEditable(var);
        jTextFieldName.setEditable(var);
        dateTextFieldActiveFrom.setEnabled(var);
        dateTextFieldActiveTo.setEnabled(var);
        jTextFieldMoneyLimit.setEditable(var);
        jButtonDel.setEnabled(var);
        jButtonSave.setEnabled(var); 
    }
    
    private void searchPlan()
    {
        next = curNext;
        prev =  curPrev;
        String search = jTextFieldSCode.getText();
        String active = "0";
        if(jCheckBoxActive.isSelected())
            active = "1";
        vPlan =  theSetupControl.listPlan(search,active);
        setPlanV(vPlan,1);
    }
    
    private void setPlanV(Vector plan,int off)
    {
        Plan of = new Plan();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(plan != null && plan.size() != 0)
        {
            if(off == 1)
            {
                p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vPlan.size())
                {
                    next = vPlan.size();
                    count = next - prev;
                }
                if(count == 0)
                {
                    prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {
                next = prev;
                prev = prev - offset;
                if(prev <=0)
                {
                    prev = 0;
                     next = offset;
                }
                if(next >= vPlan.size())
                {

                    next= vPlan.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (Plan)plan.get(i+prev);
                
                tm.setValueAt(of.plan_id,i,0);
                tm.setValueAt(of.description,i,1);
            }
            jTable1.setModel(tm);
            
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTable1.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
    }
    /**
        //henbe comment 100253 ton ปรับ pattern ได้ถูกต้อง
     * @param planz
     */
    public void setPlan(Plan planz)
    {
        thePlan = planz;
        if(thePlan == null)
        {
            thePlan = new Plan();
        }
        setEnableAll(true);
        jTextFieldCode.setText(thePlan.plan_id);
        jTextFieldName.setText(thePlan.description);
        jTextFieldPttype.setText(thePlan.pttype);
        jTextFieldMoneyLimit.setText(thePlan.money_limit);
        jTextFieldSort.setText(thePlan.sort_index);
        if(thePlan.active_from.length()>=10)
            dateTextFieldActiveFrom.setText(DateUtil.convertFieldDate(thePlan.active_from.substring(0,10)));
        else
            dateTextFieldActiveFrom.setText("");
        if(thePlan.active_to.length()>=10)
            dateTextFieldActiveTo.setText(DateUtil.convertFieldDate(thePlan.active_to.substring(0,10)));
        else
            dateTextFieldActiveTo.setText("");
        
        Gutil.setGuiData(jComboBoxContract, thePlan.contract_id);
        Gutil.setGuiData(jComboBoxPayer, thePlan.payer_id);
        if(thePlan.active.equals("1"))
            jCheckBoxActive1.setSelected(true);
        else
            jCheckBoxActive1.setSelected(false);
        Gutil.setGuiData(jComboBoxLookup1,thePlan.pttype53);
    }
    public Plan getPlan()
    {
        if(thePlan==null)
            thePlan = new Plan();
        thePlan.plan_id = Gutil.getGuiData(jTextFieldCode);
        thePlan.description = Gutil.getGuiData(jTextFieldName);
        thePlan.active_from = dateTextFieldActiveFrom.getText();
        thePlan.active_to = dateTextFieldActiveTo.getText();
        thePlan.contract_id = Gutil.getGuiData(jComboBoxContract);
        thePlan.money_limit = Gutil.getGuiData(jTextFieldMoneyLimit);
        thePlan.payer_id =Gutil.getGuiData(jComboBoxPayer);
        thePlan.pttype =Gutil.getGuiData(jTextFieldPttype);
        thePlan.sort_index =Gutil.getGuiData(jTextFieldSort);
        if(jCheckBoxActive1.isSelected())
            thePlan.active = "1";
        else    thePlan.active ="0";
        thePlan.pttype53 =Gutil.getGuiData(jComboBoxLookup1);
        return thePlan;
    }
    public void notifyreFrashPanel()
    {        
        setupLookup();
    }
    
    public void notifysetEnableForLift(boolean b)
    {
        jButtonDel.setVisible(b);
    }
    
    public int editOption(Option option)
    {
        Constant.println("PanelSetupPlan function is not use.");
        return -1;
    }
    
    public Vector listOptionAll()
    {
        Constant.println("PanelSetupPlan function is not use.");
        return null;
    }
    
    public void reFrashPanel()
    {
    }
    
    public Option readOption()
    {
        Constant.println("PanelSetupPlan function is not use.");
        return null;
    }
    
    public int saveOption(Option option)
    {
        Constant.println("PanelSetupPlan function is not use.");
        return -1;
    }
    
    public void setEnableForLift(boolean b)
    {
    }
    
    /**
     *เพิ่ม panel ที่เกิดผลกระทบเมื่อมีการเปลี่ยนแปลงข้อมูลใน panel นี้
     *ฟังก์ชันถูกเรียกในคลาส HosPanelSetup
     *@author aut
     *@param panel ลูก ที่ imp interface ManageOptionReq
     */
    public void addDepPanel(ManageOptionReq panel) {
        if(panel!=null)
            depPanelV.add(panel);
    }

    
    public void refreshDepPanel() {
        for(int i=0;i<depPanelV.size();i++) {
            ((ManageOptionReq)depPanelV.get(i)).notifyreFrashPanel();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.DateComboBox dateTextFieldActiveFrom;
    private com.hospital_os.utility.DateComboBox dateTextFieldActiveTo;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxActive1;
    private javax.swing.JComboBox jComboBoxContract;
    private com.hosv3.gui.component.HosComboBox jComboBoxLookup1;
    private javax.swing.JComboBox jComboBoxPayer;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JLabel jLabelInfection;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldMoneyLimit;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPttype;
    private javax.swing.JTextField jTextFieldSCode;
    private javax.swing.JTextField jTextFieldSort;
    private com.hospital_os.utility.TableResultsModel tableResultsModel1;
    // End of variables declaration//GEN-END:variables
    
    
}
