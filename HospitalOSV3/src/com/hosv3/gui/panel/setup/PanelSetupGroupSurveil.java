/*
 * PanelSetupICD10GroupSurveil.java
 *
 * Created on 8 กันยายน 2551, 15:09 น.
 */

package com.hosv3.gui.panel.setup;

import com.hospital_os.object.GroupSurveil;
import com.hospital_os.object.ICD10GroupSurveil;
import com.hospital_os.object.Option;
import com.hospital_os.utility.Constant;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.control.HosControl;
import com.hosv3.control.SetupControl;
import com.hosv3.control.lookup.Icd10GroupSurveilCodeLookup;
import com.hosv3.control.lookup.Icd10GroupSurveilGroupLookup;
import com.hosv3.object.HosObject;
import com.hosv3.usecase.setup.ManageICD10GroupSurveilReq;
import com.hosv3.usecase.setup.ManageOptionReq;
import com.hosv3.utility.GuiLang;
import com.hosv3.utility.connection.UpdateStatus;
import java.util.Vector;

/**
 *
 * @author  iPu
 */
public class PanelSetupGroupSurveil extends javax.swing.JPanel implements
        ManageOptionReq,ManageICD10GroupSurveilReq
{    
    Vector depPanelV = new Vector();
    UpdateStatus theUS;
    SetupControl theSetupControl;
    public GroupSurveil theGroupSurveil;
    public Vector vGroupSurveil;
    
    ICD10GroupSurveil theICD10GroupSurveil;
    Vector vICD10AllGroup;
    Vector vICD10SpecifyCode;
    HosObject theHO;
    
    int offset = 22;
    int next = 0;
    int prev = 0;
    int row = 0;
    String[] col = {"SurveilCode","EngName","ThaiName","Icd10Code"};
    String col_icd[] = {"Icd10Code"};
    
    /** Creates new form PanelSetupICD10GroupSurveil */
    public PanelSetupGroupSurveil()
    {
        initComponents();
        setLanguage();
    }
    
    public PanelSetupGroupSurveil(HosControl hc,UpdateStatus us)
    {
        initComponents();
        setLanguage();
        setControl(hc,us);
    }
    
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabelTitle);        
        GuiLang.setLanguage(jLabelSearch);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jCheckBoxSearchActive);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabelCode);
        GuiLang.setLanguage(jLabelEngname);
        GuiLang.setLanguage(jLabelThainame);
        GuiLang.setLanguage(jCheckBoxActive);
        GuiLang.setLanguage(jLabelGroup);
        GuiLang.setLanguage(jLabelSpecify);
        GuiLang.setLanguage(jButtonSave);
        GuiLang.setLanguage(jPanelICD10Surveil);
        GuiLang.setLanguage(col);
        GuiLang.setLanguage(col_icd);
    }
    
    public void setControl(HosControl hc,UpdateStatus us)
    {
        theUS = us;
        theHO = hc.theHO;
        theSetupControl = hc.theSetupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        hc.theHS.theICD10GroupSurveilSubject.attachICD10GSGroup(this);
        
        setEnableAll(false);
        jButtonAdd.setEnabled(true);
        jButtonSave.setEnabled(false);
        jCheckBoxSearchActive.setSelected(true);
        
        balloonTextFieldGroupICD10.setControl(new Icd10GroupSurveilGroupLookup(hc.theLookupControl),theUS.getJFrame());
        balloonTextFieldGroupICD10.setEControl(new Icd10GroupSurveilGroupLookup(theSetupControl));
        hc.theHS.theBalloonSubject.attachBalloon(balloonTextFieldGroupICD10);
        
        balloonTextFieldSpecICD10.setControl(new Icd10GroupSurveilCodeLookup(hc.theLookupControl),theUS.getJFrame());
        balloonTextFieldSpecICD10.setEControl(new Icd10GroupSurveilCodeLookup(theSetupControl));
        hc.theHS.theBalloonSubject.attachBalloon(balloonTextFieldSpecICD10);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        headFont1 = new com.hospital_os.gui.font.HeadFont();
        jPanelTitle = new javax.swing.JPanel();
        jLabelTitle = new javax.swing.JLabel();
        jPanelSearchList = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jCheckBoxSearchActive = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPaneList = new javax.swing.JScrollPane();
        jTableListData = new com.hosv3.gui.component.HJTableSort();
        jPanelDescription = new javax.swing.JPanel();
        jPanelGroupChronic = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jTextFieldGroupCode = new javax.swing.JTextField();
        jLabelEngname = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaEngName = new javax.swing.JTextArea();
        jLabelThainame = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaThaiName = new javax.swing.JTextArea();
        jButtonAdd = new javax.swing.JButton();
        jCheckBoxActive = new javax.swing.JCheckBox();
        jPanelICD10Surveil = new javax.swing.JPanel();
        jLabelGroup = new javax.swing.JLabel();
        balloonTextFieldGroupICD10 = new com.hosv3.gui.component.BalloonTextField2();
        jButtonDeleteGroupICD10 = new javax.swing.JButton();
        jLabelSpecify = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableGroupICD10 = new javax.swing.JTable();
        balloonTextFieldSpecICD10 = new com.hosv3.gui.component.BalloonTextField2();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableSpecICD10 = new javax.swing.JTable();
        jButtonDeleteSpecICD10 = new javax.swing.JButton();
        jPanelSave = new javax.swing.JPanel();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanelTitle.setLayout(new java.awt.GridBagLayout());

        jLabelTitle.setFont(fontFormatTitle1);
        jLabelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelTitle.setText("PANEL_SETUP_SURVEIL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelTitle.add(jLabelTitle, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanelTitle, gridBagConstraints);

        jPanelSearchList.setLayout(new java.awt.GridBagLayout());

        jPanelSearchList.setMinimumSize(new java.awt.Dimension(300, 400));
        jPanelSearchList.setPreferredSize(new java.awt.Dimension(300, 400));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setFont(defaultFont1);
        jLabelSearch.setText("Search");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanelSearch.add(jLabelSearch, gridBagConstraints);

        jTextFieldSearch.setFont(defaultFont1);
        jTextFieldSearch.setMinimumSize(new java.awt.Dimension(11, 24));
        jTextFieldSearch.setPreferredSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText("Search");
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        jCheckBoxSearchActive.setFont(defaultFont1);
        jCheckBoxSearchActive.setSelected(true);
        jCheckBoxSearchActive.setText("Active");
        jCheckBoxSearchActive.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxSearchActive.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxSearchActive.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBoxSearchActiveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelSearch.add(jCheckBoxSearchActive, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButton2.setFont(defaultFont1);
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButton2.setMaximumSize(new java.awt.Dimension(24, 24));
        jButton2.setMinimumSize(new java.awt.Dimension(24, 24));
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jButton2, gridBagConstraints);

        jButton3.setFont(defaultFont1);
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButton3.setMaximumSize(new java.awt.Dimension(24, 24));
        jButton3.setMinimumSize(new java.awt.Dimension(24, 24));
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel1.add(jButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanelSearch.add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelSearchList.add(jPanelSearch, gridBagConstraints);

        jTableListData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTableListData.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTableListDataKeyReleased(evt);
            }
        });
        jTableListData.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jTableListDataMouseReleased(evt);
            }
        });

        jScrollPaneList.setViewportView(jTableListData);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelSearchList.add(jScrollPaneList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        add(jPanelSearchList, gridBagConstraints);

        jPanelDescription.setLayout(new java.awt.GridBagLayout());

        jPanelDescription.setMinimumSize(new java.awt.Dimension(350, 400));
        jPanelDescription.setPreferredSize(new java.awt.Dimension(350, 400));
        jPanelGroupChronic.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setFont(defaultFont1);
        jLabelCode.setText("SurveilCode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jLabelCode, gridBagConstraints);

        jTextFieldGroupCode.setFont(defaultFont1);
        jTextFieldGroupCode.setMinimumSize(new java.awt.Dimension(11, 24));
        jTextFieldGroupCode.setPreferredSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jTextFieldGroupCode, gridBagConstraints);

        jLabelEngname.setFont(defaultFont1);
        jLabelEngname.setText("EngName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jLabelEngname, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(150, 60));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(150, 60));
        jTextAreaEngName.setColumns(10);
        jTextAreaEngName.setFont(defaultFont1);
        jTextAreaEngName.setLineWrap(true);
        jTextAreaEngName.setRows(5);
        jTextAreaEngName.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextAreaEngName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jScrollPane2, gridBagConstraints);

        jLabelThainame.setFont(defaultFont1);
        jLabelThainame.setText("ThaiName");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelGroupChronic.add(jLabelThainame, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(150, 60));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(150, 60));
        jTextAreaThaiName.setColumns(15);
        jTextAreaThaiName.setFont(defaultFont1);
        jTextAreaThaiName.setLineWrap(true);
        jTextAreaThaiName.setRows(5);
        jTextAreaThaiName.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextAreaThaiName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanelGroupChronic.add(jScrollPane1, gridBagConstraints);

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelGroupChronic.add(jButtonAdd, gridBagConstraints);

        jCheckBoxActive.setFont(defaultFont1);
        jCheckBoxActive.setSelected(true);
        jCheckBoxActive.setText("Active");
        jCheckBoxActive.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxActive.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanelGroupChronic.add(jCheckBoxActive, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanelDescription.add(jPanelGroupChronic, gridBagConstraints);

        jPanelICD10Surveil.setLayout(new java.awt.GridBagLayout());

        jPanelICD10Surveil.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Icd10Code", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jLabelGroup.setFont(defaultFont1);
        jLabelGroup.setText("AllGroup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanelICD10Surveil.add(jLabelGroup, gridBagConstraints);

        balloonTextFieldGroupICD10.setFont(defaultFont1);
        balloonTextFieldGroupICD10.setMinimumSize(new java.awt.Dimension(11, 24));
        balloonTextFieldGroupICD10.setPreferredSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelICD10Surveil.add(balloonTextFieldGroupICD10, gridBagConstraints);

        jButtonDeleteGroupICD10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDeleteGroupICD10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteGroupICD10.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteGroupICD10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDeleteGroupICD10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanelICD10Surveil.add(jButtonDeleteGroupICD10, gridBagConstraints);

        jLabelSpecify.setFont(defaultFont1);
        jLabelSpecify.setText("SpecifyCode");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(10, 0, 0, 0);
        jPanelICD10Surveil.add(jLabelSpecify, gridBagConstraints);

        jTableGroupICD10.setFont(defaultFont1);
        jTableGroupICD10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane4.setViewportView(jTableGroupICD10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelICD10Surveil.add(jScrollPane4, gridBagConstraints);

        balloonTextFieldSpecICD10.setFont(defaultFont1);
        balloonTextFieldSpecICD10.setMinimumSize(new java.awt.Dimension(11, 24));
        balloonTextFieldSpecICD10.setPreferredSize(new java.awt.Dimension(11, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 0);
        jPanelICD10Surveil.add(balloonTextFieldSpecICD10, gridBagConstraints);

        jTableSpecICD10.setFont(defaultFont1);
        jTableSpecICD10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane3.setViewportView(jTableSpecICD10);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelICD10Surveil.add(jScrollPane3, gridBagConstraints);

        jButtonDeleteSpecICD10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/minus16.gif")));
        jButtonDeleteSpecICD10.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteSpecICD10.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteSpecICD10.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDeleteSpecICD10ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 5, 0, 5);
        jPanelICD10Surveil.add(jButtonDeleteSpecICD10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDescription.add(jPanelICD10Surveil, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanelDescription, gridBagConstraints);

        jPanelSave.setLayout(new java.awt.GridBagLayout());

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText("Save");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        jPanelSave.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanelSave, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTableListDataKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTableListDataKeyReleased
    {//GEN-HEADEREND:event_jTableListDataKeyReleased
        selectListGroupSurveil();
    }//GEN-LAST:event_jTableListDataKeyReleased

    private void jTableListDataMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableListDataMouseReleased
    {//GEN-HEADEREND:event_jTableListDataMouseReleased
        selectListGroupSurveil();
    }//GEN-LAST:event_jTableListDataMouseReleased

    private void jButtonDeleteSpecICD10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteSpecICD10ActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteSpecICD10ActionPerformed
        deleteSpecICD10();
    }//GEN-LAST:event_jButtonDeleteSpecICD10ActionPerformed

    private void jButtonDeleteGroupICD10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteGroupICD10ActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteGroupICD10ActionPerformed
        deleteGroupICD10();
    }//GEN-LAST:event_jButtonDeleteGroupICD10ActionPerformed
    
    private void jCheckBoxSearchActiveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxSearchActiveActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxSearchActiveActionPerformed
        searchGroupSurveil();
    }//GEN-LAST:event_jCheckBoxSearchActiveActionPerformed
    
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        getICD10AllGroupV();
        saveGroupSurveil();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        setGroupSurveil(null);
        setTableGroupICD10(null);
        setTableSpecICD10(null);
        theHO.vICD10GSGroup = new Vector();
        theHO.vICD10GSSpecifyCode = new Vector();
        setEnableAll(true);
        jTableListData.clearSelection();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        nextGroupSurveil();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        prevGroupSurveil();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        searchGroupSurveil();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void setEnableAll(boolean var)
    {
        jTextFieldGroupCode.setEnabled(var);
        jTextAreaThaiName.setEnabled(var);
        jTextAreaEngName.setEnabled(var);
        jButtonSave.setEnabled(var);
    }
    private void nextGroupSurveil()
    {
        if(vGroupSurveil.size() < this.next)
        {
            theUS.setStatus("ข้อมูลที่แสดงเป็นหน้าสุดท้ายแล้ว",UpdateStatus.WARNING);
            return;
        }
        setTable(vGroupSurveil,1);
    }
    private void prevGroupSurveil()
    {
        if(this.prev == 0)
        {
            theUS.setStatus("ข้อมูลที่แสดงเป็นหน้าแรกแล้ว",UpdateStatus.WARNING);
            return;
        }
        setTable(vGroupSurveil,0);
    }
    
    private Vector getICD10AllGroupV()
    {
        return null;
    }
    
    private Vector getICD10SpecifyCodeV()
    {
        return null;
    }
   
    /*
    * เพื่อแสดงข้อมูลจาก listในหน้าจอ
    * input  : vector vGroupSurveil
    * output :
    * @update : pu 10/09/08
    * 
    */
    private void selectListGroupSurveil()
    {
        row = jTableListData.getSelectedRow();
        setEnableAll(true);
        theGroupSurveil = (GroupSurveil)vGroupSurveil.get(row+prev);
        setGroupSurveil(theGroupSurveil);
        if(theGroupSurveil != null)
        {
            this.theSetupControl.listICD10GroupSurveilGroup(theGroupSurveil);
            this.theSetupControl.listICD10GroupSurveilSpecifyCode(theGroupSurveil);
        }
    }
    
    /**
     *set ค่า ICD10 ประเภททั้งกลุ่มของกลุ่มโรค Surveil
     *@author pu
     *@date 10/09/08
     *
     */
    private void setTableGroupICD10(Vector vc)
    {
        this.vICD10AllGroup = vc;
        if(vc == null || vc.isEmpty())
        {
            TaBleModel tm = new TaBleModel(col_icd,0);
            jTableGroupICD10.setModel(tm);
            return;
        }
        
        TaBleModel tm = new TaBleModel(col_icd,vc.size());
        for(int i=0 ;i<vc.size();i++)
        {
            ICD10GroupSurveil of = (ICD10GroupSurveil)vc.get(i);
            tm.setValueAt(of.icd_number,i,0);
        }
        jTableGroupICD10.setModel(tm);
    }
    
    /**
     *set ค่า ICD10 ประเภทเฉพาะรหัสของกลุ่มโรค Surveil
     *@author pu
     *@date 10/09/08
     *
     */
    private void setTableSpecICD10(Vector vc)
    {
        this.vICD10SpecifyCode = vc;
        if(vc==null || vc.isEmpty())
        {
            TaBleModel tm = new TaBleModel(col_icd,0);
            jTableSpecICD10.setModel(tm);
            return;
        }
        TaBleModel tm = new TaBleModel(col_icd,vc.size());
        for(int i=0 ;i<vc.size();i++)
        {
            ICD10GroupSurveil of = (ICD10GroupSurveil)vc.get(i);
            tm.setValueAt(of.icd_number,i,0);
        }
        jTableSpecICD10.setModel(tm);
    }
    /* เพื่อทำการแสดงค่าข้อมูลในหน้าจอ
    /* input  : object theGrouSurveil
    /* output :
    */
     private void setGroupSurveil(GroupSurveil gs)
    {
        theGroupSurveil = gs;
        if(theGroupSurveil == null)
            theGroupSurveil = new GroupSurveil();
        jTextFieldGroupCode.setText(theGroupSurveil.group_surveil_id);
        jTextAreaEngName.setText(theGroupSurveil.description_en);
        jTextAreaThaiName.setText(theGroupSurveil.description_th);
        jCheckBoxActive.setSelected(theGroupSurveil.getActive());
    }
     
      /*
       * เพื่อทำการ set ค่าให้กับ object theSurveil
       * Input  : ข้อมูลจาก text
       * output : Object theGroupSurveil
       */
     private GroupSurveil getGroupSurveil()
     {
         if(theGroupSurveil == null)
             theGroupSurveil = new GroupSurveil();
         theGroupSurveil.group_surveil_id = jTextFieldGroupCode.getText();
         theGroupSurveil.description_th = jTextAreaThaiName.getText();
         theGroupSurveil.description_en = jTextAreaEngName.getText();
         theGroupSurveil.setActive(jCheckBoxActive.isSelected());
         return theGroupSurveil;
     }

     
    private void searchGroupSurveil()
    {   next = 0;
        prev = 0;
        String search = Gutil.CheckReservedWords(jTextFieldSearch.getText());
        String active = new String();
        if(jCheckBoxSearchActive.isSelected())
        {
            active = "1";
        }
        else
        {
            active = "0" ;
        }
        this.vGroupSurveil = theSetupControl.listGroupSurveilAll(search, active);
        setTable(vGroupSurveil,1);
    }
    private void setTable(Vector vGroup,int off)
    {
        GroupSurveil of = new GroupSurveil();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(vGroup != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vGroup.size())
                {   next = vGroup.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                     next = offset;
                }
                if(next >= vGroup.size())
                {   next= vGroup.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (GroupSurveil)vGroup.get(i+prev);
                tm.setValueAt(of.group_surveil_id,i,0);
                tm.setValueAt(of.description_th,i,1);
                tm.setValueAt(of.description_en,i, 2);
                tm.setValueAt(this.theSetupControl.getStringICD10Surveil(of).toString(),i,3);
            }
            jTableListData.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTableListData.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTableListData.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTableListData.getColumnModel().getColumn(1).setPreferredWidth(175);
        jTableListData.getColumnModel().getColumn(2).setPreferredWidth(175);
        jTableListData.getColumnModel().getColumn(3).setPreferredWidth(175);
    }
    
      /*
       * เพื่อทำการบันทึกกลุ่มโรคเรื้อรัง
       * input  : object theGroupSurveil
       * output : ผลการบันทึกข้อมูล
       */
    private void saveGroupSurveil()
    {
        int res = theSetupControl.saveGroupSurveilICD10(getGroupSurveil(),this.vICD10AllGroup,this.vICD10SpecifyCode);
        if(res>0)
        {
            setEnableAll(false);
            searchGroupSurveil();
            refreshDepPanel();
        }
    }
    
    private void deleteGroupICD10()
    {
        int rows[] = jTableGroupICD10.getSelectedRows();
        theSetupControl.deleteICD10GroupSurveil(rows,vICD10AllGroup,ICD10GroupSurveil.GROUP_TYPE);
        searchGroupSurveil();
    }
    
    private void deleteSpecICD10()
    {
        int rows[] = jTableSpecICD10.getSelectedRows();
        theSetupControl.deleteICD10GroupSurveil(rows,vICD10SpecifyCode,ICD10GroupSurveil.CODE_TYPE);
        searchGroupSurveil();
        
    }
    public void notifysetEnableForLift(boolean b)
    {
    }

    public int editOption(Option option)
    {
        Constant.println("PanelSetupICD10GroupSurveil function is not use.");
        return -1;
    }

    public Vector listOptionAll()
    {
        Constant.println("PanelSetupICD10GroupSurveil function is not use.");
        return null;
    }

    public void notifyreFrashPanel()
    {
    }

    public Option readOption()
    {
        Constant.println("PanelSetupICD10GroupSurveil function is not use.");
        return null;
    }

    public void reFrashPanel()
    {
    }

    public int saveOption(Option option)
    {     
        Constant.println("PanelSetupICD10GroupSurveil function is not use.");
        return -1;
    }

    public void setEnableForLift(boolean b)
    {
    }
    
    public void refreshDepPanel()
    {
        for(int i=0;i<depPanelV.size();i++)
        {
            ((ManageOptionReq)depPanelV.get(i)).notifyreFrashPanel();
        }
    }
    /**
     *เพิ่ม panel ที่เกิดผลกระทบเมื่อมีการเปลี่ยนแปลงข้อมูลใน panel นี้
     *ฟังก์ชันถูกเรียกในคลาส HosPanelSetup
     *@author pu
     *@param panel ลูก ที่ imp interface ManageOptionReq
     */
    public void addDepPanel(ManageOptionReq panel)
    {
        if(panel!=null)
            depPanelV.add(panel);
    }


    public void notifySetTableICD10GSGroup(String str, int status)
    {
        setTableGroupICD10(theHO.vICD10GSGroup);
        balloonTextFieldGroupICD10.setText("");
    }

    public void notifySetTableICD10GSSpecifyCode(String str, int status)
    {
        setTableSpecICD10(theHO.vICD10GSSpecifyCode);
        balloonTextFieldSpecICD10.setText("");
    }



    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hosv3.gui.component.BalloonTextField2 balloonTextFieldGroupICD10;
    private com.hosv3.gui.component.BalloonTextField2 balloonTextFieldSpecICD10;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private com.hospital_os.gui.font.HeadFont headFont1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDeleteGroupICD10;
    private javax.swing.JButton jButtonDeleteSpecICD10;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JCheckBox jCheckBoxActive;
    private javax.swing.JCheckBox jCheckBoxSearchActive;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelEngname;
    private javax.swing.JLabel jLabelGroup;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSpecify;
    private javax.swing.JLabel jLabelThainame;
    private javax.swing.JLabel jLabelTitle;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelDescription;
    private javax.swing.JPanel jPanelGroupChronic;
    private javax.swing.JPanel jPanelICD10Surveil;
    private javax.swing.JPanel jPanelSave;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelSearchList;
    private javax.swing.JPanel jPanelTitle;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPaneList;
    private javax.swing.JTable jTableGroupICD10;
    private com.hosv3.gui.component.HJTableSort jTableListData;
    private javax.swing.JTable jTableSpecICD10;
    private javax.swing.JTextArea jTextAreaEngName;
    private javax.swing.JTextArea jTextAreaThaiName;
    private javax.swing.JTextField jTextFieldGroupCode;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
