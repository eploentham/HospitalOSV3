/*
 * PanelSetupOrderItem.java
 *
 * Created on 14 ตุลาคม 2546, 14:44 น.
 */
package com.hosv3.gui.panel.setup;

import java.awt.event.*;
import java.util.Vector;

import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.utility.*;
import com.hosv3.gui.dialog.*;
import com.hosv3.subject.*;
import com.hosv3.utility.connection.*;
import com.hospital_os.utility.TaBleModel;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.object.*;
import javax.swing.JFrame;

/**
 *
 * @Panel author : amp 
 */
public class PanelSetupItemDose extends javax.swing.JPanel implements ManageOptionReq {

    LookupControl theLookupControl;
    UpdateStatus theUS;
    SetupControl theSetupControl;
    SetupSubject theSetupSubject;
    HosSubject theHS;
    Item theItem;
    Drug theDrug;
    int offset = 20;
    int next = 0;
    int prev = 0;
    int saved = 0; // 0 คือ ไม่สามารถ insertได้ 1 คือ insert ได้ 
    int category = 0;
    /** pu : 25/07/2549 : เก็บ Index ของ Item ตัวล่างสุดของหน้าปัจจุบัน*/
    int curNext = 0;
    /** pu : 25/07/2549 : เก็บ Index ของ Item ตัวล่างสุดของหน้าก่อนหน้าปัจจุบัน*/
    int curPrev = 0;
    String[] col = {"รหัส", "ชื่อ"};
    String[] col_list = {"รายละเอียด Dose"};
    int currentRow = 0;
    //amp:13/03/2549 เพื่อใช้ตรวจสอบว่ามีการย้ายกลุ่มจากยาเป็นอย่างอื่นหรือไม่
    boolean is_drug = false;
    private Vector vDrug;
    private Vector vItem;
    private String current_id;

    public PanelSetupItemDose() {
        initComponents();
        setLanguage();
    }

    public PanelSetupItemDose(HosControl hc, UpdateStatus us) {
        initComponents();
        setLanguage();
        setControl(hc, us);
    }

    public static void main(String[] argc) {
        HosControl theHC = new HosControl();
        PanelSetupItemDose panelSetupItem = new PanelSetupItemDose(theHC, null);
        JFrame jf = new JFrame();
        jf.getContentPane().add(panelSetupItem);
        jf.setVisible(true);
    }
    /////////////////////Use this for decrease memory usage

    public void setControl(HosControl hc, UpdateStatus us) {
        theUS = us; 
        theHS = hc.theHS;
        jPanelDrugDescription.setControl(hc,us);
        theLookupControl = hc.theLookupControl;
        theSetupControl = hc.theSetupControl;
        theSetupSubject = hc.theHS.theSetupSubject;
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        Vector catagolyitemgroup = theLookupControl.listCategoryGroupItem(CategoryGroup.isDrug());
        ComboboxModel.initComboBox(jComboBoxSCategory, catagolyitemgroup);
        setEnabled(false);

        theSetupSubject.addItem(this);
        theSetupSubject.addItemLab(this);
        theSetupSubject.addpanelrefrash(this);

    }

    /**
     *@Author : amp
     *@date : 29/02/2549
     *@see : จัดการเกี่ยวกับภาษา    
     */
    private void setLanguage() {
        for(int i=0;i<this.getComponentCount();i++){
            GuiLang.setLanguage(this.getComponent(i));
        }
    }

    public void setupLookup() {
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupLab = new javax.swing.ButtonGroup();
        buttonGroupLabResultType = new javax.swing.ButtonGroup();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        buttonGroupBeginWith = new javax.swing.ButtonGroup();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroupNormalValue = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jTextFieldSCode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableItem = new com.hosv3.gui.component.HJTableSort();
        jPanel17 = new javax.swing.JPanel();
        jCheckBoxSearchGroup = new javax.swing.JCheckBox();
        jComboBoxSCategory = new javax.swing.JComboBox();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jCheckBoxS = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableDrug = new com.hosv3.gui.component.HJTableSort();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jPanelDrugDescription = new com.hosv3.gui.panel.detail.PDItemDrug();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(fontFormatTitle1);
        jLabel4.setText("กำหนด Dose ยา wait database update");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel4.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));

        jTableItem.setFont(defaultFont1);
        jTableItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableItemMouseReleased(evt);
            }
        });
        jTableItem.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableItemKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTableItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jPanel17.setLayout(new java.awt.GridBagLayout());

        jCheckBoxSearchGroup.setFont(defaultFont1);
        jCheckBoxSearchGroup.setText("กลุ่ม");
        jCheckBoxSearchGroup.setMaximumSize(new java.awt.Dimension(1, 1));
        jCheckBoxSearchGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSearchGroupActionPerformed(evt);
            }
        });
        jCheckBoxSearchGroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBoxSearchGroupMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel17.add(jCheckBoxSearchGroup, gridBagConstraints);

        jComboBoxSCategory.setFont(defaultFont1);
        jComboBoxSCategory.setEnabled(false);
        jComboBoxSCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxSCategoryActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel17.add(jComboBoxSCategory, gridBagConstraints);

        jButtonPrev.setFont(defaultFont1);
        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif"))); // NOI18N
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 0, 0);
        jPanel17.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setFont(defaultFont1);
        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif"))); // NOI18N
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        jPanel17.add(jButtonNext, gridBagConstraints);

        jCheckBoxS.setFont(defaultFont1);
        jCheckBoxS.setSelected(true);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/hosv3/property/thai"); // NOI18N
        jCheckBoxS.setText(bundle.getString("ACTIVE")); // NOI18N
        jCheckBoxS.setMaximumSize(new java.awt.Dimension(1, 1));
        jCheckBoxS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 5, 5);
        jPanel17.add(jCheckBoxS, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel3.add(jPanel17, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(100, 150));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(100, 150));

        jTableDrug.setFont(defaultFont1);
        jTableDrug.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableDrugMouseReleased(evt);
            }
        });
        jTableDrug.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableDrugKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(jTableDrug);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel3.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(7, 5, 5, 3);
        add(jPanel3, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText(bundle.getString("SAVE")); // NOI18N
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

        jPanelDrugDescription.setBorder(javax.swing.BorderFactory.createTitledBorder("วิธีการใช้ยา"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        add(jPanelDrugDescription, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSActionPerformed
        //pu : 25/07/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการตรวจรักษา
        this.curNext = 0;
        this.curPrev = 0;
        searchItemGroup();
    }//GEN-LAST:event_jCheckBoxSActionPerformed

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSCodeKeyReleased
        /**
         * สามารถค้นหารายการตรวจรักษา โดยการระบุคำค้นได้ช่องค้นหา แล้วค้นหาให้อัตโนมัติ (ไม่ต้องกด Enter ก็ได้)
         * เลือกรายการตรวจรักษา ด้วยการกดปุ่มลูกศรขึ้น-ลง หลังจากค้นหารายการตรวจรักษาแล้ว
         * @Modifier pu
         * @Date 25/07/2vDrug549
         */
        if (evt.getKeyCode() == KeyEvent.VK_DOWN) {
            jTableItem.requestFocus();
            jTableItem.setRowSelectionInterval(0, 0);
            selectItemGroup();
        }
        if (jTextFieldSCode.getText().length() > 2) {
            this.jTextFieldSCodeActionPerformed(null);
        }
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jComboBoxSCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxSCategoryActionPerformed
        //pu : 25/07/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการตรวจรักษา
        this.curNext = 0;
        this.curPrev = 0;
        searchItemGroup();
    }//GEN-LAST:event_jComboBoxSCategoryActionPerformed

    private void jCheckBoxSearchGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBoxSearchGroupMouseClicked
        checkItemGroup();
    }//GEN-LAST:event_jCheckBoxSearchGroupMouseClicked

    private void jCheckBoxSearchGroupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSearchGroupActionPerformed
        //pu : 25/07/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการตรวจรักษา
        this.curNext = 0;
        this.curPrev = 0;
        searchItemGroup();
    }//GEN-LAST:event_jCheckBoxSearchGroupActionPerformed

    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        deleteItemGroup();
    }//GEN-LAST:event_jButtonDelActionPerformed

    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        //pu : 25/07/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบันของรายการตรวจรักษา
        this.curNext = 0;
        this.curPrev = 0;
        searchItemGroup();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        Drug drug = jPanelDrugDescription.getDrug();
        int ret = theSetupControl.saveItemDrug(theItem,drug);
        current_id = drug.getObjectId();
        this.jTableItemMouseReleased(null);
        current_id = null;
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        setEnabled(true);
        clearAll();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextItemGroup();
    }//GEN-LAST:event_jButtonNextActionPerformed

    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        prevItemGroup();
    }//GEN-LAST:event_jButtonPrevActionPerformed

    private void jTableItemMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableItemMouseReleased
        selectItemGroup();
    }//GEN-LAST:event_jTableItemMouseReleased

    private void jTableItemKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableItemKeyReleased
        if ((evt.getKeyCode() == KeyEvent.VK_DOWN) || (evt.getKeyCode() == KeyEvent.VK_UP)) {
            selectItemGroup();
        }
	}//GEN-LAST:event_jTableItemKeyReleased

    private void jTableDrugMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDrugMouseReleased
        int index = this.jTableDrug.getSelectedRow();
        setDrug((Drug)vDrug.get(index));
    }//GEN-LAST:event_jTableDrugMouseReleased

    private void jTableDrugKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableDrugKeyReleased
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN){
            jTableDrugMouseReleased(null);
        }
    }//GEN-LAST:event_jTableDrugKeyReleased
    
    private void nextItemGroup() {
        setItemV(vItem, 1);
    }

    private void prevItemGroup() {
        setItemV(vItem, 0);
    }


    private void deleteItemGroup() {
        int ret = theSetupControl.deleteDrug(theDrug);
        if (ret == 0) {
            return;
        }
        setEnabled(false);
        clearAll();
    }


    private void clearAll() {
        this.jPanelDrugDescription.clearAll();
        this.jTableDrug.clearSelection();
        theDrug = new Drug();
        jPanelDrugDescription.setDrug(theDrug);
    }


    /**ทำให้ combobox สามารถทำงานได้ หรือ ไม่ได้*/
    private void checkItemGroup() {
        if (jCheckBoxSearchGroup.isSelected()) {
            jComboBoxSCategory.setEnabled(true);
        } else {
            jComboBoxSCategory.setEnabled(false);
        }
    }

    /**ทำการค้นหา item ตามกลุ่มหรือ ตาม ชื่อที่ต้องการค้นหา*/
    private void searchItemGroup() {   //pu : 25/07/2549 : กำหนดค่า Index ให้กับหน้าที่ต้องการแสดงรายการตรวจรักษา
        next = this.curNext;
        prev = this.curPrev;
        String itemname = jTextFieldSCode.getText();
        String itemgp = "";
        if (jCheckBoxSearchGroup.isSelected()) {
            itemgp = ComboboxModel.getCodeComboBox(jComboBoxSCategory);
        }
        String active = "0";
        if (jCheckBoxS.isSelected()) {
            active = "1";
        }

        if (itemname.equals("") && itemgp.equals("")) {
            theUS.setStatus("กรุณากรอกคำค้นก่อนการค้นหา", UpdateStatus.WARNING);
            return;
        }
        boolean begin_with = false;
        vItem = theSetupControl.listItemByGroup(itemgp, itemname, active, begin_with);
        setItemV(vItem, 1);
    }


    private void selectItemGroup() {
        setEnabled(true);
        clearAll();
        int row = jTableItem.getSelectedRow();
        this.currentRow = jTableItem.getSelectedRow();
        theItem = (Item) vItem.get(row + prev);
        Vector vc = theSetupControl.readDrugV(theItem.getObjectId());
        this.setDrugV(vc);
    }


    private void setDrugV(Vector vdrug) {
        vDrug = vdrug;
        TaBleModel tm = new TaBleModel(col_list, vdrug.size());
        for (int i = 0; i < vdrug.size(); i++) {
            Drug of = (Drug) vdrug.get(i);
            tm.setValueAt(of.description, i, 0);
        }
        jTableDrug.setModel(tm);
        boolean match = false;
        for(int i=0;i<vDrug.size();i++){
            Drug pp = (Drug)vDrug.get(i);
            if(pp.getObjectId().equals(current_id)){
                jTableDrug.setRowSelectionInterval(i,i);
                setDrug((Drug)vDrug.get(i));
                match = true;
                break;
            }
        }
        if(!match && !vDrug.isEmpty()){
            jTableDrug.setRowSelectionInterval(0,0);
            setDrug((Drug)vDrug.get(0));
        }
    }


    private void setItemV(Vector voffice, int off) {
        Item of = new Item();
        int count = offset;
        int p = 0;
        int n = 0;
        int c = 0;
        if (voffice != null && voffice.size() != 0) {
            if (off == 1)//กดปุ่ม next
            {
                p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if (next >= vItem.size()) {
                    next = vItem.size();
                    count = next - prev;
                }
                if (count == 0) {
                    prev = p;
                    next = n;
                    count = n - p;
                }
            } else //กดปุ่ม previous
            {
                next = prev;
                prev = prev - offset;
                if (prev <= 0) {
                    prev = 0;
                    next = offset;
                }
                if (next >= vItem.size()) {
                    next = vItem.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col, count);
            for (int i = 0; i < count; i++) {
                of = (Item) voffice.get(i + prev);
                tm.setValueAt(of.item_id, i, 0);
                tm.setValueAt(of.common_name, i, 1);
            }
            jTableItem.setModel(tm);
        } else {
            TaBleModel tm = new TaBleModel(col, 0);
            jTableItem.setModel(tm);
        }
        jTableItem.getColumnModel().getColumn(0).setPreferredWidth(60); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        jTableItem.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
    }

    public void setEnableForLift(boolean b) {
        jButtonDel.setVisible(b);
    }

    public int saveOption(Option option) {
        return 0;
    }

    public int editOption(Option option) {
        return 0;
    }

    public void notifysetEnableForLift(boolean b) {
    }

    public Option readOption() {
        return null;
    }

    public void reFrashPanel() {
    }

    public void notifyreFrashPanel() {
        setupLookup();
    }

    public Vector listOptionAll() {
        return null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroupBeginWith;
    private javax.swing.ButtonGroup buttonGroupLab;
    private javax.swing.ButtonGroup buttonGroupLabResultType;
    private javax.swing.ButtonGroup buttonGroupNormalValue;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JCheckBox jCheckBoxS;
    private javax.swing.JCheckBox jCheckBoxSearchGroup;
    private javax.swing.JComboBox jComboBoxSCategory;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private com.hosv3.gui.panel.detail.PDItemDrug jPanelDrugDescription;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTableDrug;
    private com.hosv3.gui.component.HJTableSort jTableItem;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables

    private void setDrug(Drug drug) {
        this.jPanelDrugDescription.setDrug(drug);
    }
}
