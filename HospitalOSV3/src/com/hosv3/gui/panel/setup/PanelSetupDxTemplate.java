/*
 * PanelSetupDXTemplate.java
 *
 * Created on 11 ตุลาคม 2546, 16:53 น.
 */
package com.hosv3.gui.panel.setup;
import java.awt.*;
import java.util.Vector;
import java.awt.event.*;
import javax.swing.*;

import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.control.lookup.*;
import com.hosv3.subject.*;
import com.hosv3.utility.connection.*;
import com.hosv3.gui.dialog.*;
import com.hosv3.object.*;
import com.hosv3.utility.GuiLang; 
import com.hospital_os.object.*;
import com.hospital_os.utility.ComboboxModel;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;
import com.hosv3.utility.Constant;
/**
 *
 * @panel author : amp
 * @panel Update : tong
 */
public class PanelSetupDxTemplate extends javax.swing.JPanel 
implements ManageItemDxReq {
    UpdateStatus theUS;
    HosControl theHC;
    HosObject theHO;
    HosSubject theHS;
    SetupControl theSetupControl;
    LookupControl theLookupControl;
    SetupSubject theSetupSubject;
    DxTemplate theDxTemplate2;
    Item theItem;
    ICD10 theICD10;
    UpdateStatus aFrameSetup;    
    Vector dxtemplete = new Vector();
    private String guideafterdx= "";
    int offset = 22;
    int next = 0;
    int prev = 0;
    int saved = 0; // 0 คือ ไม่สามารถ insertได้ 1 คือ insert ได้
    int category = 0;
    /** pu : 10/08/2549 : เก็บ Index ของ Item ตัวล่างสุดของหน้าปัจจุบัน*/
    int curNext = 0;
    /** pu : 10/08/2549 : เก็บ Index ของ Item ตัวล่างสุดของหน้าก่อนหน้าปัจจุบัน*/
    int curPrev = 0;
    String[] col = {"Diagnosis"};
    String[] col_ItemDx = {"รหัส","ชื่อรายการตรวจรักษา"};
    PanelSetupSearchSub  psep;
    public PanelSetupDxTemplate() 
    {
        initComponents();
        setLanguage();        
    }
    public PanelSetupDxTemplate(HosControl hc,UpdateStatus us){
        initComponents();
        setLanguage();        
	setControl(hc,us);        
    }
    /////////////////////Use this for decrease memory usage
    public void setControl(HosControl hc,UpdateStatus us){
	theUS = us;
        theHC = hc;
        theHO = hc.theHO;
        theHS = hc.theHS;
        jTable1.setGuiMode(true);
        initData();
        theSetupControl = hc.theSetupControl;
        theLookupControl = hc.theLookupControl;
        theSetupSubject = hc.theHS.theSetupSubject;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        hc.theHS.theItemDxSubject.attachItemDx(this);
	theSetupSubject.addGuideAfterDxAttach(this);
        setLookup();
        setEnableAll(false);
    }
    /**
     *@Author : amp
     *@date : 29/02/2549
     *@see : จัดการเกี่ยวกับภาษา    
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabelICD9code);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabel1);        
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(jLabel7);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jButtonSave);
        GuiLang.setLanguage(col_ItemDx);
        GuiLang.setLanguage(col);
        GuiLang.setLanguage(jRadioButtonBegin);
        GuiLang.setLanguage(jRadioButtonConsist);
        GuiLang.setLanguage(jRadioButtonCode);
        GuiLang.setLanguage(jRadioButtonGroup);
        GuiLang.setLanguage(jLabel8);
        GuiLang.setTextBundle(jPanel7);
        GuiLang.setTextBundle(jPanel5);
    }    
    /////////////////////Use this for decrease memory usage    
    private void initData()
    {   
        jLabel5.setVisible(false);
    }
    private void setLookup()
    {
        balloonTextFieldItem.setControl(new ItemLookup(theHC.theLookupControl),theUS.getJFrame());
        balloonTextFieldItem.setEControl(new ItemLookup(theHC.theSetupControl));
        theHS.theBalloonSubject.attachBalloon(balloonTextFieldItem);
        ComboboxModel.initComboBox(jComboBoxClinic, theLookupControl.listClinic());
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        tableResultsModel1 = new com.hospital_os.utility.TableResultsModel();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        buttonGroupIcd = new javax.swing.ButtonGroup();
        buttonGroupSearch = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jRadioButtonBegin = new javax.swing.JRadioButton();
        jRadioButtonConsist = new javax.swing.JRadioButton();
        jPanel8 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldIcdCode = new javax.swing.JTextField();
        jRadioButtonGroup = new javax.swing.JRadioButton();
        jRadioButtonCode = new javax.swing.JRadioButton();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaGuide = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jTextFieldIcdThaiName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        balloonTextFieldItem = new com.hosv3.gui.component.BalloonTextField();
        jPanel6 = new javax.swing.JPanel();
        jButtonItemDel = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableItemDx = new javax.swing.JTable();
        jComboBoxClinic = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(fontFormatTitle1);
        jLabel3.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("LIST_DXTMPLETE"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 3;
        jPanel4.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setFont(defaultFont1);
        jLabelICD9code.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 11);
        jPanel3.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldSCodeActionPerformed(evt);
            }
        });
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextFieldSCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTable1.setModel(tableResultsModel1);
        jTable1.setFont(defaultFont1);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        buttonGroupSearch.add(jRadioButtonBegin);
        jRadioButtonBegin.setFont(defaultFont1);
        jRadioButtonBegin.setText("\u0e19\u0e33\u0e2b\u0e19\u0e49\u0e32");
        jRadioButtonBegin.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonBeginActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel3.add(jRadioButtonBegin, gridBagConstraints);

        buttonGroupSearch.add(jRadioButtonConsist);
        jRadioButtonConsist.setFont(defaultFont1);
        jRadioButtonConsist.setSelected(true);
        jRadioButtonConsist.setText("\u0e1b\u0e23\u0e30\u0e01\u0e2d\u0e1a");
        jRadioButtonConsist.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonConsistActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(1, 1, 1, 1);
        jPanel3.add(jRadioButtonConsist, gridBagConstraints);

        jPanel8.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setFont(defaultFont1);
        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel8.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setFont(defaultFont1);
        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel8.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jPanel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 350));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 350));
        jLabel1.setFont(defaultFont1);
        jLabel1.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("Description"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldCode.setFont(defaultFont1);
        jTextFieldCode.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextFieldCodeActionPerformed(evt);
            }
        });
        jTextFieldCode.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextFieldCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 5);
        jPanel2.add(jTextFieldCode, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText("\u0e23\u0e2b\u0e31\u0e2a\u0e42\u0e23\u0e04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldIcdCode.setFont(defaultFont1);
        jTextFieldIcdCode.setMaximumSize(new java.awt.Dimension(50, 21));
        jTextFieldIcdCode.setMinimumSize(new java.awt.Dimension(50, 21));
        jTextFieldIcdCode.setPreferredSize(new java.awt.Dimension(50, 21));
        jTextFieldIcdCode.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                jTextFieldIcdCodeFocusLost(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        jPanel2.add(jTextFieldIcdCode, gridBagConstraints);

        buttonGroupIcd.add(jRadioButtonGroup);
        jRadioButtonGroup.setFont(defaultFont1);
        jRadioButtonGroup.setText("\u0e01\u0e25\u0e38\u0e48\u0e21");
        jRadioButtonGroup.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        jPanel2.add(jRadioButtonGroup, gridBagConstraints);

        buttonGroupIcd.add(jRadioButtonCode);
        jRadioButtonCode.setFont(defaultFont1);
        jRadioButtonCode.setText("\u0e23\u0e2b\u0e31\u0e2a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 12);
        jPanel2.add(jRadioButtonCode, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "\u0e04\u0e33\u0e41\u0e19\u0e30\u0e19\u0e33\u0e2b\u0e25\u0e31\u0e07\u0e15\u0e23\u0e27\u0e08", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jScrollPane2.setMaximumSize(new java.awt.Dimension(103, 30));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(103, 30));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(103, 30));
        jTextAreaGuide.setFont(defaultFont1);
        jTextAreaGuide.setLineWrap(true);
        jTextAreaGuide.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTextAreaGuideKeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTextAreaGuide);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 3, 5);
        jPanel7.add(jScrollPane2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jPanel7, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("\u0e01\u0e14\u0e1b\u0e38\u0e48\u0e21 F1 \u0e40\u0e1e\u0e37\u0e48\u0e2d\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e04\u0e33\u0e41\u0e19\u0e30\u0e19\u0e33\u0e2b\u0e25\u0e31\u0e07\u0e15\u0e23\u0e27\u0e08");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 3, 5);
        jPanel2.add(jLabel5, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText("\u0e0a\u0e37\u0e48\u0e2d\u0e42\u0e23\u0e04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jLabel6, gridBagConstraints);

        jTextFieldIcdThaiName.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        jPanel2.add(jTextFieldIcdThaiName, gridBagConstraints);

        jLabel7.setFont(defaultFont1);
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("\u0e2a\u0e33\u0e2b\u0e23\u0e31\u0e1a\u0e41\u0e2a\u0e14\u0e07\u0e1a\u0e19\u0e43\u0e1a\u0e40\u0e2a\u0e23\u0e47\u0e08");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        jPanel2.add(jLabel7, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "\u0e23\u0e32\u0e22\u0e01\u0e32\u0e23\u0e15\u0e23\u0e27\u0e08\u0e23\u0e31\u0e01\u0e29\u0e32\u0e02\u0e2d\u0e07 Dx", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, defaultFont1));
        jPanel5.setFont(defaultFont1);
        balloonTextFieldItem.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel5.add(balloonTextFieldItem, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonItemDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonItemDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonItemDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonItemDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonItemDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonItemDel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonItemDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTHEAST;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jButtonItemDel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 0);
        jPanel5.add(jPanel6, gridBagConstraints);

        jScrollPane4.setPreferredSize(new java.awt.Dimension(454, 420));
        jTableItemDx.setFont(defaultFont1);
        jTableItemDx.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTableItemDx.setSurrendersFocusOnKeystroke(true);
        jTableItemDx.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jTableItemDxKeyReleased(evt);
            }
        });

        jScrollPane4.setViewportView(jTableItemDx);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanel5.add(jScrollPane4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 5);
        jPanel2.add(jPanel5, gridBagConstraints);

        jComboBoxClinic.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 5);
        jPanel2.add(jComboBoxClinic, gridBagConstraints);

        jLabel8.setFont(defaultFont1);
        jLabel8.setText("\u0e1b\u0e23\u0e30\u0e40\u0e20\u0e17\u0e42\u0e23\u0e04");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        jPanel2.add(jLabel8, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCodeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldCodeKeyReleased
    {//GEN-HEADEREND:event_jTextFieldCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN || evt.getKeyCode() == KeyEvent.VK_ENTER){
           jTextFieldIcdCode.requestFocus();
       }
    }//GEN-LAST:event_jTextFieldCodeKeyReleased

    private void jTableItemDxKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTableItemDxKeyReleased
    {//GEN-HEADEREND:event_jTableItemDxKeyReleased
       if(evt.getKeyCode() == KeyEvent.VK_DELETE){
           jButtonItemDelActionPerformed(null);
       }
    }//GEN-LAST:event_jTableItemDxKeyReleased

    private void jRadioButtonGroupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonGroupActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonGroupActionPerformed
        String icd10 = jTextFieldIcdCode.getText();
        if(icd10.length() > 3)
        {  if(icd10.substring(3,4).equals("."))
            {   
               theUS.setStatus("โปรแกรมจะบันทึกรหัส ICD10 เฉพาะ 3 หลักแรก", theUS.WARNING);
                jTextFieldIcdCode.requestFocus();
                return;
            }
        }
    }//GEN-LAST:event_jRadioButtonGroupActionPerformed

    private void jTextFieldIcdCodeFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_jTextFieldIcdCodeFocusLost
    {//GEN-HEADEREND:event_jTextFieldIcdCodeFocusLost
        String icd10 = jTextFieldIcdCode.getText();
        if(icd10.length() < 3 && icd10.length() != 0)
        {
            theUS.setStatus("รหัส ICD10 มีรูปแบบไม่ถูกต้อง", theUS.WARNING);
            jTextFieldIcdCode.requestFocus();
            return;
        }
    }//GEN-LAST:event_jTextFieldIcdCodeFocusLost

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldSCodeKeyReleased
    {//GEN-HEADEREND:event_jTextFieldSCodeKeyReleased
        /**
         * สามารถค้นหารายการตรวจรักษา โดยการระบุคำค้นได้ช่องค้นหา แล้วค้นหาให้อัตโนมัติ (ไม่ต้องกด Enter ก็ได้)
         * เลือกรายการตรวจรักษา ด้วยการกดปุ่มลูกศรขึ้น-ลง หลังจากค้นหารายการตรวจรักษาแล้ว
         * @Modifier pu
         * @Date 10/08/2549
         */
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            jTable1.requestFocus();
            jTable1.setRowSelectionInterval(0, 0);
            selectDxTemplate();
        }
       if(jTextFieldSCode.getText().length()>2)
        {
            this.jTextFieldSCodeActionPerformed(null);
        }
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jButtonItemDelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonItemDelActionPerformed
    {//GEN-HEADEREND:event_jButtonItemDelActionPerformed
         setSelectItemDx(this.jTableItemDx.getSelectedRows());
    }//GEN-LAST:event_jButtonItemDelActionPerformed

    private void jRadioButtonConsistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonConsistActionPerformed
        searchDxTemplate();
    }//GEN-LAST:event_jRadioButtonConsistActionPerformed

    private void jRadioButtonBeginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonBeginActionPerformed
        searchDxTemplate();
    }//GEN-LAST:event_jRadioButtonBeginActionPerformed
    private void jTextAreaGuideKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaGuideKeyReleased
        /*if(evt.getKeyCode()==evt.VK_F1)
        {
            addGuideAfterDx();  //คำแนะนำหลังตรวจ                 
        }  */         
    }//GEN-LAST:event_jTextAreaGuideKeyReleased
    private void jTextFieldCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCodeActionPerformed
    }//GEN-LAST:event_jTextFieldCodeActionPerformed
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        int row = jTable1.getSelectedRow();
        if(row < 0)
        {
            theUS.setStatus("กรุณาเลือกรายการ Dx ที่พบบ่อยก่อนกดปุ่มลบ",UpdateStatus.WARNING);
            return;
        }
        deleteDxTemplate();
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        //pu : 10/08/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบัน
        this.curNext = 0;
        this.curPrev = 0;
        searchDxTemplate();
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveDx();        
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        insertDxTemplate();
    }//GEN-LAST:event_jButtonAddActionPerformed
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextDxTemplate();
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
       prevDxTemplate();
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        //pu : 10/08/2549 : กำหนดค่าให้กับ Index สำหรับระบุถึงหน้าปัจจุบัน
        this.curNext = 0;
        this.curPrev = 0;
        searchDxTemplate();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        selectDxTemplate();
    }//GEN-LAST:event_jTable1MouseReleased
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if((evt.getKeyCode() == evt.VK_DOWN)||(evt.getKeyCode() == evt.VK_UP))
        {
            selectDxTemplate();
        }
	}//GEN-LAST:event_jTable1KeyReleased
    public void setSelectItemDx(int[] rows)
    {
        theHC.theSetupControl.deleteItemDx(rows);        
    }
    
    private void setTableItemDx()
    {
        TaBleModel tm ;
        if(theHO.vItemDx == null)
        {
            tm= new TaBleModel(col_ItemDx,0);
            jTableItemDx.setModel(tm);
            return;
        }
        tm= new TaBleModel(col_ItemDx,theHO.vItemDx.size());
        for(int i=0 ;i<theHO.vItemDx.size(); i++)
        {
            DxTemplateMapItem p = (DxTemplateMapItem)theHO.vItemDx.get(i);
            tm.setValueAt(p.code,i,0);
            tm.setValueAt(p.description,i,1);
        }
        jTableItemDx.setModel(tm);
        jTableItemDx.getColumnModel().getColumn(0).setPreferredWidth(10); // รหัส
        jTableItemDx.getColumnModel().getColumn(1).setPreferredWidth(80); // ชื่อรายการ Item
    }
    
    private void nextDxTemplate()
    {
        setTable(dxtemplete,1);
    }
    private void prevDxTemplate()
    {   setTable(dxtemplete,0);
    }
    private void insertDxTemplate()
    {   saved = 1;
        setEnableAll(true);
        clearAll();
    }
    private void deleteDxTemplate()
    {   
        theSetupControl.deleteDxTemplate(theDxTemplate2);
        setEnableAll(false);
        clearAll();
        //pu : 10/08/2549 : เก็บ Index ปัจจุบัน
        int count = next - prev;
        this.curNext = next - count;
        this.curPrev = prev - offset;
        searchDxTemplate();
    }
    
    /**
     *@deprecated henbe มีการเขียนข้อมูลลง HO โดย GUI ซึ่งผิด pattern
     */
    private void clearAll()
    {   jTextFieldCode.setText("");
        jTextFieldIcdCode.setText("");
        jRadioButtonCode.setSelected(true);
        jTextFieldIcdThaiName.setText("");
        jTextAreaGuide.setText("");
        theDxTemplate2 = new DxTemplate();
        //เซ็ตค่าให้ Vector ที่เก็บรายการ Item เป็น null เมื่อ
        theHO.vItemDx = null;
        setTableItemDx();
        jTextFieldCode.requestFocus();
        jTable1.clearSelection();
    }
    private void setEnableAll(boolean var)
    {
        jTextFieldCode.setEditable(var);
        jComboBoxClinic.setEnabled(var);
        if(theDxTemplate2 != null && theDxTemplate2.icd_code != null)
            jTextFieldIcdCode.setText(theDxTemplate2.icd_code.toUpperCase());
        //jTextFieldIcdCode.setEditable(var);
        //jRadioButtonCode.setEnabled(var);
        //jRadioButtonGroup.setEnabled(var);
        //jButtonSave.setEnabled(var);
        //jButtonDel.setEnabled(var);
        //jTextAreaGuide.setEnabled(var);
        //balloonTextFieldItem.setEnabled(var);
        //jTableItemDx.setEnabled(var);
        //jButtonItemDel.setEnabled(var);
    }
    private void selectDxTemplate()
    {
        setEnableAll(true);
        saved = 0;
        int row = jTable1.getSelectedRow();
        String of = (String)jTable1.getValueAt(row, 0);
        jTextFieldCode.setText(of);
        DxTemplate bgi = new DxTemplate();
        bgi = (DxTemplate)dxtemplete.get(row + prev);
        theDxTemplate2 = bgi;
        if(!theDxTemplate2.icd_code.endsWith("99"))
        {
            jTextFieldIcdCode.setText(theDxTemplate2.icd_code);
        }
        if(theDxTemplate2.icd_type.equals("1"))
        {
            jRadioButtonCode.setSelected(true);
        }
        else
        {
            jRadioButtonGroup.setSelected(true);
        }
        jTextAreaGuide.setText(theDxTemplate2.guide_after_dx);
        jTextFieldIcdThaiName.setText(theDxTemplate2.thaidescription);
        ComboboxModel.setCodeComboBox(jComboBoxClinic, bgi.clinic_code);
        getVItemDxByDxTemplate(theDxTemplate2);
    }
    
    private void getVItemDxByDxTemplate(DxTemplate dxtemp)
    {
        if(dxtemp != null)
        {
            theHC.theSetupControl.listItemDxByDxTemplate(dxtemp.getObjectId());
        }
    }
    private void searchDxTemplate()
    {
       //pu : 10/08/2549 : กำหนดค่า Index ให้กับหน้าที่ต้องการแสดง
        next = this.curNext;
        prev =  this.curPrev;        
        String search = jTextFieldSCode.getText();
        
        boolean begin_with = this.jRadioButtonBegin.isSelected();
        dxtemplete =  theLookupControl.listDxTemplateByName(search,begin_with);
        
        setTable(dxtemplete,1);
    }
    private void setTable(Vector voffice,int off)
    {
        DxTemplate of = new DxTemplate();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null && voffice.size() != 0)
        {
            if(off == 1)
            {   p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= dxtemplete.size())
                {   next = dxtemplete.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                     next = offset;
                }
                if(next >= dxtemplete.size())
                {   next= dxtemplete.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {
                of = (DxTemplate)voffice.get(i+prev);
                //tm.setValueAt(of.getObjectId(),i,0);
                tm.setValueAt(of.description,i,0);
            }
            jTable1.setModel(tm);
        }
        else
        {   TaBleModel tm = new TaBleModel(col,0);
            jTable1.setModel(tm);
        }
        setTableListDefault();
    }
    private void setTableListDefault()
    {
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(300); // ชื่อสามัญสำหรับ รพ.ทั่วไป, ชื่อการค้า สำหรับศูนย์โรคตา
        //jTable1.getColumnModel().getColumn(1).setPreferredWidth(300); // จำนวน
    }
    private void saveDx()
    {
        theDxTemplate2.description = jTextFieldCode.getText();
        if(theDxTemplate2.description.equals(""))
        {
            theUS.setStatus("กรุณาระบุรายละเอียดของ Dx ที่พบบ่อย",UpdateStatus.WARNING);
            jTextFieldCode.requestFocus();
            return;
        }
        String icd_code_original = "";
        icd_code_original = jTextFieldIcdCode.getText();
        if(icd_code_original.length()>3 && icd_code_original.length() != 0)
        {
            if(jRadioButtonGroup.isSelected())
            {   String hos = icd_code_original.substring(0,3);
                theDxTemplate2.icd_code = hos;
            }
            else
            {
                if(icd_code_original.substring(3,4).equals("."))
                { theDxTemplate2.icd_code = icd_code_original;
                }
                else
                {   String hos = icd_code_original.substring(0,3);
                    String sub = icd_code_original.substring(3);
                    theDxTemplate2.icd_code = hos + "." + sub;
                    
                }
            }
            
            ICD10 icd10 = theSetupControl.listIcd10ByCode(theDxTemplate2.icd_code);
            if(icd10 == null)
            {
                theUS.setStatus("ไม่มี ICD10 นี้ในฐานข้อมูล กรุณาระบุ ICD10 ใหม่",UpdateStatus.WARNING);
                jTextFieldIcdCode.requestFocus();
                return;
            }
        }
        else
        { 
            theDxTemplate2.icd_code = icd_code_original;
        }
        theDxTemplate2.guide_after_dx = Gutil.CheckReservedWords(jTextAreaGuide.getText());
        theDxTemplate2.thaidescription = Gutil.CheckReservedWords(jTextFieldIcdThaiName.getText());
        theDxTemplate2.clinic_code = Gutil.getGuiData(jComboBoxClinic);
                
        if( jRadioButtonCode.isSelected())
            theDxTemplate2.icd_type ="1";
        else    theDxTemplate2.icd_type ="2";
        
        ///////////////////////////////////////////////////////////////////////
        int ret = theSetupControl.saveDxTemplate(theDxTemplate2);
        if(ret == 0)
        {
            return;
        }
        //pu : 10/08/2549 : เก็บ Index ปัจจุบันของหน้าที่กำลังบันทึก
        int count = next - prev;
        this.curNext = next - count;
        this.curPrev = prev - offset;
        setEnableAll(false);
        saved =0;
        searchDxTemplate();
    }
    private void addGuideAfterDx()
    {
        if(psep==null)
        {
            psep = new PanelSetupSearchSub(theHC,theUS,10);
            psep.setTitle(Constant.getTextBundle("คำแนะนำหลังตรวจ"));
        }
        if(psep.showSearch())
            psep = null;
        /*
        PanelSetupSearchSub  psep;
        psep = new PanelSetupSearchSub(theSetupControl,theSetupSubject,10);
        JDialog dlg = new JDialog();
        dlg.setSize(300,450);
        dlg.setTitle("คำแนะนำหลังตรวจ");
        dlg.getContentPane().add(psep, java.awt.BorderLayout.CENTER);
        dlg.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        dlg.addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowClosing(java.awt.event.WindowEvent evt)
            {
            }
        });
        Toolkit thekit = dlg.getToolkit();
        Dimension screenSize = thekit.getDefaultToolkit().getScreenSize();
        dlg.setLocation((screenSize.width-dlg.getSize().width)/2, (screenSize.height-dlg.getSize().height)/2);
        dlg.setVisible(true);
        dlg=null;
         */
        System.gc();
    }
        /**
     *@deprecated henbe said
     **/

    public void notifylistGuide(GuideAfterDx guideAfterDx)
    {
        guideafterdx = jTextAreaGuide.getText();
        if(guideafterdx.equalsIgnoreCase(""))
            guideafterdx = guideAfterDx.description;
        else
            guideafterdx = guideafterdx + "\n-----------------------------\n" + guideAfterDx.description;
        jTextAreaGuide.setText(guideafterdx);
    }
    public static void main(String args[])
    {
        JFrame frm = new JFrame("Test");
        frm.getContentPane().setLayout(new BorderLayout());
        PanelSetupDxTemplate pnl = new PanelSetupDxTemplate();
        
        frm.getContentPane().add(pnl,  BorderLayout.CENTER);
        frm.addWindowListener(new WindowAdapter()
        {   public void windowClosing(WindowEvent e)
            {    System.exit(0);
            }
        });
        frm.pack();
        frm.setVisible(true);
        frm.setSize(500,400);
    }
    public void notifyreFrashPanel()
    {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hosv3.gui.component.BalloonTextField balloonTextFieldItem;
    private javax.swing.ButtonGroup buttonGroupIcd;
    private javax.swing.ButtonGroup buttonGroupSearch;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonItemDel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox jComboBoxClinic;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JRadioButton jRadioButtonBegin;
    private javax.swing.JRadioButton jRadioButtonCode;
    private javax.swing.JRadioButton jRadioButtonConsist;
    private javax.swing.JRadioButton jRadioButtonGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private javax.swing.JTable jTableItemDx;
    private javax.swing.JTextArea jTextAreaGuide;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldIcdCode;
    private javax.swing.JTextField jTextFieldIcdThaiName;
    private javax.swing.JTextField jTextFieldSCode;
    private com.hospital_os.utility.TableResultsModel tableResultsModel1;
    // End of variables declaration//GEN-END:variables
    private void SetStatus(String str)
    {
        str = Constant.getTextBundle(str);
        aFrameSetup.setStatus(str ,UpdateStatus.WARNING);
    }    
    public void notifysetEnableForLift(boolean b) {
    }    
    public int editOption(Option option) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return -1;
    }
    public Vector listOptionAll() {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public void reFrashPanel() {
    }
    public Option readOption() {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public int saveOption(Option option) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return -1;
    }
    public void setEnableForLift(boolean b) {
    }
    public void VisitByPatient(Visit visit, Patient patient) {
    }
    public void callPrintOPDCard(int valuePrint) {
    }
    public void callUpdateVisitDiagnosis(Visit dx) {
    }
    public void checkDoctorTreament(boolean flag) {
    }
    public void confirmDoctorTreament() {
    }
    public void createAutoVisitPatient(Visit vnPatient, Vector payment) {
    }
    public void createVisitMedicineForSale(Visit vnMedSale) {
    }
    public void createVisitPatient(Visit vnPatient, Vector payment) {
    }
    public void createVisitPatientAppointment(Vector vnAppointment) {
    }
    public void dropVisitPatient(Visit vnPatient) {
    }
    public Vector listForLife() {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public Vector listGroupByVn(String patientId) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }

    public GuideAfterDxTransaction listGuideByVisitId(String visitId) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public Vector listPlanBySearch(String search) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public void notifyVisitByPatient(Visit visit, Patient patient) {
    }
    public void notifycallPrintOPDCard(int valuePrint) {
    }
    public void notifycheckDoctorTreament(boolean flag) {
    }
    public void notifyconfirmDoctorTreament() {
    }
    public void notifycreateAutoVisitPatient(Visit vnPatient, String msg) {
    }
    public void notifycreateVisitMedicineForSale(Visit vnMedSale, String msg) {
    }
    public void notifycreateVisitPatient(Visit vnPatient, String msg) {
    }
    public void notifycreateVisitPatientAppointment(Vector vnAppointment, String msg) {
    }
    public void notifydropVistiPatient(Visit vnPatient, String msg) {
    }
    public void notifyreadVisitPatientByVn(Visit v, String status) {
    }
    public void notifyreadVisitPatientByVnForSendPatient(Visit v, String status) {
    }
    public void notifyremainDoctorDischarge(Visit visit) {
    }
    public void notifyremainVisitPatient(Visit remainVnPatient, String msg) {
    }
    public void notifysaveDischargeStatus(Visit visit, boolean result) {
    }
    public void notifyshowPanelAuthentication(String authentication_id, int send) {
    }
    public void notifyupdateIcd10ByDx(Visit vs) {
    }
    public void notifyupdateVisitDiagnosis(Visit dx) {
    }
    public String readMaxVnByPatientId(String patient_id) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public Visit readVisitByVn(String vn) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public void readVisitPatientByVn(String vn) {
    }
    public void remainDoctorDischarge(Visit visit) {
    }
    public void remainVisitPatient(Visit remainVnPatient) {
    }
    public String reverseDoctor(Visit visit) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public String reverseFinancial(Visit visit) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public void saveDischargeStatus(Visit visit, boolean result) {
    }

    public void saveGuideDxTR(GuideAfterDxTransaction guideAfterDxTransaction) {
    }
    public String unlockVisit(Visit dx) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return null;
    }
    public void updateIcd10ByDx(Visit vs) {
    }
    public int updateVisitPregnant(boolean pregnant, String visit_id) {
        Constant.println("PanelSetupDXTemplate function is not use.");
        return -1;
    }
    public void visitInTransferReq(String vn) {
    }

    public void notifySetTableItemDx(String str, int status)
    {
        setTableItemDx();
        balloonTextFieldItem.setText("");
        //balloonTextFieldItem.requestFocus();
    }
}
