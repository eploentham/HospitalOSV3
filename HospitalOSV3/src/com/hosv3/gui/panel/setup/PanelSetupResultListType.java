/*
 * PanelSetupDoctorDrugSet.java
 *
 * Created on 12 ธันวาคม 2546, 10:11 น.
 */
package com.hosv3.gui.panel.setup;
import java.util.Vector;
import com.hosv3.control.*;
import com.hosv3.subject.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.GuiLang;
import com.hospital_os.utility.*;
import com.hospital_os.object.*;
//import com.hosv3.usecase.transaction.order.*;
/**
 *
 * @Panel Author amp 
 * @Code Author amp
 */  
public class PanelSetupResultListType extends javax.swing.JPanel 
{
    public final static String CARD_BLANK = "CARD_BLANK";
    public final static String CARD_DRUG = "CARD_DRUG";
    LookupControl theLookupControl;
    ComboboxModel theComboboxModel;
    UpdateStatus theUS;
    HosControl theHC;
    SetupControl theSetupControl;
    SetupSubject theSetupSubject;
    OrderControl theOrderControl;
    Vector v = new Vector();
    Vector vd = new Vector();
    Vector drugSet= new Vector();
    Vector owner = new Vector();
    Vector use_uom = new Vector();
    Vector instruction = new Vector();
    Vector frequency = new Vector();
    Vector purch_uom = new Vector();
    Vector dosedrugset = new Vector();
    DrugSet theDrugSet = new DrugSet();
    DoseDrugSet theDoseDrugSet = new DoseDrugSet();
    LabResultGroup theLabResultGroup = new LabResultGroup();
    Employee theEmployee = new Employee();
    Item theItem = new Item();
    CategoryGroupItem theCategoryGroupItem = new CategoryGroupItem();
    int offset = 17;
    int next = 0;
    int prev = 0;
    int saved = 0; // 0 คือ ไม่สามารถ insertได้ 1 คือ insert ได้   
    String[] col_TaBleModel = {"รหัส","ชื่อ"};
    String[] col = {"ชื่อรายการ"};
    public PanelSetupResultListType(HosControl hc, UpdateStatus us) {
        initComponents();
        setLanguage();
        setControl(hc,us);
        jButtonSaveLabResultDetail.setVisible(false);
    }
    public PanelSetupResultListType() {
        initComponents();
        setLanguage();
    }
       /**
     *@Author : amp
     *@date : 02/02/2549
     *@see : จัดการเกี่ยวกับภาษา    
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jButtonSaveLabResultDetail);
        GuiLang.setLanguage(jLabelICD9code);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabel1);        
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jLabel4);
        GuiLang.setLanguage(jButtonSave); 
        GuiLang.setLanguage(col);
        GuiLang.setLanguage(col_TaBleModel);
    }
/////////////////////Use this for decrease memory usage
	
    public void setControl(HosControl hc,UpdateStatus us){
		theUS = us;
                theHC = hc;
        theLookupControl = hc.theLookupControl;
        theSetupControl = hc.theSetupControl;
        theOrderControl = hc.theOrderControl;
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addAllItem(this);
        theSetupSubject = hc.theHS.theSetupSubject;
        setLookup();
        setEnableAll(false);     
    }
    /////////////////////Use this for decrease memory usage 

    private void setLookup()
    {   
        setComboBox();     
    }
    private void setComboBox()
    {  
        owner = theLookupControl.listDoctor();
        
        use_uom = theLookupControl.listUom();
        
        instruction = theLookupControl.listDrugInstruction();
        
        frequency = theLookupControl.listDrugFrequency();        
        
        purch_uom = theLookupControl.listUom();
        
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        tableResultsModel1 = new com.hospital_os.utility.TableResultsModel();
        buttonGroupTypeOner = new javax.swing.ButtonGroup();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jPanel6 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldNunber = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new com.hosv3.gui.component.HJTableSort();
        jPanel7 = new javax.swing.JPanel();
        jButtonAddItem = new javax.swing.JButton();
        jButtonDelItem = new javax.swing.JButton();
        jButtonSaveLabResultDetail = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel4.setFont(fontFormatTitle1);
        jLabel4.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("PANEL_SETUP_LAB_RESULTTYPE"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        jPanel4.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setFont(defaultFont1);
        jLabelICD9code.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 11);
        jPanel3.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTable1.setModel(tableResultsModel1);
        jTable1.setFont(defaultFont1);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jPanel6.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel6.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel6.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 300));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 300));
        jLabel2.setFont(defaultFont1);
        jLabel2.setText("\u0e0a\u0e37\u0e48\u0e2d\u0e0a\u0e38\u0e14");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldName.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel2.add(jTextFieldName, gridBagConstraints);

        jLabel1.setFont(defaultFont1);
        jLabel1.setText("\u0e23\u0e2b\u0e31\u0e2a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel2.add(jLabel1, gridBagConstraints);

        jTextFieldNunber.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel2.add(jTextFieldNunber, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jScrollPane2.setFont(defaultFont1);
        jScrollPane2.setMaximumSize(new java.awt.Dimension(250, 230));
        jScrollPane2.setMinimumSize(new java.awt.Dimension(250, 230));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(250, 230));
        jTable2.setModel(tableResultsModel1);
        jTable2.setFont(defaultFont1);
        jTable2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTable2FocusGained(evt);
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable2MouseReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTable2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jScrollPane2, gridBagConstraints);

        jPanel7.setLayout(new java.awt.GridBagLayout());

        jButtonAddItem.setFont(defaultFont1);
        jButtonAddItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddItem.setEnabled(false);
        jButtonAddItem.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddItem.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddItemActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel7.add(jButtonAddItem, gridBagConstraints);

        jButtonDelItem.setFont(defaultFont1);
        jButtonDelItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelItem.setEnabled(false);
        jButtonDelItem.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelItem.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelItemActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel7.add(jButtonDelItem, gridBagConstraints);

        jButtonSaveLabResultDetail.setFont(defaultFont1);
        jButtonSaveLabResultDetail.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSaveLabResultDetail.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSaveLabResultDetail.setMaximumSize(new java.awt.Dimension(60, 24));
        jButtonSaveLabResultDetail.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSaveLabResultDetail.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSaveLabResultDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveLabResultDetailActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel7.add(jButtonSaveLabResultDetail, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weighty = 1.0;
        jPanel5.add(jPanel7, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel.setEnabled(false);
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 5);
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMinimumSize(new java.awt.Dimension(60, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveLabResultDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveLabResultDetailActionPerformed
        if(vd == null)
        {
            theUS.setStatus("กรุณาระบุรายละเอียดของผลแลปก่อนทำการกดปุ่มบันทึก", theUS.WARNING);
            return;
        }
        getLabResultDetail();
        if(vd.size() != 0){
            for(int i = 0;i<vd.size();i++)
            {
                LabResultDetail ld = (LabResultDetail) vd.get(i);
                theHC.theSetupControl.saveLabResuleDetail(ld);    
            }
        }   
    }//GEN-LAST:event_jButtonSaveLabResultDetailActionPerformed

    private void jTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable2MouseReleased
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
   //     recordDoseInVector();
    }//GEN-LAST:event_formKeyReleased
//    public void recordDoseInVector()
//    {        
//        try
//        {
//            int row = jTable2.getSelectedRow();  
//            if(row != -1)
//            {
//                if(drugSet !=null || drugSet.size() != 0)
//                {
//                    theDrugSet.dose_drug_set = ((DrugSet)drugSet.get(row)).dose_drug_set;            
//                    if(theDrugSet.dose_drug_set == null)
//                        theDrugSet.dose_drug_set = new DoseDrugSet();
//                        theDrugSet.dose_drug_set.item_code = theDrugSet.item_code;
//                        theDrugSet.dose_drug_set.caution = jTextFieldCaution.getText();                 
//                        theDrugSet.dose_drug_set.description = jTextFieldDescription.getText();
//                        theDrugSet.dose_drug_set.dose = jTextFieldUseUnit.getText();
//                        theDrugSet.dose_drug_set.frequency = ComboboxModel.getCodeComboBox(jComboBoxFrequency); 
//                        theDrugSet.dose_drug_set.instruction = ComboboxModel.getCodeComboBox(jComboBoxInstruction); 
//                        theDrugSet.dose_drug_set.purch_uom = ComboboxModel.getCodeComboBox(jComboBoxQty); 
//                        theDrugSet.dose_drug_set.qty = jTextFieldQtyUnit.getText();            
//                        if(jCheckBoxSpecialUsage.isSelected())
//                            theDrugSet.dose_drug_set.usage_special = "1";
//                        else
//                            theDrugSet.dose_drug_set.usage_special = "0";
//                        theDrugSet.dose_drug_set.usage_text = jTextAreaTextUsage.getText();
//                        theDrugSet.dose_drug_set.use_uom = ComboboxModel.getCodeComboBox(jComboBoxUse);             
//                        theDrugSet.dose_drug_set.printting = theItem.printable;
//                }
//                else
//                {   drugSet = new Vector();
//                }
//            }
//        }
//        catch(Exception ex)        
//        {
//            ex.printStackTrace(Constant.getPrintStream());
//        }
//    }
    private void jTable2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTable2FocusGained

    }//GEN-LAST:event_jTable2FocusGained

  	private void jTable2KeyReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2KeyReleased
        if(jTable2.getSelectedRow()==-1) return;  

    }//GEN-LAST:event_jTable2KeyReleased
	private void jButtonAddItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddItemActionPerformed
        addItem();
    }//GEN-LAST:event_jButtonAddItemActionPerformed
    private void jButtonDelItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelItemActionPerformed

        int[] row = jTable2.getSelectedRows();
        if(row.length==0)
        {
            theUS.setStatus("กรุณาเลือกรายละเอียดผลแลปที่ต้องการจะลบก่อนทำการกดปุ่มลบ",UpdateStatus.WARNING);
            return;
        }
        if(vd == null)
           vd = new Vector();
        else
        {
            for(int i =0;i<vd.size();i++)
            {
                if(!jTable2.getValueAt(i,0).toString().equals("")){
                    LabResultDetail ld = (LabResultDetail) vd.get(i);
                    ld.value = jTable2.getValueAt(i,0).toString();
                }
            }
        }
        int ret = theHC.theSetupControl.deleteLabResutlDetail(theLabResultGroup,row,vd);
        if(ret == 0)
        {
            return;
        }
        setLabResultDetailV(vd);
    }//GEN-LAST:event_jButtonDelItemActionPerformed
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed

        int ret = theHC.theSetupControl.deleteLabResultGroup(theLabResultGroup);
        if(ret == 0)
        {
            return;
        }
        clearAll();
        searchLabResultGroup();
        setEnableItem(false);
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        searchLabResultGroup();
        
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        getLabResultGroup();
        if(vd == null)
        {
            theUS.setStatus("กรุณาระบุรายละเอียดของผลแลปก่อนทำการกดปุ่มบันทึก", theUS.WARNING);
            return;
        }
        getLabResultDetail();
        int ret = theSetupControl.saveLabResuleType(theLabResultGroup,vd);
        if(ret == 0)
        {
            return;
        }
        setLabResultGroup();
        setEnableAll(false);
        searchLabResultGroup();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        insertDrugSet();
        vd=null;
        setEnableItem(true);
    }//GEN-LAST:event_jButtonAddActionPerformed
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        nextLabResultGroup();
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        prevLabResultGroup();
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchLabResultGroup();

    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        selectLabResultGroup();
        selectLabResultDetail();
        setEnableItem(true);
    }//GEN-LAST:event_jTable1MouseReleased
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        selectLabResultGroup();
        selectLabResultDetail();
        setEnableItem(true);
    }//GEN-LAST:event_jTable1KeyReleased
    private void nextLabResultGroup()
    {   
        setTableLabResultGroup(v,1);
    }
    private void prevLabResultGroup()
    {   
        setTableLabResultGroup(v,0);
    }
    private void setEnableAll(boolean var)
    {
        jTextFieldNunber.setEditable(var);
        jTextFieldName.setEditable(var);
        jButtonSave.setEnabled(var);        
        jButtonDel.setEnabled(var);
    }
    private void clearAll()
    {           
        theLabResultGroup = new LabResultGroup();
        jTextFieldName.setText("");
        jTextFieldNunber.setText("");
        this.setLabResultDetailV(null);
        
    }
    private void insertDrugSet()
    {   
        saved = 1;
        setEnableAll(true);
        clearAll();
        //setTableItem(null);        
    }
    private void setEnableItem(boolean b)
    {
        jButtonAddItem.setEnabled(b);
        jButtonDelItem.setEnabled(b);
    }
    private void searchLabResultGroup(){   
        next = 0;
        prev = 0;
        String search = jTextFieldSCode.getText();  
        v =  theSetupControl.listLabResultGroup(search.toUpperCase());  
        setTableLabResultGroup(v,1);      
    }
    private void setLabResultDetailV(Vector v){
        TaBleModel tm ;
        LabResultDetail ds;
        if(v != null){
            tm = new TaBleModel(col,v.size());
            for(int i=0 ;i<v.size(); i++){  
                ds = (LabResultDetail) v.get(i);
                tm.setValueAt(ds.value,i,0);                                 
            }
        }
        else{   
            tm= new TaBleModel(col,0);
        }
        tm.setEditingCol(0);
        jTable2.setModel(tm); 
    }
    private void setTableLabResultGroup(Vector voffice,int off)
    {            
        LabResultGroup dsg = new LabResultGroup();
        TaBleModel tm;
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null)
        {
            if(off == 1)
            {   p = prev;
                n = next;            
                prev = next;
                next = next + offset;
                if(next >= v.size())
                {   next = v.size();
                    count = next - prev;
                }
                if(count == 0)
                {   prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    prev = 0;
                    next = offset;
                }
                if(next >= v.size())
                {   next= v.size();
                    count = next;
                }
            }
            tm = new TaBleModel(col_TaBleModel,count);
            for(int i=0 ;i<count;i++)
            {
                dsg = (LabResultGroup) voffice.get(i+prev);
                try{
                    tm.setValueAt(dsg.number,i,0);
                    tm.setValueAt(dsg.name,i,1);
                }
                catch(Exception ex)
                {  ex.printStackTrace(Constant.getPrintStream());
                }
            }
        }
        else{
            tm = new TaBleModel(col_TaBleModel,0);
        }  
        jTable1.setModel(tm); 
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(10);
    }  
 
    private void selectLabResultGroup()
    {   
        setEnableAll(true);
        saved = 0;        
        int row = jTable1.getSelectedRow(); 
        jTextFieldName.setText((String)jTable1.getValueAt(row, 0));
        row = row  + prev;
        theLabResultGroup = (LabResultGroup)v.get(row);
        setLabResultGroup();
    }
    private void selectLabResultDetail()
    {   
        vd = theHC.theSetupControl.listLabResultDetailByResultType(theLabResultGroup.getObjectId());
        setLabResultDetailV(vd);
    }
    private void addItem(){
        if(vd == null)
           vd = new Vector();
        else{
            for(int i =0;i<vd.size();i++){
                if(!jTable2.getValueAt(i,0).toString().equals("")){
                    LabResultDetail ld = (LabResultDetail) vd.get(i);
                    ld.value = jTable2.getValueAt(i,0).toString();
                }
            }
        }
        vd.add(new LabResultDetail());
        setLabResultDetailV(vd);
        int rowcount = jTable2.getRowCount();
        for(int i = 0;i<rowcount;i++){
            if(jTable2.getValueAt(i,0).toString().equals("")){
                jTable2.requestFocus();
                jTable2.setRowSelectionInterval(i, i);
                break;
            }
        }
    }         

    private void getLabResultDetail(){
        for(int i =0;i<vd.size();i++){
            if(!jTable2.getValueAt(i,0).toString().equals("")){
                LabResultDetail ld = (LabResultDetail) vd.get(i);
                ld.value = jTable2.getValueAt(i,0).toString();
                ld.result_id = theLabResultGroup.getObjectId();
            }
            else{
                vd.remove(i);
            }
        }
    }
    private void getLabResultGroup(){
        theLabResultGroup.number = jTextFieldNunber.getText();
        theLabResultGroup.name = jTextFieldName.getText();
    }
    public void setLabResultGroup(){
        if(theLabResultGroup != null){
            jTextFieldNunber.setText(theLabResultGroup.number);
            jTextFieldName.setText(theLabResultGroup.name);
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupTypeOner;
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddItem;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonDelItem;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSaveLabResultDetail;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private com.hosv3.gui.component.HJTableSort jTable2;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldNunber;
    private javax.swing.JTextField jTextFieldSCode;
    private com.hospital_os.utility.TableResultsModel tableResultsModel1;
    // End of variables declaration//GEN-END:variables
}
