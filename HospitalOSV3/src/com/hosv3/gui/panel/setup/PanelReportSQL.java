/*
 * PanelReportSQL.java
 *
 * Created on 25 สิงหาคม 2545, 9:18 น.
 */
package com.hosv3.gui.panel.setup;
import java.util.Vector;
import javax.swing.*;
import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.usecase.setup.*;
import com.hosv3.utility.GuiLang;

import com.hospital_os.utility.*;
import com.hospital_os.object.*;
/**
 *
 * @author  henbe
 */
public class PanelReportSQL extends javax.swing.JPanel  implements 
//reFrashPanelResp,setEnableForLiftResp,
ManageSQLTemplateReq{
    /** Creates new form PanelReportBudget */
    UpdateStatus theUS;
    SetupControl theSetupControl;
    LookupControl theLookupControl;
    JFileChooser file=new JFileChooser();
    Vector vSQLTemplate = new Vector();
    SQLTemplate theSQLtemplate;
    boolean show_query = false;
    public PanelReportSQL(HosControl hc,UpdateStatus us) {
        initComponents();
        setLanguage();
        setControl(hc,us);
		jTable1.setGuiMode(true);
    }
    public PanelReportSQL() {
        initComponents();
        setLanguage();
    }
   /**
     *@Author : amp
     *@date : 29/02/2549
     *@see : จัดการเกี่ยวกับภาษา    
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabel2);  
        GuiLang.setLanguage(jLabelStatus);
    }    
    public void setControl(HosControl hc,UpdateStatus us){
        theUS = us;
        theSetupControl  = hc.theSetupControl;
        theLookupControl = hc.theLookupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addquerySQLAttach(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);

        ExampleFileFilter ff = new ExampleFileFilter();
        ff.addExtension("txt");
 	ff.setDescription("Tab Separate Version");
        file.addChoosableFileFilter(ff);
        setupLookup();
    }
    public void setupLookup(){
        vSQLTemplate = theLookupControl.listSQLTemplate();
        ComboboxModel.initComboBox(jComboBoxBoxSQLTemplate,  vSQLTemplate);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabelStatus = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextField1 = new javax.swing.JTextArea();
        jComboBoxBoxSQLTemplate = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        setPreferredSize(new java.awt.Dimension(273, 301));
        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jScrollPane1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setMinimumSize(new java.awt.Dimension(55, 120));
        jPanel2.setPreferredSize(new java.awt.Dimension(55, 120));
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Save16.gif")));
        jButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton2.setMaximumSize(new java.awt.Dimension(24, 24));
        jButton2.setMinimumSize(new java.awt.Dimension(26, 26));
        jButton2.setPreferredSize(new java.awt.Dimension(26, 26));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        jPanel2.add(jButton2, gridBagConstraints);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Refresh16.gif")));
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setMinimumSize(new java.awt.Dimension(26, 26));
        jButton1.setPreferredSize(new java.awt.Dimension(26, 26));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.SOUTH;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jButton1, gridBagConstraints);

        jLabelStatus.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 11));
        jLabelStatus.setText("Status");
        jLabelStatus.setMaximumSize(new java.awt.Dimension(26, 21));
        jLabelStatus.setMinimumSize(new java.awt.Dimension(26, 21));
        jLabelStatus.setPreferredSize(new java.awt.Dimension(26, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jLabelStatus, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(22, 75));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(22, 75));
        jTextField1.setLineWrap(true);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jScrollPane2.setViewportView(jTextField1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jComboBoxBoxSQLTemplate.setMinimumSize(new java.awt.Dimension(26, 24));
        jComboBoxBoxSQLTemplate.setPreferredSize(new java.awt.Dimension(26, 24));
        jComboBoxBoxSQLTemplate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxBoxSQLTemplateActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 10, 0, 10);
        jPanel2.add(jComboBoxBoxSQLTemplate, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 3);
        add(jPanel2, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 22));
        jLabel2.setText("\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19\u0e08\u0e32\u0e01 SQL");
        jPanel1.add(jLabel2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 0, 0);
        add(jPanel1, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    private void jComboBoxBoxSQLTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxBoxSQLTemplateActionPerformed
        // TODO add your handling code here:
        if(show_query)
        {
            int row = jComboBoxBoxSQLTemplate.getSelectedIndex();
            if(row != -1)
            {
                setObjectToGUI(row);
            }
        }
        else
        {
            show_query = true;
        }        
    }    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-LAST:event_jComboBoxBoxSQLTemplateActionPerformed
    int key = evt.getKeyCode();//GEN-FIRST:event_jTextField1KeyReleased
        if(key == java.awt.event.KeyEvent.VK_F2){
            String str = theSetupControl.querySQL(jTextField1.getText());
            jLabelStatus.setText(str);
        }
    }//GEN-LAST:event_jTextField1KeyReleased
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if(file.showSaveDialog(theUS.getJFrame())==JFileChooser.APPROVE_OPTION)
            IOStream.writeOutputDefault(Gutil.SaveToExcel(jTable1),file.getSelectedFile().getAbsoluteFile().toString());
    }//GEN-LAST:event_jButton2ActionPerformed
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String str = theSetupControl.querySQL(jTextField1.getText());
    }//GEN-LAST:event_jButton1ActionPerformed
    public void setObjectToGUI(int row)
    {
        if(theSQLtemplate == null)
            theSQLtemplate = new SQLTemplate();
        ComboFix p = (ComboFix)vSQLTemplate.get(row);
        theSQLtemplate = theSetupControl.readSQLTemplateByID(p.code);
        if(theSQLtemplate!=null)
        {   
            jTextField1.setText(theSQLtemplate.sql);
        }    
    }
    
    public void setTable(String[] columnname ,Vector vc)
    {
        String[] col = columnname;
        Item p = new Item();
        TaBleModel tm ;
        int countrows = 0;
        if(vc != null)
        {   
            tm= new TaBleModel(col,vc.size());
            if(vc.size() > 0)
            {   //วนลูป ต่อ 1 แถว
                for(int i=0 ;i<vc.size(); i++)
               {    //วนลูปตของ column
                   String[] rowdata = (String[])vc.get(i);
                   
                   for(int j = 0 ; j < rowdata.length ;j++)
                   {
                        tm.setValueAt(rowdata[j],i,j);
                   }
                   tm.setEditingCol(rowdata.length+1);
                   countrows = countrows + 1;                  
                }
            }
            jLabelStatus.setText("Result: " + countrows + " rows" );
        }
        else{   
            tm= new TaBleModel(col,0);
        }
        jTable1.setModel(tm);
        for(int i=0;i<jTable1.getColumnCount();i++)
            jTable1.getColumnModel().getColumn(i).setWidth(100);
    }
    ////////////////////////////////////////////////////////
    public void notifyquerySQL(String[] columnname, Vector vString) 
    {
        setTable(columnname,vString);
    }
 
    public Vector comboBoxViewSQLTemplate() {
        Constant.println("PanelSetupReportSQL function is not use.");
        return null;
    }
    public int deleteSQLTemplate(SQLTemplate sqlttemplate) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return -1;
    }
    public int editSQLTemplate(SQLTemplate sqlttemplate) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return -1;
    }
    public Vector listSQLTemplateAll(String search) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return null;
    }
    public SQLTemplate listSQLTemplateByCode(String code) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return null;
    }
    public Vector listSQLTemplateBySearch(String search, String status) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return null;
    }

    public SQLTemplate readSQLTemplateByID(String key_id) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return null;
    }
    public int saveSQLTemplate(SQLTemplate sqlttemplate) {
        Constant.println("PanelSetupReportSQL function is not use.");
        return -1;
    }
    
    public void querySQL(String sql) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBoxBoxSQLTemplate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelStatus;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private javax.swing.JTextArea jTextField1;
    // End of variables declaration//GEN-END:variables
}
