/*
 * PanelSetupDrugStandard.java
 *
 * Created on 14 มีนาคม 2549, 9:52 น.
 *
 * To change this template, choose Tools | Options and locate the template under
 * the Source Creation and Management node. Right-click the template and choose
 * Open. You can then make changes to the template in the Source Editor.
 */

package com.hosv3.gui.panel.setup;

import java.awt.*;
import java.util.Vector;
import java.awt.event.*;
import javax.swing.*;

import com.hosv3.usecase.setup.*;
import com.hosv3.control.*;
import com.hosv3.utility.connection.*;
import com.hosv3.utility.GuiLang;
import com.hosv3.control.lookup.*;
import com.hosv3.utility.Constant;
import com.hospital_os.object.*;
import com.hospital_os.utility.Gutil;
import com.hospital_os.utility.TaBleModel;

/**
 *
 * @author amp
 */

public class PanelSetupNCDGroup extends javax.swing.JPanel implements 
ManageOptionReq
{
    UpdateStatus theUS;
    HosControl theHC;
    SetupControl theSetupControl;
    NCDGroup theNCDGroup;
    Vector vNCDGroup = new Vector();
    int offset = 23;
    int next = 0;
    int prev = 0;
    int saved = 0; 
    String[] col = {"รหัส","ชื่อ"};
    
    /** Creates a new instance of PanelSetupDrugStandard */
    public PanelSetupNCDGroup(HosControl hc,UpdateStatus us) 
    {
        initComponents();
        setLanguage();
        setControl(hc,us);        
    }
    
    public PanelSetupNCDGroup() 
    {
        initComponents();
        setLanguage();
    }
        
    /**
     *@Author : amp
     *@date : 14/06/2549
     *@see : จัดการเกี่ยวกับภาษา    
     */
    private void setLanguage()
    {
        GuiLang.setLanguage(jLabel3);
        GuiLang.setLanguage(jLabelICD9code);
        GuiLang.setLanguage(jButtonSearch);
        GuiLang.setLanguage(jLabel1);        
        GuiLang.setLanguage(jLabel2);
        GuiLang.setLanguage(jButtonSave);       
        GuiLang.setLanguage(jLabel4);
        GuiLang.setLanguage(jLabel5);
        GuiLang.setLanguage(jLabel6);
        GuiLang.setLanguage(col);
    }
    
    /////////////////////Use this for decrease memory usage	
    public void setControl(HosControl hc,UpdateStatus us)
    {
        theUS = us;
        theHC = hc;
        theSetupControl = hc.theSetupControl;
        hc.theHS.theSetupSubject.addpanelrefrash(this);
        hc.theHS.theSetupSubject.addForLiftAttach(this);
        setEnableAll(false);
        //jTextFieldPattern.setEnabled(false);
        hosComboBoxStdChronic.setControl(new ChronicLookup(theHC.theLookupControl),false);
    }
    
    public void setupLookup()
    {
        hosComboBoxStdChronic.refresh();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        fontFormatTitle1 = new com.hospital_os.gui.font.FontFormatTitle();
        defaultFont1 = new com.hospital_os.gui.font.DefaultFont();
        fontFormatTitle2 = new com.hospital_os.gui.font.FontFormatTitle();
        jPanel4 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabelICD9code = new javax.swing.JLabel();
        jTextFieldSCode = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new com.hosv3.gui.component.HJTableSort();
        jPanel5 = new javax.swing.JPanel();
        jButtonPrev = new javax.swing.JButton();
        jButtonNext = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDescription = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldPattern = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        integerTextFieldValue = new com.hospital_os.utility.IntegerTextField();
        jTextFieldCode = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        hosComboBoxStdChronic = new com.hosv3.gui.component.HosComboBoxStd();
        jPanel1 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel3.setFont(fontFormatTitle1);
        jLabel3.setText("\u0e42\u0e23\u0e04 NCD");
        jPanel4.add(jLabel3, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(jPanel4, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setMinimumSize(new java.awt.Dimension(300, 25));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 404));
        jLabelICD9code.setFont(defaultFont1);
        jLabelICD9code.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 11);
        jPanel3.add(jLabelICD9code, gridBagConstraints);

        jTextFieldSCode.setFont(defaultFont1);
        jTextFieldSCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSCodeActionPerformed(evt);
            }
        });
        jTextFieldSCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldSCodeKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jTextFieldSCode, gridBagConstraints);

        jButtonSearch.setFont(defaultFont1);
        jButtonSearch.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("SEARCH"));
        jButtonSearch.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSearch.setMaximumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(67, 25));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(67, 25));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel3.add(jButtonSearch, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(100, 22));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(100, 80));
        jTable1.setFont(defaultFont1);
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTable1MouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTable1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jButtonPrev.setFont(defaultFont1);
        jButtonPrev.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Back16.gif")));
        jButtonPrev.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonPrev.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrevActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 0);
        jPanel5.add(jButtonPrev, gridBagConstraints);

        jButtonNext.setFont(defaultFont1);
        jButtonNext.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hospital_os/images/Forward16.gif")));
        jButtonNext.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonNext.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNextActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        jPanel5.add(jButtonNext, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel3.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        add(jPanel3, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.setMaximumSize(new java.awt.Dimension(350, 140));
        jPanel2.setMinimumSize(new java.awt.Dimension(350, 140));
        jPanel2.setPreferredSize(new java.awt.Dimension(350, 140));
        jLabel1.setFont(defaultFont1);
        jLabel1.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("CODE"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        jLabel2.setFont(defaultFont1);
        jLabel2.setText(java.util.ResourceBundle.getBundle("com/hosv3/property/thai").getString("NAME"));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 5, 0);
        jPanel2.add(jLabel2, gridBagConstraints);

        jTextFieldDescription.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 3);
        jPanel2.add(jTextFieldDescription, gridBagConstraints);

        jLabel4.setFont(defaultFont1);
        jLabel4.setText("\u0e23\u0e39\u0e1b\u0e41\u0e1a\u0e1a");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        jTextFieldPattern.setEditable(false);
        jTextFieldPattern.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 3);
        jPanel2.add(jTextFieldPattern, gridBagConstraints);

        jLabel5.setFont(defaultFont1);
        jLabel5.setText("\u0e04\u0e48\u0e32");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 0);
        jPanel2.add(jLabel5, gridBagConstraints);

        integerTextFieldValue.setColumns(5);
        integerTextFieldValue.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 3);
        jPanel2.add(integerTextFieldValue, gridBagConstraints);

        jTextFieldCode.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 3);
        jPanel2.add(jTextFieldCode, gridBagConstraints);

        jLabel6.setFont(defaultFont1);
        jLabel6.setText("\u0e01\u0e25\u0e38\u0e48\u0e21\u0e42\u0e23\u0e04\u0e40\u0e23\u0e37\u0e49\u0e2d\u0e23\u0e31\u0e07");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jLabel6, gridBagConstraints);

        hosComboBoxStdChronic.setFont(defaultFont1);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 3);
        jPanel2.add(hosComboBoxStdChronic, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setFont(defaultFont1);
        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        jButtonAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonAddKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel1.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setFont(defaultFont1);
        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel.setEnabled(false);
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });
        jButtonDel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonDelKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jButtonDel, gridBagConstraints);

        jButtonSave.setFont(defaultFont1);
        jButtonSave.setText("\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01\n");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(60, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        jButtonSave.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jButtonSaveKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldSCodeKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_jTextFieldSCodeKeyReleased
    {//GEN-HEADEREND:event_jTextFieldSCodeKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_DOWN)
        {
            jTable1.requestFocus();
            jTable1.setRowSelectionInterval(0, 0);
            select();
        }
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) search();
        if(this.jTextFieldSCode.getText().length() > 1) search();
    }//GEN-LAST:event_jTextFieldSCodeKeyReleased

    private void jButtonSaveKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonSaveKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            jButtonDel.requestFocus();
        }
    }//GEN-LAST:event_jButtonSaveKeyReleased

    private void jButtonDelKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonDelKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            jButtonSave.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            jButtonAdd.requestFocus();
        }
    }//GEN-LAST:event_jButtonDelKeyReleased

    private void jButtonAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jButtonAddKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            jButtonDel.requestFocus();
        }        
    }//GEN-LAST:event_jButtonAddKeyReleased
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDelActionPerformed
        delete();       
    }//GEN-LAST:event_jButtonDelActionPerformed
    private void jTextFieldSCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSCodeActionPerformed
        search();         
    }//GEN-LAST:event_jTextFieldSCodeActionPerformed
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        save();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        theNCDGroup = null;
        setEnableAll(true);
        clearAll();
        jTextFieldPattern.setText("รหัส00000");
    }//GEN-LAST:event_jButtonAddActionPerformed
    private void jButtonNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNextActionPerformed
        next();        
    }//GEN-LAST:event_jButtonNextActionPerformed
    private void jButtonPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrevActionPerformed
        prev();       
    }//GEN-LAST:event_jButtonPrevActionPerformed
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        search();        
    }//GEN-LAST:event_jButtonSearchActionPerformed
    private void jTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseReleased
        select();
    }//GEN-LAST:event_jTable1MouseReleased
    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        select();
        if(evt.getKeyCode() == KeyEvent.VK_INSERT)
        {
            jButtonAddActionPerformed(null);
        }
        if(evt.getKeyCode() == KeyEvent.VK_DELETE)
        {
            jButtonDelActionPerformed(null);
        }
        if(evt.getKeyCode() == KeyEvent.VK_RIGHT)
        {
            jButtonNextActionPerformed(null);
            jTable1.setRowSelectionInterval(0,0);
            select();
        }
        if(evt.getKeyCode() == KeyEvent.VK_LEFT)
        {
            jButtonPrevActionPerformed(null);
            jTable1.setRowSelectionInterval(0,0);
            select();
        }
        if(evt.getKeyCode() == KeyEvent.VK_SPACE)
        {
            jTextFieldCode.requestFocus();
        }
        if(evt.getKeyCode() == KeyEvent.VK_ESCAPE)
        {
            jTextFieldSCode.requestFocus();
        }
	}//GEN-LAST:event_jTable1KeyReleased
    
    private void next()
    {   
        setTable(vNCDGroup,1);
    }
    
    private void prev()
    {   
        setTable(vNCDGroup,0);
    }
    
    private void delete()
    {   
        int ret = theSetupControl.deleteNCDGroup(theNCDGroup);        
        if(ret==0)
                return;
        setEnableAll(false);
        clearAll();
        search();
    }
    
    private void clearAll()
    {
        jTextFieldCode.setText("");
        jTextFieldDescription.setText("");
        jTextFieldPattern.setText("");
        integerTextFieldValue.setText("");
        jTextFieldCode.requestFocus();
    }
    
    private void setEnableAll(boolean var)
    {   
        jTextFieldCode.setEditable(var);        
        jButtonSave.setEnabled(var);        
        jButtonDel.setEnabled(var);
        jTextFieldDescription.setEnabled(var);
        integerTextFieldValue.setEnabled(var);
    }
    
    private void select()
    {   
        setEnableAll(true);
        saved = 0;
        int row = jTable1.getSelectedRow();
        theNCDGroup = (NCDGroup)vNCDGroup.get(row);
        jTextFieldCode.setText(theNCDGroup.number);
        jTextFieldDescription.setText(theNCDGroup.description);
        jTextFieldPattern.setText(Constant.getTextBundle("รหัส")+"00000");
        integerTextFieldValue.setText(theNCDGroup.value);
        Gutil.setGuiData(hosComboBoxStdChronic,theNCDGroup.chronic_group); 
    }
    
    private void setTableListDefault()
    {      
        jTable1.getColumnModel().getColumn(0).setPreferredWidth(60); //รหัส
        jTable1.getColumnModel().getColumn(1).setPreferredWidth(300); //รายละเอียด
    }
        
    private void search()
    {   
        next = 0;
        prev = 0;
        String search = jTextFieldSCode.getText();
        
        vNCDGroup = theSetupControl.listNCDGroupAll(search);
        setTable(vNCDGroup,1);
    }
    
    private void setTable(Vector voffice,int off)
    {   
        NCDGroup of = new NCDGroup();
        int count = offset;
        int p =0;
        int n =0;
        int c =0;
        if(voffice != null)
        {
            if(off == 1)
            {   
                p = prev;
                n = next;
                prev = next;
                next = next + offset;
                if(next >= vNCDGroup.size())
                {   
                    next = vNCDGroup.size();
                    count = next - prev;
                }
                if(count == 0)
                {   
                    prev = p;
                    next = n;
                    count = n - p;
                }
            }
            else
            {   
                next = prev;
                prev = prev - offset;
                if(prev <=0)
                {    
                    prev = 0;
                    next = offset;
                }
                if(next >= vNCDGroup.size())
                {   
                    next = vNCDGroup.size();
                    count = next;
                }
            }
            TaBleModel tm = new TaBleModel(col,count);
            for(int i=0 ;i<count;i++)
            {  
                of = (NCDGroup)voffice.get(i+prev);
                tm.setValueAt(of.number,i,0);
                tm.setValueAt(of.description,i,1);
            }
            jTable1.setModel(tm);
        }
        else
        {   
            TaBleModel tm = new TaBleModel(col,0);
            jTable1.setModel(tm);
        }
        setTableListDefault();
    } 
    
    private void save()
    {   
        updateGO();
        int result = theSetupControl.saveNCDGroup(theNCDGroup);
        if(result==1)
        {
            setEnableAll(false);
            search();
        }
        else
        {
            setEnableAll(true);
        }
    }
    
    public static void main(String args[])
    {
        JFrame frm = new JFrame("Test");
        frm.getContentPane().setLayout(new BorderLayout());
        //PanelSetupWard pnl = new PanelSetupWard();    
        //frm.getContentPane().add(pnl,  BorderLayout.CENTER);
        frm.addWindowListener(new WindowAdapter()
        {   public void windowClosing(WindowEvent e)
            {    System.exit(0);
            }
        });
        frm.pack();
        frm.setVisible(true);
    }
    
    public void notifyreFrashPanel()     
    {
        setupLookup();
    }
    
    public void notifysetEnableForLift(boolean b) 
    {
        jButtonDel.setVisible(b);
    }
    
    public int editOption(Option option) 
    {
        Constant.println("PanelSetupWard function is not use.");
        return -1;
    }
    
    public Vector listOptionAll() {
        Constant.println("PanelSetupWard function is not use.");
        return null;
    }
    
    public void reFrashPanel() 
    {
    }
    
    public Option readOption() 
    {
        Constant.println("PanelSetupWard function is not use.");
        return null;
    }
    
    public int saveOption(Option option) 
    {
        Constant.println("PanelSetupWard function is not use.");
        return -1;
    }
    
    public void setEnableForLift(boolean b) 
    {
    }
    
    public void updateGO()
    {
        if(theNCDGroup==null)
            theNCDGroup = new NCDGroup();
       
        theNCDGroup.number = jTextFieldCode.getText();
        theNCDGroup.description = jTextFieldDescription.getText();
        theNCDGroup.pattern  = jTextFieldPattern.getText();
        theNCDGroup.value = integerTextFieldValue.getText(); 
        theNCDGroup.chronic_group = Gutil.getGuiData(hosComboBoxStdChronic);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.gui.font.DefaultFont defaultFont1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle1;
    private com.hospital_os.gui.font.FontFormatTitle fontFormatTitle2;
    private com.hosv3.gui.component.HosComboBoxStd hosComboBoxStdChronic;
    private com.hospital_os.utility.IntegerTextField integerTextFieldValue;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonNext;
    private javax.swing.JButton jButtonPrev;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelICD9code;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTable1;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDescription;
    private javax.swing.JTextField jTextFieldPattern;
    private javax.swing.JTextField jTextFieldSCode;
    // End of variables declaration//GEN-END:variables

}
