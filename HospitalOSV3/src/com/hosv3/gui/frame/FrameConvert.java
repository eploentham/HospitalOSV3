/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hosv3.gui.frame;

import com.hospital_os.object.Patient;
import com.hospital_os.usecase.connection.ConnectionInf;
import com.hosv3.control.HosControl;
import com.hosv3.utility.Config;
import com.hosv3.utility.Splash;

import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author ekapop
 */
public class FrameConvert extends javax.swing.JFrame {
    Patient thePatient;
    HosControl theHC;
//    Splash theSplash = new Splash();
    /**
     * Creates new form NewJFrame
     */
    public FrameConvert(HosControl hc) {
        initComponents();
        theHC = hc;
        this.setSize(900, 400);
        this.setLocationRelativeTo(null); 
        initConfig();
    }
    private void initConfig(){
//        theSplash.setVisible(false);
        String[] aaa = {txtHostDBD.getText(),txtDatabaseD.getText(), txtUserDBD.getText(), txtPassDBD.getText()};
        Config config = new Config();
//        ConnectionInf con_inf = config.getConnectionInfFromFile(aaa);        
        
        txtHostDBS.setText("localhost");
        txtUserDBS.setText("sa");
        txtPassDBS.setText("Ekartc2c5");
        txtPortDBS.setText("1433");
        txtHostDBD.setText("localhost");
        txtUserDBD.setText("postgres");
        txtPassDBD.setText("Ekartc2c5");
        txtPortDBD.setText("5432");
        txtDatabaseS.setText("bitorw");
        txtDatabaseD.setText("front_bangna5");
    }
    private void getPatient(Patient thePatient)
    {
        thePatient.hn="";
        thePatient.couple_id = "";
        thePatient.father_pid = "";
        thePatient.mother_pid = "";
        thePatient.patient_birthday = "";
        thePatient.ampur = "";
        thePatient.changwat = "";
        thePatient.tambon =  "";
        thePatient.blood_group_id = "1";
        thePatient.education_type_id = "11";
        thePatient.status_id =  "2";
        thePatient.f_sex_id =  "1";
        thePatient.labor =  "1";
        thePatient.marriage_status_id = "1";
        thePatient.nation_id =  "99";
        thePatient.occupation_id =  "000";
        thePatient.f_prefix_id =  "000";
        thePatient.race_id =  "99";
        thePatient.religion_id =  "1";
//        thePatient.typearea =  "1";
        thePatient.couple_firstname =  "";
        thePatient.couple_lastname =  "";
        thePatient.father_firstname =  "";
        thePatient.father_lastname =  "";
        thePatient.patient_name =  "";
        thePatient.house =  "";
        thePatient.patient_last_name =  "";
        thePatient.mother_firstname =  "";
        thePatient.mother_lastname =  "";
        thePatient.private_doc =  "";
        thePatient.p_type =  "";
        thePatient.road =  "";
        thePatient.village =  "";
        thePatient.pid =  "";
        thePatient.phone =  "";
        thePatient.relation =  "00";
        thePatient.sex_contact =  "1";
        thePatient.house_contact =  "";
        thePatient.village_contact =  "";
        thePatient.road_contact =  "";
        thePatient.phone_contact =  "";
        thePatient.ampur_contact = "";
        thePatient.changwat_contact = "";
        thePatient.tambon_contact =  "";
        thePatient.xn =  "";
        thePatient.pid =  "";
        thePatient.contact_fname =  "";
        thePatient.contact_lname =  "";
        thePatient.patient_birthday_true = "0";
        thePatient.record_date_time =  "";
        thePatient.staff_record = "";
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jButtonOpenFile = new javax.swing.JButton();
        jButtonConvert = new javax.swing.JButton();
        txtHostDBS = new javax.swing.JTextField();
        txtUserDBS = new javax.swing.JTextField();
        txtPassDBS = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtPortDBS = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtHostDBD = new javax.swing.JTextField();
        txtUserDBD = new javax.swing.JTextField();
        txtPassDBD = new javax.swing.JTextField();
        txtPortDBD = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtDatabaseS = new javax.swing.JTextField();
        txtDatabaseD = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jButtonOpenFile.setText("Convert drug");
        jButtonOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenFileActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonOpenFile, gridBagConstraints);

        jButtonConvert.setText("Convert Patient");
        jButtonConvert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConvertActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(jButtonConvert, gridBagConstraints);

        txtHostDBS.setText("jTextField1");
        txtHostDBS.setMinimumSize(new java.awt.Dimension(200, 24));
        txtHostDBS.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtHostDBS, gridBagConstraints);

        txtUserDBS.setText("jTextField2");
        txtUserDBS.setMinimumSize(new java.awt.Dimension(200, 24));
        txtUserDBS.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtUserDBS, gridBagConstraints);

        txtPassDBS.setText("jTextField3");
        txtPassDBS.setMinimumSize(new java.awt.Dimension(200, 24));
        txtPassDBS.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtPassDBS, gridBagConstraints);

        jLabel1.setText("Host DB[source]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel1, gridBagConstraints);

        jLabel2.setText("User DB[source]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setText("Pass DB[source]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setText("Port[Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel4, gridBagConstraints);

        txtPortDBS.setText("jTextField4");
        txtPortDBS.setMinimumSize(new java.awt.Dimension(200, 24));
        txtPortDBS.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtPortDBS, gridBagConstraints);

        jLabel5.setText("Host DB[Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        getContentPane().add(jLabel5, gridBagConstraints);

        jLabel6.setText("User DB[Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        getContentPane().add(jLabel6, gridBagConstraints);

        jLabel7.setText("Pass DB[Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        getContentPane().add(jLabel7, gridBagConstraints);

        jLabel8.setText("Port [Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        getContentPane().add(jLabel8, gridBagConstraints);

        txtHostDBD.setText("jTextField5");
        txtHostDBD.setMinimumSize(new java.awt.Dimension(200, 24));
        txtHostDBD.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtHostDBD, gridBagConstraints);

        txtUserDBD.setText("jTextField6");
        txtUserDBD.setMinimumSize(new java.awt.Dimension(200, 24));
        txtUserDBD.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtUserDBD, gridBagConstraints);

        txtPassDBD.setText("jTextField7");
        txtPassDBD.setMinimumSize(new java.awt.Dimension(200, 24));
        txtPassDBD.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtPassDBD, gridBagConstraints);

        txtPortDBD.setText("jTextField8");
        txtPortDBD.setMinimumSize(new java.awt.Dimension(200, 24));
        txtPortDBD.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtPortDBD, gridBagConstraints);

        jLabel9.setText("Database[source]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
        getContentPane().add(jLabel9, gridBagConstraints);

        jLabel10.setText("Database[Dest]");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 50, 0, 10);
        getContentPane().add(jLabel10, gridBagConstraints);

        txtDatabaseS.setText("jTextField1");
        txtDatabaseS.setMinimumSize(new java.awt.Dimension(200, 24));
        txtDatabaseS.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtDatabaseS, gridBagConstraints);

        txtDatabaseD.setText("jTextField2");
        txtDatabaseD.setMinimumSize(new java.awt.Dimension(200, 24));
        txtDatabaseD.setPreferredSize(new java.awt.Dimension(200, 24));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        getContentPane().add(txtDatabaseD, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenFileActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
        }
    }//GEN-LAST:event_jButtonOpenFileActionPerformed

    private void jButtonConvertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConvertActionPerformed
        Vector vNCD = new Vector();
        try {
            // TODO add your handling code here:
            String userDB="sa",passDB="Ekartc2c5", hostDB="DESKTOP-H18GJTN", portDB="", database="";
            String sql = "Select * FROM Pbsinf";
            userDB = txtUserDBS.getText();
            hostDB = txtHostDBS.getText();
            passDB = txtPassDBS.getText();
            portDB = txtPortDBS.getText();
            database = txtDatabaseS.getText();
            
            Class.forName( "com.microsoft.sqlserver.jdbc.SQLServerDriver" );
            Connection con = DriverManager.getConnection( "jdbc:sqlserver://"+hostDB+":"+portDB+";databasename="+database, userDB, passDB );
            //Connection con = DriverManager.getConnection( "jdbc:sqlserver://"+hostDB+";databasename="+database, userDB, passDB );
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery(sql);
            while (rs.next()) {
//                dbtime = rs.getString(1);
                Patient pat = new Patient();
                pat.hn = rs.getString("pbschtnum").trim();
                pat.couple_id = "";
                pat.father_pid = "";
                pat.mother_pid = "";
                pat.patient_birthday = "";
                if(rs.getString("pbsbirdte").trim().length()>=8){
                    pat.patient_birthday = rs.getString("pbsbirdte").trim().substring(0, 4)+"-"+rs.getString("pbsbirdte").trim().substring(4, 6)+"-"+rs.getString("pbsbirdte").trim().substring(6, 8);
                }
                pat.ampur = "";
                pat.changwat = "";
                pat.tambon =  "";
                pat.blood_group_id = "1";
                pat.education_type_id = "11";
                pat.status_id =  "2";
                if (rs.getString("pbssextyp").trim().equals("M")){
                    pat.f_sex_id =  "1";
                }else if (rs.getString("pbssextyp").trim().equals("F")){
                     pat.f_sex_id =  "2";
                }else{
                    pat.f_sex_id =  "3";
                }
                pat.labor =  "1";
                pat.marriage_status_id = "1";
                pat.nation_id =  "99";
                pat.occupation_id =  "000";
                pat.f_prefix_id =  "000";
                if (rs.getString("pbstitcod").trim().equals("01")){
                    pat.f_prefix_id =  "003";
                }else if (rs.getString("pbstitcod").trim().equals("02")){
                    pat.f_prefix_id =  "004";
                }else if (rs.getString("pbstitcod").trim().equals("03")){
                    pat.f_prefix_id =  "005";
                }else if (rs.getString("pbstitcod").trim().equals("10")){
                    pat.f_prefix_id =  "002";
                }else if (rs.getString("pbstitcod").trim().equals("11")){
                    pat.f_prefix_id =  "001";
                }else if (rs.getString("pbstitcod").trim().equals("124")){
                    pat.f_prefix_id =  "845";
                }else if (rs.getString("pbstitcod").trim().equals("139")){
                    pat.f_prefix_id =  "848";
                }else if (rs.getString("pbstitcod").trim().equals("176")){
                    pat.f_prefix_id =  "846";
                }else if (rs.getString("pbstitcod").trim().equals("212")){
                    pat.f_prefix_id =  "217";
                }else if (rs.getString("pbstitcod").trim().equals("322")){
                    pat.f_prefix_id =  "847";
                }else if (rs.getString("pbstitcod").trim().equals("329")){
                    pat.f_prefix_id =  "849";
                }else{
                    pat.f_prefix_id =  "000";
                }
                pat.race_id =  "99";
                pat.religion_id =  "1";
        //        pat.typearea =  "1";
                pat.couple_firstname =  "";
                pat.couple_lastname =  "";
                pat.father_firstname =  "";
                pat.father_lastname =  "";
                pat.patient_name =  rs.getString("pbspatnam").trim();
                pat.house =  "";
                pat.patient_last_name =  rs.getString("pbssurnam").trim();
                pat.mother_firstname =  "";
                pat.mother_lastname =  "";
                pat.private_doc =  "";
                pat.p_type =  "";
                pat.road =  rs.getString("pbsdtladr").trim();
                pat.village =  "";
                pat.pid =  rs.getString("pbsresnum").trim();
                pat.phone =  rs.getString("pbsphnnum").trim();
                pat.relation =  "00";
                pat.sex_contact =  "1";
                pat.house_contact =  "";
                pat.village_contact =  "";
                pat.road_contact =  "";
                pat.phone_contact =  "";
                pat.ampur_contact = "";
                pat.changwat_contact = "";
                pat.tambon_contact =  "";
                pat.xn =  "";
                pat.contact_fname =  "";
                pat.contact_lname =  "";
                pat.patient_birthday_true = "0";
                pat.record_date_time =  "";
                pat.staff_record = "";
                int ret=theHC.thePatientControl.savePatient(thePatient,null,"",vNCD);
                sql = "";
//                System.out.println(dbtime);
                
            } //end while

            con.close();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrameConvert.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(FrameConvert.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jButtonConvertActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonConvert;
    private javax.swing.JButton jButtonOpenFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField txtDatabaseD;
    private javax.swing.JTextField txtDatabaseS;
    private javax.swing.JTextField txtHostDBD;
    private javax.swing.JTextField txtHostDBS;
    private javax.swing.JTextField txtPassDBD;
    private javax.swing.JTextField txtPassDBS;
    private javax.swing.JTextField txtPortDBD;
    private javax.swing.JTextField txtPortDBS;
    private javax.swing.JTextField txtUserDBD;
    private javax.swing.JTextField txtUserDBS;
    // End of variables declaration//GEN-END:variables
}
