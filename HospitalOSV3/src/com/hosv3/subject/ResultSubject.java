/* * LabReferSubject.java * * Created on 22 พฤษภาคม 2547, 09:52 น. */package com.hosv3.subject; import com.hosv3.utility.Constant;import com.hosv3.usecase.transaction.*;import java.util.*;/** * * @author  amp */public class ResultSubject {      /*Vector*/            Vector theLabreferinV;     Vector theXrayObservV;     public ResultSubject()    {        theLabreferinV=new Vector();        theXrayObservV=new Vector();    }     public void removeAttach()    {        theLabreferinV.removeAllElements();        theXrayObservV.removeAllElements();            }//////////////////////////////////////////////////////////////////////////////////////////        public void attachManageLab (ManageLabXrayResp o)    {        theLabreferinV.add(o);    }    //////////////////////////////////////////////////////////////////////////////////////////        public void attachManageXray (ManageLabXrayResp o)    {        theXrayObservV.add(o);    }    //////////////////////////////////////////////////////////////////////////////////////////      public void notifyManagePatientLabReferIn(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyManagePatientLabReferIn(msg,status);         }    }     //////////////////////////////////////////////////////////////////////////////////////////////       //บันทึกรายการLab    public void notifySaveLabResult(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            Constant.println("__notifySaveLabResult________________" + theLabreferinV.get(i).getClass().toString());            ((ManageLabXrayResp)theLabreferinV.get(i)).notifySaveLabResult(msg,status);         }    }        //////////////////////////////////////////////////////////////////////////////////////////////       //ลบรายการLabที่รายงานผลแล้ว    public void notifyDeleteLabResult(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyDeleteLabResult(msg,status);         }    }   //////////////////////////////////////////////////////////////////////////////////////////////     //ลบรายการLabที่รายงานผลแล้ว    public void notifyDeleteLabOrder(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyDeleteLabOrder(msg,status);         }    }    //////////////////////////////////////////////////////////////////////////////////////////////     //ส่งผลแลป    public void notifyReportResultLab(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyReportResultLab(msg,status);         }    }     /////////////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อทำการเพิ่มFilmXray*/     public void notifySaveFilmXray(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifySaveFilmXray(msg,status);         }    }  ///////////////////////////////////////////////////////////////////////////////////     /*ใช้เมื่อทำการลบFilmXray*/     public void notifyDeleteFilmXray(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifyDeleteFilmXray(msg,status);         }    }     ///////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อมีการเพิ่มXrayPosition*/     public void notifySaveXrayPosition(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifySaveXrayPosition(msg,status);         }    }      ///////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อมีการลบXrayPosition*/     public void notifyDeleteXrayPosition(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifyDeleteXrayPosition(msg,status);         }    }     ///////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อมีการบันทึกXray*/     public void notifySaveResultXray(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifySaveResultXray(msg,status);         }    }     ///////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อมีการบันทึกXray*/     public void notifyXrayReportComplete(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifyXrayReportComplete(msg,status);         }    }     ///////////////////////////////////////////////////////////////////////////////////    /*ใช้เมื่อมีการลบผลxray*/     public void notifyDeleteResultXray(String msg,int status) {        for(int i=0,size=theXrayObservV.size();i<size;i++) {            ((ManageLabXrayResp)theXrayObservV.get(i)).notifyDeleteResultXray(msg,status);         }    }     //////////////////////////////////////////////////////////////////////////////////     /*ใช้เมื่อมีการเพิ่มแลปreferout*/     public void notifyAddLabReferOut(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyAddLabReferOut(msg,status);         }    }     //////////////////////////////////////////////////////////////////////////////////     /*ใช้เมื่อมีการเพิ่มแลปreferout*/     public void notifyAddLabReferIn(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyAddLabReferIn(msg,status);         }    }     //////////////////////////////////////////////////////////////////////////////////     /*ใช้ในการค้างรายการแลป*/     public void notifySaveRemainLabResult(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifySaveRemainLabResult(msg,status);         }    }            //////////////////////////////////////////////////////////////////////////////////     /*ใช้ในการส่งแลป*/     public void notifySendResultLab(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifySendResultLab(msg,status);         }    }       //////////////////////////////////////////////////////////////////////////////////     /*ใช้ในการลบคิวแลป*/     public void notifyDeleteQueueLab(String msg,int status) {        for(int i=0,size=theLabreferinV.size();i<size;i++) {            ((ManageLabXrayResp)theLabreferinV.get(i)).notifyDeleteQueueLab(msg,status);         }    }     public boolean detach(ManageLabXrayResp o)    {        theLabreferinV.remove(o);        return theXrayObservV.remove(o);    }}