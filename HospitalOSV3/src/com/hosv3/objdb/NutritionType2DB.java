package com.hosv3.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import java.util.*;import java.sql.*;import com.hosv3.object.NutritionType2;public class NutritionType2DB{    public ConnectionInf theConnectionInf;    public NutritionType2 dbObj;    final public String idtable = "188";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public NutritionType2DB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new NutritionType2();        initConfig();    }    public boolean initConfig()    {        dbObj.table="f_visit_nutrition_level";        dbObj.pk_field="f_visit_nutrition_level_id";        dbObj.description="visit_nutrition_level_description";        dbObj.max = "visit_nutrition_level_max";        dbObj.min = "visit_nutrition_level_min";        /*        dbObj.table = "nutrition_type";        dbObj.pk_field = "nutrition_id";        dbObj.description = "description";         */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(NutritionType2 o) throws Exception    {        String sql="";        NutritionType2 p = o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.description        + " ,"	+ dbObj.max        + " ,"	+ dbObj.min        + " ) values ('"        + p.getObjectId()        + "','" + p.description        + "','" + p.max        + "','" + p.min        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(NutritionType2 o) throws Exception    {        String sql="update " + dbObj.table + " set ";        NutritionType2 p=o;        String field =""        + "', " + dbObj.description + "='" + p.description        + "', " + dbObj.max + "='" + p.max        + "', " + dbObj.min + "='" + p.min        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(NutritionType2 o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public NutritionType2 selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (NutritionType2)v.get(0);    }        public Vector selectAllCombofix() throws Exception    {   Vector vc = new Vector();        String sql ="select * from " + dbObj.table + " order by "+        dbObj.description;        vc = eQuery(sql);        if(vc.size()==0)            return null;        else            return vc;            }         public Vector selectAll() throws Exception    {           Vector vc = new Vector();        String sql ="select * from " + dbObj.table + " order by "+        dbObj.description;        vc = eQuery(sql);        if(vc.size()==0)            return null;        else            return vc;            }               public Vector eQuery(String sql) throws Exception    {        NutritionType2 p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new NutritionType2();            p.setObjectId(rs.getString(dbObj.pk_field));            p.description = rs.getString(dbObj.description);            p.max = rs.getString(dbObj.max);            p.min = rs.getString(dbObj.min);            list.add(p);        }        rs.close();        return list;    }    }