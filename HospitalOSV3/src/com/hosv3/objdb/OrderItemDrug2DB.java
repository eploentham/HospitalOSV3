//Source file: E:\\Job\\DrugReportSep\\code\\com\\hospital_os\\control\\PrescribeDB.javapackage com.hosv3.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import com.hospital_os.objdb.*;import java.util.*;import /** *  * @deprecated ใช้ com.hosv3.objdb.OrderItemDrugDB แทน */java.sql.*;public class OrderItemDrug2DB extends OrderItemDrugDB{    OrderItemDrug dbObj2;    public OrderItemDrug2DB(ConnectionInf db)    {        super(db);//        dbObj2 = new OrderItemDrug(dbObj);//        dbObj2.active = "order_drug_active";//        dbObj2.modify = "order_drug_modifier";//        dbObj2.modify_time = "order_drug_modify_datetime";//        dbObj2.status = "order_drug_order_status";    }    public static void updateField(OrderItemDrug obj)    {        obj.dose = Constant.getSDouble(obj.dose);            }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(OrderItemDrug p) throws Exception    {        updateField(p);        p.generateOID(idtable);        String sql="insert into " + dbObj2.table + " ("        + dbObj2.pk_field        + " ,"	+ dbObj2.order_item_id        + " ,"	+ dbObj2.instruction        + " ,"	+ dbObj2.frequency        + " ,"	+ dbObj2.dose        + " ,"	+ dbObj2.use_uom        + " ,"	+ dbObj2.caution        + " ,"	+ dbObj2.description        + " ,"	+ dbObj2.day_time        + " ,"	+ dbObj2.printing        + " ,"  + dbObj2.purch_uom        + " ,"  + dbObj2.usage_special        + " ,"  + dbObj2.usage_text        + " ,"  + dbObj2.item_id        + " ,"  + dbObj2.active        + " ,"  + dbObj2.modify        + " ,"  + dbObj2.modify_time        + " ,"  + dbObj2.status        + " ) values ('"        + p.getObjectId()        + "','" + p.order_item_id        + "','" + p.instruction        + "','" + p.frequency        + "'," + p.dose       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ",'" + p.use_uom        + "','" + p.caution        + "','" + p.description        + "','" + p.day_time        + "','" + p.printing        + "','" + p.purch_uom        + "','" + p.usage_special        + "','" + p.usage_text        + "','" + p.item_id        + "','" + p.active        + "','" + p.modify        + "','" + p.modify_time        + "','" + p.status        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        //return theConnectionInf.eUpdate(sql);        return theConnectionInf.eUpdate(sql);    }    public int update(OrderItemDrug p) throws Exception    {        updateField(p);        String sql="update " + dbObj2.table + " set ";        String field =""        + " " + dbObj2.order_item_id + "='" + p.order_item_id        + "', " + dbObj2.instruction + "='" + p.instruction        + "', " + dbObj2.frequency + "='" + p.frequency        + "', " + dbObj2.dose + "=" + p.dose       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " + dbObj2.use_uom + "='" + p.use_uom        + "', " + dbObj2.caution + "='" + p.caution        + "', " + dbObj2.description + "='" + p.description        + "', " + dbObj2.day_time + "='" + p.day_time        + "', " + dbObj2.printing + "='" + p.printing        + "', " + dbObj2.purch_uom + "='" + p.purch_uom        + "', " + dbObj2.usage_special + "='" + p.usage_special        + "', " + dbObj2.usage_text + "='" + p.usage_text        + "', " + dbObj2.item_id + "='" + p.item_id        + "', " + dbObj2.active + "='" + p.active        + "', " + dbObj2.modify + "='" + p.modify        + "', " + dbObj2.modify_time + "='" + p.modify_time        + "', " + dbObj2.status + "='" + p.status        + "' where " + dbObj2.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field,theConnectionInf.gettypeDatabase());        //return theConnectionInf.eUpdate(sql);        return theConnectionInf.eUpdate(sql);    }    //////////////////////////////////////////////////////////////////////////////    public int delete(OrderItemDrug o) throws Exception    {         String sql="delete from " + dbObj2.table         + " where " + dbObj2.pk_field + "='" + o.getObjectId() +"'";         return theConnectionInf.eUpdate(sql);    }    //////////////////////////////////////////////////////////////////////////////    public int deleteByOrderItemId(String orderitemid) throws Exception    {          String sql="delete from " + dbObj2.table         + " where " + dbObj2.order_item_id + "='" + orderitemid +"'";         return theConnectionInf.eUpdate(sql);    }    //////////////////////////////////////////////////////////////////////////////    public OrderItemDrug selectByPK(String pk) throws Exception    {         String sql="select * from " + dbObj2.table         + " where " + dbObj2.pk_field         + " = '" + pk + "'";                  Vector v=eQuery(sql);         if(v.size()==0)             return null;         return (OrderItemDrug)v.get(0);    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj2.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////    public OrderItemDrug selectByOrderItemID(String pk) throws Exception    {//        String sql="select * from " + dbObj2.table        + " where " + dbObj2.order_item_id + " = '" + pk + "'"         + " and " + dbObj2.active + " <> '0'" ;        Vector v=eQuery(sql);        if(v.size()==0)  return null;        else             return (OrderItemDrug)v.get(0);    }    //////////////////////////////////////////////////////////////////////////////    public Vector eQuery(String sql) throws Exception    {        OrderItemDrug p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new OrderItemDrug();            p.setObjectId(rs.getString(dbObj2.pk_field));            p.order_item_id = rs.getString(dbObj2.order_item_id);            p.instruction = rs.getString(dbObj2.instruction);            p.frequency = rs.getString(dbObj2.frequency);            p.dose = rs.getString(dbObj2.dose);            p.use_uom = rs.getString(dbObj2.use_uom);            p.caution = rs.getString(dbObj2.caution);            p.description = rs.getString(dbObj2.description);            p.day_time = rs.getString(dbObj2.day_time);            p.printing = rs.getString(dbObj2.printing);            p.purch_uom = rs.getString(dbObj2.purch_uom);            p.usage_special = rs.getString(dbObj2.usage_special);            p.usage_text = rs.getString(dbObj2.usage_text);            p.item_id = rs.getString(dbObj2.item_id);            p.active = rs.getString(dbObj2.active);            p.modify = rs.getString(dbObj2.modify);            p.modify_time = rs.getString(dbObj2.modify_time);            p.status = rs.getString(dbObj2.status);            list.add(p);        }        rs.close();        return list;    }    //////////////////////////////////////////////////////////////////////////////    public OrderItemDrug selectOrderItemDrugByItemId(String item_id) throws Exception    {        String sql="select * from " + dbObj2.table        + " where " + dbObj2.order_item_id        + " = '" + item_id + "'" ;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (OrderItemDrug)v.get(0);    }     public void checkIndex()    {           String sql = "";        try{            sql = "CREATE INDEX " +dbObj2.order_item_id + " ON " + dbObj2.table  + " USING btree ("+dbObj2.order_item_id +")";            this.theConnectionInf.eUpdate(sql);        }        catch(Exception ex)        {            ex.printStackTrace(Constant.getPrintStream());        }     }}