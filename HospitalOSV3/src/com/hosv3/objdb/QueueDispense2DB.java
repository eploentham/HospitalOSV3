/* * QueueDispense2DB.java * * Created on 27 ตุลาคม 2546, 22:54 น. */package com.hosv3.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hosv3.object.*;import java.util.*;import java.sql.*;/** * * @author  Administrator */public class QueueDispense2DB{        public ConnectionInf theConnectionInf;    public QueueDispense2 dbObj;    final public String idtable = "219";    /** Creates a new instance of QueueDispense2DB */    public QueueDispense2DB(ConnectionInf db)    {        theConnectionInf = db;        dbObj = new QueueDispense2();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_visit_queue_despense";        dbObj.pk_field="t_visit_queue_despense_id";		dbObj.visit_id   ="t_visit_id";        dbObj.number_order   ="visit_queue_despense_number_order";        dbObj.last_service   ="b_service_point_id";        dbObj.assign_time   ="assign_date_time";        dbObj.patient_id   ="t_patient_id";        dbObj.active="visit_queue_despense_active";		dbObj.vn = "visit_queue_despense_vn"; 		dbObj.service_point_name = "visit_queue_despense_service_point_name"; 		dbObj.hn = "visit_queue_despense_hn";		dbObj.prename = "visit_queue_despense_prename";		dbObj.firstname = "visit_queue_despense_firstname";		dbObj.lastname = "visit_queue_despense_lastname";        return true;    }        public int insert(QueueDispense2 o) throws Exception    {        String sql="";        QueueDispense2 p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field  + " ,"        + dbObj.visit_id + " ,"        + dbObj.number_order + " ,"        + dbObj.last_service + " ,"        + dbObj.assign_time  + " ,"        + dbObj.active  + " ,"        + dbObj.vn  + " ,"         + dbObj.service_point_name  + " ,"         + dbObj.hn  + " ,"        + dbObj.prename  + " ,"        + dbObj.firstname  + " ,"        + dbObj.lastname  + " ,"        + dbObj.patient_id  + " "                + " ) values ('"        + p.getObjectId() + "','"        + p.visit_id + "' ,'"        + p.number_order + "' ,'"        + p.last_service + "' ,'"        + p.assign_time  + "' ,'"        + p.active  + "' ,'"        + p.vn  + "' ,'"         + p.service_point_name  + "' ,'"         + p.hn  + "' ,'"        + p.prename  + "' ,'"        + p.firstname  + "' ,'"        + p.lastname  + "' ,'"        + p.patient_id        + "')";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int updateByVisitID(String visit_id ) throws Exception    {        String sql="update " + dbObj.table + " set "        + dbObj.active + " = '1' "        + " where " + dbObj.visit_id + " ='" +visit_id + "'";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int updateDespenseToZero(String visit_id ) throws Exception    {        String sql="update " + dbObj.table + " set "        + dbObj.active + " = '0' "        + " where " + dbObj.visit_id + " ='" +visit_id + "'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }            public int update(QueueDispense2 o) throws Exception    {        String sql="update " + dbObj.table + " set ";        QueueDispense2 p=o;                String field ="" + "', " +                dbObj.visit_id + "='" + p.visit_id + "', "        + dbObj.number_order + "='" + p.number_order + "', "        + dbObj.last_service + "='" + p.last_service + "', "        + dbObj.assign_time  + "='" + p.assign_time + "', "        + dbObj.active  + "='" + p.active + "', "        + dbObj.vn  + "='" + p.vn + "', "         + dbObj.service_point_name  + "='" + p.service_point_name + "', "         + dbObj.hn  + "='" + p.hn + "', "        + dbObj.prename  + "='" + p.prename + "', "        + dbObj.firstname  + "='" + p.firstname + "', "        + dbObj.lastname  + "='" + p.lastname + "', "        + dbObj.patient_id  + "='" + p.patient_id + "' "        + " where " + dbObj.pk_field + "='" + p.getObjectId() +"'";                sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(QueueDispense2 o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";                return theConnectionInf.eUpdate(sql);    }        public int deleteByVisitID(String visit_id) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.visit_id + "='" + visit_id +"'";        return theConnectionInf.eUpdate(sql);    }        public QueueDispense2 selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (QueueDispense2)v.get(0);    }        public QueueDispense2 selectByVisitID(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (QueueDispense2)v.get(0);    }        public QueueDispense2 selectByPatientID(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (QueueDispense2)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.active + " = '1'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByIPD() throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.active + " = '1'"        + " and " + dbObj.vn + " like '1%'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    public Vector selectByOPD() throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.active + " = '1'"        + " and " + dbObj.vn + " like '0%'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    public Vector eQuery(String sql) throws Exception    {        QueueDispense2 p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new QueueDispense2();            p.setObjectId(rs.getString(dbObj.pk_field));            p.visit_id = rs.getString(dbObj.visit_id);            p.number_order = rs.getString(dbObj.number_order);            p.last_service = rs.getString(dbObj.last_service);            p.assign_time = rs.getString(dbObj.assign_time);            p.patient_id = rs.getString(dbObj.patient_id);            p.active = rs.getString(dbObj.active);            p.vn = rs.getString(dbObj.vn);             p.service_point_name = rs.getString(dbObj.service_point_name);             p.hn = rs.getString(dbObj.hn);            p.prename = rs.getString(dbObj.prename);            p.firstname = rs.getString(dbObj.firstname);            p.lastname = rs.getString(dbObj.lastname);            list.add(p);        }        rs.close();        return list;    }        }