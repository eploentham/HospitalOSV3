package com.hosv3.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hosv3.object.*;import java.util.*;import java.sql.*;public class OfficeInCupDB{    public ConnectionInf theConnectionInf;    public OfficeInCup dbObj;    final public String idtable = "903";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public OfficeInCupDB(ConnectionInf db)    {        theConnectionInf = db;        dbObj = new OfficeInCup();        initConfig();    }    public boolean initConfig()    {        dbObj.table = "r_hospital_incup";        dbObj.pk_field = "hospital_incup_id";        dbObj.code = "hospital_incup_code";        dbObj.name = "hospital_incup_name";        return true;    }        public int insert(OfficeInCup p) throws Exception    {        String sql="";        p.generateOID(this.idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.code        + " ,"  + dbObj.name        + " ) values ('"        + p.getObjectId()        + "','" + p.code        + "','" + p.name        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(OfficeInCup of) throws Exception    {           String sql ="delete from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + of.getObjectId() + "'";        return theConnectionInf.eUpdate(sql);    }    public int deleteByOffId(String id) throws Exception    {        String sql ="delete from " + dbObj.table        + " where " + dbObj.code        + " = '" + id + "'";        return theConnectionInf.eUpdate(sql);    }    public Vector selectAll() throws Exception    {    	String sql ="select * from " + dbObj.table        + " order by " + dbObj.code;        return eQuery(sql);    }    public OfficeInCup selectByCode(String code) throws Exception    {       	String sql ="select * from " + dbObj.table        + " where " + dbObj.code + " = '" + code + "'";        Vector v = eQuery(sql);        if(v.isEmpty()) return null;        else return (OfficeInCup)v.get(0);    }        public Vector selectByCN(String str) throws Exception    {       	String sql ="select * from " + dbObj.table        + " where " + dbObj.code + " like '" + str +"'"        + " or " + dbObj.name + " like '" + str +"'"        + " order by "+ dbObj.code;        return eQuery(sql);    }        public Vector eQuery(String sql) throws Exception    {        OfficeInCup p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new OfficeInCup();            p.setObjectId(rs.getString(dbObj.pk_field));            p.code = rs.getString(dbObj.code);            p.name = rs.getString(dbObj.name);            list.add(p);        }        rs.close();        return list;    }        }