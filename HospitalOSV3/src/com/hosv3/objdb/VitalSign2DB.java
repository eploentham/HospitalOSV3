package com.hosv3.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.Gutil;import com.hospital_os.object.*;import com.hospital_os.objdb.*;import java.util.*;import java.sql.*;/** *@deprecated henbe unused 05/02/07 */public class VitalSign2DB extends VitalSignDB{    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public VitalSign2DB(ConnectionInf db)    {        super(db);    }        /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(VitalSign o) throws Exception    {        String sql="";        VitalSign p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.record_time        + " ,"	+ dbObj.record_date        + " ,"	+ dbObj.height        + " ,"	+ dbObj.weight        + " ,"	+ dbObj.pressure        + " ,"	+ dbObj.temp        + " ,"	+ dbObj.puls        + " ,"	+ dbObj.res        + " ,"	+ dbObj.note        + " ,"	+ dbObj.nutrition        + " ,"	+ dbObj.reporter        + " ,"	+ dbObj.patient_id        + " ,"  + dbObj.bmi        + " ,"	+ dbObj.check_date        + " ,"	+ dbObj.check_time        + " ,"	+ dbObj.staff_modify        + " ,"  + dbObj.modify_date_time         + " ,"  + dbObj.active                 + " ) values ('"        + p.getObjectId()        + "','" + p.visit_id        + "','" + p.record_time        + "','" + p.record_date        + "','" + p.height        + "','" + p.weight        + "','" + p.pressure        + "','" + p.temp        + "','" + p.puls        + "','" + p.res        + "','" + p.note        + "','" + p.nutrition        + "','" + p.reporter        + "','" + p.patient_id        + "','" + p.bmi        + "','" + p.check_date        + "','" + p.check_time        + "','" + p.staff_modify        + "','" + p.modify_date_time        + "','" + p.active                + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    /////////////////////////////////////////////////////////////////////////////////////    public int update(VitalSign o) throws Exception    {        String sql="update " + dbObj.table + " set ";        VitalSign p=o;        String field =""        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.record_time + "='" + p.record_time        + "', " + dbObj.record_date + "='" + p.record_date        + "', " + dbObj.height + "='" + p.height        + "', " + dbObj.weight + "='" + p.weight        + "', " + dbObj.pressure + "='" + p.pressure        + "', " + dbObj.temp + "='" + p.temp        + "', " + dbObj.puls + "='" + p.puls        + "', " + dbObj.res + "='" + p.res        + "', " + dbObj.note + "='" + p.note        + "', " + dbObj.nutrition + "='" + p.nutrition        + "', " + dbObj.reporter + "='" + p.reporter        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.bmi + "='" + p.bmi        + "', " + dbObj.check_date + "='" + p.check_date        + "', " + dbObj.check_time + "='" + p.check_time        + "', " + dbObj.staff_modify + "='" + p.staff_modify        + "', " + dbObj.modify_date_time + "='" + p.modify_date_time        + "', " + dbObj.active + "='" + p.active         + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        /*     *@author: Amp     *@date: 05/04/2549     */    public int updateActiveById(String id) throws Exception    {        String sql="update " + dbObj.table + " set ";        String field =""        + "', " + dbObj.active + " = '0"        + "' where " + dbObj.pk_field + "='" + id +"'";                sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        //////////////////////////////////////////////////////////////////////////////    public int delete(VitalSign o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    /////////////////////////////////////////////////////////////////////////////    public Vector selectWeightByVisitID(String visit_id) throws Exception    {        String sql="select * from " + dbObj.table + "" +        " Where " + dbObj.visit_id + " = '" + visit_id + "'" +        " and " + dbObj.weight + " <>'' " +        " and " + dbObj.active + " = '1'" +                " ORDER BY " + dbObj.record_date + "," + dbObj.record_time + " DESC";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;            }    /////////////////////////////////////////////////////////////////////////////    public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table                + " Where " + dbObj.active + " = '1'";        return eQuery(sql);    }    /**     *@deprecated henbe unused 05/02/07     **/    //////////////////////////////////////////////////////////////////////////////    public Vector selectSymptom() throws Exception    {        String sql = "select  " +        " " + dbObj.note +        "," + dbObj.current_illness +        "," +  dbObj.patient_id +        "," + dbObj.reporter +        "," + dbObj.visit_id +        "," + dbObj.record_time +        "," + dbObj.record_date +        " from " +dbObj.table  +        " where " + " " +        "" + dbObj.note + " <> ''" +        " or " + dbObj.current_illness + " <> '' " +        "";        Vector v=eQuerySyptom(sql);        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////    public VitalSign selectByPK(String pk) throws Exception    {            String sql="select * from " + dbObj.table         + " where " + dbObj.pk_field         + " = '" + pk + "'"         + " and " + dbObj.active + " = '1'";                  Vector v=eQuery(sql);         if(v.size()==0)             return null;         else             return (VitalSign)v.get(0);    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectByVisitId(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id        + " = '" + pk + "'"        + " and " + dbObj.active + " = '1'";                       Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector eQuery(String sql) throws Exception    {        VitalSign p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new VitalSign();            p.setObjectId(rs.getString(dbObj.pk_field));            p.visit_id = rs.getString(dbObj.visit_id);            p.record_time = rs.getString(dbObj.record_time);            p.record_date = rs.getString(dbObj.record_date);            p.height = rs.getString(dbObj.height);            p.weight = rs.getString(dbObj.weight);            p.pressure = rs.getString(dbObj.pressure);            p.temp = rs.getString(dbObj.temp);            p.puls = rs.getString(dbObj.puls);            p.res = rs.getString(dbObj.res);            p.note = rs.getString(dbObj.note);            p.nutrition = rs.getString(dbObj.nutrition);            p.reporter = rs.getString(dbObj.reporter);            p.patient_id = rs.getString(dbObj.patient_id);            p.bmi = rs.getString(dbObj.bmi);            p.check_date = rs.getString(dbObj.check_date);            p.check_time = rs.getString(dbObj.check_time);            p.staff_modify = rs.getString(dbObj.staff_modify);            p.modify_date_time = rs.getString(dbObj.modify_date_time);            p.active = rs.getString(dbObj.active);                        list.add(p);        }        rs.close();        return list;    }    //////////////////////////////////////////////////////////////////////////////    /**     *@deprecated henbe unused     **/    public Vector eQuerySyptom(String sql) throws Exception    {        VitalSign p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new VitalSign();            p.visit_id = rs.getString(dbObj.visit_id);            p.record_time = rs.getString(dbObj.record_time);            p.record_date = rs.getString(dbObj.record_date);            p.reporter = rs.getString(dbObj.reporter);            p.note = rs.getString(dbObj.note);            //p.current_illness = rs.getString(dbObj.current_illness);            p.patient_id = rs.getString(dbObj.patient_id);            p.bmi = rs.getString(dbObj.bmi);            p.check_date = rs.getString(dbObj.check_date);            p.check_time = rs.getString(dbObj.check_time);            p.staff_modify = rs.getString(dbObj.staff_modify);            p.modify_date_time = rs.getString(dbObj.modify_date_time);            p.active = rs.getString(dbObj.active);                        list.add(p);        }        rs.close();        return list;    }    //////////////////////////////////////////////////////////////////////////////    /**@author amp     *@deprecated selectByVisitId     *list รายการ vital sign ตาม vn     */    public Vector selectByVn(String vn) throws Exception    {//        String sql = "select * from " + dbObj.table//        + " where " + dbObj.visit_id + " = '" + vn + "'"//        + " and " + dbObj.active + " = '1'"       //        + " order by " + dbObj.record_date + ","//        + dbObj.record_time + " desc";        // ดึงข้อมูล VitalSign จาก Vn โดยเรียงตามวันเวลาที่ตรวจ  sumo 29/08/2549        String sql = "select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + vn + "'"        + " and " + dbObj.active + " = '1'"               + " order by " + dbObj.check_date + ","        + dbObj.check_time + " desc";                return eQuery(sql);    }        //////////////////////////////////////////////////////////////////////////////    /**@author ojika     *list รายการ vital sign ตาม vn     */    public Vector selectByVnOrderByTime(String vn) throws Exception    {        String sql = "select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + vn + "'"        + " and " + dbObj.active + " = '1'"                + " order by " + dbObj.record_date + ","        + dbObj.record_time;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////}