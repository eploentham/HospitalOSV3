/* * GUtil.java * * Created on 19 ????? 2546, 17:52 ?. */package com.hospital_os.utility;import javax.swing.*;import javax.swing.text.*;import java.awt.event.*;import java.awt.*;import java.util.*;import com.hospital_os.object.*;import com.hospital_os.usecase.connection.*;/** * * @author  Administrator */public class Gutil {        /** Creates a new instance of GUtil */    public static String namePatient = "ชื่อผู้ป่วย";        //add by noom ,30/09/48    public static final char SINGLE_SYMBOL = '\'';    public static final char BACKSLASH_SYMBOL = '\\';        public static DateTime dt ;        public Gutil() {    }    public static String getTextLabel(String str)    {        String dx_arry[] =str.split("\n");        String dx_label = dx_arry[0];        if(dx_arry.length>1)            dx_label += "..." ;        return dx_label;    }    public static String getToolTipText(String str)    {        String ttt = "<html><body>";        String str_arr[] = str.split("\n");        for(int i=0;i<str_arr.length;i++) {            ttt += str_arr[i] + "<br> ";        }        ttt += "</html></body>";        return ttt;    }    public static boolean setResultLab(JTextComponent jt,OrderItem oi,ResultLab rl)    {        jt.setText(rl.result);        jt.setToolTipText(rl.result);        jt.setEnabled(!oi.status.equals(OrderStatus.REPORT));                return true;    }    /**     *@author henbe pongtorn     *@return ??????????????????? cursor ?????d??????????     */    public static void setTransferCursor(KeyEvent evt,JComponent jc            ,JComponent jc_up,JComponent jc_left            ,JComponent jc_down,JComponent jc_right)    {        boolean is_up = true;        boolean is_down = true;        boolean is_left = true;        boolean is_right = true;        boolean is_enter = false;        //???????????????? dropdown ???        if(jc instanceof JComboBox)        {            JComboBox jcbox = (JComboBox)jc;            is_enter = !jcbox.isPopupVisible();            is_up = !jcbox.isPopupVisible();            is_down = false;        }        else if(jc instanceof JTextField)        {            int curr = ((JTextField)jc).getCaretPosition();            int length = ((JTextField)jc).getText().length();            is_left = (curr==0);            is_right = (curr==length);        }        if(evt.getKeyCode()==evt.VK_UP && jc_up!=null && is_up)            jc_up.requestFocus();        if(evt.getKeyCode()==evt.VK_LEFT && jc_left!=null && is_left)            jc_left.requestFocus();        if(evt.getKeyCode()==evt.VK_DOWN && jc_down!=null && is_down)            jc_down.requestFocus();        if(evt.getKeyCode()==evt.VK_RIGHT && jc_right!=null && is_right)            jc_right.requestFocus();        if(evt.getKeyCode()==evt.VK_ENTER && jc_down!=null && is_enter)            jc_down.requestFocus();    }        /**     *@author henbe     *@see ??????????????????????????????????     *@date 20/9/2549     */        public static String getSexPrefix(String prefix_id)    {        if(prefix_id.equals(Prefix.BOY))            return Sex.isMAN();        else if(prefix_id.equals(Prefix.GIRL))            return Sex.isWOMAN();        else if(prefix_id.equals(Prefix.MR))            return Sex.isMAN();        else if(prefix_id.equals(Prefix.MISS))            return Sex.isWOMAN();        else if(prefix_id.equals(Prefix.MRS))            return Sex.isWOMAN();        else             return Sex.isMAN();    }   /**     *@author henbe     *@see ??????????????????????????????????     *@date 20/9/2549     */        public static String getMarryPrefix(String prefix_id)    {        if(prefix_id.equals(Prefix.MISS))            return MarryStatus.SINGLE;        else if(prefix_id.equals(Prefix.MRS))            return MarryStatus.COUPLE;        else             return MarryStatus.SINGLE;    }   /**     *@author henbe     *@see ??????????????????????????????????     *@date 20/9/2549     */        public static String getAgePrefix(String prefix_id,String age)    {        int age_int = 0;        if(age.equals(""))            return "";        try{            age_int = Integer.parseInt(age);        }        catch(Exception e){            e.printStackTrace(Constant.getPrintStream());            return age;        }        if(prefix_id.equals(Prefix.BOY) || prefix_id.equals(Prefix.GIRL))            if(age_int<15)                return age;            else                return "";        else             if(age_int>=15)                return age;            else                return "";    }    /**     *@author henbe     *@see ?????????????????????????????????????????     *@date 20/9/2549     */    public static String getPrefix(String old_prefix_id,String sex_id,String age_str,String mstatus_id)    {//        Constant.println(old_prefix_id);//        Constant.println(sex_id);//        Constant.println(age_str);//        Constant.println(mstatus_id);        int age = -1;        try{            age = Integer.parseInt(age_str);            }           catch(Exception e){            return old_prefix_id;        }                if(Prefix.isUnKnown(old_prefix_id))            return old_prefix_id;                if(sex_id.equals(Sex.isMAN()))        {            if(age>=15)                return Prefix.MR;            else                return Prefix.BOY;        }        else if(sex_id.equals(Sex.isWOMAN()))        {            if(age<15)                return Prefix.GIRL;            else{                if(old_prefix_id.equals(Prefix.MRS))                    return Prefix.MRS;                                if(!old_prefix_id.equals(Prefix.MISS))                    return Prefix.MISS;            }        }        return old_prefix_id;    }        /**?????????????? string ??? int ????? exception      * ????????? 0     *@param value ????? String     *@return ?? int     *@author padungrat(tong)     */    public static int convertStringToInt(String value)    {   int dvalue =0;        try        {            dvalue  = Integer.parseInt(value);        }        catch(Exception ex)        {            dvalue = 0;        }        finally        {                    }        return dvalue;    }        /**?????????????? string ??? Double ????? exception      * ????????? 0.0     *@param value ????? String     *@return ?? double     *@author padungrat(tong)     */    public static double convertStringToDouble(String value)    {   double dvalue =0.0;        try        {            dvalue  = Double.parseDouble(value);        }        catch(Exception ex)        {            dvalue = 0.0;        }        finally        {                    }        return dvalue;    }    /**     *@deprecated henbe unused must send 2 parameter     */    public static String calculateAge(String date) {        return DateUtil.calculateAge(date);    }        public static boolean setGuiData(JLabel j,String data){        j.setText(data);        return true;    }    public static boolean setGuiData(PIDPanel j,String data){        j.setText(data);        return true;    }            public static boolean setGuiData(JTextField j,String data){        j.setText(data);        return true;    }    /**??? ??????? ?????????? ?? yyyy-mm-dd*/    public static String calPregnant(String date) {        return DateUtil.calPregnant(date);    }    /**     * ??????? ?? ????????? ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss     * ???????? ???? ??????     */    public static int calWeek(String date) {        return DateUtil.countWeek(date);    }    public static boolean setGuiData(DateComboBox j,String data){        j.setText(DateUtil.convertFieldDate(data));        return true;    }    public static boolean setGuiData(JComboBox j,String data){        return ComboboxModel.setCodeComboBox(j,data);    }    public static String getGuiData(JTextField j) {        return CheckReservedWords(j.getText());    }    public static String getGuiDataBirthday(JTextField j) {        return j.getText();    }    public static String getGuiData(PIDPanel j){        return j.getText();    }    public static String getGuiData(String j) {        return j;    }    public static String getGuiData(DateComboBox j) {        return j.getText();    }    public static void setGuiData(DateComboBoxOld1 j,String data){        j.setText(data);    }    /**     * ???????????? code ?? combobox ???????????????     */    public static String getGuiData(JComboBox j) {        if(j.getItemCount()==0)    return "";        return ComboboxModel.getCodeComboBox(j);    }    /**     * ???????????? Description ?? combobox ???????????????     */    public static String getGuiCodeData(JComboBox j) {        if(j.getItemCount()==0)    return "";        return ComboboxModel.getStringConboBox(j);    }    /**     *  ????? ?? CheckBox ?? Boolean ??? String     *  ????????? jCheckBox     *  ???????? ?? String ??? 0 , 1     */    public static String isSelected(JCheckBox j) {        if(j.isSelected())            return "1";        else            return "0";            }        /**     *  ??????????? Boolean ???????????????? String     *  ????????? ?? String : 0 ,1     *  ???????? ?? boolean : false  , true     *  isSelected     * @deprecated henbe unused use isSelected ?     */    public static boolean setSelect(String s) {        try{            if(s.equals("1"))                return true;            if(s.equals("0"))                return false;        } catch(Exception ex) {            return false;        }        return false;    }    public static boolean isSelected(String s) {        try{            if(s.equals("1"))                return true;            if(s.equals("0"))                return false;        } catch(Exception ex) {            return false;        }        return false;    }        /**     * @not deprecated henbe ????? theLookupControl.read ??????????????     * ???????     */    public static String getVectorName(Vector v,String code) {        if(code==null || v==null) return "";        String p = null;        for(int i=0;i<v.size();i++)         {            CommonInf cf=(CommonInf)v.get(i);            if(cf!=null && code.equals(cf.getCode()))            {                 return cf.getName();            }        }        return code;    }    public static Object getVectorObject(Vector v,String code) {        if(code==null) return "";        for(int i=0;i<v.size();i++) {            String p=((CommonInf)v.get(i)).getCode();            if(code.equals(p))                return (CommonInf)v.get(i);        }        return null;    }        public static boolean setGuiData(JTable jt,Vector v,String code) {        int i=0;        for(i=0;i<v.size();i++) {            String p=((CommonInf)v.get(i)).getCode();            if(code.equals(p))                break;        }        jt.getSelectionModel().setSelectionInterval(i,i);        if(i==v.size()) return false;        return true;    }    /**????????? ????? ???????     * ????? ???? yyyy-MM-dd,hh:mm:ss a     *     */    public static String getTextCurrentDateTime(ConnectionInf c) {        return getTextCurrentDate(c) + "," + getTextCurrentTime(c);    }        public static void JPanelLabler(JPanel pane) {   //Deus                // ((TitledBorder) pane.getBorder()).setTitle(getTextBundle(((TitledBorder) pane.getBorder()).getTitle()));    }        public static String getTextBundle(String str,String language) {   //Deus: modified for localization.        if(str.trim().equals(""))return "";        try{            return java.util.ResourceBundle.getBundle(language).getString(str);        }catch(Exception e){            // Constant.println(str + ":Not Found ");            return str;        }    }        public static String getTextBundleImage(String str) {        if(str.trim().equals(""))return "";        try{            return java.util.ResourceBundle.getBundle("com/hospital_os/property/image").getString(str);        }catch(Exception e){            // Constant.println(str + ":Not Found ");            return str;        }    }    public static String getTextBundleConfig(String str) {        if(str.trim().equals(""))return "";        try{            return java.util.ResourceBundle.getBundle("com/hospital_os/property/Config").getString(str);        }catch(Exception e){            // Constant.println(str + ":Not Found ");            return str;        }    }    /**     * ????????? ????? ???????     * ????? ???? yyyy-MM-dd     */    public static String getTextCurrentDate(ConnectionInf cc) {                try{            if(dt == null)                dt = new DateTime(cc);                        String date = dt.getDate();            dt = null;            return date;                    } catch(Exception ex) {            Calendar c = Calendar.getInstance(Locale.US);                                    c.setTimeInMillis(System.currentTimeMillis());            String yyyy ="0000" + String.valueOf(c.get(c.YEAR)+543);            String mm = "00" + String.valueOf(c.get(c.MONTH) + 1);            String dd = "00" + String.valueOf(c.get(c.DATE));            yyyy=yyyy.substring(yyyy.length()-4,yyyy.length());            mm=mm.substring(mm.length()-2,mm.length());            dd=dd.substring(dd.length()-2,dd.length());            //return yyyy + "/" +  mm + "/" + dd;            return yyyy + "-" +  mm + "-" + dd;        }    }        /**     * ????????? ????? ???????     * ????? ???? yyyy-MM-dd     */    public static String getTextCurrentDateS() {                Calendar c = Calendar.getInstance(Locale.US);                        c.setTimeInMillis(System.currentTimeMillis());        String yyyy ="0000" + String.valueOf(c.get(c.YEAR)+543);                        String mm = "00" + String.valueOf(c.get(c.MONTH) + 1);        String dd = "00" + String.valueOf(c.get(c.DATE));        yyyy=yyyy.substring(yyyy.length()-4,yyyy.length());        mm=mm.substring(mm.length()-2,mm.length());        dd=dd.substring(dd.length()-2,dd.length());        //return yyyy + "/" +  mm + "/" + dd;        return yyyy + "-" +  mm + "-" + dd;    }        /**     * ????????? ????? ???????     * ????? ???? hh:mm:ss     */    public static String getTextCurrentTime(ConnectionInf cc) {        try{            if(dt == null)                dt = new DateTime(cc);            String date = dt.getTime();            dt = null;            return date;                    } catch(Exception ex) {            Calendar c = Calendar.getInstance();            c.setTimeInMillis(System.currentTimeMillis());            String hh = "00" +  String.valueOf(c.get(c.HOUR_OF_DAY));            String mm = "00" +  String.valueOf(c.get(c.MINUTE));            java.text.DecimalFormat d= new java.text.DecimalFormat();            d.applyPattern("00");            String ss =    d.format(c.get(c.SECOND)); //String.valueOf(c.get(c.SECOND));//aaaaaa            String am_pm = new String();            if(c.get(c.AM_PM) ==0)                am_pm = "AM";            else                am_pm = "PM";            mm=mm.substring(mm.length()-2,mm.length());            hh=hh.substring(hh.length()-2,hh.length());            return hh + ":" + mm + ":" + ss ;        }    }    /**   ?? ?????????? ??     *    yyyy-mm-dd  ???  dd/mm/yyyy     *    ?????????  : ?? String ?? ?????     *    ???????? : ?? String ?? ?????????????     */    public static String convertFieldDate(String date) {        return DateUtil.getGuiDateTime(date);    }    /**     *  ???????????????????????? ????????????     *  ????????? ?? Date()     *  ???????? ?? ??? dd MMMMM yyyy HH:mm     */    public static String getDateToString(Date date,boolean showtime) {        return DateUtil.getDateToString(date,showtime);    }    /**     *  ???????? ????? ??????? ? yyyy-mm-dd : MM:ss     *  ???????? ?????????(????) ?????????? ???????????     *  ??? showtime ?? true ??? ??????????     *              ?? false ??? ??????????     */    public static String getDateToStringShort(Date date,boolean showtime) {        return DateUtil.getDateToStringShort(date,showtime);    }    /**     *  ???????? ???????? ?? ?????     *  ??? ??????????? ??   yyyy-mm-dd ????     *                        yyyy-mm-dd,hh:mm:ss     */    public static Date getDateFromText(String date) {        return DateUtil.getDateFromText(date);    }    /**     *  ???? check ?????????????????     *  ??? ??????????? ?? Date     *  ???????? ?? true ???????     *              false ??????????     */    public static boolean isToday(Date date) {        return DateUtil.isToday(date);    }        /**     * ???????????? ????? ??? dd/mm/yyyy     * ??? yyyy-mm-dd     */    public static String getGuiBDate(String date) {        return DateUtil.getGuiBDate(date);    }        /**     *  ???????????????? ??     *  datestart ??? enddate ??????? true     * @deprecated henbe unused DateUtil.isBeforeDate instead     */    public static boolean beforDate(Date startDate, Date endDate) {        boolean dataDate = false;        try{            dataDate =  DateUtil.isBeforeDate(startDate,endDate);        } catch(Exception ex) {        }        return dataDate;    }    /**     * ??????? ?? ????? ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss ???? yyyy-mm-dd     * ???????? ???? ?????g     */    public static int countDay(String date) {        return DateUtil.countDay(date);    }    /**     * ??????? ?? ????? ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss ???? yyyy-mm-dd ??? 2 ??     * ??? ?????????u? ???????????????     * ???????? ??????     */    public static int countDayByTwoDate(String begin_date, String end_date) {        return DateUtil.countDayByTwoDate(begin_date, end_date);    }    /**     * ??????? ?? ????????g ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss     * ???????? ???? ?????g     */    public static int countHour(String date,ConnectionInf c) {        return DateUtil.countHour(date,c);    }    /**     * ??????? ?? ????????g ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss     * ???????? ???? ?????g     */    public static int countMinute(String date,ConnectionInf c) {        return DateUtil.countMinute(date,c);    }    /**     * ??????? ?? ????????g ??     * ????????? ?? String ??? yyyy-mm-dd,hh:mm:ss     * ???????? ???? ?????g     */    public static int countHourServer(String date) {        Constant.println("Count Hour Server");        return DateUtil.countHourServer(date);    }    /**     *  ???????? ??????????????????     *  ????????? ?? Object Date     *  ???????? ??     *  1  ???????     *  2  ???????     *  3  ???????     *  4  ????     *  5  ?????????     *  6  ??????     *  7  ???????     */    public static String isDay(Date date) {        return DateUtil.isDay(date);    }    /**     *  ????????????? ??????????? ??????? ???????????????     *  ??????? ????? ???????????????? ?????? ?? 0     *  ????????? ?? hh:mm:ss     */    public static boolean checkBeforeTime(String time) {        return DateUtil.checkBeforeTime(time);    }        /**     *  ????????????? ??????????? ??????? ???????????????     *  ??????? ????? ?????????????????? ?????? ?? 0     *  ????????? ?? hh:mm:ss     */    public static boolean checkAfterTime(String time) {        return DateUtil.checkAfterTime(time);    }    /**     *  ?? ?? ????????? r=xxx,g=xxx,b=xxx     */    public static String convertColor(java.awt.Color color) {        String co  = color.toString();        co = co.substring(co.indexOf("[") + 1,co.indexOf("]"));        return co;    }    /**     *  ?????? r=xxx,g=xxx,b=xxx     *  ????? ??     */    public static java.awt.Color reconvertColor(String co) {        int r = 0;        int g = 0;        int b = 0;        String temp = new String();        String red = new String();        String green = new String();        String blue = new String();                red = co.substring(co.indexOf("=")+1,co.indexOf(","));        temp = co.substring(co.indexOf(",")+1);                green = temp.substring(temp.indexOf("=")+1,temp.indexOf(","));        temp = temp.substring(temp.indexOf(",")+1);                blue = temp.substring(temp.indexOf("=")+1);        r = Integer.parseInt(red);        g = Integer.parseInt(green);        b = Integer.parseInt(blue);        red = null;        green = null;        blue = null;        temp = null;                return new java.awt.Color(r,g,b);                    }        public static String setPatientName(String prefix,String name,String lname,Vector vPrefix,boolean showPrefixForUserTransaction) {        if(prefix != null) {            if(prefix.trim().length() == 3) {                if(vPrefix!= null) {                    ComboFix p = null;                    for(int i =0 ; i < vPrefix.size() ; i ++) {                        p = new ComboFix();                        p = (ComboFix)vPrefix.get(i);                        if(p.code.equalsIgnoreCase(prefix)) {                            namePatient = p.name;                            break;                        }                        p = null;                    }                }                            }        }        return namePatient + " " + name + getSpece() + lname;    }    public static String getSpece() {        return "     ";    }            /**     *  ????? module printing ????? ????? true     */    public static boolean checkModulePrinting() {        try{            Class.forName("com.printing.gui.PrintingFrm");            return true;        } catch(ClassNotFoundException ex) {            return false;        }    }        public static boolean checkModuleDrugFund() {        try{            Class.forName("com.drugfund.gui.DialogDrugFund");            return true;        } catch(ClassNotFoundException ex) {            return false;        }    }    /**     *  ???????????? SQL ?? Uncode ?? MySQL ??? ASCII     *  ????????????????????????     */    public String Unicode2ASCII(String sqlunicode) {        return IOStream.Unicode2ASCII(sqlunicode);    }    /**     *  ????????? MD 5     */    public static String CryptPassword(String password) {        return CryptPassword.encryptText(password);    }    /**     *  ?? ?? ASCII     */    public static String convertSQLToMySQL(String sql,String typeDatabase) {        if(typeDatabase.equalsIgnoreCase("2")) {            Constant.println("Pass ConvertSQL To MySQL");            return IOStream.Unicode2ASCII(sql);                    } else            return sql;    }        public static String  InsteadOfSlat(String sql) {        StringBuffer buffer = new StringBuffer();        char[] char_sql = sql.toCharArray();        //  Constant.println(char_sql.length);        for(int i=0 ; i < char_sql.length ; i++) {            if(char_sql[i] == '\'') {                //      Constant.println("2 " + char_sql[i]);                buffer.append("\\'");            } else {                buffer.append(char_sql[i]);            }        }        //sql = sql.replace('\'', 'p');        //Constant.println("----------------");        //Constant.println(buffer.toString());        return sql;    }        public static String convertSQLToGUI(String sql,String typeDatabase) {        if(typeDatabase.equalsIgnoreCase("2")) {            Constant.println("Pass ConvertSQL To MySQL 2");            return IOStream.ASCII2Unicode(sql);                    } else            return sql;    }    /**     *  ?????????????????????????     */    public static String dicimalMoney(String num) {        if(num ==null)            return "0";                try{            Double.parseDouble(num);        } catch(Exception ex) {            return "0";        }                java.text.DecimalFormat d=new  java.text.DecimalFormat();        d.applyPattern("00");                String re = String.valueOf(num);        String fon = "0";        //????????????????????????        try{            fon = re.substring(0,re.indexOf("."));        } catch(Exception ex) {            re = re+ ".0000";            fon = re.substring(0,re.indexOf("."));        }        String sec = new String();        String sum = new String();        //??????????????????        re = re.substring(re.indexOf(".")+1) + "0000";                int nu = 0;        //?????????????????????? 2 ???????        if(re.length() >2) {            //??????u?????? 3 ????            sec = re.substring(2,3);            nu = Integer.parseInt(sec);        }        //Constant.println(re);        //??????u?????? 1??? 2 ???????????????        int un = Integer.parseInt(re.substring(0,2));        //  Constant.println(nu);        //   Constant.println(un);        //????????? 3 ?????????? 5 ???????        //????????????????        if(nu >=5)            un = un + 1;                //?????????????? 100 ???????????????? ???????        //??????????????        if(un >100) {            int f = Integer.parseInt(fon);            f = f+1;            fon = String.valueOf(f);            un = 0;        }                sum = fon + "."+ d.format(un);        re = null;        fon = null;        sec = null;        d=null;        return sum;            }        public static String dicimalNotrim(String num) {        try{            Double.parseDouble(num);        } catch(Exception ex) {            return "0";        }                String value ;        String decimal;        value = num.substring(0,num.indexOf("."));        decimal = num.substring(num.indexOf(".") + 1 );        int deci = 0;        deci = decimal.length();        char[] data = decimal.toCharArray();        int dd = 0;        int vd = 0;        for(int i = deci-1 ;i >= 0 ;i--) {                    }                                // Constant.println(value);        // Constant.println(decimal);        return "";    }            /**     *  ??????????? 2 ????? ??????????     */    public static String dicimal(String num) {        int dic = 2;        if(num ==null)            return "0";                try{            Double.parseDouble(num);        } catch(Exception ex) {            return "0";        }        //?????u???????? 2 ?????        if(dic < 1)            dic = 2;                java.text.DecimalFormat d=new  java.text.DecimalFormat();        String dicimals = "";        int mul = 1;                        for(int i =0 ;i < dic ; i++) {            dicimals = dicimals + "0";            mul = mul*10;        }        d.applyPattern(dicimals);                String re = String.valueOf(num);        String fon = "0";        //????????????????????????        try{            fon = re.substring(0,re.indexOf("."));        } catch(Exception ex) {            re = re+ ".0000";            fon = re.substring(0,re.indexOf("."));        }        String sec = new String();        String sum = new String();        // Constant.println(re);        //??????????????????        re = re.substring(re.indexOf(".")+1) + "0000";                int nu = 0;        //?????????????????????? 2 ???????        if(re.length() >2) {            //??????u?????? 3 ????            sec = re.substring(dic,dic+1);            nu = Integer.parseInt(sec);        }        // Constant.println(re);        //??????u?????? 1??? 2 ???????????????        int un = Integer.parseInt(re.substring(0,dic));        //  Constant.println(nu);        //   Constant.println(un);        //????????? 3 ?????????? 5 ???????        //????????????????                if(nu >=5)            un = un + 1;        String ddd = "0.0";        //   Constant.println(un);        //   Constant.println("mul : " + mul);        //   Constant.println(un);                // Constant.println(0.1*mul);            /*    if(un < 0.1*mul)       ddd = String.valueOf(0.0*mul);    else       ddd = String.valueOf(1.00*mul);    un = Integer.parseInt(ddd.substring(0,ddd.indexOf(".")));     */    /*        if(un < 0.13*mul)            ddd = String.valueOf(0.0*mul);        else            if(un < 0.38*mul)                ddd = String.valueOf(0.25*mul);            else                if(un < 0.63*mul)                    ddd = String.valueOf(0.50*mul);                else                    if(un < 0.88*mul)                        ddd = String.valueOf(0.75*mul);                    else                        ddd = String.valueOf(1.00*mul);     */                //    Constant.println("dddd : " + Integer.parseInt(ddd.substring(0,ddd.indexOf(".")))   );                //    Constant.println(un);        if(un >=1.0*mul) {            int f = Integer.parseInt(fon);            f = f+1;            fon = String.valueOf(f);            un = 0;        }                sum = fon + "."+ d.format(un);        ddd = null;        re = null;        fon = null;        sec = null;        d=null;        return sum;            }        /**     *  ??????????? 2 ????? ????????? 1 ?? ??????????????? 0.01-0.99     */    public static String dicimalCalMoney(String num) {        int dic = 2;        if(num ==null)            return "0";                try{            Double.parseDouble(num);        } catch(Exception ex) {            return "0";        }        //?????u???????? 2 ?????        if(dic < 1)            dic = 2;                java.text.DecimalFormat d=new  java.text.DecimalFormat();        String dicimals = "";        int mul = 1;                        for(int i =0 ;i < dic ; i++) {            dicimals = dicimals + "0";            mul = mul*10;        }        d.applyPattern(dicimals);                String re = String.valueOf(num);        String fon = "0";        //????????????????????????        try{            fon = re.substring(0,re.indexOf("."));        } catch(Exception ex) {            re = re+ ".0000";            fon = re.substring(0,re.indexOf("."));        }        String sec = new String();        String sum = new String();        //   Constant.println(re);        //??????????????????        re = re.substring(re.indexOf(".")+1) + "0000";                int nu = 0;        //?????????????????????? 2 ???????        if(re.length() >2) {            //??????u?????? 3 ????            sec = re.substring(dic,dic+1);            nu = Integer.parseInt(sec);        }        //??????u?????? 1??? 2 ???????????????        int un = Integer.parseInt(re.substring(0,dic));        //????????? 3 ?????????? 5 ???????        //????????????????                if(nu >=5)            un = un + 1;        String ddd = "0.0";                if(un < 0.1*mul)            ddd = String.valueOf(0.0*mul);        else            ddd = String.valueOf(1.00*mul);        un = Integer.parseInt(ddd.substring(0,ddd.indexOf(".")));                if(un >=1.0*mul) {            int f = Integer.parseInt(fon);            f = f+1;            fon = String.valueOf(f);            un = 0;        }                sum = fon + "."+ d.format(un);        ddd = null;        re = null;        fon = null;        sec = null;        d=null;        return sum;            }        public static boolean checkSecureAdmin(String user,String password) {        SecureAdmin sa = new SecureAdmin();        boolean result = false;                result = sa.checkUserPassword(user,password);        sa = null;        return result;    }    public static String getDateShotToString(Date date,boolean showtime) {        return DateUtil.getDateShotToString(date,showtime);    }    public static String readCurrencyInThai(double num, String toun, String satang) {        try {            java.text.NumberFormat nf = java.text.NumberFormat.getNumberInstance();            nf.setMaximumFractionDigits(2);            nf.setMinimumFractionDigits(2);            nf.setGroupingUsed(false);            String tmp = nf.format(num);            StringBuffer buff = new StringBuffer();            String front;            String back;            String number[] = {"", "หนึ่ง", "สอง", "สาม", "สี่", "ห้า", "หก", "เจ็ด", "แปด", "เก้า"};            String unit[] = {"", "สิบ", "ร้อย", "พัน", "หมื่น", "แสน", "ล้าน"};            String yi = "ยี่";            String ed = "เอ็ด";            String point = "จุด";                        // ?????????????            int dot = tmp.indexOf(".");            if(dot!=-1) {                front = tmp.substring(0, dot);                back = tmp.substring(dot+1);            } else {                front = tmp;                back = "";            }                        // ????????            char[] f = front.toCharArray();            for(int i=0; i<f.length; i++) {                // ????????????                int a = Integer.parseInt(String.valueOf(f[i]));                                // ??????? ?? ??????? 2                if(a==2 && f.length-i==2)                buff.append(yi);                // ??????? ??? ??????? 1 ???????                else if(a==1 && f.length-i==1 && f.length==1)           buff.append(number[1]);                // ??????? ??? ??????? 2                else if(a==1 && f.length-i==2)           buff.append("");                // ??????? ??? ??????? 1                else if(a==1 && f.length-i==1)           buff.append(ed);                                else                                     buff.append(number[a]);                                // ??????????????????????????????????                if(f.length<=7) {                    if(a!=0) {                        buff.append(unit[f.length-i-1]);                    }                } else {                    //buff.append(number[a]);                }            }                        // ????????            int b = Integer.parseInt(back);            if(b==0) {                buff.append(toun);            } else {                buff.append(point);                String bb = nf.format(b);                char[] bbb = bb.toCharArray();                for(int i=0; i < bbb.length; i++) {                    // ????????????                    // Constant.println("?????? ojika : " + String.valueOf(bbb[i]) + "???????" + bbb.length);                    if(!String.valueOf(bbb[i]).equals(".")) {                        int c = Integer.parseInt(String.valueOf(bbb[i]));                                                // ??????? ?? ??????? 2                        if(c==2 && i==0)                            buff.append(yi);                        // ??????? ??? ??????? 2                        else if(c==1 && i==0)                            buff.append("");                        // ??????? ??? ??????? 1                        else if(c==1 && i==1)                            buff.append(ed);                        else                            buff.append(number[c]);                        // ??????????????????????????????????                        if(i == 0) {                            if(c!=0) {                                buff.append(unit[1]);                            }                        }                    }                }                buff.append(satang);            }                        return buff.toString();        } catch(Exception ex) {            ex.printStackTrace(Constant.getPrintStream());        }                return "";    }        public static String getStringDateFile() {        Calendar c = Calendar.getInstance(Locale.US);                        c.setTimeInMillis(System.currentTimeMillis());        String yyyy ="0000" + String.valueOf(c.get(c.YEAR)+543);                        String mm = "00" + String.valueOf(c.get(c.MONTH) + 1);        String dd = "00" + String.valueOf(c.get(c.DATE));        yyyy=yyyy.substring(yyyy.length()-4,yyyy.length());        mm=mm.substring(mm.length()-2,mm.length());        dd=dd.substring(dd.length()-2,dd.length());        //return yyyy + "/" +  mm + "/" + dd;        return mm+yyyy;    }    public static String readSiteFile() {        try{            return IOStream.readInput(".hospital_site.cfg");        } catch(Exception ex) {            Constant.println("ไม่พบไฟล์ .hospital_site.cfg ");            return "00000";        }            }    public static String calBil(String da) {        String data = "0";        try{            double d = Double.parseDouble(da);                        d= Math.round(d);                        data = String.valueOf(d);        } catch(Exception ex) {                    }                return data;    }        public static String SaveToExcel(javax.swing.JTable table) {        try {            int rowTable = table.getRowCount();            int colTable = table.getColumnCount();            char SEPARATE_TAB = '\t';            char NEW_LINE = '\n';            //      Constant.println("row : " + rowTable);            //      Constant.println("col : " + colTable);            StringBuffer text = new StringBuffer();            // ??? Column            for(int j=0; j<colTable; j++) {                if(j!=colTable-1) {                    text.append(table.getColumnName(j));                    text.append(Constant.SEPARATE_TAB);                } else {                    text.append(table.getColumnName(j));                }            }            text.append(Constant.NEW_LINE);            // Data            for(int i=0; i<rowTable; i++) {                for(int j=0; j<colTable; j++) {                    if(j!=colTable-1) {                        text.append(table.getValueAt(i, j));                        text.append(Constant.SEPARATE_TAB);                    } else {                        text.append(table.getValueAt(i, j));                    }                }                if(i!=rowTable-1) {                    text.append(Constant.NEW_LINE);                }            }            return text.toString();        } catch(Exception ex) {            return "";        }            }        public static String CheckReservedWords(String words) {        String reservedWord = "";                /* comment by noom , 30/09/2548         * ???? ????d?? ??? String words ???????? "'" ?????????????? ?????? (reservedWord = words.replace("'".charAt(0),' ');)         * ??????? ??? String words ???????? "'" ?????????????? "\'" ?         * ??????? insert ????????? ?????????? insert ???????????????? "'" ??         * comment by henbe , 21/10/2548         * ???a?? tim(); ??????????????????????????????????????????????? ??????? ????????????         * ??         * ???????????????????????????????????????????????????????????????t???????? \' ????????         * ????????????????? \'s  -> \'s         * ??????????????    \'s  -> \\'s         */        words = words.trim();        StringBuffer buf = new StringBuffer();        char c;        for(int i =0;i<words.length();i++)        {            c = words.charAt(i);            char before = ' ';            if(i>0)            {                before = words.charAt(i-1);            }            if(c == Gutil.SINGLE_SYMBOL && before != Gutil.BACKSLASH_SYMBOL)            {                buf.append(Gutil.BACKSLASH_SYMBOL).append(Gutil.SINGLE_SYMBOL);            }            else if(c == Gutil.BACKSLASH_SYMBOL && before != Gutil.BACKSLASH_SYMBOL)            {                buf.append(Gutil.BACKSLASH_SYMBOL).append(Gutil.BACKSLASH_SYMBOL);            }            else            {                buf.append(c);            }        }        reservedWord = buf.toString();        return reservedWord;    }        public static String getStringSplitPipeAnd(String data,int datareturn) {        String spiltPipe[] = data.split("&",2);                                return  spiltPipe[datareturn];    }    /**     *  ojika 24/6/2548     **/    public static long DateSeperatorDay(String startDate,String endDate) throws Exception {        return DateUtil.initDay(startDate,endDate);    }        /**     *  ojika 24/6/2548     **/    public static long DateSeperatorHour(String startDate,String endDate) throws Exception {        return DateUtil.initHour(startDate,endDate);    }        public static void setText(String str,JComboBox jc){        for(int i=0;i<jc.getItemCount();i++){            if(jc.getItemAt(i).toString().equals(str))            {                jc.setSelectedIndex(i);                return;            }        }    }    public static String getText(JComboBox jc){        return jc.getSelectedItem().toString();    }    /////////////////////////////////////////////////////////////    public static void setText(String str,JCheckBox jc){        jc.setSelected(str.equals("1"));    }    public static String getText(JCheckBox jc){        if(jc.isSelected())            return "1";        else            return "0";    }    //////////////////////////////////////////////////////////////    public static void setText(String str,JRadioButton jc){        jc.setSelected(str.equals("1"));    }    public static void setText(String str,JRadioButton jc1,JRadioButton jc2){        if(str.equals(jc1.getText()))            jc1.setSelected(true);        else if(str.equals(jc2.getText()))            jc2.setSelected(true);        else            return;    }    public static void setText(String str,JRadioButton jc1,JRadioButton jc2,JRadioButton jc3){        if(str.equals(jc1.getText()))            jc1.setSelected(true);        else if(str.equals(jc2.getText()))            jc2.setSelected(true);        else if(str.equals(jc3.getText()))            jc3.setSelected(true);        else            return;    }    public static String getText(JRadioButton jc){        if(jc.isSelected())            return "1";        else            return "0";    }    public static String getText(JRadioButton jc1,JRadioButton jc2){        if(jc1.isSelected())            return jc1.getText();        else if(jc2.isSelected())            return jc2.getText();        else            return "";    }    public static String getText(JRadioButton jc1,JRadioButton jc2,JRadioButton jc3){        if(jc1.isSelected())            return jc1.getText();        else if(jc2.isSelected())            return jc2.getText();        else if(jc3.isSelected())            return jc3.getText();        else            return "";    }    //////////////////////////////////////////////////////////////    public static String getText(JTextComponent jc){        return jc.getText();    }    public static void setText(String str,JTextComponent jc){        jc.setText(str);    }        public static void main(String[] argc){        Constant.println(Gutil.readCurrencyInThai(Double.parseDouble("1121.21"),"บาท","สตางค์"));    }    public static boolean setLocation(Component jd) {        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();        jd.setLocation((screenSize.width-jd.getSize().width)/2, (screenSize.height-jd.getSize().height)/2);        return true;    }}