package com.hospital_os.utility;import java.awt.*;import javax.swing.*;import java.awt.event.*;public class PIDPanelText extends JPanel{  public static int COLUMNS = 13;  GridBagLayout gridBagLayout1 = new GridBagLayout();  IntegerTextField jTextField1 = new IntegerTextField(1);  JLabel jLabel1 = new JLabel();  IntegerTextField jTextField2 = new IntegerTextField(4);  JLabel jLabel2 = new JLabel();  IntegerTextField jTextField3 = new IntegerTextField(5);  JLabel jLabel3 = new JLabel();  IntegerTextField jTextField4 = new IntegerTextField(2);  JLabel jLabel4 = new JLabel();  IntegerTextField jTextField5 = new IntegerTextField(1);  public PIDPanelText()  {           try    {        jbInit();    }    catch(Exception ex)    {      ex.printStackTrace(Constant.getPrintStream());    }  }  public void setEnabled(boolean b)  {      this.jTextField1.setEnabled(b);      this.jTextField2.setEnabled(b);      this.jTextField3.setEnabled(b);      this.jTextField4.setEnabled(b);      this.jTextField5.setEnabled(b);  }  void jbInit() throws Exception  {    this.setLayout(gridBagLayout1);    jTextField1.setMaximumSize(new Dimension(16, 21));    jTextField1.setMinimumSize(new Dimension(16, 21));    jTextField1.setPreferredSize(new Dimension(16, 21));    jTextField1.setHorizontalAlignment(SwingConstants.RIGHT);    jTextField1.addFocusListener(new FocusAdapter()    {      public void focusGained(FocusEvent e)      {        jTextField1_focusGained(e);      }      public void focusLost(FocusEvent e)      {        jTextField1_focusLost(e);      }    });    jTextField1.addKeyListener(new KeyAdapter()    {              public void keyTyped(KeyEvent e)      {      }            public void keyPressed(KeyEvent e)      {      }      public void keyReleased(KeyEvent e)      {        jTextField1_keyReleased(e);      }    });    jLabel1.setText("-");    jTextField2.setMaximumSize(new Dimension(36, 21));    jTextField2.setMinimumSize(new Dimension(36, 21));    jTextField2.setPreferredSize(new Dimension(36, 21));    jTextField2.setHorizontalAlignment(SwingConstants.RIGHT);    jTextField2.addFocusListener(new FocusAdapter()    {      public void focusGained(FocusEvent e)      {        jTextField2_focusGained(e);      }            public void focusLost(FocusEvent e)      {        jTextField2_focusLost(e);      }    });    jTextField2.addKeyListener(new KeyAdapter()    {      public void keyTyped(KeyEvent e)      {      }      public void keyPressed(KeyEvent e)      {      }      public void keyReleased(KeyEvent e)      {        jTextField2_keyReleased(e);      }    });    jLabel2.setText("-");    jTextField3.setMaximumSize(new Dimension(50, 21));    jTextField3.setMinimumSize(new Dimension(50, 21));    jTextField3.setPreferredSize(new Dimension(50, 21));    jTextField3.setHorizontalAlignment(SwingConstants.RIGHT);    jTextField3.addFocusListener(new FocusAdapter()    {      public void focusGained(FocusEvent e)      {        jTextField3_focusGained(e);      }            public void focusLost(FocusEvent e)      {        jTextField3_focusLost(e);      }    });    jTextField3.addKeyListener(new KeyAdapter()    {      public void keyTyped(KeyEvent e)      {      }      public void keyPressed(KeyEvent e)      {      }      public void keyReleased(KeyEvent e)      {        jTextField3_keyReleased(e);      }    });        jLabel3.setText("-");    jTextField4.setMaximumSize(new Dimension(22, 21));    jTextField4.setMinimumSize(new Dimension(22, 21));    jTextField4.setPreferredSize(new Dimension(22, 21));    jTextField4.setHorizontalAlignment(SwingConstants.RIGHT);    jTextField4.addFocusListener(new FocusAdapter()    {      public void focusGained(FocusEvent e)      {        jTextField4_focusGained(e);      }      public void focusLost(FocusEvent e)      {        jTextField4_focusLost(e);      }    });    jTextField4.addKeyListener(new KeyAdapter()    {      public void keyTyped(KeyEvent e)      {      }      public void keyPressed(KeyEvent e)      {      }      public void keyReleased(KeyEvent e)      {        jTextField4_keyReleased(e);      }    });    jLabel4.setText("-");    jTextField5.setMaximumSize(new Dimension(16, 21));    jTextField5.setMinimumSize(new Dimension(16, 21));    jTextField5.setPreferredSize(new Dimension(16, 21));    jTextField5.setHorizontalAlignment(SwingConstants.RIGHT);    jTextField5.addFocusListener(new FocusAdapter()    {      public void focusGained(FocusEvent e)      {        jTextField5_focusGained(e);      }            public void focusLost(FocusEvent e)      {        jTextField5_focusLost(e);      }    });    jTextField5.addKeyListener(new KeyAdapter()    {      public void keyTyped(KeyEvent e)      {      }      public void keyPressed(KeyEvent e)      {      }      public void keyReleased(KeyEvent e)      {          jTextField5_keyReleased(e);      }    });    this.add(jTextField1,    new GridBagConstraints(0, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jLabel1,     new GridBagConstraints(1, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jTextField2,     new GridBagConstraints(2, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jLabel2,     new GridBagConstraints(3, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jTextField3,     new GridBagConstraints(4, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jLabel3,     new GridBagConstraints(5, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jTextField4,     new GridBagConstraints(6, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));       this.add(jLabel4,     new GridBagConstraints(7, 0, 1, 1, 0.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));    this.add(jTextField5,    new GridBagConstraints(8, 0, 1, 1, 1.0, 0.0            ,GridBagConstraints.WEST, GridBagConstraints.NONE, new Insets(0, 0, 0, 0), 0, 0));  }  void jTextField1_focusGained(FocusEvent e)  {        }  void jTextField1_focusLost(FocusEvent e)  {     }  void jTextField1_keyReleased(KeyEvent e)  {    if(e.getKeyCode()==KeyEvent.VK_UP)    {      jTextField1.transferFocusBackward();    }    else if(e.getKeyCode()==KeyEvent.VK_DOWN)    {      jTextField2.requestFocus();    }  }  void jTextField2_focusGained(FocusEvent e)  {      }  void jTextField2_focusLost(FocusEvent e)  {      }  void jTextField2_keyReleased(KeyEvent e)  {    if(e.getKeyCode()==KeyEvent.VK_UP)    {      jTextField1.requestFocus();    }    else if(e.getKeyCode()==KeyEvent.VK_DOWN)    {      jTextField3.requestFocus();    }  }  void jTextField3_focusGained(FocusEvent e)  {     }  void jTextField3_focusLost(FocusEvent e)  {     }  void jTextField3_keyReleased(KeyEvent e)  {    if(e.getKeyCode()==KeyEvent.VK_UP)    {        jTextField2.requestFocus();    }    else if(e.getKeyCode()==KeyEvent.VK_DOWN)    {        jTextField4.requestFocus();    }  }  void jTextField4_focusGained(FocusEvent e)  {     }  void jTextField4_focusLost(FocusEvent e)  {   }  void jTextField4_keyReleased(KeyEvent e)  {    if(e.getKeyCode()==KeyEvent.VK_UP)    {      jTextField3.requestFocus();    }    else if(e.getKeyCode()==KeyEvent.VK_DOWN)    {      jTextField5.requestFocus();    }  }  void jTextField5_focusGained(FocusEvent e)  {      }  void jTextField5_focusLost(FocusEvent e)  {       //???????????????ô????????????????????????????       /*String pid = this.getText();      CheckPID theCheckPID = new CheckPID();                               int result1 = theCheckPID.CheckPIDResult(pid);           if(result1 == 0)          JOptionPane.showMessageDialog(this, "?????????? ????????????????û??????????", "???", JOptionPane.WARNING_MESSAGE);                 **/  }  void jTextField5_keyReleased(KeyEvent e)  {      if(e.getKeyCode()==KeyEvent.VK_UP)    {      jTextField4.requestFocus();    }    else if(e.getKeyCode()==KeyEvent.VK_DOWN)    {      jTextField5.transferFocus();    }  }  public void requestFocus()  {    jTextField5.requestFocus();  }    public void setText(String txt)  {    if(txt!=null && txt.length()==13)    {      jTextField1.setText(txt.substring(0, 1));      jTextField2.setText(txt.substring(1, 5));      jTextField3.setText(txt.substring(5, 10));      jTextField4.setText(txt.substring(10, 12));      jTextField5.setText(txt.substring(12));    }    else    {      jTextField1.setText("");      jTextField2.setText("");      jTextField3.setText("");      jTextField4.setText("");      jTextField5.setText("");    }  }  public String getText()  {    StringBuffer buff = new StringBuffer(jTextField1.getText());    buff.append(jTextField2.getText()).append(jTextField3.getText()).append(jTextField4.getText()).append(jTextField5.getText());    if(buff.length()!=COLUMNS)      return "";    return buff.toString();  }  public void setEditable(boolean editable)  {    jTextField1.setEditable(editable);    jTextField2.setEditable(editable);    jTextField3.setEditable(editable);    jTextField4.setEditable(editable);    jTextField5.setEditable(editable);  }    public void setBackground(Color color)    {       try       {        jTextField1.setBackground(color);        jTextField2.setBackground(color);        jTextField3.setBackground(color);        jTextField4.setBackground(color);        jTextField5.setBackground(color);       }       catch(Exception ex)       {                  }    }  public static void main(String[] args)  {    PIDPanel txt = new PIDPanel();    txt.setEnabled(false);    JFrame frm = new JFrame("Test PIDPanel");    frm.getContentPane().add(txt);    txt.setSize(100, 21);    frm.pack();    frm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    frm.setVisible(true);  }}