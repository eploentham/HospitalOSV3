package com.hospital_os.utility;import java.awt.*;import java.awt.event.*;import javax.swing.*;import java.text.*;import javax.swing.text.*;/** * <p>Title: </p> * <p>Description: </p> * <p>Copyright: Copyright (c) 2003</p> * <p>Company: </p> * @author neng * @version 1.0 */public class DoubleTextField extends JTextField implements KeyListener, FocusListener{  /** ตัวจัดรูปแบบทศนิยม */  public NumberFormat numberFormat = NumberFormat.getInstance();  boolean noDot = true;    public DoubleTextField()  {    setDocument(new DoubleDocument());    addKeyListener(this);    addFocusListener(this);    numberFormat.setMaximumFractionDigits(2);    numberFormat.setGroupingUsed(false);  }  /** ช่วยควบคุมรูปแบบตัวเลข */  protected class DoubleDocument extends PlainDocument  {       String text;    public void insertString(int offs, String str, AttributeSet a) throws BadLocationException    {        noDot = true;     text = super.getText(0,super.getLength());         for(int i=0;i<(text.length());i++)     {         if(text.charAt(i) == '.')         {             noDot = false;                      }     }          if(str!=null)     {      char[] source = str.toCharArray();      char[] result = new char[source.length];      int j = 0;      for(int i = 0; i<result.length; i++)      {        if(Character.isDigit(source[i]) || (source[i]=='.'))        {          if(source[i]!='.')          {              result[j++] = source[i];          }          else if(source[i]=='.' && noDot)          {              result[j++] = source[i];              noDot = false;          }                  }        else        {                 }      }      super.insertString(offs, new String(result, 0, j), a);     }    }   public void remove(int offs, int len) throws BadLocationException    {      super.remove(offs, len);    }  }  public void keyReleased(KeyEvent e)  {   try   {     if(e.getKeyCode()!=KeyEvent.VK_UP && e.getKeyCode()!=KeyEvent.VK_DOWN &&      e.getKeyCode()!=KeyEvent.VK_LEFT && e.getKeyCode()!=KeyEvent.VK_RIGHT &&      e.getKeyCode()!=KeyEvent.VK_TAB && e.getKeyCode()!=KeyEvent.VK_SHIFT       )     {       numberFormat.parse(getText());     }    }    catch(Exception ex)    {    }  }  public void keyPressed(KeyEvent e)  {  }  public void keyTyped(KeyEvent e)  {  }  public void focusGained(FocusEvent e)  {    setSelectionStart(0);  }  public void focusLost(FocusEvent e)  {      this.getText();  }    /** *@deprecated henbe unused 05/02/07 */  public static void  main(String[] argv)  {             final DoubleTextField dtf = new DoubleTextField();            JFrame frm = new JFrame("Test HNTextField");      frm.getContentPane().setLayout(new java.awt.GridLayout(1,2));      JButton button = new JButton("GET");      button.addActionListener(new java.awt.event.ActionListener()      {          public void actionPerformed(ActionEvent e) {              Constant.println("++++++++++++++++dtf++++++++++++++"+dtf.getText());          }                });      dtf.setText("093.09");      frm.getContentPane().add(dtf,GridLayout.class);      frm.getContentPane().add(button);      dtf.setSize(100, 21);      frm.pack();      frm.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);      frm.show();      frm.setVisible(true);        }    public String getText()    {        String retValue;        retValue = super.getText();        for(int i=0;retValue != null && retValue.length()>0 && i<1;i++)        {            if(retValue.charAt(i) == '.')            {                super.setText("0"+retValue);            }        }        return super.getText();    }}