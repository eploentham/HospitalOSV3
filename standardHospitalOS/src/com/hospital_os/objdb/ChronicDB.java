package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class ChronicDB{    public ConnectionInf theConnectionInf;    public Chronic dbObj;    final private String idtable = "137";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public ChronicDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Chronic();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_chronic";        dbObj.pk_field="t_chronic_id";        dbObj.hn   ="chronic_hn";        dbObj.vn   ="chronic_vn";        dbObj.date_dx   ="chronic_diagnosis_date";  //วันที่เริ่มป่วย        dbObj.date_dish   ="chronic_discharge_date"; //วันที่จำหน่าย        dbObj.type_dish   ="f_chronic_discharge_status_id";        dbObj.detail   ="chronic_notice";        dbObj.chronic_icd   ="chronic_icd10";        dbObj.vn_id   ="t_visit_id";        dbObj.patient_id   ="t_patient_id";        dbObj.date_update   ="record_date_time"; //วันที่บันทึกแก้ไขข้อมูลล่าสุดอันนี้ดึงรายงาน และค้นหา        //neung        dbObj.site_treat = "chronic_site_treat";        dbObj.family_id = "t_health_family_id";        dbObj.modify_datetime = "modify_date_time";        dbObj.cancel_datetime = "cancel_date_time";        dbObj.staff_record = "staff_record";        dbObj.staff_modify = "staff_modify";        dbObj.staff_cancel = "staff_cancel";        dbObj.active = "chronic_active";        dbObj.survey_date = "chronic_survey_date";        /*        dbObj.table = "chronic";        dbObj.pk_field = "chronic_id";        dbObj.vn ="vn";        dbObj.hn ="hn";        dbObj.vn_id = "vn_id";        dbObj.patient_id ="patient_id";        dbObj.date_dx = "date_dx";        dbObj.date_dish = "date_dish";        dbObj.type_dish = "type_dish";        dbObj.detail = "detail";        dbObj.chronic_icd = "chronic_icd";        dbObj.date_update ="date_update";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Chronic o) throws Exception    {        String sql="";        Chronic p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.vn_id        + " ,"	+ dbObj.date_dx        + " ,"	+ dbObj.date_dish        + " ,"	+ dbObj.type_dish        + " ,"	+ dbObj.detail        + " ,"  + dbObj.vn        + " ,"  + dbObj.hn        + " ,"  + dbObj.chronic_icd        + " ,"  + dbObj.date_update        + " ,"  + dbObj.site_treat        + " ,"  + dbObj.family_id        + " ,"  + dbObj.modify_datetime        + " ,"  + dbObj.cancel_datetime        + " ,"  + dbObj.staff_record        + " ,"  + dbObj.staff_modify        + " ,"  + dbObj.staff_cancel        + " ,"  + dbObj.active        + " ,"  + dbObj.survey_date        + " ) values ('"        + p.getObjectId()        + "','" + p.patient_id        + "','" + p.vn_id        + "','" + p.date_dx        + "','" + p.date_dish        + "','" + p.type_dish        + "','" + p.detail        + "','" + p.vn        + "','" + p.hn        + "','" + p.chronic_icd        + "','" + p.date_update        + "','"  + p.site_treat        + "','"  + p.family_id        + "','"  + p.modify_datetime        + "','"  + p.cancel_datetime        + "','"  + p.staff_record        + "','"  + p.staff_modify        + "','"  + p.staff_cancel        + "','"  + p.active        + "','"  + p.survey_date        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());                return theConnectionInf.eUpdate(sql);    }    public int update(Chronic o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Chronic p=o;        String field =""        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.vn_id + "='" + p.vn_id        + "', " + dbObj.date_dx + "='" + p.date_dx        + "', " + dbObj.date_dish + "='" + p.date_dish        + "', " + dbObj.type_dish + "='" + p.type_dish        + "', " + dbObj.detail + "='" + p.detail        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.chronic_icd + "='" + p.chronic_icd        + "', " + dbObj.date_update + "='" + p.date_update        + "', "  + dbObj.site_treat + "='" + p.site_treat        + "', "  + dbObj.family_id + "='" + p.family_id        + "', "  + dbObj.modify_datetime + "='" + p.modify_datetime        + "', "  + dbObj.cancel_datetime + "='" + p.cancel_datetime        + "', "  + dbObj.staff_record + "='" + p.staff_record        + "', "  + dbObj.staff_modify + "='" + p.staff_modify        + "', "  + dbObj.staff_cancel + "='" + p.staff_cancel        + "', "  + dbObj.active + "='" + p.active        + "', "  + dbObj.survey_date + "='" + p.survey_date        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(Chronic o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Chronic selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Chronic)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    public Vector selectByFamilyID(String familyid) throws Exception    {        String sql="select * from " + dbObj.table                + " where "+dbObj.family_id+" = '"+familyid+"'"                + " and "+dbObj.active+" = '1'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Chronic selectByHnAndIcd(String hn,String icd) throws Exception    {        return selectByHnAndIcd(hn,icd,"1");    }    public Chronic selectByHnAndIcd(String hn,String icd,String active) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.hn  + " = '" + hn + "'" +            " and " + dbObj.chronic_icd + " = '" + icd + "'" +            " and " + dbObj.active + " = '" + active + "'";                Vector v=eQuery(sql);                if(v.size()==0)            return null;        else            return (Chronic)v.get(0);    }        public Chronic selectByVisitIdAndIcd(String visit_id,String icd) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.vn_id        + " = '" + visit_id + "' and " + dbObj.chronic_icd        + " = '" + icd + "'"        + " and " + dbObj.active + " = '1' ";        Vector v=eQuery(sql);                if(v.size()==0)            return null;        else            return (Chronic)v.get(0);    }            public Vector selectByHnDate(String hn,String dateFrom ,String dateTo) throws Exception    {        Vector vc = new Vector();        String sql = "select * from " + dbObj.table            + " where " + dbObj.hn + " <> '' "            + " and " + dbObj.active + " = '1' ";                if(!hn.equals(""))            sql += " and " + dbObj.hn + " like '" + hn + "' ";                if(!dateFrom.equals("") && !dateTo.equals(""))            sql += " and ((substr(" + dbObj.modify_datetime + ",1,10) >= '" + dateFrom + "'" +                " and substr(" + dbObj.modify_datetime + ",1,10) <= '" + dateTo + "')"+                    " or (substr(" + dbObj.date_update + ",1,10) >= '" + dateFrom + "'" +                " and substr(" + dbObj.date_update + ",1,10) <= '" + dateTo + "'))";                sql+= " order by " + dbObj.hn;        // SOmprasong add 02/12/2010        sql+= ", " + dbObj.vn + " desc, " + dbObj.chronic_icd;        return eQuery(sql);    }    public Vector selectByHnDateUpdate(String hn,String dateFrom ,String dateTo) throws Exception    {        String sql;        if(hn.trim().length() !=0)        {            sql="select * from " + dbObj.table            + " where " + dbObj.hn + " like '" + hn + "' "            + " and " + dbObj.active + " = '1' "            + " and " + dbObj.date_dx            + " >= '" + dateFrom + "' and " + dbObj.modify_datetime            + " <= '" + dateTo + "'";        }        else        {            sql="select * from " + dbObj.table            + " where " + dbObj.date_dx            + " >= '" + dateFrom + "' and " + dbObj.modify_datetime            + " <= '" + dateTo  + "'"            + " and " + dbObj.active + " = '1' ";        }        return eQuery(sql);    }            public Vector selectByStatusDate(String status,String dateStart ,String dateEnd) throws Exception    {        Vector vc = new Vector();        String sql;        if(status.equalsIgnoreCase("0") || status.equalsIgnoreCase(""))         {            sql="select * from " + dbObj.table            + " where " + dbObj.date_dx            + " >= '" + dateStart + "' and " + dbObj.date_dx            + " <= '" + dateEnd + "'"            + " and " + dbObj.active + " = '1' ";        }        else        {            sql="select * from " + dbObj.table            + " where " + dbObj.date_dx            + " >= '" + dateStart + "' and " + dbObj.date_dx            + " <= '" + dateEnd + "' and " + dbObj.type_dish + " = '" +status+ "'"            + " and " + dbObj.active + " = '1' ";        }                return eQuery(sql);    }        public Vector eQuery(String sql) throws Exception    {        Chronic p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Chronic();            p.setObjectId(rs.getString(dbObj.pk_field));            p.patient_id = rs.getString(dbObj.patient_id);            p.vn_id = rs.getString(dbObj.vn_id);            p.date_dx = rs.getString(dbObj.date_dx);            p.date_dish = rs.getString(dbObj.date_dish);            p.type_dish = rs.getString(dbObj.type_dish);            p.detail = rs.getString(dbObj.detail);            p.vn = rs.getString(dbObj.vn);            p.hn = rs.getString(dbObj.hn);            p.chronic_icd = rs.getString(dbObj.chronic_icd);            p.date_update = rs.getString(dbObj.date_update);            p.site_treat = rs.getString(dbObj.site_treat);            p.family_id = rs.getString(dbObj.family_id);            p.modify_datetime = rs.getString(dbObj.modify_datetime);            p.cancel_datetime = rs.getString(dbObj.cancel_datetime);            p.staff_record = rs.getString(dbObj.staff_record);            p.staff_modify = rs.getString(dbObj.staff_modify);            p.staff_cancel = rs.getString(dbObj.staff_cancel);            p.active = rs.getString(dbObj.active);            p.survey_date = rs.getString(dbObj.survey_date);            list.add(p);        }        rs.close();        return list;    }        public Chronic selectByPatientAndIcd(String patient_id,String icd) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id  + " = '" + patient_id + "'" +            " and " + dbObj.chronic_icd + " = '" + icd + "'" +            " and " + dbObj.active + " = '1'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Chronic)v.get(0);    }/////////////////////////////////////////////////////////////////////////////        public int updateFidByFid(String family_id,String family_from) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id + "',"                + dbObj.staff_cancel + "="+ dbObj.staff_cancel + "||'-'||'" + family_from + "'"                + " where " + dbObj.family_id + "='" + family_from +"'";        return theConnectionInf.eUpdate(sql);    }  /////////////////////////////////////////////////////////////////////////////        public int updateFidByPtid(String family_id,String patient_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id                + "' where " + dbObj.patient_id + "='" + patient_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    /////////////////////////////////////////////////////////////////////////////        public int updatePtidByFid(String patient_id,String family_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.patient_id + "='" + patient_id                + "' where " + dbObj.family_id + "='" + family_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }  }