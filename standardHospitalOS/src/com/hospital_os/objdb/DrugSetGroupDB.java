package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class DrugSetGroupDB{    public ConnectionInf theConnectionInf;    public DrugSetGroup dbObj;    final public String idtable = "153";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public DrugSetGroupDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new DrugSetGroup();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_item_group";        dbObj.pk_field="b_item_group_id";        dbObj.drug_set_group_id   ="item_group_number";        dbObj.descroption   ="item_group_description";        dbObj.oner_drug="item_group_staff_owner";        /*        dbObj.table = "drug_set_group";        dbObj.pk_field = "key_id";        dbObj.drug_set_group_id = "drug_set_group_id";        dbObj.descroption = "descroption";        dbObj.oner_drug = "oner_drug";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(DrugSetGroup o) throws Exception    {        String sql="";        DrugSetGroup p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.drug_set_group_id        + " ,"	+ dbObj.descroption        + " ,"	+ dbObj.oner_drug        + " ) values ('"        + p.getObjectId()        + "','" + p.drug_set_group_id        + "','" + p.descroption        + "','" + p.oner_drug        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(DrugSetGroup o) throws Exception    {        String sql="update " + dbObj.table + " set ";        DrugSetGroup p=o;        String field =""        + "', " + dbObj.drug_set_group_id + "='" + p.drug_set_group_id        + "', " + dbObj.descroption + "='" + p.descroption        + "', " + dbObj.oner_drug + "='" + p.oner_drug        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(DrugSetGroup o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public DrugSetGroup selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (DrugSetGroup)v.get(0);    }        /** ใช้ในการค้าหารายการ ชุดสั่งตรวจรักษา โดยการค้าหาตาม ชื่อชุดสั่งตรวจรักษา หรือ เจ้าของ        โดย choose เป็น True ค้นหาตามIDของชื่อเจ้าของ     *             เป็น false ค้นหาตาม ชุดสั่งตรวจรักษา หรือ ค้นหาตามชื่อ     */    public Vector SelectBySearch(String search, boolean search_all)    {    Vector vc = new Vector();         String SQLCmd = "SELECT * FROM " + dbObj.table + " WHERE ";         if(search_all)             SQLCmd = SQLCmd + dbObj.oner_drug + " like  '%" + search + "%'";         else         {             SQLCmd = SQLCmd + dbObj.oner_drug + " like  '%" + search + "%' ";             SQLCmd = SQLCmd + " or " + dbObj.descroption + " like  '%" + search + "%' ";         }         try{             vc = this.eQuery(SQLCmd);             if(vc.size()==0)                 vc = null;         }         catch(Exception ex)         {   vc = null;         }         return vc;       }        public Vector selectByKeyOwner(String search, String owner) throws Exception    {        String SQLCmd = "SELECT * FROM " + dbObj.table + " WHERE "              + dbObj.oner_drug + " ilike  '%" + owner + "%' "              + " and " + dbObj.descroption + " ilike  '%" + search + "%'" +                " order by " + dbObj.descroption;        return eQuery(SQLCmd);      }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table                +" order by " + dbObj.descroption;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        //ค้นหาจากชื่อชุดและหรือชื่อแพทย์ที่เลือก    public Vector selectByNameAndOrDoctor(String pk,String doctor) throws Exception    {        String sql="select * from " + dbObj.table +         " where upper(" + dbObj.descroption + ") like upper('" + pk + "')";        if(!doctor.equals(""))        {            sql = sql + " and " + dbObj.oner_drug + "='" + doctor + "'";        }        sql = sql + " order by " + dbObj.descroption;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        //ค้นหาจากชื่อแพทย์ที่เลือก    public Vector selectByDoctor(String doctor) throws Exception    {        String sql="select * from " + dbObj.table +         " where "+ dbObj.oner_drug + "='" + doctor + "'"                +" order by " + dbObj.descroption;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        DrugSetGroup p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new DrugSetGroup();            p.setObjectId(rs.getString(dbObj.pk_field));            p.drug_set_group_id = rs.getString(dbObj.drug_set_group_id);            p.descroption = rs.getString(dbObj.descroption);            p.oner_drug = rs.getString(dbObj.oner_drug);            list.add(p);        }        rs.close();        return list;    }        public DrugSetGroup selectByNameAndDoctor(String des,String doc) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.descroption + " = '" + des         + "' and " + dbObj.oner_drug + " ='" + doc + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (DrugSetGroup)v.get(0);    }}