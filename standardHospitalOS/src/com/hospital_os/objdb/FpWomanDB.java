package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/** * @deprecated henbe ?? FamilyPlaning ??? * */public class FpWomanDB{    public ConnectionInf theConnectionInf;    public FpWoman dbObj;    final public String idtable = "163";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public FpWomanDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new FpWoman();        initConfig();    }    public FpWomanDB()    {        theConnectionInf= null;        dbObj = new FpWoman();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_health_family_planing";        dbObj.pk_field="t_health_family_planing_id";        dbObj.visit_id   ="t_visit_id";        dbObj.patient_id   ="t_patient_id";        dbObj.fp_type   ="f_health_family_planing_method_id";        dbObj.nofp   ="f_health_family_planing_id";        dbObj.numson   ="health_family_planing_parity";        dbObj.reporter   ="health_family_planing_staff_record";        dbObj.reported_time   ="record_date_time";        dbObj.description   ="health_family_planing_notice";        dbObj.vn   ="health_family_planing_vn";        dbObj.hn   ="health_family_planing_hn";        dbObj.treat_breast   ="health_family_planing_breast_exam";        dbObj.result_treat_breast   ="health_family_planing_breast_exam_result";        dbObj.treat_uterus   ="health_family_planing_cervix_exam";        dbObj.result_treat_uterus="health_family_planing_cervix_exam_notice";        /*        dbObj.table = "fp_woman";        dbObj.pk_field = "fp_woman_id";        dbObj.visit_id = "visit_id";        dbObj.patient_id = "patient_id";        dbObj.fp_type = "fp_type";        dbObj.nofp = "nofp";        dbObj.numson = "numson";        dbObj.reporter = "reporter";        dbObj.reported_time = "reported_time";        dbObj.description = "description";        dbObj.vn = "vn";        dbObj.hn = "hn";        dbObj.treat_breast = "treat_breast";        dbObj.result_treat_breast = "result_treat_breast";        dbObj.treat_uterus = "treat_uterus";        dbObj.result_treat_uterus = "result_treat_uterus";         */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(FpWoman o) throws Exception    {        String sql="";        FpWoman p=o;        p.generateOID(idtable);                sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.fp_type        + " ,"	+ dbObj.nofp        + " ,"	+ dbObj.numson        + " ,"	+ dbObj.reporter        + " ,"	+ dbObj.reported_time        + " ,"	+ dbObj.description        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.treat_breast        + " ,"	+ dbObj.result_treat_breast        + " ,"	+ dbObj.treat_uterus        + " ,"	+ dbObj.result_treat_uterus        + " ) values ('"        + p.getObjectId()        + "','" + p.visit_id        + "','" + p.patient_id        + "','" + p.fp_type        + "','" + p.nofp        + "','" + p.numson        + "','" + p.reporter        + "','" + p.reported_time        + "','" + p.description        + "','" + p.vn        + "','" + p.hn        + "','" + p.treat_breast        + "','" + p.result_treat_breast        + "','" + p.treat_uterus        + "','" + p.result_treat_uterus                + "')";                int ias = theConnectionInf.eUpdate(sql);                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return ias;    }    public int update(FpWoman o) throws Exception    {        String sql="update " + dbObj.table + " set ";        FpWoman p=o;        String field =""        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.fp_type + "='" + p.fp_type        + "', " + dbObj.nofp + "='" + p.nofp        + "', " + dbObj.numson + "='" + p.numson        + "', " + dbObj.reporter + "='" + p.reporter        + "', " + dbObj.reported_time + "='" + p.reported_time        + "', " + dbObj.description + "='" + p.description        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.treat_breast + "='" + p.treat_breast        + "', " + dbObj.result_treat_breast + "='" + p.result_treat_breast        + "', " + dbObj.treat_uterus + "='" + p.treat_uterus        + "', " + dbObj.result_treat_uterus + "='" + p.result_treat_uterus                + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";                sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(FpWoman o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public FpWoman selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (FpWoman)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByHN(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.hn        + " = '" + pk + "' order by " + dbObj.visit_id;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByPatientID(String patient_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + patient_id + "' order by " + dbObj.visit_id;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        FpWoman p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new FpWoman();            p.setObjectId(rs.getString(dbObj.pk_field));            p.visit_id = rs.getString(dbObj.visit_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.fp_type = rs.getString(dbObj.fp_type);            p.nofp = rs.getString(dbObj.nofp);            p.numson = rs.getString(dbObj.numson);            p.reporter = rs.getString(dbObj.reporter);            p.reported_time = rs.getString(dbObj.reported_time);            p.vn = rs.getString(dbObj.vn);            p.hn = rs.getString(dbObj.hn);            p.treat_breast = rs.getString(dbObj.treat_breast);            p.result_treat_breast = rs.getString(dbObj.result_treat_breast);            p.treat_uterus = rs.getString(dbObj.treat_uterus);            p.result_treat_uterus = rs.getString(dbObj.result_treat_uterus);            p.description = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }    }