package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class ServicePointDoctorDB{    public ConnectionInf theConnectionInf;    public ServicePointDoctor dbObj;    final public String idtable = "241";    /**     * @param ConnectionInf dbServicePointDoctorDB     * @roseuid 3F65897F0326     */    public ServicePointDoctorDB(ConnectionInf db)    {        theConnectionInf= db;        dbObj = new ServicePointDoctor();                initConfig();    }        public ServicePointDoctorDB()    {        theConnectionInf= null;        dbObj = new ServicePointDoctor();        initConfig();    }        public boolean initConfig()    {        dbObj.table="b_service_point_doctor";        dbObj.pk_field="b_service_point_doctor_id";        dbObj.service_point_key_id   ="b_service_point_id";        dbObj.doctor_id="service_point_doctor_staff";        /*        dbObj.table = "service_point_doctor";        dbObj.pk_field = "key_id";        dbObj.service_point_key_id = "service_point_key_id";        dbObj.doctor_id = "doctor_id";         */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(ServicePointDoctor o) throws Exception    {        String sql="";        ServicePointDoctor p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.service_point_key_id                + " ,"	+ dbObj.doctor_id        + " ) values ('"        + p.getObjectId()        + "','" + p.service_point_key_id                + "','" + p.doctor_id        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(ServicePointDoctor o) throws Exception    {        String sql="update " + dbObj.table + " set ";        ServicePointDoctor p=o;        String field =""        + "', " + dbObj.service_point_key_id + "='" + p.service_point_key_id                + "', " + dbObj.doctor_id + "='" + p.doctor_id        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(String spd) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + spd +"'" ;        return theConnectionInf.eUpdate(sql);    }        public int deleteByServicePointID(String servicepointid) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.service_point_key_id + "='" + servicepointid +"'";                return theConnectionInf.eUpdate(sql);    }        public ServicePointDoctor selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (ServicePointDoctor)v.get(0);    }        public Vector selectBySerciveID(String pk) throws Exception    {    String sql = "select * from " + dbObj.table +         " where " + dbObj.service_point_key_id +         " = '" + pk + "'";                  Vector v = eQuery(sql);         if(v.size()==0)             return null;         else             return v;    }        public int countBySerciveID(String pk) throws Exception    {    String sql = "select count("+dbObj.doctor_id+") from " + dbObj.table +         " where " + dbObj.service_point_key_id +         " = '" + pk + "'";                  int count =0;         ResultSet rs = theConnectionInf.eQuery(sql);         while(rs.next())         {             count = rs.getInt(1);         }         return count;    }        public Vector selectAll() throws Exception    {    String sql = "select * from " + dbObj.table;                  Vector v = eQuery(sql);         if(v.size()==0)             return null;         else             return v;    }        public ServicePointDoctor selectByEmIdPointId(String emid,String pointid) throws Exception    {    String sql = "select * from " + dbObj.table +         " where " + dbObj.doctor_id +         " = '" + emid +         "' and " + dbObj.service_point_key_id +         " = '" + pointid + "'";                  Vector v = eQuery(sql);         if(v.size()==0)             return null;         else             return (ServicePointDoctor)v.get(0);    }        public Vector eQuery(String sql) throws Exception    {        ServicePointDoctor p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ServicePointDoctor();            p.setObjectId(rs.getString(dbObj.pk_field));            p.service_point_key_id = rs.getString(dbObj.service_point_key_id);            p.doctor_id = rs.getString(dbObj.doctor_id);                                    list.add(p);        }        rs.close();        return list;    }    public int deleteDoctorByServicePointID(String spd,String spid) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.doctor_id + "='" + spd +"'"         + " and " + dbObj.service_point_key_id + "='" + spid +"'";        return theConnectionInf.eUpdate(sql);    }    }