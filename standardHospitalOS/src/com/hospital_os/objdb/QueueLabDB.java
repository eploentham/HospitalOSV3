/* * QueueLabDB.java * * Created on 27 ตุลาคม 2546, 22:54 น. */package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/** * * @author  Administrator */public class QueueLabDB{        public ConnectionInf theConnectionInf;    public QueueLab dbObj;    final public String idtable = "221";    /** Creates a new instance of QueueLabDB */    public QueueLabDB(ConnectionInf db)    {        theConnectionInf = db;        dbObj = new QueueLab();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_visit_queue_lab";        dbObj.pk_field="t_visit_queue_lab_id";        dbObj.visit_id   ="t_visit_id";        dbObj.number_order   ="visit_queue_lab_number_order";        dbObj.last_service   ="b_service_point_id";        dbObj.assign_time   ="assign_date_time";        dbObj.patient_id="t_patient_id";        /*        this.dbObj.table = "queue_Lab";        this.dbObj.pk_field = "queue_Lab_id";                 this.dbObj.visit_id = "visit_id";        this.dbObj.number_order = "number_order";        this.dbObj.last_service = "last_service";        this.dbObj.assign_time = "assign_time";        this.dbObj.patient_id = "patient_id";         */        return true;    }        public int insert(QueueLab o) throws Exception    {        QueueLab p=o;        p.generateOID(idtable);        StringBuffer sql = new StringBuffer("insert into " ).append( dbObj.table ).append( " ("        ).append( dbObj.pk_field  ).append( " ,"        ).append( dbObj.visit_id ).append( " ,"        ).append( dbObj.number_order ).append( " ,"        ).append( dbObj.last_service ).append( " ,"        ).append( dbObj.assign_time  ).append( " ,"        ).append( dbObj.patient_id  ).append( " "                ).append( " ) values ('"        ).append( p.getObjectId() ).append( "','"        ).append( p.visit_id ).append( "' ,'"        ).append( p.number_order ).append( "' ,'"        ).append( p.last_service ).append( "' ,'"        ).append( p.assign_time  ).append( "' ,'"        ).append( p.patient_id        ).append( "')");        return theConnectionInf.eUpdate(sql.toString());    }    public int update(QueueLab o) throws Exception    {        QueueLab p=o;                StringBuffer sql = new StringBuffer("update " ).append( dbObj.table ).append( " set "        ).append(dbObj.visit_id ).append( "='" ).append( p.visit_id ).append( "', "        ).append( dbObj.number_order ).append( "='" ).append( p.number_order ).append( "', "        ).append( dbObj.last_service ).append( "='" ).append( p.last_service ).append( "', "        ).append( dbObj.assign_time  ).append( "='" ).append( p.assign_time ).append( "', "        ).append( dbObj.patient_id  ).append( "='" ).append( p.patient_id ).append( "' "                ).append( " where " ).append( dbObj.pk_field ).append( "='" ).append( p.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }        public int delete(QueueLab o) throws Exception    {        StringBuffer sql = new StringBuffer("delete from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field ).append( "='" ).append( o.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }        public int deleteByVisitID(String visit_id) throws Exception    {        StringBuffer sql = new StringBuffer("delete from " ).append( dbObj.table        ).append( " where " ).append( dbObj.visit_id ).append( "='" ).append( visit_id ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }         public QueueLab selectByPK(String pk) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field        ).append( " = '" ).append( pk ).append( "'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (QueueLab)v.get(0);    }        public QueueLab selectByVisitID(String pk) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.visit_id        ).append( " = '" ).append( pk ).append( "'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (QueueLab)v.get(0);    }        public Vector selectAll() throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table);                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        QueueLab p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new QueueLab();            p.setObjectId(rs.getString(dbObj.pk_field));            p.visit_id = rs.getString(dbObj.visit_id);            p.number_order = rs.getString(dbObj.number_order);            p.last_service = rs.getString(dbObj.last_service);            p.assign_time = rs.getString(dbObj.assign_time);            p.patient_id = rs.getString(dbObj.patient_id);            list.add(p);        }        rs.close();        return list;    }        public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.visit_id);            list.add(p);        }        rs.close();        return list;    }    }