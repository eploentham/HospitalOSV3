package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class DrugAllergyDB{    public ConnectionInf theConnectionInf;    public DrugAllergy dbObj;    final private String idtable = "148";        public DrugAllergyDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new DrugAllergy();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_patient_drug_allergy";        dbObj.pk_field="t_patient_drug_allergy_id";        dbObj.patient_id   ="t_patient_id";        dbObj.record_date_time   ="patient_drug_allergy_record_date_time";        dbObj.item_code   ="b_item_id";        dbObj.common_name   ="patient_drug_allergy_common_name";        dbObj.symptom="patient_drug_allergy_symptom";        dbObj.drug_standard_id = "b_item_drug_standard_id";        dbObj.drug_standard_description = "patient_drug_allergy_drug_standard_description";        return true;    }    /*////////////////////////////////////////////////////////////////////////////////////*/    public int updatePatientByPatient(String old_id,String new_id)throws Exception    {           String sql = "Update " + dbObj.table + " set "        + dbObj.patient_id + " = '" + new_id + "'"        + "," + dbObj.symptom + " = "+dbObj.drug_standard_description+"||'-'||'" + old_id + "'"        + " where " + dbObj.patient_id + " = '" + old_id +"'";        return theConnectionInf.eUpdate(sql);    }       public int insert(DrugAllergy o) throws Exception    {        String sql="";        DrugAllergy p=o;        p.generateOID(idtable);                sql="insert into " + dbObj.table + " ("        + dbObj.pk_field                + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.record_date_time        + " ,"	+ dbObj.item_code        + " ,"	+ dbObj.common_name        + " ,"	+ dbObj.symptom        + " ,"	+ dbObj.drug_standard_id        + " ,"	+ dbObj.drug_standard_description                + " ) values ('"        + p.getObjectId()               + "','" + p.patient_id        + "','" + p.record_date_time        + "','" + p.item_code        + "','" + p.common_name        + "','" + p.symptom        + "','" + p.drug_standard_id        + "','" + p.drug_standard_description                + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(DrugAllergy o) throws Exception    {        String sql="update " + dbObj.table + " set ";        DrugAllergy p=o;        String field =""               + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.record_date_time + "='" + p.record_date_time        + "', " + dbObj.item_code + "='" + p.item_code        + "', " + dbObj.common_name + "='" + p.common_name        + "', " + dbObj.symptom + "='" + p.symptom        + "', " + dbObj.drug_standard_id + "='" + p.drug_standard_id        + "', " + dbObj.drug_standard_description + "='" + p.drug_standard_description                + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(DrugAllergy o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    public int deleteByPtid(String patient_id) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.patient_id + "='" + patient_id +"'";        return theConnectionInf.eUpdate(sql);    }      public DrugAllergy selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (DrugAllergy)v.get(0);    }    /**     * unused wrong name parameter     * @deprecated unused wrong name parameter     * @return Vector     * @param hn is patient_id     * @throws java.lang.Exception dddd     */    public Vector selectByHn(String hn) throws Exception    {        return selectByPtid(hn);    }    public Vector selectByPtid(String hn) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + hn + "' "        + " order by " + dbObj.drug_standard_id;//amp:29/03/2549                return eQuery(sql);    }    public Vector selectByPatientId(String patient_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + patient_id + "' "        + " order by " + dbObj.drug_standard_id                + " , " + dbObj.common_name;//amp:29/03/2549                return eQuery(sql);    }            /**     * test     * @Author: amp     * @date: 29/03/2549     */    public Vector selectByPatientIdAndStandardId(String patientId, String standardId) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + patientId + "' and "        + dbObj.drug_standard_id + " = '" + standardId + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        /**     *@Author: amp     *@date: 29/03/2549     */    public Vector selectByStandardId(String standardId) throws Exception    {        String sql = "select * from " + dbObj.table        + " where " + dbObj.drug_standard_id + " = '" + standardId + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }          public Vector selectByPatientItemID(String patient_id,String item_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where (" + dbObj.patient_id        + " = '" + patient_id + "' "        + " and " + dbObj.item_code + " = '" + item_id + "' )";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }       public Vector eQuery(String sql) throws Exception    {        DrugAllergy p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new DrugAllergy();            p.setObjectId(rs.getString(dbObj.pk_field));                 p.patient_id = rs.getString(dbObj.patient_id);            p.record_date_time = rs.getString(dbObj.record_date_time);            p.item_code = rs.getString(dbObj.item_code);            p.common_name = rs.getString(dbObj.common_name);            p.symptom = rs.getString(dbObj.symptom);            p.drug_standard_id = rs.getString(dbObj.drug_standard_id);            p.drug_standard_description = rs.getString(dbObj.drug_standard_description);            list.add(p);        }        rs.close();        return list;    }         public void checkIndex()     {   String sql = "";                        try{            sql = "CREATE INDEX " +dbObj.patient_id + " ON " + dbObj.table  + " USING btree ("+dbObj.patient_id +")";            this.theConnectionInf.eUpdate(sql);        }        catch(Exception ex)        {                    }     }}