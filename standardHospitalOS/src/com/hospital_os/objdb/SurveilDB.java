package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class SurveilDB{    public ConnectionInf theConnectionInf;    public Surveil dbObj;    final public String idtable = "247";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public SurveilDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Surveil();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_surveil";        dbObj.pk_field="t_surveil_id";        dbObj.vn_id  ="t_visit_id";        dbObj.patient_id  ="t_patient_id";        dbObj.illdate  ="surveil_sick_date";//วันที่เริ่มป่วย  ถ้าต้องการค้นกับวันที่ล่าสุดให้ค้นเทียบกับ visit_id        dbObj.patient_status   ="f_chronic_discharge_status_id";        dbObj.complica   ="surveil_complicate";        dbObj.organism   ="surveil_germ_type";        dbObj.icd_code   ="surveil_icd10_number";        dbObj.vn   ="surveil_vn";        dbObj.hn="surveil_hn";        dbObj.family_id="t_health_family_id";        dbObj.complica53   ="r_rp1853_surveilcomplicate_id";        dbObj.organism53   ="r_rp1853_surveiloganism_id";        //pu:17/09/2551        //ยกเลิก 16/10/2551//        dbObj.record_date_time = "surveil_record_date_time";//        dbObj.modify_date_time = "surveil_modify_date_time";//        dbObj.cancel_date_time = "surveil_cancel_date_time";//        dbObj.staff_record = "surveil_staff_record";//        dbObj.staff_modify = "surveil_staff_modify";//        dbObj.staff_cancel = "surveil_staff_cancel";//        dbObj.active = "surveil_active";        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Surveil o) throws Exception    {        String sql="";        Surveil p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.vn_id        + " ,"  + dbObj.vn        + " ,"  + dbObj.hn        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.illdate        + " ,"	+ dbObj.patient_status        + " ,"	+ dbObj.complica        + " ,"	+ dbObj.organism        + " ,"  + dbObj.icd_code        + " ,"  + dbObj.family_id        + " ,"  + dbObj.complica53        + " ,"  + dbObj.organism53        //pu:ยกเลิก 16/10/2551        //        + " ,"  + dbObj.record_date_time//        + " ,"  + dbObj.modify_date_time		//        + " ,"  + dbObj.cancel_date_time		//        + " ,"  + dbObj.staff_record		//        + " ,"  + dbObj.staff_modify		//        + " ,"  + dbObj.staff_cancel		//        + " ,"  + dbObj.active        + " ) values ('"        + p.getObjectId()        + "','" + p.vn_id        + "','" + p.vn        + "','" + p.hn        + "','" + p.patient_id        + "','" + p.illdate        + "','" + p.patient_status        + "','" + p.complica        + "','" + p.organism        + "','" + p.icd_code        + "','" + p.family_id        + "','" + p.complica53        + "','" + p.organism53        //pu:ยกเลิก 16/10/2551                //        + "','" + p.record_date_time//        + "','" + p.modify_date_time		//        + "','" + p.cancel_date_time		//        + "','" + p.staff_record		//        + "','" + p.staff_modify		//        + "','" + p.staff_cancel		//        + "','" + p.active        + "')";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(Surveil o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Surveil p=o;        String field =""        + "', " + dbObj.vn_id + "='" + p.vn_id        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.illdate + "='" + p.illdate        + "', " + dbObj.patient_status + "='" + p.patient_status        + "', " + dbObj.complica + "='" + p.complica        + "', " + dbObj.organism + "='" + p.organism        + "', " + dbObj.family_id + "='" + p.family_id        + "', " + dbObj.complica53 + "='" + p.complica53        + "', " + dbObj.organism53 + "='" + p.organism53        //pu:ยกเลิก 16/10/2551               //        + "', " + dbObj.record_date_time + "='" + p.record_date_time        //        + "', " + dbObj.modify_date_time + "='" + p.modify_date_time//        + "', " + dbObj.cancel_date_time + "='" + p.cancel_date_time//        + "', " + dbObj.staff_record + "='" + p.staff_record//        + "', " + dbObj.staff_modify + "='" + p.staff_modify//        + "', " + dbObj.staff_cancel + "='" + p.staff_cancel//        + "', " + dbObj.active + "='" + p.active                + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(Surveil o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public int deleteByVnAndIcd(Surveil o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.vn_id + "='" + o.vn_id +"'"        + " and " + dbObj.icd_code + "='" + o.icd_code +"'";        return theConnectionInf.eUpdate(sql);    }        public Surveil selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Surveil)v.get(0);    }        public Surveil selectByVnAndIcd(String vn,String icd) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.vn_id        + " = '" + vn + "' and " + dbObj.icd_code        + " = '" + icd + "'";        Vector v=eQuery(sql);                if(v.size()==0)            return null;        else            return (Surveil)v.get(0);    }        public Surveil selectByPatientIdAndIcd(String patientId,String icd) throws Exception    {        //pu:ยกเลิก 16/10/2551//        String sql="select * from " + dbObj.table//                + " where " + dbObj.patient_id  + " = '" + patientId + "'" +//                " and " + dbObj.icd_code + " = '" + icd + "'" +//                " and " + dbObj.active + " = '1'";        String sql="select * from " + dbObj.table                + " where " + dbObj.patient_id  + " = '" + patientId + "'" +                " and " + dbObj.icd_code + " = '" + icd + "'";        Vector v=eQuery(sql);                if(v.size()==0)            return null;        else            return (Surveil)v.get(0);    }        public Vector selectByHnDate(String hn,String dateFrom ,String dateTo) throws Exception    {        Vector vc = new Vector();        String sql;        if(hn.trim().length() !=0)        {            sql="select * from " + dbObj.table            + " where " + dbObj.hn + "='" + hn + "' and " + dbObj.illdate            + " >= '" + dateFrom + "' and " + dbObj.illdate            + " <= '" + dateTo + "'";            //pu:ยกเลิก 16/10/2551//            + " and " + dbObj.active + " = '1' ";        }        else        {            sql="select * from " + dbObj.table            + " where " + dbObj.illdate            + " >= '" + dateFrom + "' and " + dbObj.illdate            + " <= '" + dateTo  + "'";            //pu:ยกเลิก 16/10/2551//            + " and " + dbObj.active + " = '1' ";        }                vc = eQuery(sql);                if(vc.size()==0)            return null;        else            return vc;    }            public Vector selectByStatusDate(String status,String dateFrom ,String dateTo) throws Exception    {        Vector vc = new Vector();        String sql="";        if(status.equalsIgnoreCase("0") || status.equalsIgnoreCase(""))        {            sql="select * from " + dbObj.table            + " where " + dbObj.illdate            + " >= '" + dateFrom + "' and " + dbObj.illdate            + " <= '" + dateTo + "'";            //pu:ยกเลิก 16/10/2551//            + " and " + dbObj.active + " = '1' ";        }        else        {            sql="select * from " + dbObj.table            + " where " + dbObj.patient_status + "='" + status + "' and " + dbObj.illdate            + " >= '" + dateFrom + "' and " + dbObj.illdate            + " <= '" + dateTo + "'";            //pu:ยกเลิก 16/10/2551                    //            + " and " + dbObj.active + " = '1' ";        }                vc = eQuery(sql);                if(vc.size()==0)            return null;        else            return vc;    }        public Vector selectAll( ) throws Exception    {        Vector vc = new Vector();        String sql ="select * from " + dbObj.table;                        vc = eQuery(sql);                if(vc.size()==0)            return null;        else            return vc;    }        public Vector eQuery(String sql) throws Exception    {        Surveil p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Surveil();            p.setObjectId(rs.getString(dbObj.pk_field));            p.vn_id = rs.getString(dbObj.vn_id);            p.vn = rs.getString(dbObj.vn);            p.hn = rs.getString(dbObj.hn);            p.patient_id = rs.getString(dbObj.patient_id);            p.illdate = rs.getString(dbObj.illdate);            p.patient_status = rs.getString(dbObj.patient_status);            p.complica = rs.getString(dbObj.complica);            p.organism = rs.getString(dbObj.organism);            p.icd_code = rs.getString(dbObj.icd_code);            p.family_id = rs.getString(dbObj.family_id);            p.complica53 = rs.getString(dbObj.complica53);            p.organism53 = rs.getString(dbObj.organism53);            //pu:ยกเลิก 16/10/2551        //            p.record_date_time = rs.getString(dbObj.record_date_time);//            p.modify_date_time = rs.getString(dbObj.modify_date_time);//            p.cancel_date_time = rs.getString(dbObj.cancel_date_time);//            p.staff_record = rs.getString(dbObj.staff_record);//            p.staff_modify = rs.getString(dbObj.staff_modify);//            p.staff_cancel = rs.getString(dbObj.staff_cancel);//            p.active = rs.getString(dbObj.active);            list.add(p);        }        rs.close();        return list;    }/////////////////////////////////////////////////////////////////////////////        public int updateFidByFid(String family_id,String family_from) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id                + "' where " + dbObj.family_id + "='" + family_from +"'";        return theConnectionInf.eUpdate(sql);    }  /////////////////////////////////////////////////////////////////////////////        public int updateFidByPtid(String family_id,String patient_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id                + "' where " + dbObj.patient_id + "='" + patient_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    /////////////////////////////////////////////////////////////////////////////        public int updatePtidByFid(String patient_id,String family_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.patient_id + "='" + patient_id                + "' where " + dbObj.family_id + "='" + family_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }   }