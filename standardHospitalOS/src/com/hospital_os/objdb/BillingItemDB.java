package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/**ไม่ได้ใช้แล้ว จะลบออกแล้ว  Date: 30/08/47  By: tong*/public class BillingItemDB{    public ConnectionInf theConnectionInf;    public BillingItem dbObj;    final private String idtable = "125";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public BillingItemDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new BillingItem();        initConfig();    }    public boolean initConfig()    {        dbObj.table = "billing_item";        dbObj.pk_field = "billing_item_id";        dbObj.order_item_id = "order_item_id";        dbObj.billing_id = "billing_id";        dbObj.billing_group_item_id = "billing_group_item_id";        dbObj.category_group_item_id = "category_group_item_id";        dbObj.visit_id = "visit_id";        dbObj.patient_id = "patient_id";        dbObj.patient_share = "patient_share";        dbObj.payer_share = "payer_share";        dbObj.total = "total";        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(BillingItem o) throws Exception    {        String sql="";        BillingItem p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.order_item_id        + " ,"	+ dbObj.billing_id        + " ,"	+ dbObj.billing_group_item_id        + " ,"	+ dbObj.category_group_item_id        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.patient_share        + " ,"	+ dbObj.payer_share        + " ,"	+ dbObj.total        + " ) values ('"        + p.getObjectId()        + "','" + p.order_item_id        + "','" + p.billing_id        + "','" + p.billing_group_item_id        + "','" + p.category_group_item_id        + "','" + p.visit_id        + "','" + p.patient_id        + "','" + p.patient_share        + "','" + p.payer_share        + "','" + p.total        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(BillingItem o) throws Exception    {        String sql="update " + dbObj.table + " set ";        BillingItem p=o;        String field =""        + "', " + dbObj.order_item_id + "='" + p.order_item_id        + "', " + dbObj.billing_id + "='" + p.billing_id        + "', " + dbObj.billing_group_item_id + "='" + p.billing_group_item_id        + "', " + dbObj.category_group_item_id + "='" + p.category_group_item_id        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.patient_share + "='" + p.patient_share        + "', " + dbObj.payer_share + "='" + p.payer_share        + "', " + dbObj.total + "='" + p.total        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(BillingItem o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public BillingItem selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (BillingItem)v.get(0);    }        public Vector eQuery(String sql) throws Exception    {        BillingItem p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new BillingItem();            p.setObjectId(rs.getString(dbObj.pk_field));            p.order_item_id = rs.getString(dbObj.order_item_id);            p.billing_id = rs.getString(dbObj.billing_id);            p.billing_group_item_id = rs.getString(dbObj.billing_group_item_id);            p.category_group_item_id = rs.getString(dbObj.category_group_item_id);            p.visit_id = rs.getString(dbObj.visit_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.patient_share = rs.getString(dbObj.patient_share);            p.payer_share = rs.getString(dbObj.payer_share);            p.total = rs.getString(dbObj.total);            list.add(p);        }        rs.close();        return list;    }    }