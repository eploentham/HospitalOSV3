package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class LabGroupDB{    public ConnectionInf theConnectionInf;    public LabGroup dbObj;    final public String idtable = "176";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public LabGroupDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new LabGroup();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_item_lab_set";        dbObj.pk_field="b_item_lab_set_id";        dbObj.lab_group_id   ="item_lab_set_number";        dbObj.item_id   ="b_item_id";        dbObj.description="item_lab_set_description";        /*        dbObj.table = "lab_group";        dbObj.pk_field = "key_id";        dbObj.lab_group_id = "lab_group_id";        dbObj.item_id = "item_id";        dbObj.description = "description";         */        return true;    }        /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */        public int insert(LabGroup o) throws Exception    {        String sql="";        LabGroup p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.lab_group_id        + " ,"	+ dbObj.item_id        + " ,"	+ dbObj.description        + " ) values ('"        + p.getObjectId()        + "','" + p.lab_group_id        + "','" + p.item_id        + "','" + p.description        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(LabGroup o) throws Exception    {        String sql="update " + dbObj.table + " set ";        LabGroup p=o;        String field =""        + "', " + dbObj.lab_group_id + "='" + p.lab_group_id        + "', " + dbObj.item_id + "='" + p.item_id        + "', " + dbObj.description + "='" + p.description        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }       public int deleteByItid(String id) throws Exception    {        String sql=" delete from " + dbObj.table + " where "        + dbObj.item_id + "='" + id + "'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(LabGroup o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public int delete(String pk) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + pk +"'";        return theConnectionInf.eUpdate(sql);    }        public LabGroup selectByItemID(String item_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.item_id        + " = '" + item_id + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabGroup)v.get(0);    }        public LabGroup selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabGroup)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        LabGroup p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new LabGroup();            p.setObjectId(rs.getString(dbObj.pk_field));            p.lab_group_id = rs.getString(dbObj.lab_group_id);            p.item_id = rs.getString(dbObj.item_id);            p.description = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }    }