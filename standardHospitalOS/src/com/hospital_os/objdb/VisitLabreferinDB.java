package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class VisitLabreferinDB{    public ConnectionInf theConnectionInf;    public VisitLabreferin dbObj;    final public String idtable = "256";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */        public VisitLabreferinDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new VisitLabreferin();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_lab_refer_in_visit";        dbObj.pk_field="t_lab_refer_in_visit_id";        dbObj.patient_labreferin_id   ="t_lab_refer_in_patient_id";        dbObj.begin_visit_time   ="lab_refer_in_begin_visit_time";        dbObj.end_visit_time   ="lab_refer_in_end_visit_time";        dbObj.status="t_lab_refer_in_visit_status_id";        dbObj.hos_referin="lab_refer_in_visit_hos_referin";        /*        dbObj.table = "visit_labreferin";        dbObj.pk_field ="visit_labreferin_id";        dbObj.patient_labreferin_id = "patient_labreferin_id";        dbObj.begin_visit_time = "begin_visit_time";        dbObj.end_visit_time = "end_visit_time";        dbObj.status = "status";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(VisitLabreferin o) throws Exception    {        String sql="";        VisitLabreferin p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"  + dbObj.patient_labreferin_id        + " ,"  + dbObj.begin_visit_time        + " ,"	+ dbObj.end_visit_time        + " ,"	+ dbObj.status        + " ,"	+ dbObj.hos_referin        + " ) values ('"        + p.getObjectId()        + "','" + p.patient_labreferin_id        + "','" + p.begin_visit_time        + "','" + p.end_visit_time        + "','" + p.status        + "','" + p.hos_referin        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(VisitLabreferin o) throws Exception    {        String sql="update " + dbObj.table + " set ";        VisitLabreferin p=o;        String field =""        + "', " + dbObj.patient_labreferin_id + "='" + p.patient_labreferin_id        + "', " + dbObj.begin_visit_time + "='" + p.begin_visit_time        + "', " + dbObj.end_visit_time + "='" + p.end_visit_time        + "', " + dbObj.status + "='" + p.status        + "', " + dbObj.hos_referin + "='" + p.hos_referin        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(VisitLabreferin o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Vector queryPid(String pid) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.patient_labreferin_id + " = '" + pid + "'";        return eQuery(sql);    }        public Vector queryVisitInProcess() throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.status + " = '1'";        return eQuery(sql);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        return eQuery(sql);    }            public VisitLabreferin selectVisitByPId(String plrid) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_labreferin_id        + " = '" + plrid + "' and "        + dbObj.status + " = '1'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (VisitLabreferin)v.get(0);    }        public Vector queryVisitInProcessByPid(String pid) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.patient_labreferin_id + " = '" + pid + "'";                sql = sql + " order by " + dbObj.begin_visit_time;        return eQuery(sql);    }        public Vector eQuery(String sql) throws Exception    {        VisitLabreferin p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new VisitLabreferin();            p.setObjectId(rs.getString(dbObj.pk_field));            p.patient_labreferin_id = rs.getString(dbObj.patient_labreferin_id);            p.begin_visit_time = rs.getString(dbObj.begin_visit_time);            p.end_visit_time = rs.getString(dbObj.end_visit_time);            p.status = rs.getString(dbObj.status);            p.hos_referin = rs.getString(dbObj.hos_referin);            list.add(p);        }        rs.close();        return list;    }        }