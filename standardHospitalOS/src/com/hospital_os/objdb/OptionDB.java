package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class OptionDB{    public ConnectionInf theConnectionInf;    public Option dbObj;    public String idtable = "192";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public OptionDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Option();        initConfig();    }        public OptionDB()    {        theConnectionInf = null;        dbObj = new Option();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_setup_authorization";        dbObj.pk_field="b_setup_authorization_id";        dbObj.verify   ="setup_authorization_verify";        dbObj.execute   ="setup_authorization_execute";        dbObj.dispense   ="setup_authorization_dispense";        dbObj.discontinue   ="setup_authorization_discontinue";        dbObj.del_patient   ="setup_authorization_del_patient";        dbObj.cancel_receipt   ="setup_authorization_cancel_receipt";        dbObj.discharge   ="setup_authorization_discharge";        dbObj.admit   ="setup_authorization_admit";        dbObj.commit   ="setup_authorization_commit";        dbObj.life   ="setup_authorization_training_system";        dbObj.inqueuevisit ="setup_authorization_in_queue_visit";        dbObj.passwd_cancel_receipt = "setup_authorization_cancel_receipt_password";        dbObj.printJasper ="setup_authorization_jasper_print";        dbObj.autoUnlock = "setup_authorization_autounlock";        dbObj.drug_interaction ="setup_authorization_drug_interaction";        dbObj.drug_standard_allergy = "setup_authorization_drug_standard_allergy";        dbObj.auto_diag_icd10 = "setup_authorization_set_icd10_form_map_dx";        dbObj.auto_diag_icd9 = "setup_authorization_set_icd9_map_service";        dbObj.path_pharm = "setup_path_pharm";        /*        dbObj.table = "options";        dbObj.pk_field = "option_id";        dbObj.verify = "verify";        dbObj.execute = "execute";BillingGroupItem bgi = new BillingGroupItem();        dbObj.dispense = "dispense";        dbObj.discontinue = "discontinue";        dbObj.del_patient = "del_patient";        dbObj.cancel_receipt = "cancel_receipt";        dbObj.discharge = "discharge";        dbObj.admit = "admit";        dbObj.commit = "commit";        dbObj.inqueuevisit = "in_queue_visit";        dbObj.life = "life";               */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Option o) throws Exception    {        Option p=o;        p.generateOID(idtable);        StringBuffer sql = new StringBuffer("insert into " ).append( dbObj.table ).append( " ("        ).append( dbObj.pk_field                ).append( " ,"	).append( dbObj.verify        ).append( " ,"	).append( dbObj.execute        ).append( " ,"	).append( dbObj.dispense        ).append( " ,"	).append( dbObj.discontinue        ).append( " ,"	).append( dbObj.del_patient        ).append( " ,"	).append( dbObj.cancel_receipt        ).append( " ,"	).append( dbObj.discharge        ).append( " ,"	).append( dbObj.admit        ).append( " ,"	).append( dbObj.printJasper        ).append( " ,"	).append( dbObj.commit        ).append( " ,"	).append( dbObj.inqueuevisit        ).append( " ,"	).append( dbObj.life        ).append( " ,"	).append( dbObj.passwd_cancel_receipt        ).append( " ,"	).append( dbObj.autoUnlock        ).append( " ,"	).append( dbObj.drug_interaction        ).append( " ,"	).append( dbObj.drug_standard_allergy        ).append( " ,"	).append( dbObj.auto_diag_icd10        ).append( " ,"	).append( dbObj.auto_diag_icd9        ).append( " ,"	).append( dbObj.path_pharm        ).append( " ) values ('"        ).append( p.getObjectId()        ).append( "','" ).append( p.verify        ).append( "','" ).append( p.execute        ).append( "','" ).append( p.dispense        ).append( "','" ).append( p.discontinue        ).append( "','" ).append( p.del_patient        ).append( "','" ).append( p.cancel_receipt        ).append( "','" ).append( p.discharge        ).append( "','" ).append( p.admit        ).append( "','" ).append( p.printJasper        ).append( "','" ).append( p.commit        ).append( "','" ).append( p.inqueuevisit        ).append( "','" ).append( p.life        ).append( "','" ).append( p.passwd_cancel_receipt        ).append( "','" ).append( p.autoUnlock        ).append( "','" ).append( p.drug_interaction        ).append( "','" ).append( p.drug_standard_allergy        ).append( "','" ).append( p.auto_diag_icd10        ).append( "','" ).append( p.auto_diag_icd9        ).append( "','" ).append( p.path_pharm        ).append( "')");        return theConnectionInf.eUpdate(sql.toString());    }    public int update(Option o) throws Exception    {        Option p=o;        StringBuffer sql = new StringBuffer("update " ).append( dbObj.table ).append( " set "        ).append( dbObj.verify ).append( "='" ).append( p.verify        ).append( "', " ).append( dbObj.execute ).append( "='" ).append( p.execute        ).append( "', " ).append( dbObj.dispense ).append( "='" ).append( p.dispense        ).append( "', " ).append( dbObj.discontinue ).append( "='" ).append( p.discontinue        ).append( "', " ).append( dbObj.del_patient ).append( "='" ).append( p.del_patient        ).append( "', " ).append( dbObj.cancel_receipt ).append( "='" ).append( p.cancel_receipt        ).append( "', " ).append( dbObj.discharge ).append( "='" ).append( p.discharge        ).append( "', " ).append( dbObj.admit ).append( "='" ).append( p.admit        ).append( "', " ).append( dbObj.printJasper ).append( "='" ).append( p.printJasper        ).append( "', " ).append( dbObj.commit ).append( "='" ).append( p.commit        ).append( "', " ).append( dbObj.inqueuevisit ).append( "='" ).append( p.inqueuevisit        ).append( "', " ).append( dbObj.passwd_cancel_receipt ).append( "='" ).append( p.passwd_cancel_receipt        ).append( "', " ).append( dbObj.autoUnlock ).append( "='" ).append( p.autoUnlock        ).append( "', " ).append( dbObj.drug_interaction ).append( "='" ).append( p.drug_interaction        ).append( "', " ).append( dbObj.drug_standard_allergy ).append( "='" ).append( p.drug_standard_allergy        ).append( "', " ).append( dbObj.life ).append( "='" ).append( p.life        ).append( "', " ).append( dbObj.auto_diag_icd10 ).append( "='" ).append( p.auto_diag_icd10        ).append( "', " ).append( dbObj.auto_diag_icd9 ).append( "='" ).append( p.auto_diag_icd9        ).append( "', " ).append( dbObj.path_pharm ).append( "='" ).append( p.path_pharm        ).append( "'" ).append( "where " ).append( dbObj.pk_field ).append( " = '" ).append( p.getObjectId() ).append( "'");        return theConnectionInf.eUpdate(sql.toString());    }     public int delete(Option o) throws Exception    {        StringBuffer sql = new StringBuffer("delete from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field ).append( "='" ).append( o.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }       public Option selectByPK(String pk) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field        ).append( " = '" ).append( pk ).append( "'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (Option)v.get(0);    }        //////////////////////////////////////////////////////////////////////////////    public Vector selectAll() throws Exception     {                 StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table);             Vector v = eQuery(sql.toString());             if(v.size()==0)                 return null;             else                 return v;    }        public void checkJasperPrint()throws Exception    {    StringBuffer sql = new StringBuffer();         ResultSet rs ;         try         {           /*                       sql = "ALTER TABLE " ).append( dbObj.table ).append( " ADD " ).append( dbObj.printJasper ).append( " varchar (255)" ;           theConnectionInf.eUpdate(sql.toString());                       sql = "UPDATE  ").append( dbObj.table ).append( " SET " ).append(           " " ).append( dbObj.printJasper ).append( " ='1'");           theConnectionInf.eUpdate(sql.toString());            */                          sql.append( dbObj.printJasper ).append( " from ").append( dbObj.table);             rs = theConnectionInf.getConnection().createStatement().executeQuery(sql.toString());             rs = null;                                   }         catch(Exception ex)         {             sql .append("ALTER TABLE " ).append( dbObj.table ).append( " ADD " ).append( dbObj.printJasper ).append( " varchar (255)") ;             theConnectionInf.eUpdate(sql.toString());             sql.append("UPDATE  ").append( dbObj.table ).append( " SET " ).append(              dbObj.printJasper ).append( " ='1'");             theConnectionInf.eUpdate(sql.toString());                      }    }       public Vector eQuery(String sql) throws Exception    {        Option p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new Option();            p.setObjectId(rs.getString(dbObj.pk_field));            p.verify = rs.getString(dbObj.verify);            p.execute = rs.getString(dbObj.execute);            p.dispense = rs.getString(dbObj.dispense);            p.discontinue = rs.getString(dbObj.discontinue);            p.del_patient = rs.getString(dbObj.del_patient);            p.cancel_receipt = rs.getString(dbObj.cancel_receipt);            p.discharge = rs.getString(dbObj.discharge);            p.admit = rs.getString(dbObj.admit);            p.printJasper= rs.getString(dbObj.printJasper);            p.commit = rs.getString(dbObj.commit);            p.inqueuevisit = rs.getString(dbObj.inqueuevisit);            p.autoUnlock = rs.getString(dbObj.autoUnlock);            p.life = rs.getString(dbObj.life);            p.passwd_cancel_receipt = rs.getString(dbObj.passwd_cancel_receipt);            p.drug_interaction = rs.getString(dbObj.drug_interaction);            p.drug_standard_allergy = rs.getString(dbObj.drug_standard_allergy);            p.auto_diag_icd10 = rs.getString(dbObj.auto_diag_icd10);            p.auto_diag_icd9 = rs.getString(dbObj.auto_diag_icd9);            p.path_pharm = rs.getString(dbObj.path_pharm);            list.add(p);        }        rs.close();        return list;    }      public void addFieldV2B82()    {        try{            StringBuffer sql = new StringBuffer("ALTER TABLE  " ).append( dbObj.table )                    .append( "  ADD COLUMN  " ).append( dbObj.autoUnlock ).append( " varchar (255) Default '5' ");            this.theConnectionInf.eUpdate(sql.toString());        }        catch(Exception ex)        {            ex.printStackTrace(Constant.getPrintStream());        }    }}