package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class XRayPositionDB{    public ConnectionInf theConnectionInf;    public XRayPosition dbObj;    final public String idtable = "265";        public XRayPositionDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new XRayPosition();        initConfig();    }    public XRayPositionDB()    {        theConnectionInf=null;        dbObj = new XRayPosition();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_xray_position";        dbObj.pk_field="b_xray_position_id";        dbObj.xray_position_id   ="xray_position_number";        dbObj.description   ="xray_position_description";        dbObj.active ="xray_position_active";                return true;    }    public int insert(XRayPosition o) throws Exception    {        XRayPosition p=o;        p.generateOID(idtable);        StringBuffer sql = new StringBuffer("insert into " ).append( dbObj.table ).append( " ("        ).append( dbObj.pk_field        ).append( " ,"	).append( dbObj.xray_position_id        ).append( " ,"	).append( dbObj.description        ).append( " ,"	).append( dbObj.active        ).append( " ) values ('"        ).append( p.getObjectId()        ).append( "','" ).append( p.xray_position_id        ).append( "','" ).append( p.description        ).append( "','" ).append( p.active        ).append( "')");                return theConnectionInf.eUpdate(sql.toString());    }    public int update(XRayPosition o) throws Exception    {        XRayPosition p=o;        StringBuffer sql = new StringBuffer("update " ).append( dbObj.table ).append( " set "        ).append( dbObj.xray_position_id ).append( "='" ).append( p.xray_position_id        ).append( "', " ).append( dbObj.description ).append( "='" ).append( p.description        ).append( "', " ).append( dbObj.active ).append( "='" ).append( p.active        ).append( "' where " ).append( dbObj.pk_field ).append( "='" ).append( p.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }        public int delete(XRayPosition o) throws Exception    {        StringBuffer sql = new StringBuffer("delete from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field ).append( "='" ).append( o.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }        public XRayPosition selectByPK(String pk) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field        ).append( " = '" ).append( pk ).append( "'");        Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (XRayPosition)v.get(0);    }        public XRayPosition selectByCode(String code) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.xray_position_id        ).append( " = '" ).append( code ).append( "'");        Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (XRayPosition)v.get(0);    }        public Vector selectAllByName(String pk,String active) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where ");        if(pk.trim().length() !=0)        {            sql.append("(" ).append(  dbObj.xray_position_id            ).append( " like '%" ).append( pk ).append( "%'" ).append( " or UPPER("            ).append( dbObj.description  ).append( ") like UPPER('%" ).append( pk ).append( "%')" ).append( ") and ");        }        sql.append( dbObj.active ).append( " = '" ).append( active ).append( "'" ).append( " order by "        ).append( dbObj.xray_position_id);                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return v;    }        public Vector selectAll() throws Exception    {   Vector vc = new Vector();        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table ).append(        " Where " ).append( dbObj.active ).append( " = '1'"        ).append( " order by ").append( dbObj.description );        vc = veQuery(sql.toString());        if(vc.size()==0)            return null;        else            return vc;    }        public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }        public Vector eQuery(String sql) throws Exception    {        XRayPosition p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new XRayPosition();            p.setObjectId(rs.getString(dbObj.pk_field));            p.xray_position_id = rs.getString(dbObj.xray_position_id);            p.description = rs.getString(dbObj.description);            p.active = rs.getString(dbObj.active);            list.add(p);        }        rs.close();        return list;    }    }