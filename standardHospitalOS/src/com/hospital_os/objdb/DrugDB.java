package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class DrugDB{    public ConnectionInf theConnectionInf;    public Drug dbObj;    final public String idtable = "149";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public DrugDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Drug();        initConfig();    }    public boolean initConfig()    {                dbObj.table="b_item_drug";        dbObj.pk_field="b_item_drug_id";        dbObj.drug_id   ="item_drug_number";        dbObj.dose   ="item_drug_dose";        dbObj.use_uom   ="item_drug_use_uom";        dbObj.qty   ="item_drug_qty";        dbObj.purch_uom   ="item_drug_purch_uom";        dbObj.caution   ="item_drug_caution";        dbObj.description   ="item_drug_description";        dbObj.day_time   ="item_drug_day_time";        dbObj.printting   ="item_drug_printable";        dbObj.instruction   ="b_item_drug_instruction_id";        dbObj.frequency   ="b_item_drug_frequency_id";        dbObj.item_id   ="b_item_id";        dbObj.usage_special   ="item_drug_special_prescription";        dbObj.usage_text ="item_drug_special_prescription_text";        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */        public int insert(Drug o) throws Exception    {        String sql="";        Drug p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.drug_id        + " ,"	+ dbObj.dose        + " ,"	+ dbObj.use_uom        + " ,"	+ dbObj.qty        + " ,"	+ dbObj.purch_uom        + " ,"	+ dbObj.caution        + " ,"	+ dbObj.description        + " ,"	+ dbObj.day_time        + " ,"	+ dbObj.printting        + " ,"	+ dbObj.instruction        + " ,"	+ dbObj.frequency        + " ,"	+ dbObj.item_id        + " ,"  + dbObj.usage_special        + " ,"  + dbObj.usage_text        + " ) values ('"        + p.getObjectId()        + "','" + p.drug_id        + "','" + p.dose   //???????????? double        + "','" + p.use_uom        + "','" + p.qty        + "','" + p.purch_uom        + "','" + p.caution        + "','" + p.description        + "','" + p.day_time        + "','" + p.printting        + "','" + p.instruction        + "','" + p.frequency        + "','"	+ p.item_id        + "','" + p.usage_special        + "','" + p.usage_text        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());                return theConnectionInf.eUpdate(sql);    }        public int update(Drug o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Drug p=o;        String field =""        + "', " + dbObj.drug_id + "='" + p.drug_id        + "', " + dbObj.dose + "=" + p.dose     //???????????? double        + " , " + dbObj.use_uom + "='" + p.use_uom        + "', " + dbObj.qty + "='" + p.qty        + "', " + dbObj.purch_uom + "='" + p.purch_uom        + "', " + dbObj.caution + "='" + p.caution        + "', " + dbObj.description + "='" + p.description        + "', " + dbObj.day_time + "='" + p.day_time        + "', " + dbObj.printting + "='" + p.printting        + "', " + dbObj.instruction + "='" + p.instruction        + "', " + dbObj.frequency + "='" + p.frequency        + "', "	+ dbObj.item_id+ " ='" + p.item_id        + "', " + dbObj.usage_special + "='" + p.usage_special        + "', " + dbObj.usage_text + "='" + p.usage_text        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());//        return theConnectionInf.eUpdate(sql.replace("item_drug_dose= ,",""));        return theConnectionInf.eUpdate(sql);    }        public int delete(Drug o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public int delete(String pk) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.item_id + "='" + pk +"'";        return theConnectionInf.eUpdate(sql);    }        public Drug selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Drug)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    public Vector selectByItemV(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.item_id        + " = '" + pk + "' order by " + dbObj.description;        return eQuery(sql);    }    public Drug selectByItem(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.item_id        + " = '" + pk + "' order by " + dbObj.drug_id;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Drug)v.get(0);    }        public Vector eQuery(String sql) throws Exception    {        Drug p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Drug();            p.setObjectId(rs.getString(dbObj.pk_field));            p.drug_id = rs.getString(dbObj.drug_id);            p.dose = rs.getString(dbObj.dose);            p.use_uom = rs.getString(dbObj.use_uom);            p.qty = rs.getString(dbObj.qty);            p.purch_uom = rs.getString(dbObj.purch_uom);            p.caution = rs.getString(dbObj.caution);            p.description = rs.getString(dbObj.description);            p.day_time = rs.getString(dbObj.day_time);            p.printting = rs.getString(dbObj.printting);            p.instruction = rs.getString(dbObj.instruction);            p.frequency = rs.getString(dbObj.frequency);            p.item_id = rs.getString(dbObj.item_id);            p.usage_special = rs.getString(dbObj.usage_special);            p.usage_text = rs.getString(dbObj.usage_text);            list.add(p);        }        rs.close();        return list;    }    }