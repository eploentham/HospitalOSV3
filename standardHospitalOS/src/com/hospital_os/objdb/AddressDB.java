package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class AddressDB{    public ConnectionInf theConnectionInf;    public Address dbObj;    final private String idtable = "105";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public AddressDB(ConnectionInf db)    {        theConnectionInf = db;        dbObj = new Address();        initConfig();    }    public AddressDB()    {        theConnectionInf = null;        dbObj = new Address();        initConfig();    }        public boolean initConfig()    {        this.dbObj.table = "f_address";        this.dbObj.pk_field = "f_address_id";        this.dbObj.fullname = "f_address_id";        this.dbObj.description = "address_description";        this.dbObj.tmbtype = "address_tambon_type";        this.dbObj.ampcode = "address_amphur_id";        this.dbObj.cgwcode = "address_changwat_id";        this.dbObj.region = "address_region";        /*        this.dbObj.table = "address";        this.dbObj.pk_field = "fullname";                 this.dbObj.fullname = "fullname";        this.dbObj.description = "description";        this.dbObj.tmbtype = "tmbtype";        this.dbObj.ampcode = "ampcode";        this.dbObj.cgwcode = "cgwcode";        this.dbObj.region = "region";         */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Address o) throws Exception    {        StringBuffer sql=new StringBuffer();        Address p=o;        p.generateOID(idtable);        sql.append("insert into ").append(dbObj.table).append(" ("       ).append(dbObj.pk_field ).append(" ,"       ).append(dbObj.fullname).append(" ,"       ).append(dbObj.description).append(" ,"       ).append(dbObj.tmbtype).append(" ,"       ).append(dbObj.ampcode ).append(" ,"       ).append(dbObj.cgwcode).append(" ,"       ).append(dbObj.region               ).append(" ) values ('"       ).append(p.getObjectId()).append("','"       ).append(p.fullname).append("' ,'"       ).append(p.description).append("' ,'"       ).append(p.tmbtype).append("' ,"       ).append(p.ampcode ).append("' ,'"       ).append(p.cgwcode).append("' ,'"       ).append(p.region       ).append("')");        return theConnectionInf.eUpdate(sql.toString());    }    public int update(Address o) throws Exception    {        Address p=o;        StringBuffer sql=new StringBuffer();        sql.append("update ").append(dbObj.table).append(" set ").append("', "       ).append(dbObj.fullname).append("='").append(p.fullname       ).append(dbObj.description).append("='").append(p.description       ).append(dbObj.tmbtype).append("='").append(p.tmbtype       ).append(dbObj.ampcode ).append("='").append(p.ampcode       ).append(dbObj.cgwcode).append("='").append(p.cgwcode       ).append(dbObj.region).append("='").append(p.region       ).append("' where ").append(dbObj.pk_field).append("='").append(p.getObjectId() +"'");        return theConnectionInf.eUpdate(sql.toString());    }    public int delete(Address o) throws Exception    {           StringBuffer sql=new StringBuffer().append("delete from ").append(dbObj.table       ).append(" where ").append(dbObj.pk_field).append("='").append(o.getObjectId() +"'");        return theConnectionInf.eUpdate(sql.toString());    }        public Address selectByPK(String pk) throws Exception    {        StringBuffer sql=new StringBuffer("select * from ").append(dbObj.table       ).append(" where ").append(dbObj.pk_field       ).append(" = '").append(pk).append("'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (Address)v.get(0);    }            public Vector selectChangwat() throws Exception    {    StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "        ).append( dbObj.tmbtype).append(" = '1' " ).append(" order by ").append(dbObj.description);                  return eQuery(sql.toString());    }        //////////////////////////////////////////////////////////////////////////////    public Vector selectAmphurAll() throws Exception    {    StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "        ).append( dbObj.tmbtype).append(" = '2' " ).append(" order by ").append(dbObj.description);                  Vector v=eQuery(sql.toString());         if(v.size()==0)             return null;         else             return v;    }        //////////////////////////////////////////////////////////////////////////////    public Vector selectTambonAll() throws Exception    {   StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "       ).append( dbObj.tmbtype).append(" = '3' " ).append( " order by ").append(dbObj.description);        Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectAmphur(String code) throws Exception    {    StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "        ).append(dbObj.tmbtype).append(" = '2' and "        ).append(dbObj.cgwcode ).append(" = '").append(code).append("'"        ).append(" order by ").append(dbObj.description);                  Vector v=eQuery(sql.toString());         if(v.size()==0)             return null;         else             return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectTambon(String code) throws Exception    {    StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "        ).append(dbObj.tmbtype).append(" = '3' and "        ).append(dbObj.ampcode).append(" = '").append(code).append("'"        ).append(" order by ").append(dbObj.description);                           Vector v=eQuery(sql.toString());         if(v.size()==0)             return null;         else             return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectByType(String pk,String changwat,String amp) throws Exception    {    StringBuffer sql = new StringBuffer("select * from ").append(dbObj.table).append(" where "        ).append( dbObj.tmbtype).append(" = '").append(pk).append("'" );         if (changwat != null)             sql.append(" and ").append(dbObj.cgwcode).append(" = '").append(changwat).append("'");         if(amp != null)             sql.append(" and ").append(dbObj.ampcode).append(" = '").append(amp).append("'");                  sql.append(" order by ").append(dbObj.description);                  Vector v=veQuery(sql.toString());         if(v.size()==0)             return null;         else             return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectAll() throws Exception    {        StringBuffer sql=new StringBuffer("select * from ").append(dbObj.table);                Vector v=veQuery(sql.toString());        if(v.size()==0)            return null;        else            return v;    }    //////////////////////////////////////////////////////////////////////////////    public Vector eQuery(String sql) throws Exception    {           Address p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Address();            p.setObjectId(rs.getString(dbObj.pk_field));            p.fullname = rs.getString(dbObj.fullname);            p.description = rs.getString(dbObj.description);            p.tmbtype = rs.getString(dbObj.tmbtype);            p.ampcode = rs.getString(dbObj.ampcode);            p.cgwcode = rs.getString(dbObj.cgwcode);            p.region = rs.getString(dbObj.region);            list.add(p);        }        rs.close();                return list;    }    //////////////////////////////////////////////////////////////////////////////    public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }            /*     *@author Pongtorn(henbe)     *@reason ?????????? upper ????????w?????????????? ????????????     */    public Vector selectAmpurByCN(String key,String changwat) throws Exception    {            StringBuffer sql=new StringBuffer("select * from ").append(dbObj.table           ).append(" where "+  dbObj.tmbtype).append(" = '2'"           ).append(" and "+  dbObj.cgwcode).append(" = '"+ changwat).append("'");                if(!key.equals("%"))            sql.append(" and (").append(dbObj.pk_field).append(" like '").append(key+ "' "           ).append(" or ").append(dbObj.description).append(" like '").append(key+ "')");                sql.append(" order by ").append(dbObj.description);        return eQuery(sql.toString());    }    /*     *@author Pongtorn(henbe)     *@reason ?????????? upper ????????w?????????????? ????????????     */    public Vector selectTambonByCN(String key,String amphur) throws Exception    {            StringBuffer sql=new StringBuffer("select * from ").append(dbObj.table           ).append(" where "+  dbObj.tmbtype).append(" = '3'"           ).append(" and "+  dbObj.ampcode).append(" = '"+ amphur).append("'");                if(!key.equals("%"))            sql.append(" and (").append(dbObj.pk_field).append(" like '").append(key+ "' "           ).append(" or ").append(dbObj.description).append(" like '").append(key+ "')");                sql.append(" order by ").append(dbObj.description);            return eQuery(sql.toString());    }    /*     *@author Pongtorn(henbe)     *@reason ?????????? upper ????????w?????????????? ????????????     */    public Vector selectChangwatByCN(String key) throws Exception      {           StringBuffer sql=new StringBuffer("select * from ").append(dbObj.table+                   " where "+  dbObj.tmbtype).append(" = '1' ");                      if(!key.equals("%"))                sql.append(" and (").append(dbObj.pk_field).append(" like '").append(key+ "' "               ).append(" or ").append(dbObj.description).append(" like '").append(key+ "')");                      sql.append(" order by ").append(dbObj.description);            return eQuery(sql.toString());    }    }