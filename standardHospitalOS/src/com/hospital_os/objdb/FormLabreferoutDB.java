package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class FormLabreferoutDB{    public ConnectionInf theConnectionInf;    public FormLabreferout dbObj;    final public String idtable = "161";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */        public FormLabreferoutDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new FormLabreferout();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_lab_refer_out_order_form";        dbObj.pk_field="t_lab_refer_out_order_form_id";        dbObj.form_name   ="lab_refer_out_order_form_name";        dbObj.date_collection   ="lab_refer_out_order_form_collection_date";        dbObj.servicepoint   ="lab_refer_out_order_form_service";        dbObj.requested_by   ="lab_refer_out_order_form_staff_record";        dbObj.clinical_diagnosis   ="b_service_point_id";        dbObj.detail_speciment   ="lab_refer_out_order_form_speciment_detail";        dbObj.site_id   ="b_visit_office_id";        dbObj.visit_id   ="t_visit_id";        dbObj.patient_id="t_patient_id";        // เพิ่มฟิลด์เก็บสถานพยาบาลอื่นๆ ที่ไม่มีใน list --Sumo--27/2/2549--        dbObj.other_place = "lab_refer_out_form_other_place";        /*        dbObj.table = "form_labreferout";        dbObj.pk_field ="form_labreferout_id";        dbObj.form_name = "form_name";        dbObj.date_collection = "date_collection";        dbObj.servicepoint = "servicepoint";        dbObj.requested_by = "requested_by";        dbObj.clinical_diagnosis = "clinical_diagnosis";        dbObj.detail_speciment = "detail_speciment";        dbObj.site_id = "site_id";        dbObj.visit_id = "visit_id";        dbObj.patient_id = "patient_id";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(FormLabreferout o) throws Exception    {        String sql="";        FormLabreferout p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"  + dbObj.form_name        + " ,"  + dbObj.date_collection        + " ,"	+ dbObj.servicepoint        + " ,"	+ dbObj.requested_by        + " ,"	+ dbObj.clinical_diagnosis        + " ,"	+ dbObj.detail_speciment        + " ,"	+ dbObj.site_id        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.patient_id        + " ,"  + dbObj.other_place        + " ) values ('"        + p.getObjectId()        + "','" + p.form_name        + "','" + p.date_collection        + "','" + p.servicepoint        + "','" + p.requested_by        + "','" + p.clinical_diagnosis        + "','" + p.detail_speciment        + "','" + p.site_id        + "','" + p.visit_id        + "','" + p.patient_id        + "','" + p.other_place        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(FormLabreferout o) throws Exception    {        String sql="update " + dbObj.table + " set ";        FormLabreferout p=o;        String field =""        + "', " + dbObj.form_name + "='" + p.form_name        + "', " + dbObj.date_collection + "='" + p.date_collection        + "', " + dbObj.servicepoint + "='" + p.servicepoint        + "', " + dbObj.requested_by + "='" + p.requested_by        + "', " + dbObj.clinical_diagnosis + "='" + p.clinical_diagnosis        + "', " + dbObj.detail_speciment + "='" + p.detail_speciment        + "', " + dbObj.site_id + "='" + p.site_id        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.other_place + "='" + p.other_place        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(FormLabreferout o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public FormLabreferout selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (FormLabreferout)v.get(0);    }       /*public Vector queryOIRD(String orderItemId) throws Exception   {        String sql="select * from " + dbObj.table            + " where "            + dbObj.order_item_id + " = '" + orderItemId + "'";                return eQuery(sql);   }   public FormLabreferout selectByOrderItemId(String orderItemId) throws Exception   {        String sql="select * from " + dbObj.table            + " where " + dbObj.order_item_id            + " = '" + orderItemId + "'";            Vector v=eQuery(sql);                if(v.size()==0)                        return null;                else                        return (FormLabreferout)v.get(0);   }*/        public Vector selectFLROByVId(String vId) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.visit_id + " = '" + vId + "'";        return eQuery(sql);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table ;        return eQuery(sql);    }        public Vector eQuery(String sql) throws Exception    {        FormLabreferout p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new FormLabreferout();            p.setObjectId(rs.getString(dbObj.pk_field));                        p.form_name = rs.getString(dbObj.form_name);            p.date_collection = rs.getString(dbObj.date_collection);            p.servicepoint = rs.getString(dbObj.servicepoint);            p.requested_by = rs.getString(dbObj.requested_by);            p.clinical_diagnosis = rs.getString(dbObj.clinical_diagnosis);            p.detail_speciment = rs.getString(dbObj.detail_speciment);            p.site_id = rs.getString(dbObj.site_id);            p.visit_id = rs.getString(dbObj.visit_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.other_place = rs.getString(dbObj.other_place);            list.add(p);        }        rs.close();        return list;    }        }