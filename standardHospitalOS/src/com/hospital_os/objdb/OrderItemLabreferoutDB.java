package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class OrderItemLabreferoutDB{    public ConnectionInf theConnectionInf;    public OrderItemLabreferout dbObj;    final public String idtable = "198";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */        public OrderItemLabreferoutDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new OrderItemLabreferout();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_lab_refer_out_order";        dbObj.pk_field="t_lab_refer_out_order_id";        dbObj.form_labreferout_id   ="t_lab_refer_out_order_form_id";        dbObj.order_item_id   ="t_order_id";        dbObj.common_name   ="lab_refer_out_order_common_name";        dbObj.item_id="b_item_id";        /*        dbObj.table = "order_item_labreferout";        dbObj.pk_field ="order_item_labreferout_id";        dbObj.form_labreferout_id = "form_lab_referout_id";        dbObj.order_item_id = "order_item_id";        dbObj.common_name = "common_name";        dbObj.item_id = "item_id";         **/        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(OrderItemLabreferout o) throws Exception    {        String sql="";        OrderItemLabreferout p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"  + dbObj.form_labreferout_id        + " ,"  + dbObj.order_item_id        + " ,"	+ dbObj.common_name        + " ,"	+ dbObj.item_id        + " ) values ('"        + p.getObjectId()        + "','" + p.form_labreferout_id        + "','" + p.order_item_id        + "','" + p.common_name        + "','" + p.item_id        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(OrderItemLabreferout o) throws Exception    {        String sql="update " + dbObj.table + " set ";        OrderItemLabreferout p=o;        String field =""        + "', " + dbObj.form_labreferout_id + "='" + p.form_labreferout_id        + "', " + dbObj.order_item_id + "='" + p.order_item_id        + "', " + dbObj.common_name + "='" + p.common_name        + "', " + dbObj.item_id + "='" + p.item_id        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(OrderItemLabreferout o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }       /*public FormLabreferout selectByPK(String pk) throws Exception   {        String sql="select * from " + dbObj.table            + " where " + dbObj.pk_field            + " = '" + pk + "'";            Vector v=eQuery(sql);                if(v.size()==0)                        return null;                else                        return (FormLabreferout)v.get(0);   }   public Vector queryOIRD(String orderItemId) throws Exception   {        String sql="select * from " + dbObj.table            + " where "            + dbObj.order_item_id + " = '" + orderItemId + "'";                return eQuery(sql);   }*/   public Vector selectByOrderId(String orderItemId) throws Exception   {           String sql="select * from " + dbObj.table            + " where " + dbObj.order_item_id  + " = '" + orderItemId + "'";            return eQuery(sql);   }        public Vector selectLROByFLROID(String FLROID) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.form_labreferout_id + " = '" + FLROID + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        OrderItemLabreferout p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new OrderItemLabreferout();            p.setObjectId(rs.getString(dbObj.pk_field));                        p.form_labreferout_id = rs.getString(dbObj.form_labreferout_id);            p.order_item_id = rs.getString(dbObj.order_item_id);            p.common_name = rs.getString(dbObj.common_name);            p.item_id = rs.getString(dbObj.item_id);            list.add(p);        }        rs.close();        return list;    }        }