package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;import com.hospital_os.*;import com.hospital_os.usecase.connection.Persistent;public class OrderItemDrugDB{    public ConnectionInf theConnectionInf;    public OrderItemDrug dbObj;    final public String idtable = "196";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public OrderItemDrugDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new OrderItemDrug();        initConfig();    }    public OrderItemDrug initConfig()    {        dbObj.table="t_order_drug";        dbObj.pk_field="t_order_drug_id";        dbObj.order_item_id   ="t_order_id";        dbObj.instruction   ="b_item_drug_instruction_id";        dbObj.frequency   ="b_item_drug_frequency_id";        dbObj.dose   ="order_drug_dose";        dbObj.use_uom   ="b_item_drug_uom_id_use";        dbObj.caution   ="order_drug_caution";        dbObj.description   ="order_drug_description";        dbObj.day_time   ="f_item_day_time_id";        dbObj.printing   ="order_drug_printable";        dbObj.purch_uom   ="b_item_drug_uom_id_purch";        dbObj.usage_special   ="order_drug_special_prescription";        dbObj.usage_text   ="order_drug_special_prescription_text";        dbObj.item_id ="b_item_id";        dbObj.active = "order_drug_active";        dbObj.modify = "order_drug_modifier";        dbObj.modify_time = "order_drug_modify_datetime";        dbObj.status = "order_drug_order_status";        return dbObj;    }         public static void updateField(OrderItemDrug obj)    {        obj.dose = Constant.getSDouble(obj.dose);            }           /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(OrderItemDrug p) throws Exception    {        updateField(p);        p.generateOID(idtable);        String sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.order_item_id        + " ,"	+ dbObj.instruction        + " ,"	+ dbObj.frequency        + " ,"	+ dbObj.dose        + " ,"	+ dbObj.use_uom        + " ,"	+ dbObj.caution        + " ,"	+ dbObj.description        + " ,"	+ dbObj.day_time        + " ,"	+ dbObj.printing        + " ,"  + dbObj.purch_uom        + " ,"  + dbObj.usage_special        + " ,"  + dbObj.usage_text        + " ,"  + dbObj.item_id        + " ,"  + dbObj.active        + " ,"  + dbObj.modify        + " ,"  + dbObj.modify_time        + " ,"  + dbObj.status        + " ) values ('"        + p.getObjectId()        + "','" + p.order_item_id        + "','" + p.instruction        + "','" + p.frequency        + "'," + p.dose       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ",'" + p.use_uom        + "','" + p.caution        + "','" + p.description        + "','" + p.day_time        + "','" + p.printing        + "','" + p.purch_uom        + "','" + p.usage_special        + "','" + p.usage_text        + "','" + p.item_id        + "','" + p.active        + "','" + p.modify        + "','" + p.modify_time        + "','" + p.status        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        //return theConnectionInf.xUpdate(sql);        return theConnectionInf.eUpdate(sql);    }    public int update(OrderItemDrug p) throws Exception    {        updateField(p);        String sql="update " + dbObj.table + " set ";        String field =""        + " " + dbObj.order_item_id + "='" + p.order_item_id        + "', " + dbObj.instruction + "='" + p.instruction        + "', " + dbObj.frequency + "='" + p.frequency        + "', " + dbObj.dose + "=" + p.dose       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " + dbObj.use_uom + "='" + p.use_uom        + "', " + dbObj.caution + "='" + p.caution        + "', " + dbObj.description + "='" + p.description        + "', " + dbObj.day_time + "='" + p.day_time        + "', " + dbObj.printing + "='" + p.printing        + "', " + dbObj.purch_uom + "='" + p.purch_uom        + "', " + dbObj.usage_special + "='" + p.usage_special        + "', " + dbObj.usage_text + "='" + p.usage_text        + "', " + dbObj.item_id + "='" + p.item_id        + "', " + dbObj.active + "='" + p.active        + "', " + dbObj.modify + "='" + p.modify        + "', " + dbObj.modify_time + "='" + p.modify_time        + "', " + dbObj.status + "='" + p.status        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field,theConnectionInf.gettypeDatabase());        //return theConnectionInf.xUpdate(sql);        return theConnectionInf.eUpdate(sql);    }        public int delete(OrderItemDrug o) throws Exception    {         String sql="delete from " + dbObj.table         + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";         return theConnectionInf.eUpdate(sql);    }        public int deleteByOrderItemId(String orderitemid) throws Exception    {         String sql="delete from " + dbObj.table         + " where " + dbObj.order_item_id + "='" + orderitemid +"'";         return theConnectionInf.eUpdate(sql);    }        public OrderItemDrug selectByPK(String pk) throws Exception    {         String sql="select * from " + dbObj.table         + " where " + dbObj.pk_field         + " = '" + pk + "'";                  Vector v=eQuery(sql);         if(v.size()==0)            return null;         else            return (OrderItemDrug)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public OrderItemDrug selectByOrderItemID(String pk) throws Exception    {//        String sql="select * from " + dbObj.table                + " where " + dbObj.order_item_id + " = '" + pk + "'"                + " and " + dbObj.active + " <> '0'" ;        Vector v=eQuery(sql);        if(v.size()==0)  return null;        else             return (OrderItemDrug)v.get(0);    }        public Vector eQuery(String sql) throws Exception    {        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())            list.add(rs2Object(rs));                rs.close();        return list;    }        public OrderItemDrug selectOrderItemDrugByItemId(String item_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.order_item_id        + " = '" + item_id + "'" ;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (OrderItemDrug)v.get(0);    }     public void checkIndex()    {   String sql = "";                        try{            sql = "CREATE INDEX " +dbObj.order_item_id + " ON " + dbObj.table  + " USING btree ("+dbObj.order_item_id +")";            this.theConnectionInf.eUpdate(sql);        }        catch(Exception ex)        {                    }     }//   public OrderItemDrug rs2Object(ResultSet rs) throws SQLException //    {//            OrderItemDrug p = new OrderItemDrug();//            p.setObjectId(rs.getString(dbObj.table + "." + dbObj.pk_field));//            p.order_item_id = rs.getString(dbObj.table + "." + dbObj.order_item_id);//            p.instruction = rs.getString(dbObj.table + "." + dbObj.instruction);//            p.frequency = rs.getString(dbObj.table + "." + dbObj.frequency);//            p.dose = rs.getString(dbObj.table + "." + dbObj.dose);//            p.use_uom = rs.getString(dbObj.table + "." + dbObj.use_uom);//            p.caution = rs.getString(dbObj.table + "." + dbObj.caution);//            p.description = rs.getString(dbObj.table + "." + dbObj.description);//            p.day_time = rs.getString(dbObj.table + "." + dbObj.day_time);//            p.printing = rs.getString(dbObj.table + "." + dbObj.printing);//            p.purch_uom = rs.getString(dbObj.table + "." + dbObj.purch_uom);//            p.usage_special = rs.getString(dbObj.table + "." + dbObj.usage_special);//            p.usage_text = rs.getString(dbObj.table + "." + dbObj.usage_text);//            p.item_id = rs.getString(dbObj.table + "." + dbObj.item_id);//            p.active = rs.getString(dbObj.table + "." + dbObj.active);//            p.modify = rs.getString(dbObj.table + "." + dbObj.modify);//            p.modify_time = rs.getString(dbObj.table + "." + dbObj.modify_time);//            p.status = rs.getString(dbObj.table + "." + dbObj.status);//            return p;//    }    public OrderItemDrug rs2Object(ResultSet rs) throws SQLException     {            OrderItemDrug p = new OrderItemDrug();            p.setObjectId(rs.getString(dbObj.pk_field));            p.order_item_id = rs.getString(dbObj.order_item_id);            p.instruction = rs.getString(dbObj.instruction);            p.frequency = rs.getString(dbObj.frequency);            p.dose = rs.getString(dbObj.dose);            p.use_uom = rs.getString(dbObj.use_uom);            p.caution = rs.getString(dbObj.caution);            p.description = rs.getString(dbObj.description);            p.day_time = rs.getString(dbObj.day_time);            p.printing = rs.getString(dbObj.printing);            p.purch_uom = rs.getString(dbObj.purch_uom);            p.usage_special = rs.getString(dbObj.usage_special);            p.usage_text = rs.getString(dbObj.usage_text);            p.item_id = rs.getString(dbObj.item_id);            p.active = rs.getString(dbObj.active);            p.modify = rs.getString(dbObj.modify);            p.modify_time = rs.getString(dbObj.modify_time);            p.status = rs.getString(dbObj.status);            return p;    }    }