package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class ReceiptItemDB{    public ConnectionInf theConnectionInf;    public ReceiptItem dbObj;    final public String idtable = "101";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public ReceiptItemDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new ReceiptItem();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_billing_receipt_item";        dbObj.pk_field="t_billing_receipt_item_id";        dbObj.receipt_id   ="t_billing_receipt_id";        dbObj.billing_invoice_item_id   ="t_billing_invoice_item_id";        dbObj.item_id   ="b_item_id";        dbObj.draw   ="billing_receipt_item_draw";        dbObj.active   ="billing_receipt_item_active";        dbObj.payment_id   ="t_payment_id";        dbObj.paid   ="billing_receipt_item_paid";        dbObj.vn   ="billing_receipt_item_vn";        dbObj.visit_id   ="t_visit_id";        dbObj.hn   ="billing_receipt_item_hn";        dbObj.patient_id="t_patient_id";        return true;    }     public static void updateField(ReceiptItem obj)    {        obj.paid = Constant.getSDouble(obj.paid);              }       /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(ReceiptItem p) throws Exception    {        updateField(p);        p.generateOID(idtable);        String sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"  + dbObj.receipt_id        + " ,"	+ dbObj.billing_invoice_item_id        + " ,"	+ dbObj.item_id        + " ,"	+ dbObj.draw        + " ,"	+ dbObj.active        + " ,"	+ dbObj.payment_id        + " ,"	+ dbObj.paid        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.patient_id        + " ) values ('"        + p.getObjectId()                + "','" + p.receipt_id                + "','" + p.billing_invoice_item_id        + "','" + p.item_id        + "','" + p.draw        + "','" + p.active        + "','" + p.payment_id        + "'," + p.paid       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ",'" + p.vn        + "','" + p.visit_id        + "','" + p.hn        + "','" + p.patient_id        + "')";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int updataActiveCancelBilling(String billing_receipt_id)throws Exception    {        String sql = "update " + dbObj.table + " set " + dbObj.active + "='0'" +        " Where " + dbObj.receipt_id + " = '" + billing_receipt_id + "'";                return theConnectionInf.eUpdate(sql);    }                    public int update(ReceiptItem p) throws Exception    {        updateField(p);        String sql="update " + dbObj.table + " set ";        String field =""                + "', " + dbObj.receipt_id + "='" + p.receipt_id        + "', " + dbObj.billing_invoice_item_id + "='" + p.billing_invoice_item_id        + "', " + dbObj.item_id + "='" + p.item_id        + "', " + dbObj.draw + "='" + p.draw        + "', " + dbObj.active + "='" + p.active        + "', " + dbObj.payment_id + "='" + p.payment_id        + "', " + dbObj.paid + "=" + p.paid       //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " + dbObj.vn + "='" + p.vn        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.patient_id + "='" + p.patient_id        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());                return theConnectionInf.eUpdate(sql);    }            public Vector listReceiptItemByVisitIdReceiptID(String visit_id , String receipt_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.vn + " = '" + visit_id + "' "        + " and " + dbObj.receipt_id + " = '" + receipt_id + "' "        + " and " + dbObj.active + " = '1' ";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector listReceiptItemByVisitIdBillingInvoiceItemID(String visit_id , String invoice_item_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + visit_id + "' "        + " and " + dbObj.billing_invoice_item_id + " = '" + invoice_item_id + "' "        + " and " + dbObj.active + " = '1' ";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }            public int delete(ReceiptItem o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public ReceiptItem selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (ReceiptItem)v.get(0);    }        public ReceiptItem selectByVisitID(String visit_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id        + " = '" + visit_id + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (ReceiptItem)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        ReceiptItem p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ReceiptItem();            p.setObjectId(rs.getString(dbObj.pk_field));            p.receipt_id = rs.getString(dbObj.receipt_id);            p.billing_invoice_item_id = rs.getString(dbObj.billing_invoice_item_id);            p.item_id = rs.getString(dbObj.item_id);            p.draw = rs.getString(dbObj.draw);            p.active = rs.getString(dbObj.active);            p.payment_id = rs.getString(dbObj.payment_id);            p.paid = rs.getString(dbObj.paid);            p.vn = rs.getString(dbObj.vn);            p.visit_id = rs.getString(dbObj.visit_id);            p.hn = rs.getString(dbObj.hn);            p.patient_id = rs.getString(dbObj.patient_id);                        list.add(p);        }        rs.close();        return list;    }    }