package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class PlanDB{    public ConnectionInf theConnectionInf;    public Plan dbObj;    final public String idtable = "212";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public PlanDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Plan();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_contract_plans";        dbObj.pk_field="b_contract_plans_id";        dbObj.plan_id   ="contract_plans_number";        dbObj.description   ="contract_plans_description";        dbObj.active_from   ="contract_plans_active_from";        dbObj.active_to   ="contract_plans_active_to";        dbObj.active   ="contract_plans_active";        dbObj.pttype   ="contract_plans_pttype";        dbObj.payer_id   ="b_contract_payer_id";        dbObj.contract_id   ="b_contract_id";        dbObj.money_limit="contract_plans_money_limit";        dbObj.sort_index   ="contract_plans_sort_index";        dbObj.pttype53  ="r_rp1853_instype_id";              return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Plan o) throws Exception    {        Plan p=o;        if(p.getObjectId() == null)            p.generateOID(idtable);        StringBuffer sql = new StringBuffer("insert into " ).append( dbObj.table ).append( " ("        ).append( dbObj.pk_field        ).append( " ,"	).append( dbObj.plan_id        ).append( " ,"	).append( dbObj.description        ).append( " ,"	).append( dbObj.active_from        ).append( " ,"	).append( dbObj.active_to        ).append( " ,"	).append( dbObj.active        ).append( " ,"	).append( dbObj.pttype        ).append( " ,"	).append( dbObj.money_limit        ).append( " ,"	).append( dbObj.payer_id        ).append( " ,"	).append( dbObj.contract_id        ).append( " ,"	).append( dbObj.sort_index        ).append( " ,"	).append( dbObj.pttype53        ).append( " ) values ('"        ).append( p.getObjectId()        ).append( "','" ).append( p.plan_id        ).append( "','" ).append( p.description        ).append( "','" ).append( p.active_from        ).append( "','" ).append( p.active_to        ).append( "','" ).append( p.active        ).append( "','" ).append( p.pttype        ).append( "','" ).append( p.money_limit        ).append( "','" ).append( p.payer_id        ).append( "','" ).append( p.contract_id        ).append( "','" ).append( p.sort_index        ).append( "','" ).append( p.pttype53        ).append( "')");         return theConnectionInf.eUpdate(sql.toString());    }    public int update(Plan o) throws Exception    {        Plan p=o;        StringBuffer sql = new StringBuffer("update " ).append( dbObj.table ).append( " set "        ).append( dbObj.plan_id ).append( "='" ).append( p.plan_id        ).append( "', " ).append( dbObj.description ).append( "='" ).append( p.description        ).append( "', " ).append( dbObj.active_from ).append( "='" ).append( p.active_from        ).append( "', " ).append( dbObj.active_to ).append( "='" ).append( p.active_to        ).append( "', " ).append( dbObj.active ).append( "='" ).append( p.active        ).append( "', " ).append( dbObj.pttype ).append( "='" ).append( p.pttype        ).append( "', " ).append( dbObj.money_limit ).append( "='" ).append( p.money_limit        ).append( "', " ).append( dbObj.payer_id ).append( "='" ).append( p.payer_id        ).append( "', " ).append( dbObj.contract_id ).append( "='" ).append( p.contract_id        ).append( "', " ).append( dbObj.sort_index ).append( "='" ).append( p.sort_index        ).append( "', " ).append( dbObj.pttype53 ).append( "='" ).append( p.pttype53        ).append( "' where " ).append( dbObj.pk_field ).append( "='" ).append( p.getObjectId() ).append("'");                return theConnectionInf.eUpdate(sql.toString());    }              public int delete(Plan o) throws Exception    {        StringBuffer sql = new StringBuffer("delete from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field ).append( "='" ).append( o.getObjectId() ).append("'");        return theConnectionInf.eUpdate(sql.toString());    }        public Plan selectByPK(String pk) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field        ).append( " = '" ).append( pk ).append( "'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (Plan)v.get(0);    }            public Plan selectByCode(String code) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.plan_id        ).append( " = '" ).append( code ).append( "'" );        Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (Plan)v.get(0);    }            public Plan selectByPK(String pk,String active) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where " ).append( dbObj.pk_field        ).append( " = '" ).append( pk ).append( "'");                Vector v=eQuery(sql.toString());        if(v.size()==0)            return null;        else            return (Plan)v.get(0);    }        public Vector selectbySearch(String search) throws Exception    {        StringBuffer sql = new StringBuffer( "select * from " ).append( dbObj.table        ).append( " where (" ).append( dbObj.plan_id        ).append( " like '%" ).append( search ).append( "%' or "        ).append( dbObj.description ).append( " like '%" ).append( search ).append( "%') and "        ).append( dbObj.active ).append( " = '1'" ).append(                " order by " ).append( dbObj.description);                return eQuery(sql.toString());    }    /*     เตรียมลบตั้งชื่อได้แย่มาก henbe comment     */    public Vector selectAllByPk(String pk,String active) throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table        ).append( " where ");        if(pk.trim().length() !=0)        {            sql.append("(" ).append(  dbObj.plan_id            ).append( " like '%" ).append( pk ).append( "%'" ).append( " or "            ).append( dbObj.description  ).append( " like '%" ).append( pk ).append( "%'" ).append( ") and ");        }        sql.append( dbObj.active ).append( " = '" ).append( active ).append( "'" ).append(        " order by " ).append( dbObj.description);        return eQuery(sql.toString());    }        public Vector selectAll() throws Exception    {        StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table ).append( " WHERE " ).append(        " " ).append( dbObj.active ).append( " ='" ).append( Active.isEnable()).append( "'");        return eQuery(sql.toString());    }                public Vector eQuery(String sql) throws Exception    {        Plan p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql.toString());        while(rs.next())        {            p = new Plan();            p.setObjectId(rs.getString(dbObj.pk_field));            p.plan_id = rs.getString(dbObj.plan_id);            p.description = rs.getString(dbObj.description);            p.active_from = rs.getString(dbObj.active_from);            p.active_to = rs.getString(dbObj.active_to);            p.active = rs.getString(dbObj.active);            p.pttype = rs.getString(dbObj.pttype);            p.money_limit = rs.getString(dbObj.money_limit);            p.payer_id = rs.getString(dbObj.payer_id);            p.contract_id = rs.getString(dbObj.contract_id);            p.sort_index = rs.getString(dbObj.sort_index);            p.pttype53 = rs.getString(dbObj.pttype53);            list.add(p);        }        rs.close();        return list;    }   ////////////////////////////////////////////////////////////////////////////    /**     *@not deprecated henbe unused selectByCNA instead     **/      public Vector selectByCN(String key) throws Exception      {           StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table            ).append( " where UPPER(" ).append( dbObj.plan_id ).append( ") like UPPER('" ).append( key).append( "') "            ).append( " or UPPER(" ).append( dbObj.description ).append( ") like UPPER('" ).append( key).append( "') "            ).append( " order by " ).append( dbObj.sort_index ).append( "," ).append( dbObj.description);            return eQuery(sql.toString());      }          ////////////////////////////////////////////////////////////////////////////      public Vector selectByCNA(String key,String active) throws Exception      {           StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table            ).append( " where (UPPER(" ).append( dbObj.plan_id ).append( ") like UPPER('" ).append( key).append( "') "            ).append( " or UPPER(" ).append( dbObj.description ).append( ") like UPPER('" ).append( key            ).append( "')) and " ).append( dbObj.active ).append( "='" ).append( active ).append( "'"            ).append( " order by " ).append( dbObj.sort_index ).append( "," ).append( dbObj.description);            return eQuery(sql.toString());      }      public Vector selectByContract(String key) throws Exception      {           StringBuffer sql = new StringBuffer("select * from " ).append( dbObj.table            ).append( " where " ).append( dbObj.contract_id ).append( " ='" ).append( key).append( "'"            ).append( " order by " ).append( dbObj.sort_index ).append( "," ).append( dbObj.description);            return eQuery(sql.toString());      }            }