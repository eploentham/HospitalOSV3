package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class ICD10GroupSurveilDB{    public ConnectionInf theConnectionInf;    public ICD10GroupSurveil dbObj;    final public String idtable = "320";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public ICD10GroupSurveilDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new ICD10GroupSurveil();        initConfig();    }    public ICD10GroupSurveilDB()    {        theConnectionInf = null;        dbObj = new ICD10GroupSurveil();        initConfig();    }        public boolean initConfig()    {        Vector result = new Vector();        dbObj.table = "b_icd10_group_surveil";        dbObj.pk_field ="b_icd10_group_surveil_id";        dbObj.group_surveil_id ="b_group_surveil_id";        dbObj.icd10_id ="b_icd10_id";        dbObj.icd_number ="icd_number";        dbObj.icd10_surveil_type ="icd10_group_surveil_type";        dbObj.active ="icd10_group_surveil_active";        return true;    }        /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */        public int insert(ICD10GroupSurveil o) throws Exception    {        String sql="";        ICD10GroupSurveil p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("                +  dbObj.pk_field                + " ,"  +dbObj.group_surveil_id                + " ,"  +dbObj.icd10_id                + " ,"  +dbObj.icd_number                + " ,"  +dbObj.icd10_surveil_type                + " ,"  +dbObj.active                + " ) values ('"                + p.getObjectId()                + "','" + p.group_surveil_id                + "','" + p.icd10_id                + "','" + p.icd_number                + "','" + p.icd10_surveil_type                + "','" + p.active                + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(ICD10GroupSurveil o) throws Exception    {        String sql="";        ICD10GroupSurveil p=o;        sql="update " + dbObj.table + " set "                + dbObj.group_surveil_id +"='" + p.group_surveil_id + "',"                + dbObj.icd10_id +"='" + p.icd10_id + "',"                + dbObj.icd_number +"='" + p.icd_number + "',"                + dbObj.icd10_surveil_type +"='" + p.icd10_surveil_type + "',"                + dbObj.active + "='" + p.active +"' where "                + dbObj.pk_field + "='" + p.getObjectId() + "'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(ICD10GroupSurveil gc) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + gc.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    /**     *@deprecated henbe bad function name     */    public Vector selectByPk(String pk,String active)throws Exception    {        return selectByNameActive(pk,active);    }    public Vector selectByNameActive(String pk,String active)throws Exception    {        String sql="select * from " + dbObj.table        + " where " ;        if(pk.trim().length() !=0)        {                        sql= sql +"("+ dbObj.icd_number + " like '%" + pk + "%') and "            + dbObj.active + " = '" + active + "'";        }        else        {            sql= sql + dbObj.active + "='" + active +"'";        }                        Vector v=eQuery(sql);                if(v.size()==0)            return null;        else            return v;    }    /**     *@author henbe     */    public ICD10GroupSurveil selectByPK(String pk)throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (ICD10GroupSurveil)v.get(0);    }    /**     *@deprecated henbe bad function name     */        public ICD10GroupSurveil selectByKeyId(String pk) throws Exception    {        return selectByPK(pk);    }            public ICD10GroupSurveil selectByCode(String code) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.group_surveil_id + " = '" + code + "'";                        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (ICD10GroupSurveil)v.get(0);    }        //    public Vector selectAll() throws Exception//    {//        String sql="select * from " + dbObj.table;//        Vector v=veQuery(sql);//        //        if(v.size()==0)//            return null;//        else//            return v;//    }    //    public Vector selectActivate() throws Exception//    {//        String sql="select * from "+ dbObj.table+" where group_surveil_active = '1'";//        //        Vector v=veQuery(sql);//        //        if(v.size()==0)//            return null;//        else//            return v;////    }  //    public Vector selectByCN(String key) throws Exception//    {//        String sql="select * from " + dbObj.table//        + " where UPPER(" + dbObj.group_surveil_id//        + ") like UPPER('%" + key+ "%') ";//        //        Vector v=veEQuery(sql);//        if(v.size()==0)//            return null;//        else//            return v;//    }   //    //    public Vector selectAllEng() throws Exception//    {//        String sql="select * from " + dbObj.table;//        //        Vector v=veEQuery(sql);//        //        if(v.size()==0)//            return null;//        else//            return v;//    }//        public Vector eQuery(String sql) throws Exception    {        ICD10GroupSurveil p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        int i=0;        while(rs.next())        {            p = new ICD10GroupSurveil();            p.setObjectId(rs.getString(dbObj.pk_field));            p.group_surveil_id = rs.getString(dbObj.group_surveil_id);            p.icd10_id = rs.getString(dbObj.icd10_id);            p.icd_number = rs.getString(dbObj.icd_number);            p.icd10_surveil_type = rs.getString(dbObj.icd10_surveil_type);            p.active = rs.getString(dbObj.active);            list.add(p);            i++;            if(i>100) break;        }        rs.close();        return list;    }//    //    public Vector veQuery(String sql) throws Exception//    {//        ComboFix p;//        Vector list = new Vector();//        ResultSet rs = theConnectionInf.eQuery(sql);//        while(rs.next())//        {//            p = new ComboFix();//            p.code = rs.getString(dbObj.pk_field);//            p.name = rs.getString(dbObj.description_th);//            list.add(p);//        }//        rs.close();//        return list;//    }    //    public Vector veEQuery(String sql) throws Exception//    {//        ComboFix p;//        Vector list = new Vector();//        ResultSet rs = theConnectionInf.eQuery(sql);//        while(rs.next())//        {//            p = new ComboFix();//            p.code = rs.getString(dbObj.pk_field);//            p.name = rs.getString(dbObj.description_en);//            list.add(p);//        }//        rs.close();//        return list;//    }        public Vector selectBySurveilID(String surveil_id,String active,String type) throws Exception    {        String sql="select * from " + dbObj.table                + " where " + dbObj.group_surveil_id + " = '" + surveil_id+ "' "                + " and " + dbObj.icd10_surveil_type + " = '" + type + "' "                + " and " +  dbObj.active + " = '" + active +"' ";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    }