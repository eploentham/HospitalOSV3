package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/** *@deprecated henbe unused duplicate with BornMCHDB **/public class MchDB{    public ConnectionInf theConnectionInf;    public Mch dbObj;    final public String idtable = "185";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public MchDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Mch();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_health_delivery";        dbObj.pk_field="t_health_delivery_id";        dbObj.vn   ="t_visit_id";        dbObj.hn   ="t_patient_id";        dbObj.gravida   ="gravida_number";        dbObj.bdate   ="born_date";        dbObj.bresult   ="f_health_postpartum_givebirth_result_id";        dbObj.bplace   ="f_health_postpartum_birth_place_id";        dbObj.bhosp   ="b_visit_office_birth_place";        dbObj.btype   ="f_health_postpartum_birth_method_id";        dbObj.bdoctor   ="f_health_pregnancy_birth_doctor_type_id";        dbObj.lborn   ="health_delivery_parity";        dbObj.sborn   ="health_delivery_stillborn";        dbObj.presult   ="f_health_postpartum_status_result_id";        dbObj.update   ="record_date_time";        dbObj.mstandard   ="health_delivery_mother_standard";        dbObj.btime   ="health_delivery_delivery_time";        dbObj.abnormalpreg   ="abnormal_pregnancy_description";        dbObj.note   ="health_delivery_notice";        dbObj.active   ="health_delivery_active";        dbObj.user_record   ="health_delivery_staff_record";        dbObj.user_modify   ="health_delivery_staff_modify";        dbObj.user_cancel="health_delivery_staff_cancel";        /*        dbObj.table = "mch";        dbObj.pk_field = "mch_id";        dbObj.vn = "visit_id";        dbObj.hn = "patient_id";        dbObj.gravida = "gravida";        dbObj.bdate = "bdate";        dbObj.bresult = "bresult";        dbObj.bplace = "bplace";        dbObj.bhosp = "bhosp";        dbObj.btype = "btype";        dbObj.bdoctor = "bdoctor";        dbObj.lborn = "lborn";        dbObj.sborn = "sborn";        dbObj.presult = "presult";        dbObj.mstandard = "mstandard";        dbObj.update = "update_time";        dbObj.btime = "btime";        dbObj.abnormalpreg = "abnormalpreg" ;        dbObj.note = "note" ;        dbObj.active = "active" ;        dbObj.user_record = "user_record" ;        dbObj.user_modify = "user_modify" ;        dbObj.user_cancel = "user_cancel";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Mch o) throws Exception    {        String sql="";        Mch p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.gravida        + " ,"	+ dbObj.bdate        + " ,"	+ dbObj.bresult        + " ,"	+ dbObj.bplace        + " ,"	+ dbObj.bhosp        + " ,"	+ dbObj.btype        + " ,"	+ dbObj.bdoctor        + " ,"	+ dbObj.lborn        + " ,"	+ dbObj.sborn        + " ,"	+ dbObj.presult        + " ,"	+ dbObj.mstandard        + " ,"	+ dbObj.update        + " ,"	+ dbObj.btime        + " ,"	+ dbObj.abnormalpreg        + " ,"	+ dbObj.note        + " ,"	+ dbObj.active        + " ,"	+ dbObj.user_record        + " ,"	+ dbObj.user_modify        + " ,"	+ dbObj.user_cancel                + " ) values ('"        + p.getObjectId()        + "','" + p.vn        + "','" + p.hn        + "','" + p.gravida        + "','" + p.bdate        + "','" + p.bresult        + "','" + p.bplace        + "','" + p.bhosp        + "','" + p.btype        + "','" + p.bdoctor        + "','" + p.lborn        + "','" + p.sborn        + "','" + p.presult        + "','" + p.mstandard        + "','" + p.update        + "','" + p.btime        + "','" + p.abnormalpreg        + "','" + p.note        + "','" + p.active        + "','" + p.user_record        + "','" + p.user_modify        + "','" + p.user_cancel        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(Mch o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Mch p=o;        String field =""        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.gravida + "='" + p.gravida        + "', " + dbObj.bdate + "='" + p.bdate        + "', " + dbObj.bresult + "='" + p.bresult        + "', " + dbObj.bplace + "='" + p.bplace        + "', " + dbObj.bhosp + "='" + p.bhosp        + "', " + dbObj.btype + "='" + p.btype        + "', " + dbObj.bdoctor + "='" + p.bdoctor        + "', " + dbObj.lborn + "='" + p.lborn        + "', " + dbObj.sborn + "='" + p.sborn        + "', " + dbObj.presult + "='" + p.presult        + "', " + dbObj.mstandard + "='" + p.mstandard        + "', " + dbObj.update + "='" + p.update        + "', " + dbObj.btime + "='" + p.btime        + "', " + dbObj.abnormalpreg + "='" + p.abnormalpreg        + "', " + dbObj.note + "='" + p.note        + "', " + dbObj.active + "='" + p.active        + "', " + dbObj.user_record + "='" + p.user_record        + "', " + dbObj.user_modify + "='" + p.user_modify        + "', " + dbObj.user_cancel + "='" + p.user_cancel        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(Mch o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Mch selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Mch)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByHN(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.hn        + " = '" + pk + "'"        + " and " + dbObj.active + "= '1'"                + " Order By  " + dbObj.gravida;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        Mch p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Mch();            p.setObjectId(rs.getString(dbObj.pk_field));            p.vn = rs.getString(dbObj.vn);            p.hn = rs.getString(dbObj.hn);            p.gravida = rs.getString(dbObj.gravida);            p.bdate = rs.getString(dbObj.bdate);            p.bresult = rs.getString(dbObj.bresult);            p.bplace = rs.getString(dbObj.bplace);            p.bhosp = rs.getString(dbObj.bhosp);            p.btype = rs.getString(dbObj.btype);            p.bdoctor = rs.getString(dbObj.bdoctor);            p.lborn = rs.getString(dbObj.lborn);            p.sborn = rs.getString(dbObj.sborn);            p.presult = rs.getString(dbObj.presult);            p.mstandard = rs.getString(dbObj.mstandard);            p.update = rs.getString(dbObj.update);            p.btime = rs.getString(dbObj.btime);            p.abnormalpreg = rs.getString(dbObj.abnormalpreg);            p.note = rs.getString(dbObj.note);            p.active = rs.getString(dbObj.active);            p.user_record = rs.getString(dbObj.user_record);            p.user_modify = rs.getString(dbObj.user_modify);            p.user_cancel = rs.getString(dbObj.user_cancel);            list.add(p);        }        rs.close();        return list;    }    }