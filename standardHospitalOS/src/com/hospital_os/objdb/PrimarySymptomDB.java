package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class PrimarySymptomDB{    public ConnectionInf theConnectionInf;    public PrimarySymptom dbObj;    final public String idtable = "276"; /**old 260*/    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public PrimarySymptomDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new PrimarySymptom();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_visit_primary_symptom";        dbObj.pk_field="t_visit_primary_symptom_id";        dbObj.visit_id="t_visit_id";        dbObj.patient_id="t_patient_id";        dbObj.general_symptom="visit_primary_symptom_general_symptom";        dbObj.main_symptom="visit_primary_symptom_main_symptom";        dbObj.current_illness="visit_primary_symptom_current_illness";        dbObj.record_date_time="record_date_time";        dbObj.staff_record="visit_primary_symptom_staff_record";        dbObj.staff_modify="visit_primary_symptom_staff_modify";        dbObj.staff_cancel="visit_primary_symptom_staff_cancel";        dbObj.active="visit_primary_symptom_active";        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(PrimarySymptom o) throws Exception    {        String sql="";        PrimarySymptom p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.general_symptom        + " ,"	+ dbObj.main_symptom        + " ,"	+ dbObj.current_illness        + " ,"	+ dbObj.record_date_time        + " ,"	+ dbObj.staff_record        + " ,"	+ dbObj.staff_modify        + " ,"	+ dbObj.staff_cancel        + " ,"	+ dbObj.active        + " ) values ('"        + p.getObjectId()        + "','" + p.visit_id        + "','" + p.patient_id        + "','" + p.general_symptom        + "','" + p.main_symptom        + "','" + p.current_illness        + "','" + p.record_date_time        + "','" + p.staff_record        + "','" + p.staff_modify        + "','" + p.staff_cancel        + "','" + p.active        + "')";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(PrimarySymptom o) throws Exception    {        String sql="update " + dbObj.table + " set ";        PrimarySymptom p=o;        String field =""        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.general_symptom + "='" + p.general_symptom        + "', " + dbObj.main_symptom + "='" + p.main_symptom        + "', " + dbObj.current_illness + "='" + p.current_illness        + "', " + dbObj.record_date_time + "='" + p.record_date_time        + "', " + dbObj.staff_record + "='" + p.staff_record        + "', " + dbObj.staff_modify + "='" + p.staff_modify        + "', " + dbObj.staff_cancel + "='" + p.staff_cancel        + "', " + dbObj.active + "='" + p.active        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(PrimarySymptom o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.active + " = '1'";        return eQuery(sql);    }        public PrimarySymptom selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (PrimarySymptom)v.get(0);    }        public Vector selectByVisitId(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id        + " = '" + pk + "' and "        + dbObj.active + " = '1' "        + " order by " + dbObj.record_date_time + " desc";        return eQuery(sql);    }        public Vector eQuery(String sql) throws Exception    {        PrimarySymptom p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new PrimarySymptom();            p.setObjectId(rs.getString(dbObj.pk_field));            p.visit_id = rs.getString(dbObj.visit_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.general_symptom = rs.getString(dbObj.general_symptom);            p.main_symptom = rs.getString(dbObj.main_symptom);            p.current_illness = rs.getString(dbObj.current_illness);            p.record_date_time = rs.getString(dbObj.record_date_time);            p.staff_record = rs.getString(dbObj.staff_record);            p.staff_modify = rs.getString(dbObj.staff_modify);            p.staff_cancel = rs.getString(dbObj.staff_cancel);            list.add(p);        }        rs.close();        return list;    }        /**@author amp     *list รายการ vital sign ตาม vn     */    public Vector selectByVn(String vn) throws Exception    {        String sql = "select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + vn + "' and "        + dbObj.active + " = '1' "        + " order by " + dbObj.record_date_time + " desc";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    }