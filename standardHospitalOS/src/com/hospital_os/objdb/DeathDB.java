package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class DeathDB{    public ConnectionInf theConnectionInf;    public Death dbObj;    final private String idtable = "139";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public DeathDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Death();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_death";        dbObj.pk_field="t_death_id";        dbObj.hn   ="death_hn";        dbObj.vn_id   ="t_visit_id";        dbObj.ddeath   ="death_date_time";        dbObj.cdeath_a   ="death_primary_diagnosis";        dbObj.cdeath_b   ="death_comorbidity";        dbObj.cdeath_c   ="death_complication";        dbObj.cdeath_d   ="death_others";        dbObj.odiseae   ="death_external_cause_of_injury";        dbObj.cdeath   ="death_cause";        dbObj.pdeath   ="death_site";        dbObj.nogreg   ="death_pregnant";        dbObj.wpreg   ="death_gravida_week";        dbObj.vn   ="death_vn";        dbObj.patient_id   ="t_patient_id";        dbObj.user_record   ="death_staff_record";        dbObj.active ="death_active";        dbObj.family_id   ="t_health_family_id";        /*        dbObj.table = "death";        dbObj.pk_field = "death_id";        dbObj.hn = "hn";        dbObj.vn = "vn";        dbObj.ddeath = "ddeath";        dbObj.cdeath_a = "cdeath_a";        dbObj.cdeath_b = "cdeath_b";        dbObj.cdeath_c = "cdeath_c";        dbObj.cdeath_d = "cdeath_d";        dbObj.odiseae = "odiseae";        dbObj.cdeath = "cdeath";        dbObj.pdeath = "pdeath";        dbObj.nogreg = "nogreg";        dbObj.wpreg = "wpreg";        dbObj.vn_id = "vn_id";        dbObj.patient_id = "patient_id";        dbObj.user_record = "user_record";        dbObj.active = "active";         */        return true;                    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Death o) throws Exception    {        String sql="";        Death p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.ddeath        + " ,"	+ dbObj.cdeath_a        + " ,"	+ dbObj.cdeath_b        + " ,"	+ dbObj.cdeath_c        + " ,"	+ dbObj.cdeath_d        + " ,"	+ dbObj.odiseae        + " ,"	+ dbObj.cdeath        + " ,"	+ dbObj.pdeath        + " ,"	+ dbObj.nogreg        + " ,"	+ dbObj.wpreg        + " ,"  + dbObj.vn_id        + " ,"  + dbObj.patient_id        + " ,"  + dbObj.user_record        + " ,"  + dbObj.active        + " ,"  + dbObj.family_id        + " ) values ('"        + p.getObjectId()        + "','" + p.hn        + "','" + p.vn        + "','" + p.ddeath        + "','" + p.cdeath_a        + "','" + p.cdeath_b        + "','" + p.cdeath_c        + "','" + p.cdeath_d        + "','" + p.odiseae        + "','" + p.cdeath        + "','" + p.pdeath        + "','" + p.nogreg        + "','" + p.wpreg        + "','" + p.vn_id        + "','" + p.patient_id        + "','" + p.user_record        + "','" + p.active        + "','"  + p.family_id        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }            public int update(Death o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Death p=o;        String field =""        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.ddeath + "='" + p.ddeath        + "', " + dbObj.cdeath_a + "='" + p.cdeath_a        + "', " + dbObj.cdeath_b + "='" + p.cdeath_b        + "', " + dbObj.cdeath_c + "='" + p.cdeath_c        + "', " + dbObj.cdeath_d + "='" + p.cdeath_d        + "', " + dbObj.odiseae + "='" + p.odiseae        + "', " + dbObj.cdeath + "='" + p.cdeath        + "', " + dbObj.pdeath + "='" + p.pdeath        + "', " + dbObj.nogreg + "='" + p.nogreg        + "', " + dbObj.wpreg + "='" + p.wpreg        + "', " + dbObj.vn_id + "='" + p.vn_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.user_record + "='" + p.user_record        + "',  " + dbObj.active + "='" + p.active        + "', " + dbObj.family_id + "='" + p.family_id        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(Death o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Vector selectByHnDate(String hn,String dateFrom ,String dateTo) throws Exception    {        Vector vc = new Vector();        String sql;        if(hn.trim().length() !=0)        {                sql="select "+dbObj.table+".*," +                "t_health_family.patient_name ||'  '|| t_health_family.patient_last_name as family_name" +                " from " +  dbObj.table +                 " left join t_health_family on t_health_family.t_health_family_id = t_death.t_health_family_id " +                         " where (" + dbObj.hn + " like '" + hn + "' " +                        " or t_health_family.patient_name like '" + hn + "') " +                        " and " + dbObj.ddeath + " >= '" + dateFrom + "' " +                        " and " + dbObj.ddeath + " <= '" + dateTo + ",23:59'" +                        " and " + dbObj.active + "  = '1' " +                        " order by family_name ";        }        else        {                sql="select "+dbObj.table+".*," +                "t_health_family.patient_name ||'  '|| t_health_family.patient_last_name as family_name" +                " from " +  dbObj.table +                 " left join t_health_family on t_health_family.t_health_family_id = t_death.t_health_family_id "                + " where " + dbObj.ddeath                + " >= '" + dateFrom + "' and " + dbObj.ddeath                + " <= '" + dateTo + ",23:59' and " + dbObj.active                 + "  = '1'  order by family_name";        }        return eQuery(sql);    }    public Vector selectByHN(String hn) throws Exception    {        String sql="select * from " +  dbObj.table +                 " where " + dbObj.hn + " like '" + hn + "' " +                " and " + dbObj.active + "  = '1' " +                " order by family_name ";        return eQuery(sql);    }    public Death selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Death)v.get(0);    }        public Death selectByVNHN(String vn_id,String patient_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.vn_id        + " = '" + vn_id + "' and " + dbObj.patient_id        + " = '" + patient_id + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Death)v.get(0);    }        public Death selectByPtid(String patient_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + patient_id + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Death)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        Death p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Death();            p.setObjectId(rs.getString(dbObj.pk_field));            p.hn = rs.getString(dbObj.hn);            p.vn = rs.getString(dbObj.vn);            p.ddeath = rs.getString(dbObj.ddeath);            p.cdeath_a = rs.getString(dbObj.cdeath_a);            p.cdeath_b = rs.getString(dbObj.cdeath_b);            p.cdeath_c = rs.getString(dbObj.cdeath_c);            p.cdeath_d = rs.getString(dbObj.cdeath_d);            p.odiseae = rs.getString(dbObj.odiseae);            p.cdeath = rs.getString(dbObj.cdeath);            p.pdeath = rs.getString(dbObj.pdeath);            p.nogreg = rs.getString(dbObj.nogreg);            p.wpreg = rs.getString(dbObj.wpreg);            p.vn_id = rs.getString(dbObj.vn_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.user_record = rs.getString(dbObj.user_record);            p.active = rs.getString(dbObj.active);            p.family_id = rs.getString(dbObj.family_id);            try{                p.family_name = rs.getString("family_name");            }catch(Exception e){                Constant.println(e.getMessage());            }            list.add(p);        }        rs.close();        return list;    }/////////////////////////////////////////////////////////////////////////////        public int updateFidByFid(String family_id,String family_from) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id                + "' where " + dbObj.family_id + "='" + family_from +"'";        return theConnectionInf.eUpdate(sql);    }  /////////////////////////////////////////////////////////////////////////////        public int updateFidByPtid(String family_id,String patient_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.family_id + "='" + family_id                + "' where " + dbObj.patient_id + "='" + patient_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }     /////////////////////////////////////////////////////////////////////////////        public int updatePtidByFid(String patient_id,String family_id) throws Exception    {        String sql="update " + dbObj.table + " set "                 + dbObj.patient_id + "='" + patient_id                + "' where " + dbObj.family_id + "='" + family_id +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }  }