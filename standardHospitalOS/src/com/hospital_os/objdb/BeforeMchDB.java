package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class BeforeMchDB{    public ConnectionInf theConnectionInf;    public BeforeMch dbObj;    final private String idtable = "117";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public BeforeMchDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new BeforeMch();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_health_pregnancy";        dbObj.pk_field="t_health_pregnancy_id";        dbObj.hn   ="health_pregnancy_hn";        dbObj.vn   ="health_pregnancy_vn";        dbObj.gravida   ="health_pregnancy_gravida_number";        dbObj.imp   ="health_pregnancy_menses_issue_date";        dbObj.edc   ="health_pregnancy_menses_expire_date";        dbObj.vdrl_rs   ="health_pregnancy_vdrl";        dbObj.hb_rs   ="health_pregnancy_hb";        dbObj.hiv_rs   ="health_pregnancy_hiv";        dbObj.hct_rs   ="health_pregnancy_hct";        dbObj.date_hct   ="health_pregnancy_hct_date";        dbObj.thalass   ="health_pregnancy_thalassemia";        dbObj.dental   ="health_pregnancy_dental_exam";        dbObj.tcaries   ="health_pregnancy_dental_caries";        dbObj.tartar   ="health_pregnancy_dental_tartar";        dbObj.guminf   ="health_pregnancy_dental_gum";        dbObj.active   ="health_pregnancy_active";        dbObj.user_cancel   ="health_pregnancy_staff_cancel";        dbObj.user_record   ="health_pregnancy_staff_record";        dbObj.user_modify   ="health_pregnancy_staff_modify";        dbObj.visit_id   ="t_visit_id";        dbObj.patient_id   ="t_patient_id";        dbObj.update_time ="record_date_time";                /*        dbObj.table = "before_mch";        dbObj.pk_field = "before_mch_id";        dbObj.hn = "hn";        dbObj.vn = "vn";        dbObj.gravida = "gravida";        dbObj.imp = "imp";        dbObj.edc = "edc";        dbObj.vdrl_rs = "vdrl_rs";        dbObj.hb_rs = "hb_rs";        dbObj.hiv_rs = "hiv_rs";        dbObj.hct_rs = "hct_rs";        dbObj.date_hct = "date_hct";        dbObj.thalass = "thalass";        dbObj.dental = "dental";        dbObj.tcaries = "tcaries";        dbObj.tartar = "tartar";        dbObj.guminf = "guminf";        dbObj.active = "active";        dbObj.user_cancel = "user_cancel";        dbObj.user_record = "user_record";        dbObj.user_modify = "user_modify";        dbObj.patient_id = "patient_id";        dbObj.visit_id = "visit_id";        dbObj.update_time =  "update_time";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(BeforeMch o) throws Exception    {        String sql="";        BeforeMch p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.gravida        + " ,"	+ dbObj.imp        + " ,"	+ dbObj.edc        + " ,"	+ dbObj.vdrl_rs        + " ,"	+ dbObj.hb_rs        + " ,"	+ dbObj.hiv_rs        + " ,"	+ dbObj.hct_rs        + " ,"	+ dbObj.date_hct        + " ,"	+ dbObj.thalass        + " ,"	+ dbObj.dental        + " ,"	+ dbObj.tcaries        + " ,"	+ dbObj.tartar        + " ,"	+ dbObj.guminf        + " ,"	+ dbObj.active        + " ,"	+ dbObj.user_cancel        + " ,"	+ dbObj.user_record        + " ,"	+ dbObj.user_modify        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.update_time        + " ) values ('"        + p.getObjectId()        + "','" + p.hn        + "','" + p.vn        + "','" + p.gravida        + "','" + p.imp        + "','" + p.edc        + "','" + p.vdrl_rs        + "','" + p.hb_rs        + "','" + p.hiv_rs        + "','" + p.hct_rs        + "','" + p.date_hct        + "','" + p.thalass        + "','" + p.dental        + "','" + p.tcaries        + "','" + p.tartar        + "','" + p.guminf        + "','" + p.active        + "','" + p.user_cancel        + "','" + p.user_record        + "','" + p.user_modify        + "','" + p.patient_id        + "','" + p.visit_id        + "','" + p.update_time        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(BeforeMch o) throws Exception    {        String sql="update " + dbObj.table + " set ";        BeforeMch p=o;        String field =""        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.gravida + "='" + p.gravida        + "', " + dbObj.imp + "='" + p.imp        + "', " + dbObj.edc + "='" + p.edc        + "', " + dbObj.vdrl_rs + "='" + p.vdrl_rs        + "', " + dbObj.hb_rs + "='" + p.hb_rs        + "', " + dbObj.hiv_rs + "='" + p.hiv_rs        + "', " + dbObj.hct_rs + "='" + p.hct_rs        + "', " + dbObj.date_hct + "='" + p.date_hct        + "', " + dbObj.thalass + "='" + p.thalass        + "', " + dbObj.dental + "='" + p.dental        + "', " + dbObj.tcaries + "='" + p.tcaries        + "', " + dbObj.tartar + "='" + p.tartar        + "', " + dbObj.guminf + "='" + p.guminf        + "', " + dbObj.active + "='" + p.active        + "', " + dbObj.user_record + "='" + p.user_record        + "', " + dbObj.user_modify + "='" + p.user_modify        + "', " + dbObj.user_cancel + "='" + p.user_cancel        + "', " + dbObj.visit_id + "='" + p.visit_id        + "', " + dbObj.patient_id + "='" + p.patient_id        + "', " + dbObj.update_time + "='" + p.update_time        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(BeforeMch o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public BeforeMch selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (BeforeMch)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectBeforMchByHN(String pk) throws Exception    {    String sql = "select * from " + dbObj.table         + " where " + dbObj.hn + " = '" + pk         + "' and " + dbObj.active + " = '1'"         + " order by " + dbObj.vn;                  Vector v=eQuery(sql);         if(v.size()==0)             return null;         else             return v;    }        public Vector selectBeforMchByPatient_id(String patient_id) throws Exception    {    String sql = "select * from " + dbObj.table         + " where " + dbObj.patient_id + " = '" + patient_id         + "' and " + dbObj.active + " = '1'"         + " order by " + dbObj.vn;                  Vector v=eQuery(sql);         if(v.size()==0)             return null;         else             return v;    }        public Vector selectBeforMchByVisit_id(String visit_id) throws Exception    {    String sql = "select * from " + dbObj.table         + " where " + dbObj.visit_id + " = '" + visit_id         + "' and " + dbObj.active + " = '1'"         + " order by " + dbObj.vn;                  Vector v=eQuery(sql);         if(v.size()==0)             return null;         else             return v;    }        public Vector eQuery(String sql) throws Exception    {        BeforeMch p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new BeforeMch();            p.setObjectId(rs.getString(dbObj.pk_field));            p.hn = rs.getString(dbObj.hn);            p.vn = rs.getString(dbObj.vn);            p.gravida = rs.getString(dbObj.gravida);            p.imp = rs.getString(dbObj.imp);            p.edc = rs.getString(dbObj.edc);            p.vdrl_rs = rs.getString(dbObj.vdrl_rs);            p.hb_rs = rs.getString(dbObj.hb_rs);            p.hiv_rs = rs.getString(dbObj.hiv_rs);            p.hct_rs = rs.getString(dbObj.hct_rs);            p.date_hct = rs.getString(dbObj.date_hct);            p.thalass = rs.getString(dbObj.thalass);            p.dental = rs.getString(dbObj.dental);            p.tcaries = rs.getString(dbObj.tcaries);            p.tartar = rs.getString(dbObj.tartar);            p.guminf = rs.getString(dbObj.guminf);            p.active = rs.getString(dbObj.active);            p.user_cancel = rs.getString(dbObj.user_cancel);            p.user_record = rs.getString(dbObj.user_record);            p.user_modify = rs.getString(dbObj.user_modify);            p.visit_id = rs.getString(dbObj.visit_id);            p.patient_id = rs.getString(dbObj.patient_id);            p.update_time = rs.getString(dbObj.update_time);            list.add(p);        }        rs.close();        return list;    }    }