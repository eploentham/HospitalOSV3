package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class PatientLabreferinDB{    public ConnectionInf theConnectionInf;    public PatientLabreferin dbObj;    final public String idtable = "207";        /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */        public PatientLabreferinDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new PatientLabreferin();        initConfig();    }    public boolean initConfig()    {        dbObj.table="t_lab_refer_in_patient";        dbObj.pk_field="t_lab_refer_in_patient_id";        dbObj.prefix_id   ="f_patient_prefix_id";        dbObj.fname   ="lab_refer_in_patient_first_name";        dbObj.lname   ="lab_refer_in_patient_last_name";        dbObj.pid   ="lab_refer_in_patient_pid";        dbObj.sex   ="f_sex_id";        dbObj.age   ="lab_refer_in_patient_age";        dbObj.hos_referin = "lab_refer_in_patient_hospital_refer";         dbObj.house   ="lab_refer_in_patient_house";        dbObj.village   ="lab_refer_in_patient_moo";        dbObj.road   ="lab_refer_in_patient_road";        dbObj.phone   ="lab_refer_in_patient_phone_number";        dbObj.changwat   ="lab_refer_in_patient_changwat";        dbObj.amphur   ="lab_refer_in_patient_amphur";        dbObj.tambon   ="lab_refer_in_patient_tambon";        dbObj.check_pid = "lab_refer_in_patient_check_pid";        /*        dbObj.table = "patient_labreferin";        dbObj.pk_field ="patient_labreferin_id";        dbObj.prefix_id = "prefix_id";        dbObj.fname = "fname";        dbObj.lname = "lname";        dbObj.pid = "pid";        dbObj.sex = "sex";        dbObj.age = "age";        dbObj.hos_referin = "hos_referin";        dbObj.house = "house";        dbObj.village = "village";        dbObj.road = "road";        dbObj.phone = "phone";        dbObj.changwat = "changwat";        dbObj.amphur = "amphur";        dbObj.tambon = "tambon";        dbObj.check_pid = "check_pid";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(PatientLabreferin o) throws Exception    {        String sql="";        PatientLabreferin p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"  + dbObj.prefix_id        + " ,"  + dbObj.fname        + " ,"	+ dbObj.lname        + " ,"	+ dbObj.pid        + " ,"	+ dbObj.sex        + " ,"	+ dbObj.age        + " ,"  + dbObj.hos_referin        + " ,"	+ dbObj.house        + " ,"	+ dbObj.village        + " ,"	+ dbObj.road        + " ,"	+ dbObj.phone        + " ,"	+ dbObj.changwat        + " ,"	+ dbObj.amphur        + " ,"	+ dbObj.tambon        + " ,"	+ dbObj.check_pid        + " ) values ('"        + p.getObjectId()        + "','" + p.prefix_id        + "','" + p.fname        + "','" + p.lname        + "','" + p.pid        + "','" + p.sex        + "','" + p.age        + "','"  + p.hos_referin        + "','" + p.house        + "','" + p.village        + "','" + p.road        + "','" + p.phone        + "','" + p.changwat        + "','" + p.amphur        + "','" + p.tambon        + "','" + p.check_pid        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(PatientLabreferin o) throws Exception    {        String sql="update " + dbObj.table + " set ";        PatientLabreferin p=o;        String field =""        + "', " + dbObj.prefix_id + "='" + p.prefix_id        + "', " + dbObj.fname + "='" + p.fname        + "', " + dbObj.lname + "='" + p.lname        + "', " + dbObj.pid + "='" + p.pid        + "', " + dbObj.sex + "='" + p.sex        + "', " + dbObj.age + "='" + p.age        + "', " + dbObj.hos_referin + "='" + p.hos_referin        + "', " + dbObj.house + "='" + p.house        + "', " + dbObj.village + "='" + p.village        + "', " + dbObj.road + "='" + p.road        + "', " + dbObj.phone + "='" + p.phone        + "', " + dbObj.changwat + "='" + p.changwat        + "', " + dbObj.amphur + "='" + p.amphur        + "', " + dbObj.tambon + "='" + p.tambon        + "', " + dbObj.check_pid + "='" + p.check_pid        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(PatientLabreferin o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Vector queryPid(String pid) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.pid + " = '" + pid + "'";        return eQuery(sql);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table ;        return eQuery(sql);    }        public Vector queryByFLName(String fname,String lname) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.fname + " like '" + fname + "' and "        + dbObj.lname + " like '" + lname + "' ";                return eQuery(sql);    }        public Vector queryByFName(String fname) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.fname + " like '" + fname + "' ";                return eQuery(sql);    }        public Vector queryBySName(String lname) throws Exception    {        String sql="select * from " + dbObj.table        + " where "        + dbObj.lname + " like '" + lname + "' ";                return eQuery(sql);    }        public PatientLabreferin selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (PatientLabreferin)v.get(0);    }       /*public Vector queryOIRD(String orderItemId) throws Exception   {        String sql="select * from " + dbObj.table            + " where "            + dbObj.order_item_id + " = '" + orderItemId + "'";                return eQuery(sql);   }   public OrderItemReceiveDrug selectByOrderItemId(String orderItemId) throws Exception   {        String sql="select * from " + dbObj.table            + " where " + dbObj.order_item_id            + " = '" + orderItemId + "'";            Vector v=eQuery(sql);                if(v.size()==0)                        return null;                else                        return (OrderItemReceiveDrug)v.get(0);   }   public Vector selectOIRDByVId(String visitId) throws Exception   {        String sql="select * from " + dbObj.table            + " where "            + dbObj.visit_id + " = '" + visitId + "'";                return eQuery(sql);   }*/        public Vector eQuery(String sql) throws Exception    {        PatientLabreferin p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new PatientLabreferin();            p.setObjectId(rs.getString(dbObj.pk_field));            p.prefix_id = rs.getString(dbObj.prefix_id);            p.fname = rs.getString(dbObj.fname);            p.lname = rs.getString(dbObj.lname);            p.pid = rs.getString(dbObj.pid);            p.sex = rs.getString(dbObj.sex);            p.age = rs.getString(dbObj.age);            p.hos_referin = rs.getString(dbObj.hos_referin);            p.house = rs.getString(dbObj.house);            p.village = rs.getString(dbObj.village);            p.road = rs.getString(dbObj.road);            p.phone = rs.getString(dbObj.phone);            p.changwat = rs.getString(dbObj.changwat);            p.amphur = rs.getString(dbObj.amphur);            p.tambon = rs.getString(dbObj.tambon);            p.check_pid = rs.getString(dbObj.check_pid);            list.add(p);        }        rs.close();        return list;    }        }