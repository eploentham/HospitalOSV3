package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/**ไม่ได้ใช้แล้ว จะลบออกแล้ว  Date: 30/08/47  By: tong*/public class OrderResultLabDB{    public ConnectionInf theConnectionInf;    public OrderResultLab dbObj;    final public String idtable = "202";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public OrderResultLabDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new OrderResultLab();        initConfig();    }    public boolean initConfig()    {        dbObj.table = "order_result_lab";        dbObj.pk_field = "order_result_lab_id";        dbObj.order_item = "order_item";        dbObj.hn = "hn";        dbObj.vn = "vn";        dbObj.name = "name";        dbObj.result = "result";        dbObj.unit = "unit";        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(OrderResultLab o) throws Exception    {        String sql="";        OrderResultLab p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.order_item        + " ,"	+ dbObj.hn        + " ,"	+ dbObj.vn        + " ,"	+ dbObj.name        + " ,"	+ dbObj.result        + " ,"	+ dbObj.unit        + " ) values ('"        + p.getObjectId()        + "','" + p.order_item        + "','" + p.hn        + "','" + p.vn        + "','" + p.name        + "','" + p.result        + "','" + p.unit        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(OrderResultLab o) throws Exception    {        String sql="update " + dbObj.table + " set ";        OrderResultLab p=o;        String field =""        + "', " + dbObj.order_item + "='" + p.order_item        + "', " + dbObj.hn + "='" + p.hn        + "', " + dbObj.vn + "='" + p.vn        + "', " + dbObj.name + "='" + p.name        + "', " + dbObj.result + "='" + p.result        + "', " + dbObj.unit + "='" + p.unit        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(OrderResultLab o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public OrderResultLab selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (OrderResultLab)v.get(0);    }        public Vector eQuery(String sql) throws Exception    {        OrderResultLab p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new OrderResultLab();            p.setObjectId(rs.getString(dbObj.pk_field));            p.order_item = rs.getString(dbObj.order_item);            p.hn = rs.getString(dbObj.hn);            p.vn = rs.getString(dbObj.vn);            p.name = rs.getString(dbObj.name);            p.result = rs.getString(dbObj.result);            p.unit = rs.getString(dbObj.unit);            list.add(p);        }        rs.close();        return list;    }    }