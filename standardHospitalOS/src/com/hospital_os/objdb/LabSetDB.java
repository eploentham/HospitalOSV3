package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class LabSetDB{    public ConnectionInf theConnectionInf;    public LabSet dbObj;    final public String idtable = "178";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public LabSetDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new LabSet();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_item_lab_group";        dbObj.pk_field="b_item_lab_group_id";        dbObj.item_id   ="b_item_id";        dbObj.lab_group_id="b_item_lab_set_id";        dbObj.item_name ="item_lab_group_item_name";        return true;    }              public int delete(LabSet o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public int delete(String pk) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + pk +"'";        return theConnectionInf.eUpdate(sql);    }        public int deleteByItemId(String item_id) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.item_id + "='" + item_id +"'";        return theConnectionInf.eUpdate(sql);    }     public LabSet selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabSet)v.get(0);    }        public Vector selectByItemId(String itemId) throws Exception    {   String sql="select * from " + dbObj.table        + " where " + dbObj.item_id        + " = '" + itemId + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectAll() throws Exception    {   String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }         public Vector selectByLabGroupID(String labgroupid) throws Exception    {//        Constant.println("henbe_test selectByLabGroupID");        String sql="select * from " + dbObj.table        + " where " + dbObj.lab_group_id        + " = '" + labgroupid + "'";                return eQuery(sql);    }     public int insert(LabSet p) throws Exception    {        String sql="";        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.item_id        + " ,"	+ dbObj.lab_group_id        + " ,"	+ dbObj.item_name        + " ) values ('"        + p.getObjectId()        + "','" + p.item_id        + "','" + p.lab_group_id        + "','" + p.item_name        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        int i = theConnectionInf.eUpdate(sql);                return i;    }       public int deleteByLgid(String id) throws Exception    {        String sql=" delete from " + dbObj.table + " where "        + dbObj.lab_group_id + "='" + id + "'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(LabSet p) throws Exception    {        String sql="update " + dbObj.table + " set "        + dbObj.item_id + "='" + p.item_id        + "', " + dbObj.lab_group_id + "='" + p.lab_group_id        + "', " + dbObj.item_name + "='" + p.item_name        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }           public Vector eQuery(String sql) throws Exception {        Constant.println("henbe_test LabSetdb");        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next()){            list.add(rs2Object(rs));        }        rs.close();        return list;    }    public LabSet rs2Object(ResultSet rs)throws Exception {            LabSet p = new LabSet();            p.setObjectId(rs.getString(dbObj.pk_field));            p.item_id = rs.getString(dbObj.item_id);            p.item_name = rs.getString(dbObj.item_name);            p.lab_group_id = rs.getString(dbObj.lab_group_id);            return p;    }    }