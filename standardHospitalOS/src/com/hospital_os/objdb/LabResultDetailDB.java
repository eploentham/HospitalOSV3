package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.LabResultDetail;import com.hospital_os.object.LabResultGroup;import java.util.*;import java.sql.*;  public class LabResultDetailDB{    public ConnectionInf theConnectionInf;    public LabResultDetail dbObj;    final private String idtable = "902";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public LabResultDetailDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new LabResultDetail();        initConfig();    }    public LabResultDetailDB()    {        theConnectionInf= null;        dbObj = new LabResultDetail();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_lab_result_detial";        dbObj.pk_field="b_lab_result_detail_id";         dbObj.result_detail_id = "b_lab_result_detail_id";        dbObj.result_id = "b_lab_result_id";         dbObj.value = "b_lab_result_value";        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(LabResultDetail o) throws Exception    {        String sql="";        LabResultDetail p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.result_id        + " ,"	+ dbObj.value        + " ) values ('"        + p.getObjectId()        + "','" + p.result_id        + "','" + p.value        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int update(LabResultDetail o) throws Exception    {        String sql="update " + dbObj.table + " set ";        LabResultDetail p=o;        String field =""        + "', " + dbObj.result_detail_id + "='" + p.getObjectId()        + "', " + dbObj.result_id + "='" + p.result_id        + "', " + dbObj.value + "='" + p.value        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(LabResultDetail o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    public int delete(LabResultGroup o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.result_id + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    public Vector selectByResulteCode(String str) throws Exception    {   Vector vc = new Vector();        String sql ="select * from " + dbObj.table                     + " where "+ dbObj.result_id                      +" = '" + str +"'";        vc = eQuery(sql);        if(vc.size()==0)            return null;        else            return vc;    }    public LabResultDetail selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabResultDetail)v.get(0);    }        public LabResultDetail selectByResultevalue(String str) throws Exception    {           Vector vc = new Vector();         String sql ="select * from " + dbObj.table                     + " where "+ dbObj.value                      +" = '" + str +"'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabResultDetail)v.get(0);    }        public LabResultDetail selectByResultGid(String str,String gid) throws Exception    {            String sql ="select * from " + dbObj.table                 + " where "+ dbObj.value  +" = '" + str +"'"                 + " and " + dbObj.result_id + " = '"+ gid +"'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (LabResultDetail)v.get(0);    }        public Vector selectAll() throws Exception    {   Vector vc = new Vector();        String sql ="select * from " + dbObj.table ;        vc = veQuery(sql);        if(vc.size()==0)            return null;        else            return vc;    }        public Vector selectCByResulteCode(String str) throws Exception    {   Vector vc = new Vector();         String sql ="select * from " + dbObj.table                     + " where "+ dbObj.result_id                      +" = '" + str +"'";        return  veQuery(sql);    }    /**     *@deprecated henbe unused     *     */        public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.value);            list.add(p);        }        rs.close();        return list;    }        public Vector eQuery(String sql) throws Exception    {        LabResultDetail p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new LabResultDetail();            p.setObjectId(rs.getString(dbObj.pk_field));            p.result_id = rs.getString(dbObj.result_id);            p.value = rs.getString(dbObj.value);            list.add(p);        }        rs.close();        return list;    }    }