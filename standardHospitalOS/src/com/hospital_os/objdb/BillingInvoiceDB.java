/* * BillingInvoiceDB.java * * Created on 10 มิถุนายน 2547, 16:48 น. */package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;/** * * @author  tong */public class BillingInvoiceDB{        /** Creates a new instance of BillingInvoiceDB */    public ConnectionInf theConnectionInf;    public BillingInvoice dbObj;    final private String idtable = "122";    public BillingInvoiceDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new BillingInvoice();        initConfig();    }    public boolean initConfig()    {                dbObj.table="t_billing_invoice";        dbObj.pk_field="t_billing_invoice_id";        dbObj.patient_id   ="t_patient_id";        dbObj.visit_id   ="t_visit_id";        dbObj.invoice_no   ="billing_invoice_number";        dbObj.invoice_date   ="t_billing_invoice_date_time";        dbObj.payer_share   ="billing_invoice_payer_share";        dbObj.patient_share   ="billing_invoice_patient_share";        dbObj.payer_share_ceil   ="billing_invoice_payer_share_ceil";        dbObj.patient_share_ceil   ="billing_invoice_patient_share_ceil";        dbObj.total   ="billing_invoice_total";        dbObj.deposit   ="billing_invoice_deposit";        dbObj.payment_id   ="t_payment_id";        dbObj.active   ="billing_invoice_active";        dbObj.billing_invoice_no   ="billing_invoice_quantity";        dbObj.billing_id   ="t_billing_id";        dbObj.billing_complete ="billing_invoice_complete";        dbObj.staff_billing_invoice = "billing_invoice_staff_record";               return true;    }    public static void updateField(BillingInvoice obj)    {        obj.payer_share = Constant.getSDouble(obj.payer_share);        obj.patient_share = Constant.getSDouble(obj.patient_share);        obj.total = Constant.getSDouble(obj.total);    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(BillingInvoice p) throws Exception    {        updateField(p);        p.generateOID(idtable);        String sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.patient_id        + " ,"	+ dbObj.visit_id        + " ,"	+ dbObj.invoice_no        + " ,"	+ dbObj.invoice_date        + " ,"	+ dbObj.payer_share        + " ,"	+ dbObj.patient_share        + " ,"	+ dbObj.payer_share_ceil        + " ,"	+ dbObj.patient_share_ceil        + " ,"	+ dbObj.total        + " ,"	+ dbObj.deposit        + " ,"	+ dbObj.payment_id        + " ,"	+ dbObj.active        + " ,"	+ dbObj.billing_invoice_no        + " ,"	+ dbObj.billing_id        + " ,"	+ dbObj.staff_billing_invoice        + " ,"	+ dbObj.billing_complete        + " ) values ('"        + p.getObjectId()        + "','" + p.patient_id        + "','" + p.visit_id        + "','" + p.invoice_no        + "','" +  p.invoice_date        + "'," +  p.payer_share        //ดูดีดีนะว่ามันเป็น double  by  henbe        + "," +  p.patient_share        //ดูดีดีนะว่ามันเป็น double  by  henbe        + ",'" +  p.payer_share_ceil        + "','" +  p.patient_share_ceil        + "'," +  p.total        //ดูดีดีนะว่ามันเป็น double  by  henbe        + ",'" +  p.deposit        + "','" +  p.payment_id        + "','" + p.active        + "','" + p.billing_invoice_no        + "','" + p.billing_id        + "','" + p.staff_billing_invoice        + "','" + p.billing_complete        + "')";                sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(BillingInvoice p) throws Exception    {        updateField(p);        String sql="update " + dbObj.table + " set ";        String field =""        + "', " +  dbObj.patient_id + "='" + p.patient_id        + "', " +  dbObj.visit_id + "='" + p.visit_id        + "', " +  dbObj.invoice_no + "='" + p.invoice_no        + "', " +  dbObj.invoice_date + "='" + p.invoice_date        + "', " +  dbObj.payer_share + "=" + p.payer_share        //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " +  dbObj.patient_share + "=" + p.patient_share        //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " +  dbObj.payer_share_ceil + "='" + p.payer_share_ceil        + "', " +  dbObj.patient_share_ceil + "='" + p.patient_share_ceil        + "', " +  dbObj.total + "=" + p.total        //ดูดีดีนะว่ามันเป็น double  by  henbe        + ", " +  dbObj.deposit + "='" + p.deposit        + "', " +  dbObj.payment_id + "='" + p.payment_id        + "', " +  dbObj.active + "='" + p.active        + "', " +  dbObj.billing_invoice_no + "='" + p.billing_invoice_no        + "', " +  dbObj.billing_id + "='" + p.billing_id        + "', " +  dbObj.staff_billing_invoice + "='" + p.staff_billing_invoice        + "', " +  dbObj. billing_complete + "='" + p.billing_complete        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";                sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(BillingInvoice o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public BillingInvoice selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'" ;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (BillingInvoice)v.get(0);    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByPatientId(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.patient_id        + " = '" + pk + "' and " + dbObj.active + " = '1' order by " + dbObj.invoice_date  + " desc"  ;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByVisitId(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id        + " = '" + pk + "' and " + dbObj.active + " = '1' order by " + dbObj.invoice_date + " desc" ;                  /*amp: เพราะมันเป็น string เมื่อ หลักไม่เท่ากัน มันจะ orderby ไม่ถูก dbObj.billing_invoice_no*/         return eQuery(sql);    }    public Vector listBillingInvoiceByVisitIdBillingID(String visit_id,String billing_id) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + visit_id + "'"        + " and " + dbObj.billing_id + " = '" +  billing_id + "'"        + " order by " + dbObj.billing_invoice_no + " desc" ;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByVisitIdBillingIDNULL(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.visit_id + " = '" + pk        + "' and " + dbObj.active + " = '1' "        + " and " + dbObj.billing_id + " = '' "        + " order by " + dbObj.billing_invoice_no + " desc" ;                  Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    //หาใบแจ้งหนี้ที่ยังไม่ได้คำนวนค่าใช้จ่ายที คือที่ยังไม่เรียบร้อย    public int countBillingInvoiceNotCompleteByVisitID(String visit_id) throws Exception    {        String sql ="select count("+ dbObj.billing_complete +") from " + dbObj.table + " " +        " where " + dbObj.visit_id + "= '"+ visit_id + "'" +        " and " + dbObj.active + "='" + Active.isEnable()+ "'" +        " and " + dbObj.billing_complete + "= '" +Active.isDisable() + "'";                ResultSet rs = theConnectionInf.eQuery(sql);                int i =0;        while(rs.next())        {            i = rs.getInt(1);        }        sql = null;        rs.close();        rs = null;        return i;    }        public Vector eQuery(String sql) throws Exception    {        BillingInvoice p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new BillingInvoice();            p.setObjectId(rs.getString(dbObj.pk_field));            p.patient_id = rs.getString(dbObj.patient_id);            p.visit_id = rs.getString(dbObj.visit_id);            p.invoice_no = rs.getString(dbObj.invoice_no);            p.invoice_date = rs.getString(dbObj.invoice_date);            p.payer_share= rs.getString(dbObj.payer_share);            p.patient_share= rs.getString(dbObj.patient_share);            p.payer_share_ceil = rs.getString(dbObj.payer_share_ceil);            p.patient_share_ceil = rs.getString(dbObj.patient_share_ceil);            p.total = rs.getString(dbObj.total);            p.deposit = rs.getString(dbObj.deposit);            p.payment_id = rs.getString(dbObj.payment_id);            p.active = rs.getString(dbObj.active);            p.billing_invoice_no = rs.getString(dbObj.billing_invoice_no);            p.staff_billing_invoice = rs.getString(dbObj.staff_billing_invoice);            p.billing_id = rs.getString(dbObj.billing_id);            p.billing_complete = rs.getString(dbObj.billing_complete);            list.add(p);        }        rs.close();        return list;    }        /*build 7*/    public void checkField()throws Exception    {    String sql = "";         try         {             sql = "SELECT " + dbObj.staff_billing_invoice + " from " + dbObj.table;             this.theConnectionInf.getConnection().createStatement().executeQuery(sql);         }         catch(Exception ex)         {             sql = "Alter table " + dbObj.table + " ADD " + dbObj.staff_billing_invoice + " varchar (255)";             this.theConnectionInf.eUpdate(sql);                      }             }    }