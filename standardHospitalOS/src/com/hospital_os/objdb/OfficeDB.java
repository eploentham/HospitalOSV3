package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class OfficeDB{    public ConnectionInf theConnectionInf;    public Office dbObj;    final public String idtable = "190";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public OfficeDB(ConnectionInf db)    {        theConnectionInf = db;        dbObj = new Office();        initConfig();    }        public OfficeDB()    {        theConnectionInf = null;        dbObj = new Office();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_visit_office";        dbObj.pk_field="b_visit_office_id";        dbObj.name   ="visit_office_name";        dbObj.off_name1   ="visit_office_name1";        dbObj.off_name2   ="visit_office_name2";        dbObj.minis   ="visit_office_minis";        dbObj.dep   ="visit_office_dep";        dbObj.off_type   ="visit_office_type";        dbObj.specific   ="visit_office_specific";        dbObj.bed   ="visit_office_bed";        dbObj.changwat   ="visit_office_changwat";        dbObj.ampur   ="visit_office_amphur";        dbObj.tambon   ="visit_office_tambon";        dbObj.moo ="visit_office_moo";        /*        this.dbObj.table = "office";        this.dbObj.pk_field = "off_id";        this.dbObj.name = "name";        this.dbObj.off_name1 = "off_name1";        this.dbObj.off_name2 = "off_name2";        this.dbObj.minis = "minis";        this.dbObj.dep = "dep";        this.dbObj.off_type = "off_type";        this.dbObj.specific = "specific";        this.dbObj.bed = "bed";        this.dbObj.changwat = "changwat";        this.dbObj.ampur = "ampur";        this.dbObj.tambon = "tambon";        this.dbObj.moo = "moo";         */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Office o) throws Exception    {        String sql="";        Office p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field  + " ,"        + dbObj.name + " ,"        + dbObj.off_name1 + " ,"        + dbObj.off_name2 + " ,"        + dbObj.minis + " ,"        + dbObj.dep + " ,"        + dbObj.off_type + " ,"        + dbObj.specific + " ,"        + dbObj.bed + " ,"        + dbObj.changwat + " ,"        + dbObj.ampur + " ,"        + dbObj.tambon + " ,"        + dbObj.moo                + " ) values ('"        + p.pk_field + "','"        + p.name + "','"        + p.off_name1  + "','"        + p.off_name2 + "','"        + p.minis  + "','"        + p.dep  + "','"        + p.off_type + "','"        + p.specific  + "','"        + p.bed  + "','"        + p.changwat  + "','"        + p.ampur  + "','"        + p.tambon   + "','"        + p.moo  + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(Office o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Office p=o;        String field ="  " + dbObj.name + "='" + p.name + "',"        + dbObj.off_name1 + "='" + p.off_name1 + "',"        + dbObj.off_name2 + "='" + p.off_name2 + "',"        + dbObj.minis + "='" + p.minis + "',"        + dbObj.dep + "='" + p.dep + "',"        + dbObj.off_type + "='" + p.off_type + "',"        + dbObj.specific + "='" + p.specific + "',"        + dbObj.bed + "='" + p.bed + "',"        + dbObj.changwat + "='" + p.changwat + "',"        + dbObj.ampur + "='" + p.ampur + "',"        + dbObj.tambon + "='" + p.tambon + "',"        + dbObj.moo  + "='" + p.moo        + "' where " + dbObj.pk_field + "='" + p.pk_field +"'";                sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());                return theConnectionInf.eUpdate(sql);    }        public int delete(Office o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";                return theConnectionInf.eUpdate(sql);    }        public Office selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Office)v.get(0);    }        public Vector selectByName(String pk) throws Exception    {        String sql="select * from " + dbObj.table                + " where " + dbObj.name + " like '%" + pk + "%'"                + " or  " + dbObj.pk_field + " like '%" + pk + "%'"                 + " or  " + dbObj.off_name1 + " like '%" + pk + "%'" ;        return eQuery(sql);    }        public Vector selectAllV() throws Exception    {        String sql="select * from " + dbObj.table;                Vector v=veQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectByCA(String ch,String amp) throws Exception    {        String sql="select * from " + dbObj.table + " where "        + dbObj.ampur + " = '" + amp + "' and "        + dbObj.changwat + " = '" + ch + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }        public Vector eQuery(String sql) throws Exception    {        Office p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Office();            p.setObjectId(rs.getString(dbObj.pk_field));            p.name = rs.getString(dbObj.name);            p.off_name1 = rs.getString(dbObj.off_name1);            p.off_name2 = rs.getString(dbObj.off_name2);            p.minis =rs.getString(dbObj.minis);            p.dep = rs.getString(dbObj.dep);            p.off_type = rs.getString(dbObj.off_type);            p.specific = rs.getString(dbObj.specific);            p.bed = rs.getString(dbObj.bed);            p.changwat = rs.getString(dbObj.changwat);            p.ampur = rs.getString(dbObj.ampur);            p.tambon = rs.getString(dbObj.tambon);            p.moo = rs.getString(dbObj.moo);            list.add(p);        }        rs.close();        return list;    }        /**     *@deprecated henbe unused     *     */    public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        int i=0;        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.name);            list.add(p);            i++;            if(i>100) break;        }        rs.close();        return list;    }    }