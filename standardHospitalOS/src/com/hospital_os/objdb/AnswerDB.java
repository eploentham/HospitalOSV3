package com.hospital_os.objdb;import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.hospital_os.object.*;import java.util.*;import java.sql.*;public class AnswerDB{    public ConnectionInf theConnectionInf;    public Answer dbObj;    final private String idtable = "109";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public AnswerDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new Answer();        initConfig();    }    public boolean initConfig()    {        dbObj.table="f_answer";        dbObj.pk_field="f_answer_id";        dbObj.description ="answer_description";        dbObj.description_a="answer_description_a";        dbObj.description_b="answer_description_b";        dbObj.description_c ="answer_description_c";        dbObj.description_c ="answer_description_c";        dbObj.description_d ="answer_description_d";        dbObj.description_e ="answer_description_e";       /*        dbObj.table = "answer";        dbObj.pk_field = "answer_id";        dbObj.description = "description";        dbObj.description_a = "description_a";        dbObj.description_b = "description_b";        dbObj.description_c = "description_c";        */        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(Answer o) throws Exception    {        String sql="";        Answer p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.description        + " ) values ('"        + p.getObjectId()        + "','" + p.description        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(Answer o) throws Exception    {        String sql="update " + dbObj.table + " set ";        Answer p=o;        String field =""        + "', " + dbObj.description + "='" + p.description        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(Answer o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public Answer selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (Answer)v.get(0);    }        public Vector selectAll(int choose) throws Exception    {   Vector vc = new Vector();        String sql ="select * from " + dbObj.table + " order by "+        dbObj.description;                vc = veQuery(sql,choose);                if(vc.size()==0)            return null;        else            return vc;    }                public Vector veQuery(String sql,int ch) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            if(ch == 1)                p.name = rs.getString(dbObj.description);            if(ch == 2)                p.name = rs.getString(dbObj.description_a);            if(ch == 3)                p.name = rs.getString(dbObj.description_b);            if(ch == 4)                p.name = rs.getString(dbObj.description_c);            if(ch == 5)                p.name = rs.getString(dbObj.description_d);            if(ch == 6)                p.name = rs.getString(dbObj.description_e);            list.add(p);        }        rs.close();        return list;    }        public Vector eQuery(String sql) throws Exception    {        Answer p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new Answer();            p.setObjectId(rs.getString(dbObj.pk_field));            p.description = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }    }
