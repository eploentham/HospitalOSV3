/* * EpiSetGroupDB.java * * Created on 24 มิถุนายน 2548, 16:36 น. */package com.pcu.objdb.objdbclass;import java.util.*;import java.sql.*;import com.hospital_os.usecase.connection.*;import com.pcu.object.*;import com.hospital_os.utility.*;/** * * @author Administrator */public class EpiSetGroupDB {    /** Creates a new instance of EpiSetGroupDB */    public EpiSetGroupDB() {    }    public ConnectionInf theConnectionInf;    public EpiSetGroup dbObj;    final public String idtable = "740";//"145";    /**     * @param ConnectionInf db     * @roseuid 3F65897F0326     */    public EpiSetGroupDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new EpiSetGroup();        initConfig();    }    public boolean initConfig()    {        dbObj.table="b_health_epi_group";        dbObj.pk_field="b_health_epi_group_id";        dbObj.other_description = "health_epi_group_description_particular";        dbObj.description ="health_epi_group_description";        dbObj.active = "active";        return true;    }    /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(EpiSetGroup o) throws Exception    {        String sql="";        EpiSetGroup p=o;        p.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.description        + " ,"	+ dbObj.other_description        + " ,"	+ dbObj.active        + " ) values ('"        + p.getObjectId()        + "','" + p.description        + "','" + p.other_description        + "','" + p.active        + "')";        return theConnectionInf.eUpdate(sql);    }    public int update(EpiSetGroup o) throws Exception    {        String sql="update " + dbObj.table + " set ";        EpiSetGroup p=o;        String field =""        + "', " + dbObj.description + "='" + p.description        + "', " + dbObj.other_description + "='" + p.other_description        + "', " + dbObj.active + "='" + p.active        + "' where " + dbObj.pk_field + "='" + p.getObjectId() +"'";        sql = sql+field.substring(2);        return theConnectionInf.eUpdate(sql);    }    //////////////////////////////////////////////////////////////////////////////    public int delete(EpiSetGroup o) throws Exception    {        String sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }    //////////////////////////////////////////////////////////////////////////////    public EpiSetGroup selectByPK(String pk) throws Exception    {        String sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return (EpiSetGroup)v.get(0);    }    ////////////////////////////////////////////////////////////////////////////////////////    /** ใช้ในการค้าหารายการ ชุดสั่งตรวจรักษา โดยการค้าหาตาม ชื่อชุดสั่งตรวจรักษา หรือ เจ้าของ        โดย choose เป็น True ค้นหาตามIDของชื่อเจ้าของ     *             เป็น false ค้นหาตาม ชุดสั่งตรวจรักษา หรือ ค้นหาตามชื่อ     */    public Vector SelectBySearch(String search)    {        Vector vc = new Vector();        String sql = "SELECT * FROM " + dbObj.table        + " WHERE " ;        sql = sql + " or " + dbObj.description + " like  '%" + search + "%' ";//        sql = sql + " and " + dbObj.active + " = '1' ";        try        {            vc = this.eQuery(sql);            if(vc.size()==0)                vc = null;        }        catch(Exception ex)        {   vc = null;        }        return vc;    }    //////////////////////////////////////////////////////////////////////////////    public Vector selectAll() throws Exception    {        String sql="select * from " + dbObj.table;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    ////////////////////////////////////////////////////////////////////////////    public Vector selectAll(String active) throws Exception    {        String sql="select * from " + dbObj.table;        //if(!active.equals(""))            sql = sql + " where " + dbObj.active + " = '" + active + "' ";        sql = sql + " order by " + dbObj.other_description ;        Vector v=eQuery(sql);        if(v.size()==0)            return null;        else            return v;    }    public Vector selectByName(String search) throws Exception    {        String sql="select * from " + dbObj.table                + " where " + dbObj.description + " ilike  '%" + search + "%' " ;//                + " and " + dbObj.active + " = '1' ";               sql = sql + " order by " + dbObj.other_description ;        return eQuery(sql);    }    /////////////////////////////////////////////////////////////////////////////    public Vector selectByCodeName(String search,String active) throws Exception    {        String sql="select * from " + dbObj.table                + " where (" + dbObj.description + " ilike  '%" + search + "%' "                + " or " + dbObj.other_description + " ilike  '%" + search + "%') ";//        if(!active.equals(""))            sql = sql + " and " + dbObj.active + " = '" + active + "' ";        sql = sql + " order by " + dbObj.other_description ;        return eQuery(sql);    }    /////////////////////////////////////////////////////////////////////////////    public Vector SelectTTByBeforeMch(String search)    {        Vector vc = new Vector();        String sql = "SELECT * FROM " + dbObj.table        + " WHERE " + dbObj.description + " like  '%" + search + "%' ";//        + " and " + dbObj.active + " = '1' ";        try        {            vc = this.veQuery(sql);            if(vc.size()==0)                vc = null;        }        catch(Exception ex)        {   vc = null;        }        return vc;    }    //////////////////////////////////////////////////////////////////////////////    public Vector eQuery(String sql) throws Exception    {        EpiSetGroup p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new EpiSetGroup();            p.setObjectId(rs.getString(dbObj.pk_field));            p.other_description = rs.getString(dbObj.other_description);            p.description = rs.getString(dbObj.description);            p.active =  rs.getString(dbObj.active);            list.add(p);        }        rs.close();        return list;    }    //////////////////////////////////////////////////////////////////////////////    public Vector veQuery(String sql) throws Exception    {        ComboFix p;        Vector list = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            p = new ComboFix();            p.code = rs.getString(dbObj.pk_field);            p.name = rs.getString(dbObj.description);            p.name = rs.getString(dbObj.description);            list.add(p);        }        rs.close();        return list;    }    //////////////////////////////////////////////////////////////////////////////}