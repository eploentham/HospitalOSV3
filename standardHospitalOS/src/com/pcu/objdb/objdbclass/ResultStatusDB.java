package com.pcu.objdb.objdbclass;import java.util.*;import java.sql.*; import com.hospital_os.usecase.connection.*;import com.hospital_os.utility.*;import com.pcu.object.ResultStatus;public class ResultStatusDB{    public ConnectionInf theConnectionInf;    public ResultStatus dbObj, ObjectResultStatus;    final public String idtable = "231";        private String sql;    private ComboFix theComboFix;    private Vector vc;    public ResultStatusDB(ConnectionInf db)    {        theConnectionInf=db;        dbObj = new ResultStatus();        initConfig();    }    public boolean initConfig()    {        dbObj.table="f_health_postpartum_status_result";        dbObj.pk_field="f_health_postpartum_status_result_id";        dbObj.description="health_postpartum_status_result_description";        /*        dbObj.table = "result_status";        dbObj.pk_field = "result_status_id";        dbObj.description = "description";         */        return true;    }            /**     * @param cmd     * @param o     * @return int     * @roseuid 3F6574DE0394     */    public int insert(ResultStatus o) throws Exception    {        sql="";           o.generateOID(idtable);        sql="insert into " + dbObj.table + " ("        + dbObj.pk_field        + " ,"	+ dbObj.description        + " ) values ('"        + o.getObjectId()        + "','" + o.description        + "')";        sql = Gutil.convertSQLToMySQL(sql,theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }    public int update(ResultStatus o) throws Exception    {        sql="update " + dbObj.table + " set ";             String field =""        + "', " + dbObj.description + "='" + o.description        + "' where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        sql = Gutil.convertSQLToMySQL(sql+field.substring(2),theConnectionInf.gettypeDatabase());        return theConnectionInf.eUpdate(sql);    }        public int delete(ResultStatus o) throws Exception    {        sql="delete from " + dbObj.table        + " where " + dbObj.pk_field + "='" + o.getObjectId() +"'";        return theConnectionInf.eUpdate(sql);    }        public ResultStatus selectByPK(String pk) throws Exception    {        sql="select * from " + dbObj.table        + " where " + dbObj.pk_field        + " = '" + pk + "'";                vc=eQuery(sql);        if(vc.size()==0)            return null;        else            return (ResultStatus)vc.get(0);    }        public Vector selectAll() throws Exception    {           sql ="select * from " + dbObj.table + " order by "+        dbObj.pk_field;        vc = veQuery(sql);        if(vc.size()==0)            return null;        else            return vc;            }                public Vector veQuery(String sql) throws Exception    {                vc = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            theComboFix = new ComboFix();            theComboFix.code = rs.getString(dbObj.pk_field);            theComboFix.name = rs.getString(dbObj.description);            vc.add(theComboFix);        }        rs.close();        return vc;    }            public Vector eQuery(String sql) throws Exception    {                vc = new Vector();        ResultSet rs = theConnectionInf.eQuery(sql);        while(rs.next())        {            ObjectResultStatus = new ResultStatus();            ObjectResultStatus.setObjectId(rs.getString(dbObj.pk_field));            ObjectResultStatus.description = rs.getString(dbObj.description);            vc.add(ObjectResultStatus);        }        rs.close();        return vc;    }    }