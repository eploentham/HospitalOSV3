/*
 * PanelPregnanceANCPCU.java
 *
 * Created on 13 มีนาคม 2549, 15:33 น.
 */

package com.generalpcu.gui.panel;
import com.generalpcu.control.ManageControlSubject;
import com.generalpcu.usecase.AllPanelSubject;
import com.generalpcu.usecase.GUISubject;
import com.generalpcu.control.ComboBoxControl;
import com.generalpcu.control.GeneralPCUControl;
import com.generalpcu.usecase.AllPanelResp;
import com.generalpcu.usecase.GUIResp;
import com.generalpcu.usecase.CardNameControl;
import com.generalpcu.utility.ComboboxModel;
import com.generalpcu.utility.Constant;
import com.generalpcu.utility.Report;
import com.generalpcu.gui.panel.DialogShowStatus;
import com.generalpcu.utility.Language;
import com.generalpcu.utility.TableModelGUI;
import javax.swing.table.DefaultTableCellRenderer;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author  pu
 */
public class PanelPregnanceANCPCU extends javax.swing.JPanel implements 
AllPanelResp,GUIResp,CardNameControl,Runnable
{
    ManageControlSubject theMCS;
    DialogShowStatus theDialogShowStatus;
    ComboboxModel theComboboxModel;
    DefaultTableCellRenderer rendererCenter;
    DefaultTableCellRenderer rendererRight;
    TableModelGUI theTableModelGUI;
    Vector vVillage;
    Vector vcData;
    private String cardName;
    private String startDate;
    private String endDate;
    private String[] headColumn ;
    private Vector vcDataQuery;
    private String village;
    Thread theThread;
    private boolean isDbBackup;
    
    /**
     * Creates new form PanelPregnanceANCPCU 
     */
    public PanelPregnanceANCPCU(ManageControlSubject mcs)
    {
        theMCS = mcs;
        theMCS.theManageSubject.theGUISubject.registerGUIManage(this);
        theMCS.theManageSubject.theAllPanelSubject.registerAllPanelManage(this);
        initComponents();
        cardName = ((Report)Constant.Report.get("5")).ENG_NAME;
        theDialogShowStatus = new DialogShowStatus(theMCS.theUS.getJFrame(),false,theMCS);
        theComboboxModel = new ComboboxModel();
        setLanguage();
        initComboBoxVillage();
    }
    
    
    private void initComboBoxVillage()
    {
        this.vVillage = this.theMCS.theManageControl.theComboBoxControl.listVillage();
        theComboboxModel.initComboBox(this.jComboBoxVillage, this.vVillage);
        theComboboxModel.setCodeComboBox(this.jComboBoxVillage, "0");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabelDescription = new javax.swing.JLabel();
        jLabelVillage = new javax.swing.JLabel();
        jComboBoxVillage = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        fixedColumnScrollPane1 = new com.hospital_os.utility.FixedColumnScrollPane();
        jTablePregnance = new javax.swing.JTable();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelDescription.setFont(new java.awt.Font("Dialog", 1, 12));
        jLabelDescription.setText("Description");
        jPanel1.add(jLabelDescription, new java.awt.GridBagConstraints());

        jLabelVillage.setText("Village");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel1.add(jLabelVillage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jComboBoxVillage, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 3);
        add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jTablePregnance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTablePregnance.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fixedColumnScrollPane1.setViewportView(jTablePregnance);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(fixedColumnScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 6, 0, 3);
        add(jPanel2, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    /**
     *  ใช้ในการรับข้อมูลจาก การค้นหา และส่งค่าเข้ามา panel นี้
     *  เพื่อให้ทำการ Query และค้นหารายการตามข้อกำหนดของ panel
     *  @param startDate เป็น String เป็นวันที่เริ่มต้น อยู่ในรูปแบบ yyyy-mm-dd
     *  @param endDate เป็น String เป็นวันที่สิ้นสุด อยู่ในรูปแบบ yyyy-mm-dd
     **/
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        isDbBackup = dbBackup;
        startQuery();
    }
    private void startQuery()
    {
        theThread = new Thread(this);
        theThread.start();
    }
    
    /**
     *ให้ค่าที่ได้จากการดึงข้อมูล
     *@return Vector ของข้อมูลที่ได้จากการดึงรายงาน
     *@Author pu
     *@Date 13/03/2006
     */
    public Vector getPregnancePCU()
    {
        return this.vcData;
    }
    public String getCardName()
    {
        return this.cardName;
    }
    
    public void notifySetInitAllGUI()
    {
        clearDataGUI();
    }
    
    public void notifyStopProcess()
    {
        try
        {
            if(theThread != null)
            {
                theThread.stop();
            }
            theThread = null;
            System.out.println("In stop in PanelPregnancePCU");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    public void run()
    {
        this.village = this.theComboboxModel.getCodeComboBox(jComboBoxVillage);
        queryPregnanceANCByDate();        
    }
    
    /**
     *ค้นหาข้อมูลรายงานจำนวนผู้ป่วยโรคไม่ติดต่อ ตามวันที่เริ่มต้น และสิ้นสุด
     *@Author pu
     *@Date 23/02/2006
     */
    private void queryPregnanceANCByDate()
    {
        if(this.theMCS.theManageControl.theGeneralPCUControl.setDateForQuery(this.startDate, this.endDate))
        {
            theDialogShowStatus.setVisible(true);
            theDialogShowStatus.showDialog(Language.getTextBundle("PleaseWait"),false);
            
            this.vcData = this.theMCS.theManageControl.theGeneralPCUControl.queryPregnanceANC(this.village, isDbBackup);
            headColumn = new String[] {""};
            vcDataQuery = null;
            if(vcData != null)
            {
                headColumn = (String[])vcData.get(0);
                vcDataQuery = (Vector)vcData.get(1);
            }
            
            showDataInTable(headColumn, vcDataQuery);
            theDialogShowStatus.setVisible(false);
        }
        else
            showMessageStartYearOver();
    }
    /**ใช้ในการ Clear ข้อมูลที่อยู่บนตาราง*/
    private void clearDataGUI()
    {
        vcData = null;
        showDataInTable(null,null);
        System.out.println("Clear Data in GUI");
    }
    /**แสดงข้อความ วันที่เริ่ม และวันที่สิ้นสุด ต้อง มีปี เดียวกัน*/
    private void showMessageStartYearOver()
    {
        JOptionPane.showMessageDialog(this, Language.getTextBundle("StartYearNotSameEndYear"),Language.getTextBundle("Warning"),JOptionPane.OK_OPTION);
    }
    private void showDataInTable(String[] columnname,Vector vc)
    {
        String[] col = columnname;   
        int size = 0;
        if(vc != null)
        {   theTableModelGUI= new TableModelGUI(col,vc.size());
            size = vc.size();
            //วนลูป ต่อ 1 แถว
            for(int i=0 ;i<size; i++)
            {    //วนลูปตของ column
                String[] rowdata = (String[])vc.get(i);
                
                for(int j = 0 ; j < rowdata.length ;j++)
                {
                    theTableModelGUI.setValueAt(rowdata[j],i,j);
                }
                theTableModelGUI.setEditingCol(rowdata.length+1);
                rowdata = null;
            }
        }
        else
        {   theTableModelGUI= new TableModelGUI(col,0);
        }
        this.jTablePregnance.setModel(theTableModelGUI);
        //pu : Fix column แรกของ GUI ให้อยู่กับที่
        if(col!= null && col.length!= 0)
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTablePregnance, 1, 80);
            //fixedColumnScrollPane1.setFixedColumnScrollPane(jTablePregnance, 2, 150);
            setTableListReportPattern(col);
        }
        else
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTablePregnance, 0, 50);
            setTableListReportPattern(new String[0]);
        }
        sendDataToMainReport(size);
    }
    /**ใช้ในการแสดงความกว้างของคอลัมน์
     *@param col เป็น Array ของ String ที่เก็บหัว column สำหรับนำมานับจำนวน Column ที่ต้องสร้างในตาราง
     *
     */
    private void setTableListReportPattern(String [] col)
    {
        if(rendererCenter == null )
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(rendererRight == null)
        {
            rendererRight = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        
        String[] col_number = col;
        int size = col_number.length;
        for(int i=0;i<size-1;i++)
        {
            if(i==0)
            {
                jTablePregnance.getColumnModel().getColumn(i).setPreferredWidth(150);
            }
            else if(i==1)
            {
                jTablePregnance.getColumnModel().getColumn(i).setPreferredWidth(150);
            }
            else if(i==2)
            {
                jTablePregnance.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                jTablePregnance.getColumnModel().getColumn(i).setPreferredWidth(100);
            }
            else
            {
                jTablePregnance.getColumnModel().getColumn(i).setPreferredWidth(150);
            }
        }
    }
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.FixedColumnScrollPane fixedColumnScrollPane1;
    private javax.swing.JComboBox jComboBoxVillage;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelVillage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTable jTablePregnance;
    // End of variables declaration//GEN-END:variables
    public void setLanguage()
    {
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText()));
        jLabelVillage.setText(Language.getTextBundle(jLabelVillage.getText()));
    }
}
