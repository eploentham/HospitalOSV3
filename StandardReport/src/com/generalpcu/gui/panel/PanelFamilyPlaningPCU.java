/*
 * PanelFamilyPlaningPCU.java
 *
 * Created on 3 เมษายน 2549, 17:08 น.
 */

package com.generalpcu.gui.panel;

import com.generalpcu.usecase.AllPanelResp;
import com.generalpcu.usecase.CardNameControl;
import com.generalpcu.usecase.GUIResp;
import com.generalpcu.utility.ComboboxModel;
import com.generalpcu.utility.Constant;
import com.generalpcu.utility.Report;
import com.generalpcu.utility.TableModelGUI;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;
import com.generalpcu.control.ManageControlSubject;
import com.generalpcu.gui.panel.DialogShowStatus;
import com.generalpcu.utility.Language;
/**
 *
 * @author  Ojika
 */
public class PanelFamilyPlaningPCU extends javax.swing.JPanel implements AllPanelResp,GUIResp,CardNameControl,Runnable
{
    
    /** Creates new form PanelFamilyPlaningPCU */
    public ManageControlSubject theMCS;
    private ComboboxModel theComboboxModel;
    DefaultTableCellRenderer rendererCenter;
    DefaultTableCellRenderer rendererRight;
    
    final private String cardName;
    private String startDate;
    private String endDate;
    Thread theThread;
    DialogShowStatus theDialogShowStatus;
    
    /*Vector ของข้อมูลที่ได้จากการค้นหารายงาน**/
    Vector vcData;
    String[] headColumn;
    Vector vcDataQuery;
    TableModelGUI theTableModelGUI;
    
    /** เพื่อบอกว่ากำลังเลือกรายงานอะไรอยู่ 
     * 1 คือ รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน จาก บัญชี 6 หญิงวัยเจริญพันธุ์
     * 2 คือ รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน
     * 3 คือ รายงานแสดงรายชื่อของหญิงที่มีการวางแผนครอบครัว
     * 4 คือ รายชื่อหญิงวัยเจริญพันธุ์(อายุ 15-44 ปี;สมรส)ที่ไม่ได้รับการวางแผนครอบครัวในปัจจุบัน
     **/
    int selectReport = 1;
    /**การเลือกดึงข้อมูลด้วยวันที่ 0 คือ ดึงข้อมูลจนถึงวันที่สิ้นสุด 1 คือ ดึงข้อมูลตามช่วงวันที่*/
    int isQueryByDate = 1;
    private boolean isDbBackup;
    
    public PanelFamilyPlaningPCU(ManageControlSubject manageControlSubject)
    {
        initComponents();
        
        theMCS = manageControlSubject;
        theMCS.theManageSubject.theGUISubject.registerGUIManage(this);
        theMCS.theManageSubject.theAllPanelSubject.registerAllPanelManage(this);
        cardName = ((Report)Constant.Report.get("8")).ENG_NAME;
        initComboboxVillage();
        setEnabledGuiSubReport(true);
        setDescriptionSelectReport();
        setLanguage();        
        theDialogShowStatus = new DialogShowStatus(theMCS.theUS.getJFrame(),false,this.theMCS);    
    }
    
    /*
     * แสดงชื่อ card ของ panel
     **/
    public String getCardName()
    {
         return this.cardName;
    }
    
    /**
     * เซ็ตค่าเริ่มต้นให้กับ ComboBox ของหมู่บ้าน
     * @Author Ojika
     * @Date 03/04/2549
     */
    private void initComboboxVillage()
    {             
        this.theComboboxModel.initComboBox(this.jComboBoxVillage,this.theMCS.theManageControl.theComboBoxControl.listVillage());  
        this.theComboboxModel.setCodeComboBox(this.jComboBoxVillage, "0");        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonFP = new javax.swing.JRadioButton();
        jRadioButtonCountByVillage = new javax.swing.JRadioButton();
        jRadioButtonCountByVillageAndMarry = new javax.swing.JRadioButton();
        jRadioButtonListFpByVillage = new javax.swing.JRadioButton();
        jRadioButtonListNotFp = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxVillage = new javax.swing.JComboBox();
        jCheckBoxQueryByDate = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelReportDetail = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        fixedColumnScrollPane1 = new com.hospital_os.utility.FixedColumnScrollPane();
        jTableShowReport = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("SelectReportForQuery");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        buttonGroup1.add(jRadioButtonFP);
        jRadioButtonFP.setSelected(true);
        jRadioButtonFP.setText("FP");
        jRadioButtonFP.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonFPActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel2.add(jRadioButtonFP, gridBagConstraints);

        buttonGroup2.add(jRadioButtonCountByVillage);
        jRadioButtonCountByVillage.setText("CountByVillage");
        jRadioButtonCountByVillage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonCountByVillageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel2.add(jRadioButtonCountByVillage, gridBagConstraints);

        buttonGroup2.add(jRadioButtonCountByVillageAndMarry);
        jRadioButtonCountByVillageAndMarry.setSelected(true);
        jRadioButtonCountByVillageAndMarry.setText("CountByVillageAndMarry");
        jRadioButtonCountByVillageAndMarry.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonCountByVillageAndMarryActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel2.add(jRadioButtonCountByVillageAndMarry, gridBagConstraints);

        buttonGroup2.add(jRadioButtonListFpByVillage);
        jRadioButtonListFpByVillage.setText("ListFpByVillage");
        jRadioButtonListFpByVillage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonListFpByVillageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel2.add(jRadioButtonListFpByVillage, gridBagConstraints);

        buttonGroup1.add(jRadioButtonListNotFp);
        jRadioButtonListNotFp.setText("NonFP");
        jRadioButtonListNotFp.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonListNotFpActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel2.add(jRadioButtonListNotFp, gridBagConstraints);

        jLabel4.setText("SelectVillage");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel2.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel2.add(jComboBoxVillage, gridBagConstraints);

        jCheckBoxQueryByDate.setSelected(true);
        jCheckBoxQueryByDate.setText("QueryByDate");
        jCheckBoxQueryByDate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jCheckBoxQueryByDateActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel2.add(jCheckBoxQueryByDate, gridBagConstraints);

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("ReportDescription");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel5.add(jLabel2, gridBagConstraints);

        jLabelReportDetail.setText(" : ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel5.add(jLabelReportDetail, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jPanel5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.EtchedBorder());
        jTableShowReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTableShowReport.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fixedColumnScrollPane1.setViewportView(jTableShowReport);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(fixedColumnScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jPanel4.setMinimumSize(new java.awt.Dimension(33, 44));
        jTextArea1.setRows(2);
        jTextArea1.setText(" \u0e2b\u0e32\u0e01\u0e40\u0e25\u0e37\u0e2d\u0e01 \"\u0e04\u0e49\u0e19\u0e2b\u0e32\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e15\u0e32\u0e21\u0e0a\u0e48\u0e27\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\"  \u0e2b\u0e21\u0e32\u0e22\u0e16\u0e36\u0e07 \u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e08\u0e30\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e27\u0e32\u0e07\u0e41\u0e1c\u0e19\u0e04\u0e23\u0e2d\u0e1a\u0e04\u0e23\u0e31\u0e27 \n \u0e15\u0e32\u0e21\u0e0a\u0e48\u0e27\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e17\u0e35\u0e48\u0e23\u0e30\u0e1a\u0e38\u0e02\u0e49\u0e32\u0e07\u0e15\u0e49\u0e19 \u0e2b\u0e32\u0e01\u0e44\u0e21\u0e48\u0e40\u0e25\u0e37\u0e2d\u0e01\u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e08\u0e30\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14\u0e08\u0e19\u0e16\u0e36\u0e07\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e34\u0e49\u0e19\u0e2a\u0e38\u0e14 ");
        jTextArea1.setMinimumSize(new java.awt.Dimension(0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextArea1, gridBagConstraints);

        jLabel3.setText("mark");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel4.add(jLabel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jCheckBoxQueryByDateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jCheckBoxQueryByDateActionPerformed
    {//GEN-HEADEREND:event_jCheckBoxQueryByDateActionPerformed
        // ตรวจสอบการดึงข้อมูลจากวันที่
        if(jCheckBoxQueryByDate.isSelected())
        {
            this.isQueryByDate = 1;
        }
        else
        {
            this.isQueryByDate = 0;
        }
    }//GEN-LAST:event_jCheckBoxQueryByDateActionPerformed

    private void jRadioButtonListFpByVillageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonListFpByVillageActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonListFpByVillageActionPerformed
        // 3 คือ รายงานแสดงรายชื่อของหญิงที่มีการวางแผนครอบครัว
        this.selectReport = 3;       
        // แสดงรายละเอียดการเลือกรายงาน
        this.setDescriptionSelectReport();
    }//GEN-LAST:event_jRadioButtonListFpByVillageActionPerformed

    private void jRadioButtonCountByVillageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonCountByVillageActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonCountByVillageActionPerformed
        // 2 คือ รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน
        this.selectReport = 2;     
        // แสดงรายละเอียดการเลือกรายงาน
        this.setDescriptionSelectReport();
    }//GEN-LAST:event_jRadioButtonCountByVillageActionPerformed

    private void jRadioButtonCountByVillageAndMarryActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonCountByVillageAndMarryActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonCountByVillageAndMarryActionPerformed
        // 1 คือ รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน จาก บัญชี 6 หญิงวัยเจริญพันธุ์     
        this.selectReport = 1;
        // แสดงรายละเอียดการเลือกรายงาน
        this.setDescriptionSelectReport();
    }//GEN-LAST:event_jRadioButtonCountByVillageAndMarryActionPerformed

    private void jRadioButtonListNotFpActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonListNotFpActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonListNotFpActionPerformed
        // เลือกรายงาน ที่ไม่มีการวางแผนครอบครัว
        setEnabledGuiSubReport(false);
        // 4 คือ รายชื่อหญิงวัยเจริญพันธุ์(อายุ 15-44 ปี;สมรส)ที่ไม่ได้รับการวางแผนครอบครัวในปัจจุบัน
        this.selectReport = 4;
        // แสดงรายละเอียดการเลือกรายงาน
        this.setDescriptionSelectReport();
    }//GEN-LAST:event_jRadioButtonListNotFpActionPerformed

    private void jRadioButtonFPActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonFPActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonFPActionPerformed
        // เลือกรายงานที่มีการวางแผนครอบครัว
        setEnabledGuiSubReport(true);
        this.jRadioButtonCountByVillageAndMarry.setSelected(true);
        this.selectReport = 1;
        // แสดงรายละเอียดการเลือกรายงาน
        this.setDescriptionSelectReport();
    }//GEN-LAST:event_jRadioButtonFPActionPerformed
    
    /**
     * แสดงรายละเอียดการเลือกรายงาน
     * @Author Ojika 
     * @Date 03/04/2549
     **/
    private void setDescriptionSelectReport()
    {        
        if(this.selectReport == 1)
        {
            this.jLabelReportDetail.setText("รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน จาก บัญชี 6 หญิงวัยเจริญพันธุ์");
        }
        else if(this.selectReport == 2)
        {
            this.jLabelReportDetail.setText("รายงานแสดงจำนวนและอัตราการวางแผนครอบครัว จำแนกรายหมู่บ้าน");
        }
        else if(this.selectReport == 3)
        {
            this.jLabelReportDetail.setText("รายงานแสดงรายชื่อของหญิงที่มีการวางแผนครอบครัว");
        }
        else if(this.selectReport == 4)
        {
            this.jLabelReportDetail.setText("รายชื่อหญิงวัยเจริญพันธุ์(อายุ 15-44 ปี;สมรส)ที่ไม่ได้รับการวางแผนครอบครัวในปัจจุบัน");
        }
        else
        {
            this.jLabelReportDetail.setText("");
        }
    }
    
    /**
     * ทำการเคลียร์การเลือกข้อมูลย่อยของรายงานที่มีการวางแผนครอบครัว
     * @Author Ojika
     * @Date 03/04/2549
     **/
    private void setClearSelectedGuiSubReport()
    {
        this.jRadioButtonCountByVillageAndMarry.setSelected(false);
        this.jRadioButtonCountByVillage.setSelected(false);
        this.jRadioButtonListFpByVillage.setSelected(false);
    }
    
    /**
     * เซ็ท GUI เพื่อการแสดงผลในส่วนของรายงานย่อย
     * @Author Ojika
     * @Date 03/04/2549
     **/
    private void setEnabledGuiSubReport(boolean b)
    {
        this.jRadioButtonCountByVillageAndMarry.setEnabled(b);
        this.jRadioButtonCountByVillage.setEnabled(b);
        this.jRadioButtonListFpByVillage.setEnabled(b);
        
        if(!b)
        {
            setClearSelectedGuiSubReport();
        }
    }
    
    /*
     * ส่งค่า Vector สำหรับ Save
     * @Author Ojika
     * @Date 03/04/2549
     **/
    public Vector getFpPCU()
    {
        return this.vcData;
    }
    
    private void startQuery()
    {
        theThread = new Thread(this); 
        theThread.start();
    }
    
    /**
     *  ใช้ในการรับข้อมูลจาก การค้นหา และส่งค่าเข้ามา panel นี้
     *  เพื่อให้ทำการ Query และค้นหารายการตามข้อกำหนดของ panel
     *  @param startDate เป็น String เป็นวันที่เริ่มต้น อยู่ในรูปแบบ yyyy-mm-dd
     *  @param endDate เป็น String เป็นวันที่สิ้นสุด อยู่ในรูปแบบ yyyy-mm-dd
     **/
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        isDbBackup = dbBackup;
        // เคลียร์ข้อมูลของ Vector
        clearVectorData();
        startQuery();
    }
    
    /**
     * เคลียร์ข้อมูลของ Vector 
     * @Author Ojika
     * @Date 07/04/2549
     **/
    private void clearVectorData()
    {
        this.vcData = null;
        this.vcDataQuery = null;
        
        showDataInTable(headColumn, vcDataQuery);
    }
    
    private void showDataInTable(String[] columnname,Vector vc)
    {
        
        String[] col = columnname;
        
        int size = 0;
        if(vc != null)
        {   
            theTableModelGUI = new TableModelGUI(col,vc.size());
            size = vc.size();
            // วนลูป ต่อ 1 แถว
            for(int i=0 ;i<size; i++)
            {    
                // วนลูปตของ column
                String[] rowdata = (String[])vc.get(i);
                
                for(int j = 0 ; j < rowdata.length ;j++)
                {
                    theTableModelGUI.setValueAt(rowdata[j],i,j);
                }
                theTableModelGUI.setEditingCol(rowdata.length+1);
                rowdata = null;                
            }
            
        }
        else
        {  
            theTableModelGUI= new TableModelGUI(col,0);
        }
        this.jTableShowReport.setModel(theTableModelGUI);
        if(rendererCenter == null )
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(col!= null && col.length!= 0)
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTableShowReport, 1, 100, rendererCenter);
            setTableListReportPattern(col);
        }
        else
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTableShowReport, 0, 80,rendererCenter);
            setTableListReportPattern(new String[0]);
        }
        sendDataToMainReport(size);
    }
    
    /**
     * จัดการแสดงผลบนตาราง
     * @Para col เป็น column ของข้อมูลที่แสดงในตาราง
     * @Author Ojika
     * @Date 07/04/2549
     **/
    private void setTableListReportPattern(String [] col)
    {
        if(rendererCenter == null )
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(rendererRight == null)
        {
            rendererRight = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        
        String[] col_number = col;
        int size = col_number.length;
        
        if(this.selectReport == 1)
        {
            for(int i=0;i<size-1;i++)
            {
                if(i == 0)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(150);
                }
                else if(i==1)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else if(i==2 || i==3)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(120);
                }
                else if(i == 4 || i == 5 || i == 6)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(60);
                }
                else if(i == 7)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
            }
        }
        else if(this.selectReport == 2)
        {
            for(int i=0;i<size-1;i++)
            {
                if(i == 0)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(150);
                }
                else if(i==1 || i==2)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(120);
                }
                else
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
            }
        }
        else if(this.selectReport == 3 || this.selectReport == 4)
        {
            for(int i=0;i<size-1;i++)
            {
                if(i == 0)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(150);
                }
                else if(i==1)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else if(i==2 || i==3)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
                else if(i == 4 || i == 5 || i == 6)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(60);
                }
                else if(i==7)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else if(i==8)
                {
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else
                    jTableShowReport.getColumnModel().getColumn(i).setPreferredWidth(120);
            }
        }
    }
    
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size > 0)
        {
            theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    /**
     * Query ข้อมูลตามช่วงวันที่ที่กำหนด สำหรับแสดงในตาราง
     * @Author Ojika
     * @Date 03/04/2549
     */
    private void queryDataByDate()
    {
        theDialogShowStatus.setVisible(false);
        theDialogShowStatus.showDialog("กรุณารอสักครู่",false);
        
        String selectVillage = this.theComboboxModel.getCodeComboBox(this.jComboBoxVillage);
        
        // ดึงข้อมูลรายงาน ส่งข้อมูลให้ Control ทำงานต่อ
        vcData = this.theMCS.theManageControl.theGeneralPCUControl.selectFpPcu(
                this.selectReport
                , selectVillage
                , this.isQueryByDate
                , this.startDate
                , this.endDate
                , isDbBackup);
        
        headColumn = new String[] {""};
        vcDataQuery = new Vector();
        if(vcData != null)
        {
            headColumn = (String[])vcData.get(0);
            vcDataQuery = (Vector)vcData.get(1);
        }
        
        showDataInTable(headColumn, vcDataQuery);
        theDialogShowStatus.setVisible(false);
    }
    
    /*
     * ส่งชื่อ File ตามรายละเอียดที่เลือกค้นหารายงาน
     * @Author Ojika
     * @Date 03/04/2549
     **/
    public String getNameReport()
    {
        if(this.selectReport == 1)
        {
            return "_amountByVillageAndMarry";
        }
        else if(this.selectReport == 2)
        {
            return "_amountByVillage";
        }
        else if(this.selectReport == 3)
        {
            return "_listFpByVillage";
        }
        else if(this.selectReport == 4)
        {
            return "_listNotFp";
        }
        else
        {
            return "";
        }
    }
    
    public void run()
    {
        this.queryDataByDate();
    }
    
    public void setLanguage()
    {
        jLabel1.setText(Language.getTextBundle(jLabel1.getText()));
        
        jRadioButtonFP.setText(Language.getTextBundle(jRadioButtonFP.getText()));
        jRadioButtonCountByVillageAndMarry.setText(Language.getTextBundle(jRadioButtonCountByVillageAndMarry.getText()));
        jRadioButtonCountByVillage.setText(Language.getTextBundle(jRadioButtonCountByVillage.getText()));
        jRadioButtonListFpByVillage.setText(Language.getTextBundle(jRadioButtonListFpByVillage.getText()));
        jRadioButtonListNotFp.setText(Language.getTextBundle(jRadioButtonListNotFp.getText()));
        
        jLabel4.setText(Language.getTextBundle(jLabel4.getText()));
        jCheckBoxQueryByDate.setText(Language.getTextBundle(jCheckBoxQueryByDate.getText()));
        jLabel2.setText(Language.getTextBundle(jLabel2.getText()));
        jLabel3.setText(Language.getTextBundle(jLabel3.getText()));
    }

    /**ใช้ในการ Clear ข้อมูลที่อยู่บนตาราง*/
    private void clearDataGUI()
    {
        vcData = null;
        showDataInTable(null,null);
        System.out.println("Clear Data in GUI");
    }
    
    public void notifyStopProcess()
    {
        try
        {
            if(theThread != null)
            {
                theThread.stop();
            }
            theThread = null;
            System.out.println("In stop in PanelPregnancePCU");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }

    public void notifySetInitAllGUI()
    {
        clearDataGUI();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private com.hospital_os.utility.FixedColumnScrollPane fixedColumnScrollPane1;
    private javax.swing.JCheckBox jCheckBoxQueryByDate;
    private javax.swing.JComboBox jComboBoxVillage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelReportDetail;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JRadioButton jRadioButtonCountByVillage;
    private javax.swing.JRadioButton jRadioButtonCountByVillageAndMarry;
    private javax.swing.JRadioButton jRadioButtonFP;
    private javax.swing.JRadioButton jRadioButtonListFpByVillage;
    private javax.swing.JRadioButton jRadioButtonListNotFp;
    private javax.swing.JTable jTableShowReport;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
}
