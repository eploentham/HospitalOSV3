/*
 * PanelChronicReport.java
 *
 * Created on 9 กุมภาพันธ์ 2549, 18:22 น.
 */

package com.generalpcu.gui.panel;

import com.generalpcu.usecase.CardNameControl;
import com.generalpcu.usecase.GUIResp;
import com.generalpcu.utility.ComboboxModel;
import com.generalpcu.utility.Constant;
import com.generalpcu.utility.Report;
import com.generalpcu.utility.TableModelGUI;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;
import com.generalpcu.control.ManageControlSubject;
import com.generalpcu.gui.panel.DialogShowStatus;
import com.generalpcu.utility.Language;
import com.generalpcu.usecase.AllPanelResp;
/**
 *
 * @author  nu_ojika
 */
public class PanelChronicPCU extends javax.swing.JPanel implements Runnable ,AllPanelResp,GUIResp,CardNameControl
{
    public ManageControlSubject theMCS;
    private ComboboxModel theComboboxModel;
    DefaultTableCellRenderer rendererCenter;
    DefaultTableCellRenderer rendererRight;
    
    final private String cardName;
    private String startDate;
    private String endDate;
    Thread theThread;
    DialogShowStatus theDialogShowStatus;
    
    /*ตัวแปรสำหรับแสดงรายละเอียดรายงานที่ผู้ใช้เลือก**/
    String DetailFromSelectReport1 = "";
    String DetailFromSelectReport2 = "";
    String DetailFromSelectReport3 = "";    
    
    /*ตัวแปรสำหรับเลือกว่าต้องการแสดงรายงานอะไร**/
    int selectReport1 = 1; // 1 คือ รายงานจำนวน  2 คือ รายงานรายชื่อ
    int selectReport2 = 1; // 1 คือ ยังมีชีวิต  2 คือ เสียชีวิต
    int selectReport3 = 1; // 1 คือ ในเขตหมู่บ้านที่รับผิดชอบ 2 คือ ทั้งหมด (ในเขต+นอกเขต)
    String selectVillage = "0";
    
    /*Vector ของ หมู่บ้าน**/
    Vector vVillage;
    /*Vector ของข้อมูลที่ได้จากการค้นหารายงาน**/
    Vector vcData;
    String[] headColumn;
    Vector vcDataQuery;
    TableModelGUI theTableModelGUI;
    private boolean isDbBackup;
    
    /** Creates new form PanelChronicReport */
    public PanelChronicPCU(ManageControlSubject manageControlSubject)
    {        
        initComponents();
        
        theMCS = manageControlSubject;
        theMCS.theManageSubject.theGUISubject.registerGUIManage(this);
        theMCS.theManageSubject.theAllPanelSubject.registerAllPanelManage(this);
        cardName = ((Report)Constant.Report.get("1")).ENG_NAME; 
        initComboboxVillage();
        setLanguage();
        setDefaultDetailFromSelectReport();
        theDialogShowStatus = new DialogShowStatus(theMCS.theUS.getJFrame(),false,this.theMCS);        
    }
    
    /**
     * เซ็ตค่าเริ่มต้นให้กับ ComboBox ของหมู่บ้าน
     * @Author Ojika
     * @Date 10/02/2549
     */
    private void initComboboxVillage()
    {  
        vVillage = new Vector();
        vVillage = this.theMCS.theManageControl.theComboBoxControl.listVillage();        
        this.theComboboxModel.initComboBox(this.jComboBoxVillage,vVillage);  
        this.theComboboxModel.setCodeComboBox(this.jComboBoxVillage, "0");
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonPatientAmount = new javax.swing.JRadioButton();
        jRadioButtonPatientName = new javax.swing.JRadioButton();
        jRadioButtonAlive = new javax.swing.JRadioButton();
        jRadioButtonDeath = new javax.swing.JRadioButton();
        jRadioButtonPatientIncup = new javax.swing.JRadioButton();
        jRadioButtonPatientAll = new javax.swing.JRadioButton();
        jComboBoxVillage = new javax.swing.JComboBox();
        jLabelDetailFromSelectReport = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        fixedColumnScrollPane1 = new com.hospital_os.utility.FixedColumnScrollPane();
        jTableChronicPCU = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jLabelMark = new javax.swing.JLabel();
        jTextArea1 = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabel1.setText("SelectReportForQuery");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jLabel1, gridBagConstraints);

        buttonGroup1.add(jRadioButtonPatientAmount);
        jRadioButtonPatientAmount.setSelected(true);
        jRadioButtonPatientAmount.setText("PatientAmount");
        jRadioButtonPatientAmount.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonPatientAmountActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jRadioButtonPatientAmount, gridBagConstraints);

        buttonGroup1.add(jRadioButtonPatientName);
        jRadioButtonPatientName.setText("PatientName");
        jRadioButtonPatientName.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonPatientNameActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jRadioButtonPatientName, gridBagConstraints);

        buttonGroup2.add(jRadioButtonAlive);
        jRadioButtonAlive.setSelected(true);
        jRadioButtonAlive.setText("alive");
        jRadioButtonAlive.setActionCommand("jRadioButton3");
        jRadioButtonAlive.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonAliveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jRadioButtonAlive, gridBagConstraints);

        buttonGroup2.add(jRadioButtonDeath);
        jRadioButtonDeath.setText("Death");
        jRadioButtonDeath.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonDeathActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jRadioButtonDeath, gridBagConstraints);

        buttonGroup3.add(jRadioButtonPatientIncup);
        jRadioButtonPatientIncup.setSelected(true);
        jRadioButtonPatientIncup.setText("PatientIncup");
        jRadioButtonPatientIncup.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonPatientIncupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel2.add(jRadioButtonPatientIncup, gridBagConstraints);

        buttonGroup3.add(jRadioButtonPatientAll);
        jRadioButtonPatientAll.setText("PatientAll");
        jRadioButtonPatientAll.setActionCommand("jRadioButton6");
        jRadioButtonPatientAll.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButtonPatientAllActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 3);
        jPanel2.add(jRadioButtonPatientAll, gridBagConstraints);

        jComboBoxVillage.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jComboBoxVillageActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel2.add(jComboBoxVillage, gridBagConstraints);

        jLabelDetailFromSelectReport.setFont(new java.awt.Font("Tahoma", 1, 12));
        jLabelDetailFromSelectReport.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 3);
        jPanel2.add(jLabelDetailFromSelectReport, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jTableChronicPCU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTableChronicPCU.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        fixedColumnScrollPane1.setViewportView(jTableChronicPCU);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(fixedColumnScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabelMark.setText("mark");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 3);
        jPanel4.add(jLabelMark, gridBagConstraints);

        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setText("  \u0e42\u0e1b\u0e23\u0e41\u0e01\u0e23\u0e21\u0e08\u0e30\u0e19\u0e33\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e2a\u0e34\u0e49\u0e19\u0e2a\u0e38\u0e14\u0e01\u0e32\u0e23\u0e14\u0e36\u0e07\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 \u0e44\u0e1b\u0e43\u0e0a\u0e49\u0e43\u0e19\u0e01\u0e32\u0e23\u0e04\u0e33\u0e19\u0e27\u0e19\u0e2d\u0e32\u0e22\u0e38\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22 \n  \u0e41\u0e15\u0e48\u0e27\u0e31\u0e19\u0e17\u0e35\u0e48\u0e08\u0e30\u0e44\u0e21\u0e48\u0e21\u0e35\u0e1c\u0e25\u0e01\u0e31\u0e1a\u0e01\u0e32\u0e23\u0e14\u0e36\u0e07\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19");
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.setMinimumSize(new java.awt.Dimension(0, 51));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel4.add(jTextArea1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jComboBoxVillageActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxVillageActionPerformed
    {//GEN-HEADEREND:event_jComboBoxVillageActionPerformed
        // เลือกหมู่บ้านในเขต
        this.DetailFromSelectReport3 = " " + Language.getTextBundle("") + " "; //" ในเขตรับผิดชอบ ";     
        this.selectVillage = this.theComboboxModel.getCodeComboBox(jComboBoxVillage); 
        this.DetailFromSelectReport3 = this.DetailFromSelectReport3 + this.theComboboxModel.getStringConboBox(jComboBoxVillage);       
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jComboBoxVillageActionPerformed

    private void jRadioButtonPatientAllActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonPatientAllActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonPatientAllActionPerformed
        // เลือกแบบทั้งหมด
        this.DetailFromSelectReport3 = " " + Language.getTextBundle("PatientAll") + " "; //" ทุกคน(ในเขต + นอกเขต)";
        this.selectReport3 = 2;
        this.selectVillage = "";
        jComboBoxVillage.setEnabled(false);
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonPatientAllActionPerformed

    private void jRadioButtonPatientIncupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonPatientIncupActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonPatientIncupActionPerformed
        // เลือกหมู่บ้านในเขต
        this.DetailFromSelectReport3 = " " + Language.getTextBundle("PatientIncup") + " "; //" ในเขตรับผิดชอบ ";
        this.selectReport3 = 1;
        this.selectVillage = this.theComboboxModel.getCodeComboBox(jComboBoxVillage);
        jComboBoxVillage.setEnabled(true);
        this.DetailFromSelectReport3 = this.DetailFromSelectReport3 + this.theComboboxModel.getStringConboBox(jComboBoxVillage);       
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonPatientIncupActionPerformed

    private void jRadioButtonDeathActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonDeathActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonDeathActionPerformed
        // เลือกผู้ป่วยที่เสียชีวิต
        this.DetailFromSelectReport2 = " " + Language.getTextBundle("Death") + " "; //" ที่เสียชีวิต ";
        this.selectReport2 = 2;
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonDeathActionPerformed

    private void jRadioButtonAliveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonAliveActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonAliveActionPerformed
        // เลือกผู้ป่วยที่ยังมีชีวิต
        this.DetailFromSelectReport2 = " " + Language.getTextBundle("alive") + " "; //" ที่ยังมีชีวิต ";
        this.selectReport2 = 1;
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonAliveActionPerformed

    private void jRadioButtonPatientAmountActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonPatientAmountActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonPatientAmountActionPerformed
        // เลือกรายงาน จำนวนผู้ป่วย
        this.DetailFromSelectReport1 = " " + Language.getTextBundle("PatientAmount") + " "; //" จำนวนผู้ป่วย ";
        this.selectReport1 = 1;
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonPatientAmountActionPerformed

    private void jRadioButtonPatientNameActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButtonPatientNameActionPerformed
    {//GEN-HEADEREND:event_jRadioButtonPatientNameActionPerformed
        // เลือกรายงาน รายชื่อผู้ป่วย
        this.DetailFromSelectReport1 = " " + Language.getTextBundle("PatientName") + " "; //" รายชื่อผู้ป่วย ";
        this.selectReport1 = 2;
        setTextToDetailFromSelectReport();
    }//GEN-LAST:event_jRadioButtonPatientNameActionPerformed
    /*
     * ส่งชื่อ File ตามรายละเอียดที่เลือกค้นหารายงาน
     * @Author Ojika
     * @Date 11/02/2549
     **/
    public String getNameReport()
    {
        if(this.selectReport1 == 1)
        {
            return "_amountPatient";
        }
        else if(this.selectReport1 == 2)
        {
            return "_listPatient";
        }
        else
        {
            return "";
        }
    }
    
    /*
     * ส่งค่า Vector สำหรับ Save
     * @Author Ojika
     * @Date 11/02/2549
     **/
    public Vector getChronicPCU()
    {
        return this.vcData;
    }
    
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size > 0)
        {
            theMCS.theManageSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    private void showDataInTable(String[] columnname,Vector vc)
    {
        
        String[] col = columnname;
        
        int size = 0;
        if(vc != null)
        {   
            theTableModelGUI = new TableModelGUI(col,vc.size());
            size = vc.size();
            //วนลูป ต่อ 1 แถว
            for(int i=0 ;i<size; i++)
            {    //วนลูปตของ column
                String[] rowdata = (String[])vc.get(i);
                
                for(int j = 0 ; j < rowdata.length ;j++)
                {
                    theTableModelGUI.setValueAt(rowdata[j],i,j);
                }
                theTableModelGUI.setEditingCol(rowdata.length+1);
                rowdata = null;                
            }
            
        }
        else
        {  
            theTableModelGUI= new TableModelGUI(col,0);
        }
        this.jTableChronicPCU.setModel(theTableModelGUI); 
        if(col!= null && col.length!= 0)
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTableChronicPCU, 1, 150);
            setTableListReportPattern(col);
        }
        else
        {
            fixedColumnScrollPane1.setFixedColumnScrollPane(jTableChronicPCU, 0, 150);
            setTableListReportPattern(new String[0]);
        }
        sendDataToMainReport(size); 
    }
    
    /**
     * จัดการแสดงผลบนตาราง
     * @Para col เป็น column ของข้อมูลที่แสดงในตาราง
     * @Author Ojika
     * @Date 08/04/2549      
     **/
    private void setTableListReportPattern(String [] col)
    {
        if(rendererCenter == null )
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(rendererRight == null)
        {
            rendererRight = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        
        String[] col_number = col;
        int size = col_number.length;
        if(this.selectReport1 == 1)
        {
            for(int i=0;i<size-1;i++)
            {
                if(i > 0)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
            }
        }
        else if(this.selectReport1 == 2 )
        {
            for(int i=0;i<size-1;i++)
            {
                if(i == 0)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else if(i==1)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(60);
                }
                else if(i==2)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(150);
                }
                else if(i==3)
                {                    
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
                else if(i>3 && i<=7)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(80);
                }
                else if(i==8)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setCellRenderer(rendererCenter);
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(60);
                }
                else if(i>8 && i<=11)
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(100);
                }
                else
                {
                    jTableChronicPCU.getColumnModel().getColumn(i).setCellRenderer(rendererRight);
                    jTableChronicPCU.getColumnModel().getColumn(i).setPreferredWidth(120);
                }
            }
        }
    }
    
    /**
     *Query ข้อมูลตามช่วงวันที่ที่กำหนด สำหรับแสดงในตาราง
     *@Author Ojika
     *@Date 11/02/2549
     */
    private void queryDataByDate()
    {
        theDialogShowStatus.setVisible(false);
        theDialogShowStatus.showDialog("กรุณารอสักครู่",false);
        
        vcData = this.theMCS.theManageControl.theGeneralPCUControl.selectChronicPcu(this.selectReport1
                , this.selectReport2
                , this.selectReport3
                , this.selectVillage
                , this.endDate
                , isDbBackup);
        
        headColumn = new String[] {""};
        vcDataQuery = null;
        if(vcData != null)
        {
            
            headColumn = (String[])vcData.get(0);
            vcDataQuery = (Vector)vcData.get(1);
        }
        
        showDataInTable(headColumn, vcDataQuery);
        theDialogShowStatus.setVisible(false);
    }
    
    private void startQuery()
    {
        theThread = new Thread(this);
        theThread.start();
    }
    
    /*
     *  ใช้ในการรับข้อมูลจาก การค้นหา และส่งค่าเข้ามา panel นี้
     *  เพื่อให้ทำการ Query และค้นหารายการตามข้อกำหนดของ panel
     *  @param startDate เป็น String เป็นวันที่เริ่มต้น อยู่ในรูปแบบ yyyy-mm-dd
     *  @param endDate เป็น String เป็นวันที่สิ้นสุด อยู่ในรูปแบบ yyyy-mm-dd
     **/
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        isDbBackup = dbBackup;
        startQuery();
    }
    
    /*
     * แสดงชื่อ card ของ panel
     **/
    public String getCardName()
    {
        return this.cardName;
    }
    
    /*
     * สำหรับค่าเริ่มต้นรายงานเมื่อเลือกรายงานใหม่
     * @Author Ojika
     * @Date 10/02/2549
     **/
    private void setDefaultDetailFromSelectReport()
    {
        this.DetailFromSelectReport1 = " " + Language.getTextBundle("PatientAmount") + " "; // " จำนวนผู้ป่วย ";
        this.DetailFromSelectReport2 = " " + Language.getTextBundle("alive") + " "; // " ที่ยังมีชีวิต ";
        this.DetailFromSelectReport3 = " " + Language.getTextBundle("PatientIncup") + " "; //" ในเขตรับผิดชอบ ";
        jComboBoxVillage.setEnabled(true);
        this.DetailFromSelectReport3 = this.DetailFromSelectReport3 + this.theComboboxModel.getStringConboBox(jComboBoxVillage);
        setTextToDetailFromSelectReport();
    }
    
    /*
     * สำหรับแสดงรายละเอียดของรายงานที่เลือกแสดง
     * @Author Ojika
     * @Date 10/02/2549
     **/
    private void setTextToDetailFromSelectReport()
    {
        this.jLabelDetailFromSelectReport.setText(Language.getTextBundle("ReportChronic") + " : " + this.DetailFromSelectReport1 + this.DetailFromSelectReport2 + this.DetailFromSelectReport3);
    }
    
    public void run()
    {
        this.queryDataByDate();
    }
    
    public void setLanguage()
    {
        jRadioButtonPatientAmount.setText(Language.getTextBundle(jRadioButtonPatientAmount.getText()));
        jRadioButtonPatientName.setText(Language.getTextBundle(jRadioButtonPatientName.getText()));
        jRadioButtonAlive.setText(Language.getTextBundle(jRadioButtonAlive.getText()));
        jRadioButtonDeath.setText(Language.getTextBundle(jRadioButtonDeath.getText()));
        jRadioButtonPatientIncup.setText(Language.getTextBundle(jRadioButtonPatientIncup.getText()));
        jRadioButtonPatientAll.setText(Language.getTextBundle(jRadioButtonPatientAll.getText()));
        
        jLabel1.setText(Language.getTextBundle(jLabel1.getText()));
        jLabelMark.setText(Language.getTextBundle(jLabelMark.getText()));
    }
    
    /**ใช้ในการ Clear ข้อมูลที่อยู่บนตาราง*/
    private void clearDataGUI()
    {
        vcData = null;
        showDataInTable(null,null);
        System.out.println("Clear Data in GUI");
    }
    
    public void notifySetInitAllGUI()
    {
        clearDataGUI();
    }

    public void notifyStopProcess()
    {
        try
        {
            if(theThread != null)
            {
                theThread.stop();
            }
            theThread = null;
            System.out.println("In stop in PanelPregnancePCU");
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private com.hospital_os.utility.FixedColumnScrollPane fixedColumnScrollPane1;
    private javax.swing.JComboBox jComboBoxVillage;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelDetailFromSelectReport;
    private javax.swing.JLabel jLabelMark;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButtonAlive;
    private javax.swing.JRadioButton jRadioButtonDeath;
    private javax.swing.JRadioButton jRadioButtonPatientAll;
    private javax.swing.JRadioButton jRadioButtonPatientAmount;
    private javax.swing.JRadioButton jRadioButtonPatientIncup;
    private javax.swing.JRadioButton jRadioButtonPatientName;
    private javax.swing.JTable jTableChronicPCU;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
}
