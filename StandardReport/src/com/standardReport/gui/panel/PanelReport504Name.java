/*
 * PanelReport504Name.java
 *
 * Created on 8 กันยายน 2548, 14:36 น.
 */

package com.standardReport.gui.panel;

import com.standardReport.control.HosControl;
import com.standardReport.subject.ManageAllPanel;
import java.io.*;
import com.standardReport.utility.*;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;

import com.standardReport.object.RP504Name;
import com.standardReport.object.FileName;
import com.standardReport.subject.StandardGui;

/**
 *
 * @author  americus
 */
public class PanelReport504Name extends javax.swing.JPanel implements StandardGui,
        ManageAllPanel
{
    private HosControl theHosControl;
    private boolean isProcessRunning = false;
    
    public String cur_path = System.getProperty("user.dir");
    private String select_path = "";
    private String fileType = "";
    private String startDate ="";
    private String endDate = "";
    
    public Vector vcRp504Name;
    public RP504Name theRP504Name;
    public FileName theFileName;
    private String cardName = "Report504Name";
    DefaultTableCellRenderer rendererCenter;
    /**
      * Creates new form PanelReport504Name 
      */
     public PanelReport504Name(HosControl hcl)
     {
         this.theHosControl = hcl;
         theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
         initComponents();
         setFileName();      
         setLanguage();
     }
    
     public void setProcessRunning(boolean isProcessRunning)
     {
         this.isProcessRunning = isProcessRunning;
     }
     
     public void setFileName()
     {
         theFileName = new FileName();
     }
     
     /** This method is called from within the constructor to
      * initialize the form.
      * WARNING: Do NOT modify this code. The content of this method is
      * always regenerated by the Form Editor.
      */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelDetail = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport504Name = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.GridBagLayout());

        jPanelDetail.setLayout(new java.awt.GridBagLayout());

        jPanelDetail.setBorder(new javax.swing.border.TitledBorder("ReportDetail"));
        jTableReport504Name.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableReport504Name);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanelDetail.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanelDetail, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
     public String getCardName()
    {
        return this.cardName;
    }
    
    public void setFileDescription( boolean isDbBackup)
    {
           // setEnableGUI(false);
            setProcessRunning(true);
            try
            {
                //theHosControl.setDataExportFile(this.getReportFileName(), startDate, endDate, select_path, fileType);
                if(theHosControl == null)
                {
                    System.out.println("----------HosControl --null-------------");
                    return;
                }
                this.vcRp504Name = theHosControl.theRP504Control.selectRP504NameByDate(this.startDate,this.endDate,isDbBackup);
                if(vcRp504Name != null)
                {
                    System.out.println("-----vcEmployee--------"+vcRp504Name.size());
                }
                this.setTableRp504Name();
                
                //theHosControl.start();
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
    }
    
    public void ExportFile()
    {
        setProcessRunning(true);
        try
        {
            //theHosControl.setDataExportFile(this.getReportFileName(), startDate, endDate, select_path, fileType);
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            theHosControl.theExportControl.startExportByVector(this.vcRp504Name,this.select_path,this.fileType,theFileName.getRP504Name());
           // theHosControl.setDataExportFile(this.vcRp504Name,theFileName.getRP504Name(),this.startDate,this.endDate,this.select_path,this.fileType,this.reportType); 
            if(vcRp504Name != null)
            {
                System.out.println("-----vcEmployee--------"+vcRp504Name.size());
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }        
    }
    
   private void setTableRp504Name()
    {
        String[] col = {    Gutil.getTextBundle("Icd"),
                            Gutil.getTextBundle("IcdName"),
                            Gutil.getTextBundle("Male"),
                            Gutil.getTextBundle("Female"),
                            Gutil.getTextBundle("Non-Spec"),
                            Gutil.getTextBundle("Total")
                        };
        TableModel tm ;
        int size =0;
        if(this.vcRp504Name != null)
        {
            size = this.vcRp504Name.size();
            tm= new TableModel(col,size);
            for(int i=0 ;i<size; i++)
            {
                tm.setValueAt(((RP504Name)this.vcRp504Name.get(i)).name_rp504_ICD_code,i,0);
                tm.setValueAt(((RP504Name)this.vcRp504Name.get(i)).name_rp504_ICD_name,i,1);
                tm.setValueAt(Integer.valueOf(((RP504Name)this.vcRp504Name.get(i)).name_rp504_male),i,2);
                tm.setValueAt(Integer.valueOf(((RP504Name)this.vcRp504Name.get(i)).name_rp504_female),i,3);
                tm.setValueAt(Integer.valueOf(((RP504Name)this.vcRp504Name.get(i)).name_rp504_non_spec),i,4);
                tm.setValueAt(Integer.valueOf(((RP504Name)this.vcRp504Name.get(i)).name_rp504_total),i,5);
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport504Name.setModel(tm);
        setTableReportDefault();
        sendDataToMainReport(size);
    }
     /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    private void setTableReportDefault()
    {
        if(rendererCenter == null){
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport504Name.getColumnModel().getColumn(0).setCellRenderer(rendererCenter);
        rendererCenter = new DefaultTableCellRenderer();
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        this.jTableReport504Name.getColumnModel().getColumn(2).setCellRenderer(rendererCenter);
        this.jTableReport504Name.getColumnModel().getColumn(3).setCellRenderer(rendererCenter);
        this.jTableReport504Name.getColumnModel().getColumn(4).setCellRenderer(rendererCenter);
        this.jTableReport504Name.getColumnModel().getColumn(5).setCellRenderer(rendererCenter);
        
        this.jTableReport504Name.getColumnModel().getColumn(0).setPreferredWidth(70);
        this.jTableReport504Name.getColumnModel().getColumn(1).setPreferredWidth(300);
        this.jTableReport504Name.getColumnModel().getColumn(2).setPreferredWidth(70);
        this.jTableReport504Name.getColumnModel().getColumn(3).setPreferredWidth(70);
        this.jTableReport504Name.getColumnModel().getColumn(4).setPreferredWidth(70);
        this.jTableReport504Name.getColumnModel().getColumn(5).setPreferredWidth(70);
    }
    
    public void setLanguage()
    {
        Gutil.JPanelLabler(jPanelDetail);
    }
    
    public void setExportFile(String fileType, String path)
    {
        this.fileType = fileType;
        this.select_path = path;
        ExportFile();
    }
    
    public void setQueryReport(String startDate, String endDate, boolean isDbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        setFileDescription(isDbBackup);
    }
    
    public void setQueryReport(String startDate, String endDate, String treatStatus)
    {
        
    }

    public void notifySetInitAllGUI() {
      //  setEnableRadioButton(false);
        vcRp504Name = null;
        setTableRp504Name();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTableReport504Name;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setQueryReport(String startDate, String endDate) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
