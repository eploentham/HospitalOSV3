/*
 * PanelReport115Group1_2549.java
 *
 * Created on 8 กันยายน 2548, 17:33 น.
 */

package com.standardReport.gui.panel;

import com.hosv3.gui.component.HJTableSort;
import com.standardReport.object.RP115Group1;
import com.standardReport.object.RP115Group1IPD;
import com.standardReport.object.RP115Group1OPD;
import com.standardReport.object.RP115Group1PCU;
import com.standardReport.object.RP115Group1Refer;
import com.standardReport.subject.ManageAllPanel;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;

import com.standardReport.control.HosControl;
import com.standardReport.subject.StandardGui;
import com.standardReport.utility.*;

import com.standardReport.object.FileName;

/**
 *
 * @author  pu
 */
public class PanelReport115Group1_2549 extends javax.swing.JPanel implements StandardGui ,
ManageAllPanel{ 
    
    /**
     * Creates new form PanelReport115Group1_2549 
     */
    HosControl theHosControl;
    
    private boolean isProcessRunning = false;
    
    private Vector vGroup1OPD;
    private Vector vGroup1IPD;
    private Vector vGroup1Refer;
    private Vector vGroup1PCU;
    private Vector vGroup1;
    
    private RP115Group1OPD theRP115Group1OPD;
    private RP115Group1IPD theRP115Group1IPD;
    private RP115Group1PCU theRP115Group1PCU;
    private RP115Group1Refer theRP115Group1Refer;
    private RP115Group1 theRP115Group1;
    
    private String select_path = ""; 
    private String fileType = "";
    private String startDate ="";
    private String endDate = "";
    private String cardName = "Report115Group1_2549";  
    public FileName theFileName; 
    private int currentPart;
    
    DefaultTableCellRenderer rendererCenter;
        String[] col_refer = {  Gutil.getTextBundle("TypePlan") + " Refer",
                Gutil.getTextBundle("ในCUP(รับ)"),
                Gutil.getTextBundle("ในจังหวัด(รับ)"),
                Gutil.getTextBundle("นอกจังหวัด(รับ)"),
                Gutil.getTextBundle("ในCUP(ส่ง)"),
                Gutil.getTextBundle("ในจังหวัด(ส่ง)"),
                Gutil.getTextBundle("นอกจังหวัด(ส่ง)")
        };
        String[] col_opd = {  Gutil.getTextBundle("TypePlan")+ " OPD",
                Gutil.getTextBundle("ในเครือ(คนใหม่)"),
                Gutil.getTextBundle("นอกเครือ(คนใหม่)"),
                Gutil.getTextBundle("ในเครือ(ครั้ง)"),
                Gutil.getTextBundle("นอกเครือ(ครั้ง)")
        };
        String[] col_ipd = {  Gutil.getTextBundle("TypePlan")+ " IPD",
                Gutil.getTextBundle("ในเครือ(จำหน่าย)"),
                Gutil.getTextBundle("นอกเครือ(จำหน่าย)"),
                Gutil.getTextBundle("ในเครือ(วันนอน)"),
                Gutil.getTextBundle("นอกเครือ(วันนอน)")
        };
        String[] col_pcu = {  Gutil.getTextBundle("TypePlan") + " PCU",
                Gutil.getTextBundle("ในเครือ(คนใหม่)"),
                Gutil.getTextBundle("นอกเครือ(คนใหม่)"),
                Gutil.getTextBundle("ในเครือ(ครั้ง)"),
                Gutil.getTextBundle("นอกเครือ(ครั้ง)")
        };
    private boolean isDbBackup;
     
    public PanelReport115Group1_2549(HosControl hcl)
    {
        initComponents();
        theFileName = new FileName();
        theHosControl = hcl;
        theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
        this.currentPart = 1;
        this.setEnableRadioButton(true);
        jRadioButtonOPD.setSelected(true);
        setLanguage();        
    }
    
    public void setExportFile(String fileType, String path)
    {
        if(path != null && fileType != null)
        {
            this.fileType = fileType;
            this.select_path = path;            
            // รวม Vector สำหรับบันทึกเป็นส่วนที่ 1
            setVectorAllGroup1();
            ExportFile();
        }
        else
        {
            System.out.println("++++++++++++++++++++++ select_path is null ");
        }
    }
    
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        this.setEnableRadioButton(true);
        isDbBackup = dbBackup;
        setDefaultReport(isDbBackup);
    }
    
    public void setQueryReport(String startDate, String endDate, String treatStatus)
    {
        // สำหรับรายงาน 506 เท่านั้น
    }
    
    public String getCardName()
    {
        return this.cardName;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroupSelectReport = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanelSelectViewReport = new javax.swing.JPanel();
        jRadioButtonOPD = new javax.swing.JRadioButton();
        jRadioButtonPCU = new javax.swing.JRadioButton();
        jRadioButtonIPD = new javax.swing.JRadioButton();
        jRadioButtonRefer = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport115GroupOPD = new com.hosv3.gui.component.HJTableSort();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableReport115GroupPCU = new com.hosv3.gui.component.HJTableSort();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableReport115GroupIPD = new com.hosv3.gui.component.HJTableSort();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableReport115GroupRefer = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanelSelectViewReport.setLayout(new java.awt.GridBagLayout());

        buttonGroupSelectReport.add(jRadioButtonOPD);
        jRadioButtonOPD.setText("OPD");
        jRadioButtonOPD.setEnabled(false);
        jRadioButtonOPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonOPDActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);
        jPanelSelectViewReport.add(jRadioButtonOPD, gridBagConstraints);

        buttonGroupSelectReport.add(jRadioButtonPCU);
        jRadioButtonPCU.setText("PCU");
        jRadioButtonPCU.setEnabled(false);
        jRadioButtonPCU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonPCUActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);
        jPanelSelectViewReport.add(jRadioButtonPCU, gridBagConstraints);

        buttonGroupSelectReport.add(jRadioButtonIPD);
        jRadioButtonIPD.setText("IPD");
        jRadioButtonIPD.setEnabled(false);
        jRadioButtonIPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIPDActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);
        jPanelSelectViewReport.add(jRadioButtonIPD, gridBagConstraints);

        buttonGroupSelectReport.add(jRadioButtonRefer);
        jRadioButtonRefer.setText("Refer");
        jRadioButtonRefer.setEnabled(false);
        jRadioButtonRefer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonReferActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 0);
        jPanelSelectViewReport.add(jRadioButtonRefer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanelSelectViewReport, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("ReportDetail"));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(22, 150));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(453, 403));
        jTableReport115GroupOPD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableReport115GroupOPD);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        jScrollPane2.setMinimumSize(new java.awt.Dimension(22, 150));
        jScrollPane2.setPreferredSize(new java.awt.Dimension(453, 403));
        jTableReport115GroupPCU.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableReport115GroupPCU);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane2, gridBagConstraints);

        jScrollPane4.setMinimumSize(new java.awt.Dimension(22, 150));
        jScrollPane4.setPreferredSize(new java.awt.Dimension(453, 403));
        jTableReport115GroupIPD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableReport115GroupIPD);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane4, gridBagConstraints);

        jScrollPane5.setMinimumSize(new java.awt.Dimension(22, 150));
        jScrollPane5.setPreferredSize(new java.awt.Dimension(453, 403));
        jTableReport115GroupRefer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane5.setViewportView(jTableReport115GroupRefer);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane5, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonPCUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonPCUActionPerformed
    // จัดการส่วน PCU
        this.currentPart = 2;
        Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1PCUByDate(this.startDate,this.endDate,isDbBackup);
        showCurrentDate();
        this.setTableGroup1PCU(v);
    }//GEN-LAST:event_jRadioButtonPCUActionPerformed

    private void jRadioButtonReferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonReferActionPerformed
        // จัดการส่วน Refer
        this.currentPart =4;
        Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1ReferByDate(this.startDate,this.endDate,isDbBackup);
        showCurrentDate();
        this.setTableGroup1Refer(v);
    }//GEN-LAST:event_jRadioButtonReferActionPerformed

    private void jRadioButtonIPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIPDActionPerformed
        // จัดการส่วน IPD
        this.currentPart = 3;
        Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1IPDByDate(this.startDate,this.endDate,isDbBackup);
        showCurrentDate();
        this.setTableGroup1IPD(v);
    }//GEN-LAST:event_jRadioButtonIPDActionPerformed

    private void jRadioButtonOPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonOPDActionPerformed
        // จัดการส่วน OPD
        this.currentPart = 1;
        Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1OPDByDate(this.startDate,this.endDate,isDbBackup);
        showCurrentDate();
        this.setTableGroup1OPD(v);
    }//GEN-LAST:event_jRadioButtonOPDActionPerformed
    public void chooseAll(String df,String dt){
        startDate = df;
        endDate = dt;
        Vector vOpd = theHosControl.theRP115Group1_2549Control.selectGroup1OPDByDate(this.startDate,this.endDate,isDbBackup);
        this.setTableGroup1OPD(vOpd);
        Vector vIpd = theHosControl.theRP115Group1_2549Control.selectGroup1IPDByDate(this.startDate,this.endDate,isDbBackup);
        this.setTableGroup1IPD(vIpd);
        Vector vRefer = theHosControl.theRP115Group1_2549Control.selectGroup1ReferByDate(this.startDate,this.endDate,isDbBackup);
        this.setTableGroup1Refer(vRefer);
        Vector vPcu = theHosControl.theRP115Group1_2549Control.selectGroup1PCUByDate(this.startDate,this.endDate,isDbBackup);
        this.setTableGroup1PCU(vPcu);
        this.setEnableRadioButton(true);
        theHosControl.theExportControl.print115_1(vOpd,vIpd,vRefer,vPcu,this.startDate,this.endDate);

    }

    /**
     *  ใช้ในการกำหนด ให้ RadioButton สามารถทำงาน enable ได้หรือไม่
     *  @param enabled เป็น boolean ถ้าเป็น true จะ enable ถ้าเป็น false จะ disable
     */
    private void setEnableRadioButton(boolean enabled)
    {
        jRadioButtonOPD.setEnabled(enabled);
        jRadioButtonPCU.setEnabled(enabled);
        jRadioButtonIPD.setEnabled(enabled);
        jRadioButtonRefer.setEnabled(enabled);
    }
    /**
     *  ใช้ในการส่งค่าของวันที่ปัจจุบันที่กำลัง query อยู่กลับไปยัง panel หลัก หาก panel หลัก
     *  มีการเปลี่ยนวันที่
     */
    private void showCurrentDate()
    {
        this.theHosControl.theHosSubject.theMainReportSubject.notifyReturnStartAndFinishDate(startDate, endDate);
    }
    
    /**
     *  เป็น Function สำหรับรวม Vector ทั้ง 4 ส่วนของส่วนที่ 1 เพื่อนำไป Save เป็น File เดียวกัน
     *  ข้อมูลที่ต้องการ  vGroup1OPD, vGroup1IPD, vGroup1Refer, vGroup1PCU
     *  ทั้ง 4 จะต้องมีค่านั้นคือ Record ไม่เป็น 0 
     *  หาก Record ของ Vector เป็น 0 ให้ดึงข้อมูลของ Vector นั้นใหม่ 
     **/
    private void setVectorAllGroup1() 
    {
        //this.vGroup1 = theHosControl.theRP115Group1Control.setVectorAllGroup1(this.vGroup1OPD, this.vGroup1IPD, this.vGroup1Refer, this.vGroup1PCU);
        this.vGroup1 = theHosControl.theRP115Group1_2549Control.setVectorAllGroup1(this.vGroup1OPD, this.vGroup1IPD, this.vGroup1Refer, this.vGroup1PCU);
    }
    
    public void ExportFile()
    {
        setProcessRunning(true);
        try {
                theHosControl.theExportControl.startExportByVector(this.vGroup1,this.select_path,this.fileType,theFileName.getRP115Group1());
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }        
    }
    
    public void setDefaultReport(boolean isDbBackup)
    {
        setProcessRunning(true);
        try
        {
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            // Clear data Report
            if(this.currentPart == 1)// Default OPD
            {
                Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1OPDByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup1OPD(v);
            }
            else if(this.currentPart == 2)
            {
                Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1PCUByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup1PCU(v);
            }
            else if(this.currentPart == 3)
            {
                Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1IPDByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup1IPD(v);
            }
            else if(this.currentPart == 4)
            {
                Vector v = theHosControl.theRP115Group1_2549Control.selectGroup1ReferByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup1Refer(v);
            }
            //theHosControl.start();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void setTableGroup1OPD(Vector v)
    {
        vGroup1OPD = v;
        TableModel tm;
        int size = 0;
        if(this.vGroup1OPD != null && this.vGroup1OPD.size() > 0)
        {
            size = this.vGroup1OPD.size();
            tm= new TableModel(col_opd,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group1OPD = new RP115Group1OPD();
                theRP115Group1OPD = (RP115Group1OPD)this.vGroup1OPD.get(i);
                
                tm.setValueAt(theRP115Group1OPD.opd_plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group1OPD.opd_new_patient_incup),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group1OPD.opd_new_patient_outcup),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group1OPD.opd_visit_incup),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group1OPD.opd_visit_outcup),i,4);
                
                theRP115Group1OPD = null;
            }
        }
        else
        {
            tm= new TableModel(col_opd,0);
        }
        this.jTableReport115GroupOPD.setModel(tm);
        setTableDefault(jTableReport115GroupOPD);
        sendDataToMainReport(size);
    }
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    private void setTableGroup1IPD(Vector v)
    {
        vGroup1IPD = v;
        TableModel tm;
        int size =0;
        if(this.vGroup1IPD != null && this.vGroup1IPD.size() > 0)
        {  size = this.vGroup1IPD.size();
           tm= new TableModel(col_ipd,size);
           
           for(int i=0;i<size; i++)
           {
               theRP115Group1IPD = new RP115Group1IPD();
               theRP115Group1IPD = (RP115Group1IPD)this.vGroup1IPD.get(i);
               
               tm.setValueAt(theRP115Group1IPD.ipd_plan_type,i,0);
               tm.setValueAt(Integer.valueOf(theRP115Group1IPD.ipd_discharge_incup),i,1);
               tm.setValueAt(Integer.valueOf(theRP115Group1IPD.ipd_discharge_outcup),i,2);
               tm.setValueAt(Integer.valueOf(theRP115Group1IPD.ipd_day_stay_incup),i,3);
               tm.setValueAt(Integer.valueOf(theRP115Group1IPD.ipd_day_stay_outcup),i,4);
               
               theRP115Group1IPD = null;
           }
        }
        else
        {
            tm= new TableModel(col_ipd,0);
        }
        this.jTableReport115GroupIPD.setModel(tm);
        setTableDefault(jTableReport115GroupIPD);
        sendDataToMainReport(size);
    }
    
    private void setTableGroup1PCU(Vector v)
    {
        this.vGroup1PCU = v;
        TableModel tm;
        if(this.vGroup1PCU != null && this.vGroup1PCU.size() > 0)
        {
            tm= new TableModel(col_pcu,vGroup1PCU.size());
            
            for(int i=0,sizePCU=this.vGroup1PCU.size();i<sizePCU; i++)
            {
                theRP115Group1PCU = new RP115Group1PCU();
                
                theRP115Group1PCU = (RP115Group1PCU)this.vGroup1PCU.get(i);
                
                tm.setValueAt(theRP115Group1PCU.pcu_plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group1PCU.pcu_new_patient_incup),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group1PCU.pcu_new_patient_outcup),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group1PCU.pcu_visit_incup),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group1PCU.pcu_visit_outcup),i,4);
                
                theRP115Group1PCU = null;
            }
        }
        else
        {
            tm= new TableModel(col_pcu,0);
        }
        this.jTableReport115GroupPCU.setModel(tm);
        setTableDefault(jTableReport115GroupPCU);
    }
    
    private void setTableGroup1Refer(Vector v)
    {
        vGroup1Refer = v;
        TableModel tm;
        int size = 0;
        
        if(this.vGroup1Refer != null && this.vGroup1Refer.size() > 0)
        {   size = vGroup1Refer.size();
            tm= new TableModel(col_refer,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group1Refer = new RP115Group1Refer();
                theRP115Group1Refer = (RP115Group1Refer)this.vGroup1Refer.get(i);
                
                tm.setValueAt(theRP115Group1Refer.refer_plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_in_incup),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_in_inchangwat),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_in_outchangwat),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_out_incup),i,4);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_out_inchangwat),i,5);
                tm.setValueAt(Integer.valueOf(theRP115Group1Refer.refer_out_outchangwat),i,6);
                
                theRP115Group1Refer = null;
            }
        }
        else
        {
            tm= new TableModel(col_refer,0);
        }
        this.jTableReport115GroupRefer.setModel(tm);
        setTableDefault(jTableReport115GroupRefer);
        sendDataToMainReport(size);
    }
    
    
    private void setTableDefault(HJTableSort jt)
    {
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        //กำหนดให้จัด Column ให้อยู่ทางด้านขวา
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        jt.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
        jt.getColumnModel().getColumn(2).setCellRenderer(rendererCenter);
        jt.getColumnModel().getColumn(3).setCellRenderer(rendererCenter);
        jt.getColumnModel().getColumn(4).setCellRenderer(rendererCenter);
        jt.getColumnModel().getColumn(0).setPreferredWidth(270);
        jt.getColumnModel().getColumn(1).setPreferredWidth(70);
        jt.getColumnModel().getColumn(2).setPreferredWidth(70);
        jt.getColumnModel().getColumn(3).setPreferredWidth(70);
        jt.getColumnModel().getColumn(4).setPreferredWidth(70);
        if(jt.getColumnCount()>5){
            jt.getColumnModel().getColumn(5).setCellRenderer(rendererCenter);
            jt.getColumnModel().getColumn(6).setCellRenderer(rendererCenter);
            jt.getColumnModel().getColumn(5).setPreferredWidth(70);
            jt.getColumnModel().getColumn(6).setPreferredWidth(70);
        }
    }
    
    public void setProcessRunning(boolean isProcessRunning)
    {
        this.isProcessRunning = isProcessRunning;
    }
    
    public void setLanguage()
    {
        jRadioButtonOPD.setText(Gutil.getTextBundle(jRadioButtonOPD.getText()));
        jRadioButtonIPD.setText(Gutil.getTextBundle(jRadioButtonIPD.getText()));
        jRadioButtonPCU.setText(Gutil.getTextBundle(jRadioButtonPCU.getText()));
        jRadioButtonRefer.setText(Gutil.getTextBundle(jRadioButtonRefer.getText()));
        
        Gutil.JPanelLabler(jPanel3);
    }
    
    public void notifySetInitAllGUI()
    {
        setEnableRadioButton(false);
        setTableGroup1Refer(null);
        setTableGroup1IPD(null);
        setTableGroup1OPD(null);
        setTableGroup1PCU(null);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroupSelectReport;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    public javax.swing.JPanel jPanelSelectViewReport;
    private javax.swing.JRadioButton jRadioButtonIPD;
    private javax.swing.JRadioButton jRadioButtonOPD;
    private javax.swing.JRadioButton jRadioButtonPCU;
    private javax.swing.JRadioButton jRadioButtonRefer;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.hosv3.gui.component.HJTableSort jTableReport115GroupIPD;
    private com.hosv3.gui.component.HJTableSort jTableReport115GroupOPD;
    private com.hosv3.gui.component.HJTableSort jTableReport115GroupPCU;
    private com.hosv3.gui.component.HJTableSort jTableReport115GroupRefer;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setQueryReport(String startDate, String endDate) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
