/*
 * PanelReportIndex.java
 *
 * Created on 7 ตุลาคม 2548, 10:14 น.
 */

package com.standardReport.gui.panel;
import com.standardReport.subject.CellRendererToolTipText;
import com.standardReport.subject.TableModelGUI;
import java.util.HashMap;
import javax.swing.table.DefaultTableCellRenderer;

import com.standardReport.utility.*;
import com.standardReport.control.HosManage;

/**
 *
 * @author  tong(Padungrat)
 */
public class PanelReportIndex extends javax.swing.JPanel {
    
    String[] headColumn;
    HashMap hashmap;
    TableModelGUI theTableModelGUI;
    HosManage theHosManage;
    int language = 1;
    /**ใช้ในการจัดการกับ cell ในตารางให้อยู่ตรงกลาง*/
    private DefaultTableCellRenderer rendererCenter;
    
    private CellRendererToolTipText cellRendererToolTipText;
    public PanelReportIndex(HosManage hosManage) {
        theHosManage = hosManage;
        initComponents();
        InitObject();
        setLanguage();
        showTableReport();
    }
    private void InitObject()
    {
        hashmap = Constant.Report;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelMain = new javax.swing.JPanel();
        jPanelMainReport = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableMainReport = new com.hosv3.gui.component.HJTableSort();
        jPanelControl = new javax.swing.JPanel();
        jButtonOK = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        jPanelMain.setLayout(new java.awt.GridBagLayout());

        jPanelMainReport.setLayout(new java.awt.GridBagLayout());

        jPanelMainReport.setBorder(new javax.swing.border.TitledBorder("StandardReport"));
        jTableMainReport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jTableMainReport.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseReleased(java.awt.event.MouseEvent evt)
            {
                jTableMainReportMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableMainReport);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelMainReport.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelMain.add(jPanelMainReport, gridBagConstraints);

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonOK.setText("OK");
        jButtonOK.setMaximumSize(new java.awt.Dimension(65, 24));
        jButtonOK.setMinimumSize(new java.awt.Dimension(65, 24));
        jButtonOK.setPreferredSize(new java.awt.Dimension(65, 24));
        jButtonOK.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButtonOKActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        jPanelControl.add(jButtonOK, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanelMain.add(jPanelControl, gridBagConstraints);

        add(jPanelMain, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOKActionPerformed
        callReportShow();
    }//GEN-LAST:event_jButtonOKActionPerformed

    private void jTableMainReportMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableMainReportMouseReleased
        checkDoubleClick(evt);
    }//GEN-LAST:event_jTableMainReportMouseReleased
    
    /**
     *  ทำการเลือกข้อมูลบนตารางเพื่อให้ได้ ข้อมูลของรายงาน
     *  @return เป็น Object ของ Report ที่ได้จากการเลือกบนตาราง
     */
    private Report getSelectReport()
    {   Report report = new Report();
        //หาลำดับที่อยู่บนตาราง
        int select = jTableMainReport.getSelectedRow();
        //ตรวจสอบลำดับที่อยู่บนตารางต้องมากกว่า -1
        if(select > -1)
        {   //ตรวจสอบ hashmap มีค่าข้อมูลหรือไม่
            if(hashmap != null)
            {
                //ให้ค่ากับ object report
                report = (Report)hashmap.get(String.valueOf(select+1));
                
            }
        }
        
        return report;
    }
    
    /**
     *  ใช้ในการส่งข้อมูลไปยัง PanelReportFile เมื่อมีการเลือกรายการบนตารางแสดง
     */
    private void callReportShow()
    {
        int row = jTableMainReport.getSelectedRow();
        //ตรวจสอบ การเลือกข้อมูลบนตาราง
        if(row > -1)
        {
            theHosManage.theHosControl.theHosSubject.theShowPanelSelectSubject.notifyCallReportShow(getSelectReport());
        }
        else
        {
            showMessage("SelectInTable");
        }
    }
    
    
    /**
     *  ใช้ในการแสดง Message เท่านั้น เป็นแบบ OK_OPTION
     *  @param msg เป็นข้อความที่ต้องการจะให้แสดงใน Dialog
     */
    private void showMessage(String msg)
    {
        javax.swing.JOptionPane.showMessageDialog(this,msg,"Waning",javax.swing.JOptionPane.OK_OPTION);
    }
    
    /**
     *  ตรวจสอบการ DoubleClick ที่อยู่บนตาราง ถ้าเป็นการ DoubleClick ให้ส่งข้อมูล
     *  กลับไปยัง panelReportFile
     */
    public void checkDoubleClick(java.awt.event.MouseEvent evt)
    {
        int click = evt.getClickCount();
        //ตรวจสอบการ DoubleClick 
        if(click > 1)
        {
            callReportShow();   
        }
    }
    /**
     *  ใช้ในการ แสดงข้อมูลลงตาราง โดยการรับข้อมูลมาจาก HashMap
     *  และแสดงข้อมูลลงบนตาราง
     */
    private void showTableReport( )
    {   theTableModelGUI = new TableModelGUI(headColumn,0);
        if(hashmap != null)
        {
            int size = hashmap.size();
            theTableModelGUI = new TableModelGUI(headColumn,size);
            Report report;
            for(int i =0 ; i< size ;i++)
            {   //ตำแหน่งต้องบวกหนึ่งเพราะค่า index จะไม่เก็บตำแหน่งที่ 0 ไว้
                report = (Report)hashmap.get(String.valueOf(i+1));
                if(report != null)
                {
                    theTableModelGUI.setValueAt(Integer.valueOf(report.INDEX),i,0);
                    theTableModelGUI.setValueAt(report.THAI_NAME,i,1);
                    theTableModelGUI.setValueAt(report.DESCRIPTION,i,2);
                }
                report =null;
            }
            report = null;
            
            
        }
        jTableMainReport.setModel(theTableModelGUI);
        setTableListReportPattern();
        selectDataInTable();
        
    }
    /**
     *  ใช้ในการเลือกรายงานแรกของตาราง
     */
    private void selectDataInTable()
    {
        //
        int row = jTableMainReport.getRowCount();
        if(row > 0)
        {
            jTableMainReport.setRowSelectionInterval(0,0);
        }
    }
    
    /**ใช้ในการแสดงความกว้างของคอลัมน์*/
    private void setTableListReportPattern(){
        
        if(rendererCenter == null){
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(cellRendererToolTipText == null){
            cellRendererToolTipText = new CellRendererToolTipText(true);
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        
        jTableMainReport.getColumnModel().getColumn(0).setPreferredWidth(47);
       // jTableMainReport.getColumnModel().getColumn(0).setCellRenderer(cellRendererToolTipText);
        jTableMainReport.getColumnModel().getColumn(1).setPreferredWidth(180);
        jTableMainReport.getColumnModel().getColumn(1).setCellRenderer(cellRendererToolTipText);
       
        jTableMainReport.getColumnModel().getColumn(2).setPreferredWidth(500);
        jTableMainReport.getColumnModel().getColumn(2).setCellRenderer(cellRendererToolTipText);
       
    }
    
    /**
     *  ใช้ในการกำหนดภาษาใน GUI
     */
    public void setLanguage()
    {
        
        headColumn = new String[] {"ลำดับ","รายชื่อรายงาน","คำอธิบาย"};
        
        headColumn[0] = Gutil.getTextBundle("Sequence");
        headColumn[1] = Gutil.getTextBundle("ReportName");
        headColumn[2] = Gutil.getTextBundle("Description");
        
        jButtonOK.setText(Gutil.getTextBundle(jButtonOK.getText()));
        
        jPanelMainReport.setBorder(new javax.swing.border.TitledBorder(Gutil.getTextBundle("StandardReport")));
        
    }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOK;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelMain;
    private javax.swing.JPanel jPanelMainReport;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTableMainReport;
    // End of variables declaration//GEN-END:variables
    
}
