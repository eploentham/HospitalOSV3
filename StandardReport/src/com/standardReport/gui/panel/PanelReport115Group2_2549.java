/*
 * PanelReport115Group2_2549.java
 *
 * Created on 13 กันยายน 2548, 9:27 น.
 */

package com.standardReport.gui.panel;

import com.standardReport.object.RP115Group2Family_2549;
import com.standardReport.object.RP115Group2Post_2549;
import com.standardReport.object.RP115Group2Pre_2549;
import com.standardReport.subject.ManageAllPanel;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;

import com.standardReport.control.HosControl;
import com.standardReport.subject.StandardGui;
import com.standardReport.utility.*;

import com.standardReport.object.FileName;

/**
 *
 * @author  pu
 */
public class PanelReport115Group2_2549 extends javax.swing.JPanel implements StandardGui,
ManageAllPanel{
    
    /** Creates new form PanelReport115Group2_2549 */
    HosControl theHosControl;
    
    private Vector vGroup2Pre;
    private Vector vGroup2Post;
    private Vector vGroup2Family;
    private Vector vGroup2;
    
    private RP115Group2Pre_2549 theRP115Group2Pre_2549;
    private RP115Group2Post_2549 theRP115Group2Post_2549;
    private RP115Group2Family_2549 theRP115Group2Family_2549;
    
    
    private boolean isProcessRunning = false;
    
    private String select_path = ""; 
    private String fileType = "";
    private String startDate ="";
    private String endDate = "";
    private String cardName = "Report115Group2_2549";  
    public FileName theFileName; 
    private int currentPart;
    DefaultTableCellRenderer rendererCenter;
    private boolean isDbBackup;
    
    public PanelReport115Group2_2549(HosControl hcl)
    {
        initComponents();
        theFileName = new FileName();
        theHosControl = hcl;
        theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
        this.currentPart = 1;
        setEnableRadioButton(true);
        jRadioButton1.setSelected(true);
        setLanguage();
    }
    
    public void setExportFile(String fileType, String path)
    {
        if(path != null && fileType != null)
        {
            this.fileType = fileType;
            this.select_path = path;
            setVectorAllGroup2();
            ExportFile();
        }
        else
        {
            System.out.println("++++++++++++++++++++++ select_path is null ");
        }
    }
    
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        setEnableRadioButton(true);
        isDbBackup = dbBackup;
        setDefaultPreReport(isDbBackup);
    }
    
    public void setQueryReport(String startDate, String endDate, String treatStatus)
    {
        // สำหรับรายงาน 506 เท่านั้น
    }
    
    public String getCardName()
    {
        return this.cardName;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents()
    {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport115Group2 = new com.hosv3.gui.component.HJTableSort();
        jPanel4 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Part1");
        jRadioButton1.setEnabled(false);
        jRadioButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton1ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Part2");
        jRadioButton2.setEnabled(false);
        jRadioButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton2ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jRadioButton2, gridBagConstraints);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("FamilyPlaning");
        jRadioButton3.setEnabled(false);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jRadioButton3ActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanel2.add(jRadioButton3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setBorder(new javax.swing.border.TitledBorder("ReportDetail"));
        jScrollPane1.setBorder(null);
        jTableReport115Group2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {

            }
        ));
        jScrollPane1.setViewportView(jTableReport115Group2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 12));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("\u0e2b\u0e21\u0e32\u0e22\u0e40\u0e2b\u0e15\u0e38 : \u0e40\u0e19\u0e37\u0e48\u0e2d\u0e07\u0e08\u0e32\u0e01\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e1a\u0e19\u0e2b\u0e19\u0e49\u0e32\u0e08\u0e2d\u0e44\u0e21\u0e48\u0e40\u0e1e\u0e35\u0e22\u0e07\u0e1e\u0e2d \u0e08\u0e36\u0e07\u0e41\u0e1a\u0e48\u0e07\u0e01\u0e32\u0e23\u0e41\u0e2a\u0e14\u0e07\u0e1c\u0e25\u0e2d\u0e2d\u0e01\u0e40\u0e1b\u0e47\u0e19\u0e2a\u0e48\u0e27\u0e19 \u0e46  \n                  \u0e40\u0e21\u0e37\u0e48\u0e2d\u0e17\u0e33\u0e01\u0e32\u0e23\u0e1a\u0e31\u0e19\u0e17\u0e36\u0e01\u0e08\u0e30\u0e19\u0e33\u0e17\u0e31\u0e49\u0e07 3 \u0e2a\u0e48\u0e27\u0e19\u0e23\u0e27\u0e21\u0e40\u0e1b\u0e47\u0e19 File \u0e40\u0e14\u0e35\u0e22\u0e27\u0e01\u0e31\u0e19");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextArea1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton3ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton3ActionPerformed
        //จัดการส่วนการวางแผนครอบครัว
        this.currentPart = 3;
        manageFamilyReport();
        showCurrentDate();
        this.setTableGroup2Family();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // จัดการส่วนหลัง
        this.currentPart = 2;
        managePostReport();
        showCurrentDate();
        this.setTableGroup2Post();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // จัดการส่วนหน้า
        this.currentPart = 1;
        managePreReport();
        showCurrentDate();
        this.setTableGroup2Pre();
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    public void chooseAll(String df,String dt){
        startDate = df;
        endDate = dt;
        managePreReport(); 
        this.setTableGroup2Pre(); 
        managePostReport(); 
        this.setTableGroup2Post(); 
        manageFamilyReport();
        this.setTableGroup2Family();
        this.setEnableRadioButton(true);
        theHosControl.theExportControl.print115_2(vGroup2Pre,vGroup2Post,vGroup2Family,this.startDate,this.endDate);
    }
    /**
     *  ใช้ในการกำหนด ให้ RadioButton สามารถทำงาน enable ได้หรือไม่
     *  @param enabled เป็น boolean ถ้าเป็น true จะ enable ถ้าเป็น false จะ disable
     */
    private void setEnableRadioButton(boolean enabled)
    {
        jRadioButton1.setEnabled(enabled);
        jRadioButton2.setEnabled(enabled);
        jRadioButton3.setEnabled(enabled);
    }
    /**
     *  ใช้ในการส่งค่าของวันที่ปัจจุบันที่กำลัง query อยู่กลับไปยัง panel หลัก หาก panel หลัก
     *  มีการเปลี่ยนวันที่
     */
    private void showCurrentDate()
    {
        this.theHosControl.theHosSubject.theMainReportSubject.notifyReturnStartAndFinishDate(startDate, endDate);
    }
    /**
     *  เป็น Function สำหรับรวม Vector ทั้ง 4 ส่วนของส่วนที่ 1 เพื่อนำไป Save เป็น File เดียวกัน
     *  ข้อมูลที่ต้องการ  vGroup1OPD, vGroup1IPD, vGroup1Refer, vGroup1PCU
     *  ทั้ง 4 จะต้องมีค่านั้นคือ Record ไม่เป็น 0 
     *  หาก Record ของ Vector เป็น 0 ให้ดึงข้อมูลของ Vector นั้นใหม่ 
     **/
    private void setVectorAllGroup2() 
    {
        // ตรวจสอบ Vector
        this.managePreReport();
        this.managePostReport();
        this.manageFamilyReport();
        
        this.vGroup2 = theHosControl.theRP115Group2_2549Control.setVectorAllGroup2(this.vGroup2Pre, this.vGroup2Post, this.vGroup2Family);
    }

    private void managePreReport()
    {
            this.vGroup2Pre = new Vector();    
            this.vGroup2Pre = theHosControl.theRP115Group2_2549Control.selectGroup2PreByDate(this.startDate,this.endDate,isDbBackup);
    }
    
    private void managePostReport()
    {
            this.vGroup2Post = new Vector();   
            this.vGroup2Post = theHosControl.theRP115Group2_2549Control.selectGroup2PostByDate(this.startDate,this.endDate,isDbBackup);
    }
    
    private void manageFamilyReport()
    {
            this.vGroup2Family = new Vector();
            this.vGroup2Family = theHosControl.theRP115Group2_2549Control.selectGroup2FamilyByDate(this.startDate,this.endDate,isDbBackup);
    }
    
    public void ExportFile()
    {
        setProcessRunning(true);
        try
        {
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            
            if(this.vGroup2 != null)
            {
                theHosControl.theExportControl.startExportByVector(this.vGroup2,this.select_path,this.fileType,theFileName.getRP115Group2_2549());
            }
            else
            {
                System.out.println("----*******------vGroup1 --null------********------");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public void setDefaultPreReport(boolean isDbBackup)
    {
        setProcessRunning(true);
        //jRadioButton1.setSelected(true);
        try
        {
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            
            // Clear data Report
            setNewVectorReport();
            if(this.currentPart ==1)
            {
                // Default Pre
                this.vGroup2Pre = theHosControl.theRP115Group2_2549Control.selectGroup2PreByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup2Pre();
            }
            else if(this.currentPart ==2)
            {
                this.vGroup2Post = theHosControl.theRP115Group2_2549Control.selectGroup2PostByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup2Post();
            }
            else if(this.currentPart ==3)
            {
                this.vGroup2Family = theHosControl.theRP115Group2_2549Control.selectGroup2FamilyByDate(this.startDate,this.endDate,isDbBackup);
                showCurrentDate();
                this.setTableGroup2Family();
            }
            //theHosControl.start();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void setNewVectorReport()
    {
        this.vGroup2Pre = new Vector();
        this.vGroup2Post = new Vector();
        this.vGroup2Family = new Vector();
        
        this.vGroup2 = new Vector();
    }
    
    private void setTableGroup2Pre()
    {
        //String[] col = {"ประเภทสิทธิ","โรคความดันโลหิตสูง/เบาหวาน(คน)","โรคความดันโลหิตสูง/เบาหวาน(ครั้ง)","แท้ง(ครั้ง)","เกิดไร้ชีพ(คน)","เด็กอายุต่ำกว่า 7 วันตาย(คน)","แม่ตาย(คน)","ตาย(ผู้ป่วยใน)","ตาย(ผู้ป่วยนอก)"};
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Abort_Time"),
                Gutil.getTextBundle("BornAndDeath_Person"),
                Gutil.getTextBundle("Least7Death_Person"),
                Gutil.getTextBundle("MotherDeath_Person"),
                Gutil.getTextBundle("IpdDeath"),
                Gutil.getTextBundle("OpdDeath")
        };
        TableModel tm;
        int size = 0;
        if(this.vGroup2Pre != null && this.vGroup2Pre.size() > 0)
        {
            size = vGroup2Pre.size();
            tm= new TableModel(col,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group2Pre_2549 = new RP115Group2Pre_2549();
                theRP115Group2Pre_2549 = (RP115Group2Pre_2549)this.vGroup2Pre.get(i);
                
                tm.setValueAt(theRP115Group2Pre_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.abort),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.birth_and_death),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.baby_death),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.mother_death),i,4);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.ipd_death),i,5);
                tm.setValueAt(Integer.valueOf(theRP115Group2Pre_2549.opd_death),i,6);
                
                theRP115Group2Pre_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group2.setModel(tm);
        setTableReportDefault();
        sendDataToMainReport(size);
        
    }
    
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    private void setTableGroup2Post()
    {
        // String[] col = {"ประเภทสิทธิ","ตรวจก่อนคลอด(คน)","ตรวจก่อนคลอด(ครั้ง)","ตรวจหลังคลอด(คน)","ตรวจหลังคลอด(ครั้ง)","ทารกคลอดปกติ(คน)","ทารกคลอดผิดปกติ(คน)","ส่งเสริมป้องกันทันตกรรม(คน)","รักษาทางทันตกรรม(คน)"};
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("CheckedBeforeMch_Person"),
                Gutil.getTextBundle("CheckedBeforeMch_Time"),
                Gutil.getTextBundle("CheckedAfterMch_Person"),
                Gutil.getTextBundle("CheckedAfterMch_Time"),
                Gutil.getTextBundle("BirthUsualInfant_Person"),
                Gutil.getTextBundle("BirthUnUsualInfant_Person"),
                Gutil.getTextBundle("TreatmentDental_Person")
        };
        TableModel tm;
        int size = 0;
        if(this.vGroup2Post != null && this.vGroup2Post.size() > 0)
        {   size = vGroup2Post.size();
            tm= new TableModel(col,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group2Post_2549 = new RP115Group2Post_2549();
                theRP115Group2Post_2549 = (RP115Group2Post_2549)this.vGroup2Post.get(i);
                
                tm.setValueAt(theRP115Group2Post_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.before_mch_patient),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.before_mch_visit),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.after_mch_patient),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.after_mch_visit),i,4);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.birth_usual_infant),i,5);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.birth_un_usual_infant),i,6);
                tm.setValueAt(Integer.valueOf(theRP115Group2Post_2549.treatment_dental),i,7);
                
                theRP115Group2Post_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group2.setModel(tm);
        setTableReportDefault();
        sendDataToMainReport(size);
    }
    
    private void setTableGroup2Family()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Childless_female"),
                Gutil.getTextBundle("Childless_male"),
                Gutil.getTextBundle("Childless_drug"),
                Gutil.getTextBundle("Childless_other"),
        };
        TableModel tm;
        int size = 0;
        if(this.vGroup2Family != null && this.vGroup2Family.size() > 0)
        {   size = vGroup2Family.size();
            tm= new TableModel(col,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group2Family_2549 = new RP115Group2Family_2549();
                theRP115Group2Family_2549 = (RP115Group2Family_2549)this.vGroup2Family.get(i);
                
                tm.setValueAt(theRP115Group2Family_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group2Family_2549.childless_female),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group2Family_2549.childless_male),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group2Family_2549.childless_drug),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group2Family_2549.childless_other),i,4);
                
                theRP115Group2Family_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group2.setModel(tm);
        setTableReportDefault();
        sendDataToMainReport(size);
    }
    
    private void setTableReportDefault()
    {
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        this.jTableReport115Group2.getColumnModel().getColumn(0).setPreferredWidth(170);
        for(int i=1;i<jTableReport115Group2.getColumnCount();i++){
            this.jTableReport115Group2.getColumnModel().getColumn(i).setCellRenderer(rendererCenter);
            this.jTableReport115Group2.getColumnModel().getColumn(i).setPreferredWidth(50);
        }
    }
    
    public void setProcessRunning(boolean isProcessRunning)
    {
        this.isProcessRunning = isProcessRunning;
    }
    
    public void setLanguage()
    {
        jRadioButton1.setText(Gutil.getTextBundle(jRadioButton1.getText()));
        jRadioButton2.setText(Gutil.getTextBundle(jRadioButton2.getText()));
        jRadioButton3.setText(Gutil.getTextBundle(jRadioButton3.getText()));
        Gutil.JPanelLabler(jPanel3);
    }
    
    public void notifySetInitAllGUI()
    {
        setEnableRadioButton(false);
        
        vGroup2Post = null;
        setTableGroup2Post();
        
        vGroup2Pre = null;
        setTableGroup2Pre();
        
        vGroup2Family = null;
        setTableGroup2Family();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTableReport115Group2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setQueryReport(String startDate, String endDate) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
