/*
 * PanelReport504Group.java
 *
 * Created on 7 กันยายน 2548, 10:23 น.
 */

package com.standardReport.gui.panel;

import com.hospital_os.utility.TaBleModel;
import com.hosv3.gui.component.HJTableSort;
import com.standardReport.subject.ManageAllPanel;
import java.awt.Dimension;
import java.io.*;
import com.standardReport.utility.*;
import java.util.*;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableCellRenderer;

import com.standardReport.control.HosControl;
import com.standardReport.object.RP504Group;
import com.standardReport.object.FileName;
import com.standardReport.subject.StandardGui;

/**
 *
 * @author  americus
 */
public class PanelReport504Group extends javax.swing.JPanel implements StandardGui,
        ManageAllPanel {
    private HosControl theHosControl;
    private boolean isProcessRunning = false;
    
    public String cur_path = System.getProperty("user.dir");
    private String select_path = "";
    private String fileType = "";
    private String startDate ="";
    private String endDate = "";
    
    public Vector vcRp504Group;
    public RP504Group theRP504Group;
    public FileName theFileName;
    private String cardName = "Report504Group";
    
    DefaultTableCellRenderer rendererCenter;
    /**
     * Creates new form PanelReport504Group
     */
    public PanelReport504Group(HosControl hcl) {
        this.theHosControl = hcl;
        theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
        initComponents();
        setFileName();
        setLanguage();
    }
    
    public void setProcessRunning(boolean isProcessRunning) {
        this.isProcessRunning = isProcessRunning;
    }
    
    public void setFileName() {
        theFileName = new FileName();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelDetail = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport504Group = new com.hosv3.gui.component.HJTableSort();

        setLayout(new java.awt.GridBagLayout());

        setMinimumSize(new java.awt.Dimension(584, 402));
        jPanelDetail.setLayout(new java.awt.GridBagLayout());

        jPanelDetail.setBorder(new javax.swing.border.TitledBorder("ReportDetail"));
        jTableReport504Group.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableReport504Group);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanelDetail.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanelDetail, gridBagConstraints);

    }
    // </editor-fold>//GEN-END:initComponents
    public String getCardName() {
        return this.cardName;
    }
    
    public void setFileDescription(boolean isDbBackup) {
        // setEnableGUI(false);
        setProcessRunning(true);
        try{
            Vector v = theHosControl.theRP504Control.selectRP504GroupByDate(this.startDate,this.endDate,isDbBackup);
            this.setTableRp504Group(v);
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    public void ExportFile() {
        setProcessRunning(true);
        try {
            //theHosControl.setDataExportFile(this.getReportFileName(), startDate, endDate, select_path, fileType);
            if(theHosControl == null) {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            theHosControl.theExportControl.startExportByVector(this.vcRp504Group,this.select_path,this.fileType,theFileName.getRP504Group());
            // theHosControl.setDataExportFile(this.vcRp504Group,theFileName.getRP504Group(),this.startDate,this.endDate,this.select_path,this.fileType,this.reportType);
            if(vcRp504Group != null) {
                System.out.println("-----vcEmployee--------"+vcRp504Group.size());
            }
        } catch(Exception e) {
            e.printStackTrace();
        }
    }
    
    private void setTableRp504Group() {
        setTableRp504Group(vcRp504Group);
    }
    private void setTableRp504Group(Vector v) 
    {
        vcRp504Group = v;
        String[] col = {    Gutil.getTextBundle("GroupCode"),
        Gutil.getTextBundle("GroupName"),
        Gutil.getTextBundle("Male"),
        Gutil.getTextBundle("Female"),
        Gutil.getTextBundle("Non-Spec"),
        Gutil.getTextBundle("Total")};
        
        int size = 0;
        if(this.vcRp504Group != null) {
            size = this.vcRp504Group.size();
            TaBleModel tm= new TaBleModel(col,size);
            for(int i=0 ;i<size; i++) {
                RP504Group rp = ((RP504Group)this.vcRp504Group.get(i));
                tm.setValueAt(Integer.valueOf(rp.group_rp504_number),i,0);
                tm.setValueAt(rp.group_rp504_description_th,i,1);
                tm.setValueAt(Integer.valueOf(rp.group_rp504_male),i,2);
                tm.setValueAt(Integer.valueOf(rp.group_rp504_female),i,3);
                tm.setValueAt(Integer.valueOf(rp.group_rp504_non_spec),i,4);
                tm.setValueAt(Integer.valueOf(rp.group_rp504_total),i,5);
            }
            this.jTableReport504Group.setModel(tm);
            
        } else {
            TaBleModel tm= new TaBleModel(col,0);
            this.jTableReport504Group.setModel(tm);
        }
        DefaultTableCellRenderer rendererCenter = new DefaultTableCellRenderer();
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        DefaultTableCellRenderer rendererRight = new DefaultTableCellRenderer();
        rendererRight.setHorizontalAlignment(javax.swing.JLabel.RIGHT);
        this.jTableReport504Group.getColumnModel().getColumn(0).setCellRenderer(rendererRight);
        this.jTableReport504Group.getColumnModel().getColumn(2).setCellRenderer(rendererRight);
        this.jTableReport504Group.getColumnModel().getColumn(3).setCellRenderer(rendererRight);
        this.jTableReport504Group.getColumnModel().getColumn(4).setCellRenderer(rendererRight);
        this.jTableReport504Group.getColumnModel().getColumn(5).setCellRenderer(rendererRight);

       // this.jTableReport504Group.getColumnModel().getColumn(0).setPreferredWidth(70);
        this.jTableReport504Group.getColumnModel().getColumn(0).setPreferredWidth(70);
        this.jTableReport504Group.getColumnModel().getColumn(1).setPreferredWidth(300);
        this.jTableReport504Group.getColumnModel().getColumn(2).setPreferredWidth(70);
        this.jTableReport504Group.getColumnModel().getColumn(3).setPreferredWidth(70);
        this.jTableReport504Group.getColumnModel().getColumn(4).setPreferredWidth(70);
        this.jTableReport504Group.getColumnModel().getColumn(5).setPreferredWidth(70);

        theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
            theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
    }
    
    public void setLanguage() {
        Gutil.JPanelLabler(jPanelDetail);
    }
    
    public void setExportFile(String fileType, String path) {
        System.out.println("-------setExportFile---------------"+fileType);
        this.fileType = fileType;
        this.select_path = path;
        ExportFile();
    }
    
    public void setQueryReport(String startDate, String endDate, boolean isDbBackup) {
        this.startDate = startDate;
        this.endDate = endDate;
        setFileDescription(isDbBackup);
    }
    
    public void setQueryReport(String startDate, String endDate, String treatStatus) {
    }
    
    public void notifySetInitAllGUI() {
        //setEnableRadioButton(false);
        vcRp504Group = null;
        setTableRp504Group();
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanelDetail;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTableReport504Group;
    // End of variables declaration//GEN-END:variables
    public static void main(String[] argc) {
        JFrame jf = new JFrame();
        HJTableSort h = new HJTableSort();
        JScrollPane js = new JScrollPane();
        //JTable h = new JTable();
        js.setViewportView(h);
        TaBleModel aa = new TaBleModel(new String[]{"index","name"},10);
        String array[] = new String[]{"1","2","12","13","41"};
        aa.setValueAt(Integer.valueOf(array[0]),1,1);
        aa.setValueAt(Integer.valueOf(array[1]),2,1);
        aa.setValueAt(new Integer(array[2]),3,1);
        aa.setValueAt(new Integer(array[3]),4,1);
        aa.setValueAt(new Integer(array[4]),5,1);
        h.setModel(aa);
        jf.getContentPane().add(js);
        jf.setSize(new Dimension(300,200));
        jf.setVisible(true);
    }

    @Override
    public void setQueryReport(String startDate, String endDate) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
}
