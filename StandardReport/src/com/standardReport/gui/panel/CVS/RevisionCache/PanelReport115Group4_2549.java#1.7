/*
 * PanelReport115Group4_2549.java
 *
 * Created on 22 มีนาคม 2549, 16:27 น.
 */

package com.standardReport.gui.panel;

import com.standardReport.object.RP115Group4AbortPregnant_2549;
import com.standardReport.object.RP115Group4Assort_2549;
import com.standardReport.object.RP115Group4CheckConfirm_2549;
import com.standardReport.object.RP115Group4Efficiency_2549;
import com.standardReport.object.RP115Group4HomeAmount_2549;
import com.standardReport.object.RP115Group4PersonAmount_2549;
import com.standardReport.object.RP115Group4SchoolOutSite_2549;
import com.standardReport.object.RP115Group4TreatInfant_2549;
import com.standardReport.object.RP115Group4_2549;
import com.standardReport.subject.ManageAllPanel;
import java.util.*;
import javax.swing.table.DefaultTableCellRenderer;
import com.standardReport.control.HosControl;
import com.standardReport.subject.StandardGui;
import com.standardReport.utility.*;

import com.standardReport.object.FileName;

/**
 *
 * @author  pu
 */
public class PanelReport115Group4_2549 extends javax.swing.JPanel implements StandardGui,
ManageAllPanel{
    
    /** Creates new form PanelReport115Group4_2549 */
    HosControl theHosControl;
    
    private Vector vAssort;
    private Vector vCheckConfirm;
    private Vector vAbortPregnant;
    private Vector vTreatInfant;
    private Vector vEfficiency;
    private Vector vPersonAmount;

    private Vector vGroup4_2549;
    
    private Vector vHomeAmount;
    private Vector vSchoolOutSite;
    
    private RP115Group4Assort_2549 theRP115Group4Assort_2549;
    private RP115Group4CheckConfirm_2549 theRP115Group4CheckConfirm_2549;
    private RP115Group4AbortPregnant_2549 theRP115Group4AbortPregnant_2549;
    private RP115Group4TreatInfant_2549 theRP115Group4TreatInfant_2549;        
    private RP115Group4Efficiency_2549 theRP115Group4Efficiency_2549;
    private RP115Group4PersonAmount_2549 theRP115Group4PersonAmount_2549;
    
    private RP115Group4_2549 theRP115Group4_2549;
    
    private RP115Group4HomeAmount_2549 theRP115Group4HomeAmount_2549;
    private RP115Group4SchoolOutSite_2549 theRP115Group4SchoolOutSite_2549;
    
    private boolean isProcessRunning = false;
    
    private String select_path = ""; 
    private String fileType = "";
    private String startDate ="";
    private String endDate = "";
    private String cardName = "Report115Group4_2549";  
    public FileName theFileName; 
    DefaultTableCellRenderer rendererCenter;
    private boolean isDbBackup;
    
    public PanelReport115Group4_2549(HosControl hcl)
    {
        initComponents();
        theFileName = new FileName();
        theHosControl = hcl;
        theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
        setLanguage();
    }
    
    public void setExportFile(String fileType, String path)
    {
        if(path != null && fileType != null)
        {
            this.fileType = fileType;
            this.select_path = path;
            
            setVectorAllGroup4();
            ExportFile();
        }
        else
        {
            System.out.println("++++++++++++++++++++++ select_path is null ");
        }
    }
    
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        setEnableRadioButton(true);
        isDbBackup = dbBackup;
        setDefaultReportPre(isDbBackup);
    }
    
    public void setQueryReport(String startDate, String endDate, String treatStatus)
    {
        // สำหรับรายงาน 206 เท่านั้น
    }
    
    public String getCardName()
    {
        return this.cardName;
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jPanel6 = new javax.swing.JPanel();
        jRadioButton9 = new javax.swing.JRadioButton();
        jRadioButton10 = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableReport115Group4_2549 = new com.hosv3.gui.component.HJTableSort();
        jPanel4 = new javax.swing.JPanel();
        jTextArea1 = new javax.swing.JTextArea();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Part1"));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("Assort");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton1, gridBagConstraints);

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Confirm");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton2, gridBagConstraints);

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("AbortPregnant");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton3, gridBagConstraints);

        buttonGroup1.add(jRadioButton4);
        jRadioButton4.setText("TreatInfant");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton4, gridBagConstraints);

        buttonGroup1.add(jRadioButton5);
        jRadioButton5.setText("Efficiency");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton5, gridBagConstraints);

        buttonGroup1.add(jRadioButton6);
        jRadioButton6.setText("VisitHome");
        jRadioButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel5.add(jRadioButton6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Part2"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        buttonGroup1.add(jRadioButton9);
        jRadioButton9.setText("SchoolOutSite");
        jRadioButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton9ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel6.add(jRadioButton9, gridBagConstraints);

        buttonGroup1.add(jRadioButton10);
        jRadioButton10.setText("HomeAmount");
        jRadioButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton10ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel6.add(jRadioButton10, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jPanel6, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanel2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("ReportDetail"));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jScrollPane1.setBorder(null);

        jTableReport115Group4_2549.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableReport115Group4_2549);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanel3, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jTextArea1.setFont(new java.awt.Font("Dialog", 0, 12));
        jTextArea1.setLineWrap(true);
        jTextArea1.setText("หมายเหตุ : เนื่องจากการแสดงผลบนหน้าจอไม่เพียงพอ จึงแบ่งการแสดงผลออกเป็นส่วน ๆ  \n                   เมื่อทำการบันทึกจะนำข้อมูลมารวมเป็น File เดียวกัน\n                   การบันทึก ไฟล์ จะไม่บันทึกข้อมูลส่วนที่ 2 เพราะข้อมูลแตกต่างกันไม่สามารถบันทึกร่วมกันได้");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanel4.add(jTextArea1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel1.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton9ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton9ActionPerformed
        // จำนวนครั้งในการออกหน่วยอนามัยโรงเรียน
        manageSchoolOutSiteReport();
        showCurrentDate();
        this.setTableSchoolOutSite();
    }//GEN-LAST:event_jRadioButton9ActionPerformed

    private void jRadioButton10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton10ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton10ActionPerformed
        // จำนวนครัวเรือนที่ ได้จากการไปเยี่ยมบ้าน
        manageHomeAmountReport();
        showCurrentDate();
        this.setTableHomeAmount();
    }//GEN-LAST:event_jRadioButton10ActionPerformed

    private void jRadioButton6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton6ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton6ActionPerformed
        //จำนวนผู้รับบริการการเยี่ยมบ้าน
        managePersonAmountReport();
        showCurrentDate();
        this.setTablePersonAmount();       
    }//GEN-LAST:event_jRadioButton6ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton5ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton5ActionPerformed
        //จำนวนครั้งในการให้บริการฟื้นฟูสมรรถภาพ
        manageEfficiencyReport();
        showCurrentDate();
        this.setTableEfficiency();
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton4ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton4ActionPerformed
        //เด็ก 0-1 เดือนได้รับการรักษาภาวะพร่องไอโอดีนและไทรอยด์
        manageTreatInfantReport();
        showCurrentDate();
        this.setTableTreatInfant();
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jRadioButton3ActionPerformed
    {//GEN-HEADEREND:event_jRadioButton3ActionPerformed
        // การสิ้นสุดการตั้งครรภ์ เนืองจากทารกในครรภ์เป็น Thalassemia
        manageAbortPregnantReport();
        showCurrentDate();
        this.setTableAbortPregnant();
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // การยืนยันการตรวจคัดกรอง
        manageConfirmReport();
        showCurrentDate();
        this.setTableConfirm();
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // การตรวจคัดกรอง
        manageAssortReport();
        showCurrentDate();
        this.setTableAssort();
    }//GEN-LAST:event_jRadioButton1ActionPerformed
    public void chooseAll(String df,String dt){
        startDate = df;
        endDate = dt;
        manageSchoolOutSiteReport(); 
        this.setTableSchoolOutSite(); 
        manageHomeAmountReport(); 
        this.setTableHomeAmount(); 
        managePersonAmountReport(); 
        this.setTablePersonAmount();  
        manageEfficiencyReport(); 
        this.setTableEfficiency();
        manageTreatInfantReport(); 
        this.setTableTreatInfant();
        manageAbortPregnantReport(); 
        this.setTableAbortPregnant();
        manageAssortReport(); 
        this.setTableAssort();
        manageConfirmReport();
        this.setTableConfirm();
        this.setEnableRadioButton(true);
        theHosControl.theExportControl.print115_4(
                vSchoolOutSite,vHomeAmount,vPersonAmount,vEfficiency
                ,vTreatInfant,vAbortPregnant,vAssort,vCheckConfirm,this.startDate,this.endDate);
    }

    /**
     *  ใช้ในการกำหนด ให้ RadioButton สามารถทำงาน enable ได้หรือไม่
     *  @param enabled เป็น boolean ถ้าเป็น true จะ enable ถ้าเป็น false จะ disable
     */
    private void setEnableRadioButton(boolean enabled)
    {
        jRadioButton1.setEnabled(enabled);
        jRadioButton2.setEnabled(enabled);
        jRadioButton1.setEnabled(enabled);
        jRadioButton2.setEnabled(enabled);
        jRadioButton3.setEnabled(enabled);
        jRadioButton4.setEnabled(enabled);
        jRadioButton5.setEnabled(enabled);
        jRadioButton6.setEnabled(enabled);
        jRadioButton9.setEnabled(enabled);
        jRadioButton10.setEnabled(enabled);
    }
    /**
     *  ใช้ในการส่งค่าของวันที่ปัจจุบันที่กำลัง query อยู่กลับไปยัง panel หลัก หาก panel หลัก
     *  มีการเปลี่ยนวันที่
     */
    private void showCurrentDate()
    {
        this.theHosControl.theHosSubject.theMainReportSubject.notifyReturnStartAndFinishDate(startDate, endDate);
    }
    
    /**
     *การตรวจคัดกรอง
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageAssortReport()
    {        
        if(this.vAssort == null || this.vAssort.size() == 0)
        {
            this.vAssort = new Vector();    
            this.vAssort = theHosControl.theRP115Group4_2549Control.selectGroup4Assort(this.startDate,this.endDate,isDbBackup);
        }                        
    }
    
    /**
     *การยืนยันการตรวจคัดกรอง
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageConfirmReport()
    {        
        if(this.vCheckConfirm == null || this.vCheckConfirm.size() == 0)
        {
            this.vCheckConfirm = new Vector();   
            this.vCheckConfirm = theHosControl.theRP115Group4_2549Control.selectGroup4CheckConfirm(this.startDate,this.endDate);                                                    
        }
    }
    
    /**
     *การสิ้นสุดการตั้งครรภ์ เนืองจากทารกในครรภ์เป็น Thalassemia
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageAbortPregnantReport()
    {
        if(this.vAbortPregnant == null || this.vAbortPregnant.size() == 0)
        {
            this.vAbortPregnant = new Vector();
            this.vAbortPregnant = theHosControl.theRP115Group4_2549Control.selectGroup4AbortPregnant(this.startDate,this.endDate);
        }
    }
    
    /**
     *เด็ก 0-1 เดือนได้รับการรักษาภาวะพร่องไอโอดีนและไทรอยด์
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageTreatInfantReport()
    {
        if(this.vTreatInfant == null || this.vTreatInfant.size() == 0)
        {
            this.vTreatInfant = new Vector();
            this.vTreatInfant = theHosControl.theRP115Group4_2549Control.selectGroup4TreatInfant(this.startDate,this.endDate);
        }
    }
    
    /**
     *จำนวนครั้งในการให้บริการฟื้นฟูสมรรถภาพ
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageEfficiencyReport()
    {
        if(this.vEfficiency == null || this.vEfficiency.size() == 0)
        {
            this.vEfficiency = new Vector();
            this.vEfficiency = theHosControl.theRP115Group4_2549Control.selectGroup4Efficiency(this.startDate,this.endDate);
        }
    }
    
    /**
     *จำนวนผู้รับบริการการเยี่ยมบ้าน
     *@Author pu
     *@Date 23/03/2006
     */
    private void managePersonAmountReport()
    {
        if(this.vPersonAmount == null || this.vPersonAmount.size() == 0)
        {
            this.vPersonAmount = new Vector();
            this.vPersonAmount = theHosControl.theRP115Group4_2549Control.selectGroup4PersonAmount(this.startDate,this.endDate);
        }
    }
    
    /**
     *จำนวนครัวเรือนที่ ได้จากการไปเยี่ยมบ้าน
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageHomeAmountReport()
    {
        if(this.vHomeAmount == null || this.vHomeAmount.size() == 0)
        {
            this.vHomeAmount = new Vector();
            this.vHomeAmount = theHosControl.theRP115Group4_2549Control.selectGroup4HomeAmount(this.startDate,this.endDate);
        }
    }
    
    /**
     *จำนวนครั้งในการออกหน่วยอนามัยโรงเรียน
     *@Author pu
     *@Date 23/03/2006
     */
    private void manageSchoolOutSiteReport()
    {
        if(this.vSchoolOutSite == null || this.vSchoolOutSite.size() == 0)
        {
            this.vSchoolOutSite = new Vector();
            this.vSchoolOutSite = theHosControl.theRP115Group4_2549Control.selectGroup4SchoolOutSite(this.startDate,this.endDate);
        }
    }
    /**
     *  เป็น Function สำหรับรวม Vector ทั้ง 6 ส่วนของส่วนที่ 1 เพื่อนำไป Save เป็น File เดียวกัน
     *  ข้อมูลที่ต้องการ  vAssort, vCheckConfirm, vAbortPregnant,vTreatInfant,vEfficiency,vPersonAmount
     *  ทั้ง 6 จะต้องมีค่านั้นคือ Record ไม่เป็น 0
     *  หาก Record ของ Vector เป็น 0 ให้ดึงข้อมูลของ Vector นั้นใหม่
     **/
    private void setVectorAllGroup4()
    {
        // ตรวจสอบ Vector
        this.manageAssortReport();
        this.manageConfirmReport();
        this.manageAbortPregnantReport();
        this.manageTreatInfantReport();
        this.manageEfficiencyReport();
        this.managePersonAmountReport();
        
        this.vGroup4_2549 = theHosControl.theRP115Group4_2549Control.setVectorAllGroup4(this.vAssort,this.vCheckConfirm,this.vAbortPregnant,this.vTreatInfant,this.vEfficiency,this.vPersonAmount);
    }
    
    public void ExportFile()
    {
        setProcessRunning(true);
        try
        {
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            
            if(this.vGroup4_2549 != null)
            {
                theHosControl.theExportControl.startExportByVector(this.vGroup4_2549,this.select_path,this.fileType,theFileName.getRP115Group4_2549());
            }
            else
            {
                System.out.println("----*******------vGroup1 --null------********------");
            }
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    public void setDefaultReportPre(boolean isDbBackup)
    {
        setProcessRunning(true);
        jRadioButton1.setSelected(true);
        try
        {
            if(theHosControl == null)
            {
                System.out.println("----------HosControl --null-------------");
                return;
            }
            
            // Clear data Report
            setNewVectorReport();
            
            // Default Pre
            this.vAssort = theHosControl.theRP115Group4_2549Control.selectGroup4Assort(this.startDate,this.endDate,isDbBackup);
            this.setTableAssort();
            //theHosControl.start();
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    private void setNewVectorReport()
    {
        this.vAssort = new Vector();
        this.vCheckConfirm = new Vector();
        this.vAbortPregnant = new Vector();
        this.vTreatInfant = new Vector();
        this.vEfficiency = new Vector();
        this.vPersonAmount = new Vector();        
        this.vGroup4_2549 = new Vector();        
        this.vHomeAmount = new Vector();
        this.vSchoolOutSite = new Vector();
    }
    
    /**
     *การตรวจคัดกรอง
     *@Author pu
     *@Date 23/03/2006
     */
    private void setTableAssort()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Womb_cancer"),
                Gutil.getTextBundle("Breast_cancer"),
                Gutil.getTextBundle("Thalassemia"),
                Gutil.getTextBundle("Thalassemia_mom"),
                Gutil.getTextBundle("Iodine_Thiroid")
        };
        TableModel tm;
        int size = 0;
        if(this.vAssort != null && this.vAssort.size() > 0)
        {
            size = vAssort.size();
            tm= new TableModel(col,size);
            
            for(int i=0;i<size; i++)
            {
                theRP115Group4Assort_2549 = new RP115Group4Assort_2549();
                theRP115Group4Assort_2549 = (RP115Group4Assort_2549)this.vAssort.get(i);
                
                tm.setValueAt(theRP115Group4Assort_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4Assort_2549.womb_cancer),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group4Assort_2549.breast_cancer),i,2);
                tm.setValueAt(Integer.valueOf(theRP115Group4Assort_2549.thalassemia),i,3);
                tm.setValueAt(Integer.valueOf(theRP115Group4Assort_2549.thalassemia_mom),i,4);
                tm.setValueAt(Integer.valueOf(theRP115Group4Assort_2549.iodine_thiroid),i,5);
                
                theRP115Group4Assort_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(50);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setPreferredWidth(20);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(2).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(2).setCellRenderer(rendererCenter);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(3).setCellRenderer(rendererCenter);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(4).setCellRenderer(rendererCenter);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(5).setCellRenderer(rendererCenter);

        sendDataToMainReport(size);
    }
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    /**
     *การตรวจยืนยันการคัดกรอง
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableConfirm()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Thalassemia_infant"),
                Gutil.getTextBundle("Thiroid")
        };
        TableModel tm;
        int size = 0;
        if(this.vCheckConfirm != null && this.vCheckConfirm.size() > 0)
        {
            size = vCheckConfirm.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4CheckConfirm_2549 = new RP115Group4CheckConfirm_2549();
                theRP115Group4CheckConfirm_2549 = (RP115Group4CheckConfirm_2549)this.vCheckConfirm.get(i);
                
                tm.setValueAt(theRP115Group4CheckConfirm_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4CheckConfirm_2549.thalassemia_infant),i,1);
                tm.setValueAt(Integer.valueOf(theRP115Group4CheckConfirm_2549.thiroid),i,2);
                
                theRP115Group4CheckConfirm_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(2).setCellRenderer(rendererCenter);
         sendDataToMainReport(size);
    }
    /**
     *การสิ้นสุดการตั้งครรภ์ เนืองจากทารกในครรภ์เป็น Thalassemia
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableAbortPregnant()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Terminated_pregnance")
        };
        TableModel tm;
        int size = 0;
        if(this.vAbortPregnant != null && this.vAbortPregnant.size() > 0)
        {
            size = vAbortPregnant.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4AbortPregnant_2549 = new RP115Group4AbortPregnant_2549();
                theRP115Group4AbortPregnant_2549 = (RP115Group4AbortPregnant_2549)this.vAbortPregnant.get(i);
                
                tm.setValueAt(theRP115Group4AbortPregnant_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4AbortPregnant_2549.terminated_pregnance),i,1);
                
                theRP115Group4AbortPregnant_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
       this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
         sendDataToMainReport(size);
    }
    
    /**
     *เด็ก 0-1 เดือนได้รับการรักษาภาวะพร่องไอโอดีนและไทรอยด์
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableTreatInfant()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Treat_Thiroid")
        };
        TableModel tm;
        int size = 0;
        if(this.vTreatInfant != null && this.vTreatInfant.size() > 0)
        {
            size = vTreatInfant.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4TreatInfant_2549 = new RP115Group4TreatInfant_2549();
                theRP115Group4TreatInfant_2549 = (RP115Group4TreatInfant_2549)this.vTreatInfant.get(i);
                
                tm.setValueAt(theRP115Group4TreatInfant_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4TreatInfant_2549.treat_thiroid),i,1);
                
                theRP115Group4TreatInfant_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
         sendDataToMainReport(size);
    }
    
    /**
     *จำนวนครั้งในการให้บริการฟื้นฟูสมรรถภาพ
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableEfficiency()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Efficiency")
        };
        TableModel tm;
        int size = 0;
        if(this.vEfficiency != null && this.vEfficiency.size() > 0)
        {
            size = vEfficiency.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4Efficiency_2549 = new RP115Group4Efficiency_2549();
                theRP115Group4Efficiency_2549 = (RP115Group4Efficiency_2549)this.vEfficiency.get(i);
                
                tm.setValueAt(theRP115Group4Efficiency_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4Efficiency_2549.efficiency),i,1);
                
                theRP115Group4Efficiency_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
        sendDataToMainReport(size);
    }
    
    /**
     *จำนวนผู้รับบริการการเยี่ยมบ้าน
     *@Author pu
     *@date 23/03/2006
     */
    private void setTablePersonAmount()
    {
        String[] col = {    Gutil.getTextBundle("TypePlan"),
                Gutil.getTextBundle("Person")
        };
        TableModel tm;
        int size = 0;
        if(this.vPersonAmount != null && this.vPersonAmount.size() > 0)
        {
            size = vPersonAmount.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4PersonAmount_2549 = new RP115Group4PersonAmount_2549();
                theRP115Group4PersonAmount_2549 = (RP115Group4PersonAmount_2549)this.vPersonAmount.get(i);
                
                tm.setValueAt(theRP115Group4PersonAmount_2549.plan_type,i,0);
                tm.setValueAt(Integer.valueOf(theRP115Group4PersonAmount_2549.person),i,1);
                
                theRP115Group4PersonAmount_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setPreferredWidth(20);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(1).setCellRenderer(rendererCenter);
        sendDataToMainReport(size);
    }
    
    /**
     *จำนวนครัวเรือนที่ ได้จากการไปเยี่ยมบ้าน
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableHomeAmount()
    {
        String[] col = {Gutil.getTextBundle("HomeAmount") };
        TableModel tm;
        int size = 0;
        if(this.vHomeAmount != null && this.vHomeAmount.size() > 0)
        {
            size = vHomeAmount.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                theRP115Group4HomeAmount_2549 = new RP115Group4HomeAmount_2549();
                theRP115Group4HomeAmount_2549 = (RP115Group4HomeAmount_2549)this.vHomeAmount.get(i);
                
                tm.setValueAt(Integer.valueOf(theRP115Group4HomeAmount_2549.homeAmount),i,0);
                theRP115Group4HomeAmount_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setCellRenderer(rendererCenter);
       }
    
    /**
     *จำนวนครั้งในการออกหน่วยอนามัยโรงเรียน
     *@Author pu
     *@date 23/03/2006
     */
    private void setTableSchoolOutSite()
    {
        String[] col = {Gutil.getTextBundle("SchoolOutSite") };
        TableModel tm;
        int size = 0;
        if(this.vSchoolOutSite != null && this.vSchoolOutSite.size() > 0)
        {
            size = vSchoolOutSite.size();
            tm= new TableModel(col,size);
            
            for(int i=0,sizePost=size;i<sizePost; i++)
            {
                this.theRP115Group4SchoolOutSite_2549 = new RP115Group4SchoolOutSite_2549();
                theRP115Group4SchoolOutSite_2549 = (RP115Group4SchoolOutSite_2549)this.vSchoolOutSite.get(i);
                
                tm.setValueAt(Integer.valueOf(theRP115Group4SchoolOutSite_2549.visit_school),i,0);
                theRP115Group4SchoolOutSite_2549 = null;
            }
        }
        else
        {
            tm= new TableModel(col,0);
        }
        this.jTableReport115Group4_2549.setModel(tm);
        
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        this.jTableReport115Group4_2549.getColumnModel().getColumn(0).setCellRenderer(rendererCenter);
    }
    
    public void setProcessRunning(boolean isProcessRunning)
    {
        this.isProcessRunning = isProcessRunning;
    }
    
    public void setLanguage()
    {
        jRadioButton1.setText(Gutil.getTextBundle(jRadioButton1.getText()));
        jRadioButton2.setText(Gutil.getTextBundle(jRadioButton2.getText()));
        jRadioButton3.setText(Gutil.getTextBundle(jRadioButton3.getText()));
        jRadioButton4.setText(Gutil.getTextBundle(jRadioButton4.getText()));
        jRadioButton5.setText(Gutil.getTextBundle(jRadioButton5.getText()));
        jRadioButton6.setText(Gutil.getTextBundle(jRadioButton6.getText()));
        jRadioButton9.setText(Gutil.getTextBundle(jRadioButton9.getText()));
        jRadioButton10.setText(Gutil.getTextBundle(jRadioButton10.getText()));
        
        Gutil.JPanelLabler(jPanel3);
        Gutil.JPanelLabler(jPanel5);
        Gutil.JPanelLabler(jPanel6);
    }
    
    public void notifySetInitAllGUI()
    {
        setEnableRadioButton(false);
        
        this.vAssort = null;
        this.setTableAssort();
        
        this.vCheckConfirm = null;
        this.setTableConfirm();
        
        this.vAbortPregnant = null;
        this.setTableAbortPregnant();
        
        this.vTreatInfant = null;
        this.setTableTreatInfant();
        
        this.vEfficiency = null;
        this.setTableEfficiency();
        
        this.vPersonAmount = null;
        this.setTablePersonAmount();
        
        this.vHomeAmount = null;
        this.setTableHomeAmount();
        
        this.vSchoolOutSite = null;
        this.setTableSchoolOutSite();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton10;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton9;
    private javax.swing.JScrollPane jScrollPane1;
    private com.hosv3.gui.component.HJTableSort jTableReport115Group4_2549;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setQueryReport(String startDate, String endDate) {
        throw new UnsupportedOperationException("Not supported yet.");
    }
    
}
