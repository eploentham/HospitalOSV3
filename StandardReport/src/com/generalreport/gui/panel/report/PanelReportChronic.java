/*
 * PanelReportDrugDispense.java
 *
 * Created on 5 ตุลาคม 2548, 14:57 น.
 */

package com.generalreport.gui.panel.report;

import com.generalreport.gui_component.TableModelGUI;
import com.generalreport.utility.GUIControl;
import com.generalreport.subject.ManageGUI;
import com.generalreport.subject.ManageAllPanel;
import com.generalreport.utility.Constant;
import com.generalreport.utility.Report;
import java.util.Vector;

import com.generalreport.control.HosManage;
import com.generalreport.gui_component.DialogShowStatus;
import javax.swing.table.DefaultTableCellRenderer;
/**
 *
 * @author  americus
 */
public class PanelReportChronic extends javax.swing.JPanel implements 
GUIControl,ManageGUI,Runnable,ManageAllPanel
{
    HosManage theHosManage;
    Thread theThread;
    private String startDate;
    private String endDate;
    final private String cardName;// = "TestReport";
   /**ใช้ในการจัดการกับ cell ในตาราง*/
    private DefaultTableCellRenderer rendererCenter;
    private DefaultTableCellRenderer rendererLeft;
    Vector vcData;
    String[] headColumn;
    Vector vcDataQuery;
    TableModelGUI theTableModelGUI;
    DialogShowStatus theDialogShowStatus;
    private boolean isDbBackup;
    /** Creates new form PanelReportDrugDispense */
    public PanelReportChronic(HosManage hosmanage)
    {
        theHosManage = hosmanage;
        theHosManage.theHosControl.theHosSubject.theGUISubject.registerGUIManage(this);
        theHosManage.theHosControl.theHosSubject.theAllPanelSubject.registerAllPanelManage(this);
        cardName = ((Report)Constant.Report.get("2")).ENG_NAME;
        initComponents();        
        theDialogShowStatus = new DialogShowStatus(theHosManage.theUS.getJFrame(),false,theHosManage);
    }
    
    public void run()
    {
       queryDataByDate(startDate,endDate);
    }    
     
    public String getCardName()
    {
        return cardName;
    }
    
    public void notifyStopProcess()
    {
           try
        {
          if(theThread != null)
          {
              theThread.stop();
          }
          theThread = null;
          System.out.println("In stop in HosControl");
        //  theGUISubject.setEnabled(true);
          //ยังไม่ได้ใช้
          //theManageReport12File.onShowStatus(Constant.STATUS_CANCEL_REPORT, java.awt.Color.red);
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }        
    }
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableShow = new javax.swing.JTable();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jTableShow.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jTableShow);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jScrollPane1, gridBagConstraints);

        add(jPanel1, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents
    /**ใช้ในการรับข้อมูลจาก การค้นหา และส่งค่าเข้ามา panel นี้
     *  เพื่อให้ทำการ Query และค้นหารายการตามข้อกำหนดของ panel
     *  @param startDate เป็น String เป็นวันที่เริ่มต้น อยู่ในรูปแบบ yyyy-mm-dd
     *  @param endDate เป็น String เป็นวันที่สิ้นสุด อยู่ในรูปแบบ yyyy-mm-dd
     */
    public void setQueryReport(String startDate, String endDate, boolean dbBackup)
    {
        this.startDate = startDate;
        this.endDate = endDate;
        isDbBackup = dbBackup;
        //setFileDescription();
        startQuery();
        // queryDataByDate(startDate,endDate);
    }
    
    private void startQuery()
    {
        theThread = new Thread(this);
        theThread.start();
    }
    
    public Vector getChronic()
    {
        return this.vcData;
    }
    
    private void queryDataByDate(String startDate, String endDate)
    {
        
        theDialogShowStatus.setVisible(false);
        theDialogShowStatus.showDialog("กรุณารอสักครู่",false);
        vcData = theHosManage.theHosControl.theRPChronicControl.selectChronicByDate(startDate,endDate,isDbBackup);
        headColumn = new String[] {""};
        vcDataQuery = null;
        if(vcData != null)
        {
           
            headColumn = (String[])vcData.get(0);
            vcDataQuery = (Vector)vcData.get(1);
        }
        
        showDataInTable(headColumn, vcDataQuery);
        theDialogShowStatus.setVisible(false);       
    }
    
    private void showDataInTable(String[] columnname,Vector vc)
    {
               
        String[] col = columnname;      
        
        int size = 0;
        if(vc != null)
        {   theTableModelGUI= new TableModelGUI(col,vc.size());
            size = vc.size();
            //วนลูป ต่อ 1 แถว
            for(int i=0 ;i<size; i++)
            {    //วนลูปตของ column
                String[] rowdata = (String[])vc.get(i);

                for(int j = 0 ; j < rowdata.length ;j++)
                {                       
                    theTableModelGUI.setValueAt(rowdata[j],i,j);                        
                }
                theTableModelGUI.setEditingCol(rowdata.length+1);
                rowdata = null;

                //    tm.setValueAt(((OrderItem)this.theOrderControl.listOrderItemByItem(p.getObjectId(),this.vn)).refer_out,i,2);
            }                
                        
        }
        else
        {   theTableModelGUI= new TableModelGUI(col,0);            
        }
        this.jTableShow.setModel(theTableModelGUI);
        if(col!= null && col.length!= 0)
        {
            setTableListReportPattern(col);
        }
        sendDataToMainReport(size);
    }
    
    /**ใช้ในการแสดงความกว้างของคอลัมน์
     *@param col เป็น Array ของ String ที่เก็บหัว column สำหรับนำมานับจำนวน Column ที่ต้องสร้างในตาราง
     *
     */
    private void setTableListReportPattern(String [] col)
    {
        if(rendererCenter == null)
        {
            rendererCenter = new DefaultTableCellRenderer();
        }
        if(rendererLeft == null )
        {
            rendererLeft = new DefaultTableCellRenderer();
        }
        rendererCenter.setHorizontalAlignment(javax.swing.JLabel.CENTER);
        rendererLeft.setHorizontalAlignment(javax.swing.JLabel.LEFT);
        
        String[] col_number = col;
        for(int i=0;i<col_number.length;i++)
        {
            if(i == 0)
            {
                jTableShow.getColumnModel().getColumn(i).setPreferredWidth(20);
            }
            else if(i == 1)
            {
                jTableShow.getColumnModel().getColumn(i).setPreferredWidth(120);
                
            }
            else
            {
                jTableShow.getColumnModel().getColumn(i).setCellRenderer(rendererCenter);
                jTableShow.getColumnModel().getColumn(i).setPreferredWidth(50);
            }
        }
    }
    
    /**
     *  ใช้ในการส่งสถานะให้แสดง ปุ่มบันทึกหรือไม่ โดยจะตรวจสอบจาก size ของตาราง
     */
    private void sendDataToMainReport(int size)
    {
        theHosManage.theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(false);
        if(size >0)
        {
            theHosManage.theHosControl.theHosSubject.theMainReportSubject.notifyShowSaveToFile(true);
        }
    }
    
    public void notifySetInitAllGUI()
    {
        vcData = null;
        showDataInTable(null,null);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableShow;
    // End of variables declaration//GEN-END:variables
    
}
