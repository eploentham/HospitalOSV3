/*
 * PanelSetupUCPlanGroupPttype.java
 *
 * Created on 28 ตุลาคม 2548, 09:44 น.
 */

package com.setupreport.gui.panel;
import java.util.Vector;
import com.setupreport.manage.HosManage;
import com.setupreport.utility.TableModelGUI;
import com.setupreport.object.*;
import com.setupreport.utility.Language;
import com.setupreport.usecase.connection.ManageGUI;
import javax.swing.JOptionPane;

/**
 *
 * @author  americus
 */
public class PanelSetupUCPlanGroupPttype extends javax.swing.JPanel implements 
ManageGUI
{
    final String panelname = "UCPlanGroupPttype";
    Vector vUCPlanGroupPttype;
    UCPlanGroupPttype theUCPlanGroupPttype,theUCPlanGroupPttypeTemp;
    String[] colName;
    HosManage theHosManage;
    TableModelGUI theTableModelGUI;
    int language = 1;
    
    
    public PanelSetupUCPlanGroupPttype(HosManage hosManage)
    {
        this.theHosManage = hosManage;
        initComponents();
        setLanguage();
        showDataToTable(null);
        Language.getTextBundle(panelname, language);
        searchDataAndShowDataToTable(); // ojika 28 Feb 2007
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelTop = new javax.swing.JPanel();
        jLabelSetupName = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowList = new javax.swing.JPanel();
        jScrollPaneShowList = new javax.swing.JScrollPane();
        jTableShowList = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldDescrpiton = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabelSetupName.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelSetupName.setText("UCPlanGroupPttype");
        jPanelTop.add(jLabelSetupName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        add(jPanelTop, gridBagConstraints);

        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowList.setLayout(new java.awt.GridBagLayout());

        jTableShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListMouseReleased(evt);
            }
        });

        jScrollPaneShowList.setViewportView(jTableShowList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowList.add(jScrollPaneShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanelLeft.add(jPanelShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        add(jPanelLeft, gridBagConstraints);

        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel1.add(jLabelCode, gridBagConstraints);

        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel1.add(jLabelDescription, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel1.add(jTextFieldCode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel1.add(jTextFieldDescrpiton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelRight.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jButtonAdd, gridBagConstraints);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel2.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setText("Save");
        jButtonSave.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        add(jPanelRight, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
         saveData();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteActionPerformed
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
        if(confirm_del == 0)
        {
            deleteData();
        }
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        addData();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableShowListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableShowListMouseReleased
        selectShowData(this.jTableShowList.getSelectedRow());
    }//GEN-LAST:event_jTableShowListMouseReleased

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        searchDataAndShowDataToTable();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    /**เคลียร์ข้อมูล เพื่อเตรียมการสร้างข้อมูลใหม่*/
    public void addData()
    {
        clearGUI();
        clearObject();
        jTextFieldCode.requestFocus();
    }   
    
    /**ใช้ในการ Clear ข้อมูลที่อยู่บน GUI*/
    private void clearGUI()
    {
        this.jTextFieldCode.setText("");
        this.jTextFieldDescrpiton.setText("");
    }
    
    /**ใช้ในการ Clear ค่าที่ Object ที่ต้องการเป็นอยู่ให้เป็น null หรือเป็น ช่องว่าง หรือเป็น 0*/
    private void clearObject()
    {
        this.theUCPlanGroupPttype = null;
    }
    
    /**
     *  ใช้ในการบันทึกข้อมูล
     */
    public void saveData()
    {
        if(setGUIToDataObject())
        {
            if(checkDataSameInDB())
            {
                saveDataToDB();
                searchDataAndShowDataToTable();
                setSelectDataInTable();
            }
            else
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("SameGroupIDAndPtType", language),Language.getTextBundle("Warning", language),JOptionPane.OK_OPTION);
            }
        }
    }
    
    /*
     *ใช้ในการลบข้อมูล
     */
    public void deleteData()
    {
        deleteDataToDB();
        searchDataAndShowDataToTable();
        clearGUI();
    }
    
    private void deleteDataToDB()
    {
        if(theUCPlanGroupPttype != null)
        {
            this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.deleteUCPlanGroupMapPtType(theUCPlanGroupPttype);
        }
    }
    
    /**ใช้ในการ กำหนดให้ปุ่ม บวก, ลบ และบันทึก สามารถทำงานได้หรือไม่*/
    private void setEnableButton()
    {
    }
    
    /**ใช้ในการกำหนดผลที่เลือกบนตาราง และต้องการจะให้แสดงบน GUI*/
    public void selectShowData(int row)
    {
        if(row > -1)
        {
            if(this.vUCPlanGroupPttype != null)
            {
                theUCPlanGroupPttype = (UCPlanGroupPttype)this.vUCPlanGroupPttype.get(row);
                setDataObjectToGUI();
            }
        }
        else
        {
            clearGUI();
        }
    }
    
    /**ใช้ในการเลือกข้อมูลในตาราง*/
    public void setSelectDataInTable()
    {
        int row = -1;
        jTableShowList.clearSelection();
        if(vUCPlanGroupPttype !=null)
        {
            int size = vUCPlanGroupPttype.size();
            for(int i =0; i < size;i++)
            {
                theUCPlanGroupPttypeTemp = (UCPlanGroupPttype)vUCPlanGroupPttype.get(i);
                if(theUCPlanGroupPttypeTemp.getObjectId().equalsIgnoreCase(theUCPlanGroupPttype.getObjectId()))
                {
                    row = i ;
                    break;
                }
            }
        }
        theUCPlanGroupPttypeTemp = null;
        if(row >-1)
        {
            jTableShowList.setRowSelectionInterval(row,row);
            selectShowData(row);
        }
        
    }
    
    /**ใช้ในการแสดงผลที่ได้ Object ลงบน GUI*/
    private void setDataObjectToGUI()
    {
        this.jTextFieldCode.setText(theUCPlanGroupPttype.pttype_number);
        this.jTextFieldDescrpiton.setText(theUCPlanGroupPttype.pttype);
    }
    
    /**ใช้ในการรับข้อมูลจาก GUI ลง Object*/
    private boolean setGUIToDataObject()
    {   boolean result = true;
        if(theUCPlanGroupPttype == null)
        {
            theUCPlanGroupPttype = new UCPlanGroupPttype();
        }
        theUCPlanGroupPttype.pttype_number = jTextFieldCode.getText().trim();
        theUCPlanGroupPttype.pttype = jTextFieldDescrpiton.getText().trim();
        
        if(theUCPlanGroupPttype.pttype_number.length() == 0 )
        {
            JOptionPane.showMessageDialog(this,Language.getTextBundle("PTTypeNumberNotNULL", language),Language.getTextBundle("Warning", language),JOptionPane.OK_OPTION);
            setFocusPTTypeGroupCode();
            result = false;
        }
        else
        {
            if(theUCPlanGroupPttype.pttype.length() == 0 )
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("PTTypeNotNULL", language),Language.getTextBundle("Warning", language),JOptionPane.OK_OPTION);
                setFocusPTTypeGroupDescription();
                result = false;
            }
        }
        return result ;
    }
    
    /**
     *  ใช้ในการตรวจสอบว่า code และ คำอธิบาย ซ้ำกันกับที่มีอยู่ในฐานข้อมูลหรือไม่ ถ้าเกิดการซ้ำกัน
     *  จะให้ค่าเป็น false ถ้าไม่ซ้ำกันจะให้ค่าเป็น true
     *  @return boolean ถ้าเป็น true จะไม่ซ้ำกัน ถ้าเป็น false จำซ้ำกัน
     */
    private boolean checkDataSameInDB()
    {
        boolean result = true;
        if(theUCPlanGroupPttype != null)
        {
            //ตรวจสอบว่าเป็น Object ใหม่หรือไม่
            if(theUCPlanGroupPttype.getObjectId() == null)
            {
                //เป็น Object ใหม่
                //ให้ตรวจสอบ รหัสของplangroup และ PtType ว่ามีอยู่ในฐานข้อมูลแล้วหรือยัง
                //ถ้ามีแล้วกำหนดให้เป็น false
                System.out.println("New Object");
                result = this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.checkSameUCPlanGroupID(theUCPlanGroupPttype.pttype_number,"");
            }
            else
            {
               /* System.out.println("Old Object");
                if(vUCPlanGroupPttype != null)
                {
                    
                    int row = jTableShowList.getSelectedRow();
                    theUCPlanGroupPttypeTemp = (UCPlanGroupPttype)vUCPlanGroupPttype.get(row);
                    String code = jTextFieldCode.getText().trim();
                    String pttype = jTextFieldDescrpiton.getText().trim();
               /*     System.out.println("**********code  "+ code);
                    System.out.println("******** pttype "+ pttype);*/
                /*    if(theUCPlanGroupPttypeTemp.getObjectId().equalsIgnoreCase(theUCPlanGroupPttype.getObjectId()))
                    {
                       /* System.out.println(theUCPlanGroupPttypeTemp.getObjectId() + " Same ID " + theUCPlanGroupPttypeTemp.getObjectId());
                        System.out.println(theUCPlanGroupPttypeTemp.pttype_number.equalsIgnoreCase(code.toUpperCase()));
                        System.out.println("**--------** pttype "+ pttype);
                        System.out.println("**--------** theUCPlanGroupPttype "+ theUCPlanGroupPttype.pttype);
                        System.out.println( theUCPlanGroupPttypeTemp.pttype.toUpperCase().equalsIgnoreCase(pttype.toUpperCase()));
                        **/
                        //ให้ตรวจสอบ กับ Object เดิมว่ามีการเปลียนแปลงของ plangroup และ PtType หรือไม่
                        //ถ้าเปลี่ยนอย่างใดอย่างหนึ่งให้ตรวจสอบ รหัสของplangroup และ PtType ว่ามีอยู่ในฐานข้อมูลแล้วหรือยัง
                     /*   if(!theUCPlanGroupPttypeTemp.pttype_number.equalsIgnoreCase(code.toUpperCase())
                        ||! theUCPlanGroupPttypeTemp.pttype.toUpperCase().equalsIgnoreCase(pttype.toUpperCase())
                        )
                        {
                      **/
                            //ถ้ามีแล้วกำหนดให้เป็น false
                            result = this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.checkSameUCPlanGroupID(theUCPlanGroupPttype.pttype_number,theUCPlanGroupPttype.getObjectId());
                            
                  //      }
                 //   }
            //    }
                            
               if(result)
               {
                    if(theUCPlanGroupPttype.getObjectId() == null)
                    {
                        //เป็น Object ใหม่
                        //ให้ตรวจสอบ รหัสของplangroup และ PtType ว่ามีอยู่ในฐานข้อมูลแล้วหรือยัง
                        //ถ้ามีแล้วกำหนดให้เป็น false
                        System.out.println("New Object");
                        result = this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.checkSameUCPlanPtType(theUCPlanGroupPttype.pttype,"");
                    }
                    else
                    {
                        result = this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.checkSameUCPlanPtType(theUCPlanGroupPttype.pttype,theUCPlanGroupPttype.getObjectId());
                    }
               }
            }
            
        }
        else
        {
            //result = false;
        }
        return result;
    }
    /**บันทึกลงฐานข้อมูล*/
    private void saveDataToDB()
    {
        this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.saveUCPlanGroupMapPtType(theUCPlanGroupPttype);
    }
    
    /**ใช้ในการกำหนดให้มีการนำ curor ไปไว้ที่ส่วนไหนของ GUI*/
    private void setFocusPTTypeGroupCode()
    {
        jTextFieldCode.requestFocus();
    }
    /**ใช้ในการกำหนดให้มีการนำ curor ไปไว้ที่ส่วนไหนของ GUI*/
    private void setFocusPTTypeGroupDescription()
    {
        jTextFieldDescrpiton.requestFocus();
    }
    /**
     *  ใช้ในการค้นหาข้อมูล และทำการแสดงข้อมูลลงบนตารางที่กำหนด
     */
    public void searchDataAndShowDataToTable()
    {
        this.vUCPlanGroupPttype = searchData();
        this.showDataToTable(this.vUCPlanGroupPttype);
    }
    /**
     * ใช้ในการ search ข้อมูลตามข้อมูลที่กำหนด
     * @return เป็น Vector ของ Object ที่กำหนด
     */
    private Vector searchData()
    {
        String search = this.jTextFieldSearch.getText();
        search = search.trim();
        this.vUCPlanGroupPttype = this.theHosManage.theHosControl.theUCPlanGroupPttypeControl.selectUCPlanGroupMapPtTypeByCodeOrDescription(search);
        return this.vUCPlanGroupPttype;
    }
    
    /**
     * ใช้ในการ แสดงข้อมูลการค้นหาลงบนตารางที่กำหนด
     * @param vc เป็น Vector ของข้อมูลที่ทำการส่งมาให้และต้องการกำหนดให้แสดงบนตาราง
     */
    private void showDataToTable(Vector vc)
    {
        theTableModelGUI = new TableModelGUI(colName, 0);
        if(vc != null)
        {
            int size = vc.size();
            theTableModelGUI = new TableModelGUI(colName, size);
            theUCPlanGroupPttypeTemp = null;
            for(int i = 0 ; i < size ;i++)
            {
                theUCPlanGroupPttypeTemp = (UCPlanGroupPttype)vc.get(i);
                theTableModelGUI.setValueAt(theUCPlanGroupPttypeTemp.pttype_number,i, 0);
                theTableModelGUI.setValueAt(theUCPlanGroupPttypeTemp.pttype,i, 1);
                
                theUCPlanGroupPttypeTemp = null;
            }
        }
        jTableShowList.setModel(theTableModelGUI);
        jTableShowList.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableShowList.getColumnModel().getColumn(1).setPreferredWidth(100);
    }
    
    /**
     *  ใช้ในการกำหนดภาษาให้กับ GUI
     */
    private void setLanguage()
    {
        colName = new String[] {Language.getTextBundle("Code", language),Language.getTextBundle("Description", language)};
        
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText(),language));
        jButtonDelete.setText(Language.getTextBundle(jButtonDelete.getText(),language));
        jButtonSave.setText(Language.getTextBundle(jButtonSave.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        
        jLabelCode.setText(Language.getTextBundle(jLabelCode.getText(),language));
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText(),language));
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
        jLabelSetupName.setText(Language.getTextBundle(jLabelSetupName.getText(),language));
    }
    
    
    
    public String getPanelName()
    {
        return panelname;
    }
    
    public void setEnableButtonSetupPanel(boolean enabled)
    {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSetupName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowList;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPaneShowList;
    private javax.swing.JTable jTableShowList;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDescrpiton;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
