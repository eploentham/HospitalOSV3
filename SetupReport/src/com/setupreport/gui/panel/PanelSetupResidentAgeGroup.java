/*
 * PanelSetupResidentAgeGroup.java
 *
 * Created on 2 ¡’π“§¡ 2549, 11:41 π.
 */

package com.setupreport.gui.panel;
import com.setupreport.utility.TableModelGUI;
import com.setupreport.manage.HosManage;
import com.setupreport.utility.Language;
import java.util.Vector;
import com.setupreport.object.ResidentAgeGroup;
import javax.swing.JOptionPane;
import java.awt.event.KeyEvent;
/**
 *
 * @author  pu
 */
public class PanelSetupResidentAgeGroup extends javax.swing.JPanel
{
    final String panel_name = "ResidentAgeGroup";
    TableModelGUI theTableModelGUI;
    int language =1;
    String colName[] ;
    ResidentAgeGroup theResidentAgeGroup, theResidentAgeGroupTemp;
    Vector vResidentAgeGroup,vAgeGroup;
    HosManage theHosManage;
    private String AgeBegin;
    private String AgeEnd;
    String selected = "0";
    /** Creates new form PanelSetupResidentAgeGroup */
    public PanelSetupResidentAgeGroup(HosManage hm)
    {
        theHosManage  = hm;
        initComponents();
        setLanguage();
        showDataToTable(null);
        vAgeGroup = new Vector();
        vAgeGroup = this.theHosManage.theHosControl.theResidentAgeGroupControl.selectResidentAgeGroupByCodeOrDescription("");
        searchDataAndShowDataToTable(); // ojika 28 Feb 2007
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanelTop = new javax.swing.JPanel();
        jLabelAgePortion = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowData = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableAgePortion = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabelNumber = new javax.swing.JLabel();
        jTextFieldNumber = new javax.swing.JTextField();
        jLabelAgeBegin = new javax.swing.JLabel();
        jLabelAgeEnd = new javax.swing.JLabel();
        integerTextFieldAgeBegin = new com.hospital_os.utility.IntegerTextField();
        integerTextFieldAgeEnd = new com.hospital_os.utility.IntegerTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDel = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jLabelAgePortion.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelAgePortion.setText("AgePortion");
        jPanelTop.add(jLabelAgePortion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 3);
        add(jPanelTop, gridBagConstraints);

        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowData.setLayout(new java.awt.GridBagLayout());

        jTableAgePortion.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableAgePortion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableAgePortionMouseReleased(evt);
            }
        });

        jScrollPane1.setViewportView(jTableAgePortion);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowData.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelLeft.add(jPanelShowData, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 0);
        add(jPanelLeft, gridBagConstraints);

        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setMinimumSize(new java.awt.Dimension(335, 61));
        jLabelNumber.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel1.add(jLabelNumber, gridBagConstraints);

        jTextFieldNumber.setPreferredSize(new java.awt.Dimension(100, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel1.add(jTextFieldNumber, gridBagConstraints);

        jLabelAgeBegin.setText("AgeBegin");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(4, 3, 0, 0);
        jPanel1.add(jLabelAgeBegin, gridBagConstraints);

        jLabelAgeEnd.setText("AgeEnd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(4, 3, 0, 0);
        jPanel1.add(jLabelAgeEnd, gridBagConstraints);

        integerTextFieldAgeBegin.setColumns(7);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel1.add(integerTextFieldAgeBegin, gridBagConstraints);

        integerTextFieldAgeEnd.setColumns(7);
        integerTextFieldAgeEnd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                integerTextFieldAgeEndKeyReleased(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel1.add(integerTextFieldAgeEnd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelRight.add(jPanel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 5, 0);
        jPanel2.add(jButtonAdd, gridBagConstraints);

        jButtonDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDel.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDel.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDel.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDelActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 5, 0);
        jPanel2.add(jButtonDel, gridBagConstraints);

        jButtonSave.setText("Save");
        jButtonSave.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonSave.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        jPanel2.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 3, 3);
        add(jPanelRight, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void integerTextFieldAgeEndKeyReleased(java.awt.event.KeyEvent evt)//GEN-FIRST:event_integerTextFieldAgeEndKeyReleased
    {//GEN-HEADEREND:event_integerTextFieldAgeEndKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            jButtonSaveActionPerformed(null);
        }
    }//GEN-LAST:event_integerTextFieldAgeEndKeyReleased
    
    private void jTableAgePortionMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableAgePortionMouseReleased
    {//GEN-HEADEREND:event_jTableAgePortionMouseReleased
        selectShowData(jTableAgePortion.getSelectedRow());
    }//GEN-LAST:event_jTableAgePortionMouseReleased
    
    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        saveData();
    }//GEN-LAST:event_jButtonSaveActionPerformed
    
    private void jButtonDelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDelActionPerformed
    {//GEN-HEADEREND:event_jButtonDelActionPerformed
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
        
        if(confirm_del == 0)
        {
            deleteData();
        }
    }//GEN-LAST:event_jButtonDelActionPerformed
    
    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        addData();
    }//GEN-LAST:event_jButtonAddActionPerformed
    
    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        searchDataAndShowDataToTable();
    }//GEN-LAST:event_jButtonSearchActionPerformed
    public String getPanelName()
    {
        return this.panel_name;
    }
    /**
     *  „™È„π°“√§ÈπÀ“¢ÈÕ¡Ÿ≈ ·≈–∑”°“√· ¥ß¢ÈÕ¡Ÿ≈≈ß∫πµ“√“ß∑’Ë°”Àπ¥
     */
    public void searchDataAndShowDataToTable()
    {
        vResidentAgeGroup = searchData();
        showDataToTable(vResidentAgeGroup);
    }
    /**
     * „™È„π°“√ search ¢ÈÕ¡Ÿ≈µ“¡¢ÈÕ¡Ÿ≈∑’Ë°”Àπ¥
     * @return ‡ªÁπ Vector ¢Õß Object ∑’Ë°”Àπ¥
     */
    private Vector searchData()
    {
        String search = this.jTextFieldSearch.getText();
        search = search.trim();
        vResidentAgeGroup = this.theHosManage.theHosControl.theResidentAgeGroupControl.selectResidentAgeGroupByCodeOrDescription(search);
        return vResidentAgeGroup;
    }
    
    /**„™È„π°“√‡æ‘Ë¡¢ÈÕ¡Ÿ≈™Ë«ßÕ“¬ÿ¢Õßª√–™“°√
     *@Date  02/03/2006
     *@Author pu
     */
    public void addData()
    {    //clear GUI
        clearGUI();
        //clear Object
        clearObject();
        this.jTextFieldNumber.requestFocus();
    }
    
    private void clearGUI()
    {
        this.jTextFieldNumber.setText("");
        this.integerTextFieldAgeBegin.setText("");
        this.integerTextFieldAgeEnd.setText("");
        jTextFieldNumber.requestFocus();
    }
    
    private void clearObject()
    {
        this.theResidentAgeGroup = null;
        this.theResidentAgeGroupTemp = null;
    }
    
    /**„™È„π°“√≈∫¢ÈÕ¡Ÿ≈¢Õß™Ë«ßÕ“¬ÿ¢Õßª√–™“°√*/
    public void deleteData()
    {
        //≈∫¢ÈÕ¡Ÿ≈ÕÕ°
        deleteDataFromDB();
        searchDataAndShowDataToTable();
        //clear GUI
        //clear Object
        clearGUI();
        clearObject();
        this.jTextFieldNumber.requestFocus();
    }
    
    /**„™È„π°“√≈∫¢ÈÕ¡Ÿ≈ÕÕ°®“∞“π¢ÈÕ¡Ÿ≈*/
    private void deleteDataFromDB()
    {
        if(theResidentAgeGroup != null)
        {
            this.theHosManage.theHosControl.theResidentAgeGroupControl.deleteResidentAgeGroup(theResidentAgeGroup);
            this.vAgeGroup.remove(theResidentAgeGroup);
        }
    }
    
    /**„™È„π°“√°”Àπ¥º≈∑’Ë‡≈◊Õ°∫πµ“√“ß ·≈–µÈÕß°“√®–„ÀÈ· ¥ß∫π GUI*/
    public void selectShowData(int row)
    {
        if(row > -1)
        {
            if(vResidentAgeGroup != null)
            {
                theResidentAgeGroup = (ResidentAgeGroup)vResidentAgeGroup.get(row);
                setDataObjectToGUI();
            }
        }
    }
    
    /**„™È„π°“√· ¥ßº≈∑’Ë‰¥È Object ≈ß∫π GUI*/
    private void setDataObjectToGUI()
    {
        if(theResidentAgeGroup != null)
        {
            selected = theResidentAgeGroup.getObjectId();
            
            this.jTextFieldNumber.setText(theResidentAgeGroup.number);
            this.integerTextFieldAgeBegin.setText(theResidentAgeGroup.begin);
            this.integerTextFieldAgeEnd.setText(theResidentAgeGroup.end);
        }
        else
        {
            selected = "0";
            clearGUI();
        }
    }
    /**
     *„™È„π°“√∫—π∑÷°¢ÈÕ¡Ÿ≈™Ë«ßÕ“¬ÿ¢Õßª√–™“°√
     *@Author pu
     *@Date 11/03/2006
     */
    public void saveData()
    {        
        this.AgeBegin = this.integerTextFieldAgeBegin.getText();
        this.AgeEnd = this.integerTextFieldAgeEnd.getText();

        int begin = Integer.parseInt(this.AgeBegin);
        int end = Integer.parseInt(this.AgeEnd);
        if(begin <= end)
        {
            if(checkAgeOverlapInDB())
            {
                if(setGUIToDataObject())
                {
                    saveDataToDB();
                    searchDataAndShowDataToTable();
                }
                else
                {
                    JOptionPane.showMessageDialog(this,Language.getTextBundle("NotEmptyString", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                    jTextFieldNumber.requestFocus();
                    return;
                }                
            }
        }
        else
        {
            JOptionPane.showMessageDialog(this,Language.getTextBundle("BeginMustLassThanEnd", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
        }
    }
    
    /**
     *„™È„π°“√√—∫¢ÈÕ¡Ÿ≈®“° GUI ≈ß Object
     *@return Boolean  ”À√—∫µ√«® Õ∫«Ë“¡’°“√„ÀÈ§Ë“°—∫ Object
     *@Author pu
     *@Date 05/03/2006
     */
    private boolean setGUIToDataObject()
    {
        boolean result = true;
        if(theResidentAgeGroup == null)
        {
            theResidentAgeGroup = new ResidentAgeGroup();
        }
        theResidentAgeGroup.number = this.jTextFieldNumber.getText().trim();
        theResidentAgeGroup.begin =  this.integerTextFieldAgeBegin.getText();
        theResidentAgeGroup.end = this.integerTextFieldAgeEnd.getText();
        if(theResidentAgeGroup.number.equals("") || theResidentAgeGroup.begin.equals("") || theResidentAgeGroup.end.equals(""))
        {
            result = false;
        }
        return result ;
    }
    
    /**
     *„™È„π°“√µ√«® Õ∫«Ë“ code ·≈– §”Õ∏‘∫“¬ ´È”°—π°—∫∑’Ë¡’Õ¬ŸË„π∞“π¢ÈÕ¡Ÿ≈À√◊Õ‰¡Ë ∂È“‡°‘¥°“√´È”°—π
     *®–„ÀÈ§Ë“‡ªÁπ false ∂È“‰¡Ë´È”°—π®–„ÀÈ§Ë“‡ªÁπ true
     *@return boolean ∂È“‡ªÁπ true ®–‰¡Ë´È”°—π ∂È“‡ªÁπ false ®”´È”°—π
     *@Author pu
     *@Date 05/03/2006
     */
    private boolean checkAgeOverlapInDB()
    {
        boolean flag = true;
        try
        {
            int ageend = Integer.parseInt(this.AgeEnd);
            int agebegin = Integer.parseInt(this.AgeBegin);
            int beginI = 0;
            int endI = 0;
            String beginS;
            String endS;
            //int minus = (ageend - agebegin) + 1;
            if(this.vAgeGroup != null)
            {
                loop1:for(int i=0;i<this.vAgeGroup.size();i++)
                {
                    String objid = ((ResidentAgeGroup)this.vAgeGroup.get(i)).getObjectId();
                    beginS = ((ResidentAgeGroup)this.vAgeGroup.get(i)).begin;
                    beginI = Integer.parseInt(beginS);
                    endS = ((ResidentAgeGroup)this.vAgeGroup.get(i)).end;
                    endI = Integer.parseInt(endS);
                    int minus = (endI - beginI) + 1;
                    
                    loop2:for(int j=agebegin; j<=ageend; j++)
                    {
                        //Õ“¬ÿ‡√‘Ë¡µÈπ ‡∑Ë“°—∫ j
                        if(beginI == j)
                        {
                            if(!this.selected.equals(objid))
                            {
                                flag = false;
                                JOptionPane.showMessageDialog(this,Language.getTextBundle("Have", language) +" "+ beginI +" "+ Language.getTextBundle("InDB",language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                                break loop1;
                            }
                            else
                            {
                                flag = true;
                            }
                        }
                        else
                        {
                            for(int k=beginI; k<endI;k++)
                            {
                                if(k==j)
                                {
                                    
                                    if(!this.selected.equals(objid))
                                    {
                                        flag = false;
                                        JOptionPane.showMessageDialog(this,Language.getTextBundle("Have", language) +" "+ j +" "+ Language.getTextBundle("InDB",language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                                        break loop1;
                                    }
                                    else
                                    {
                                        flag = true;
                                    }
                                }
                                else
                                {
                                    //Õ“¬ÿ ‘Èπ ÿ¥ ‡∑Ë“°—∫ j
                                    flag = true;
                                }
                            }
                        }
                    }
                   /* objid = null;
                    beginS = null;
                    beginI = 0;
                    endS = null;
                    endI = 0;*/
                }
            }
            return flag;
        }
        catch(NumberFormatException ex)
        {
            ex.printStackTrace();
            return flag;
        }
    }
    
    /**
     *∫—π∑÷°™Ë«ßÕ“¬ÿ¢Õßª√–™“°√
     *@Author pu
     *@Date 11/03/2006
     */
    private void saveDataToDB()
    {
        int result = 0;
        result = this.theHosManage.theHosControl.theResidentAgeGroupControl.saveResidentAgeGroup(theResidentAgeGroup);
        if(result == 1)
        {
            if(this.vAgeGroup == null)
                this.vAgeGroup = new Vector();
            this.vAgeGroup.add(theResidentAgeGroup);
        }
    }
    /**
     * „™È„π°“√ · ¥ß¢ÈÕ¡Ÿ≈°“√§ÈπÀ“≈ß∫πµ“√“ß∑’Ë°”Àπ¥
     * @param vc ‡ªÁπ Vector ¢Õß¢ÈÕ¡Ÿ≈∑’Ë∑”°“√ Ëß¡“„ÀÈ·≈–µÈÕß°“√°”Àπ¥„ÀÈ· ¥ß∫πµ“√“ß
     */
    private void showDataToTable(Vector vc)
    {
        theTableModelGUI = new TableModelGUI(colName, 0);
        if(vc != null)
        {
            int size = vc.size();
            theTableModelGUI = new TableModelGUI(colName, size);
            theResidentAgeGroupTemp = null;
            for(int i = 0 ; i < size ;i++)
            {
                theResidentAgeGroupTemp = (ResidentAgeGroup)vc.get(i);
                theTableModelGUI.setValueAt(theResidentAgeGroupTemp.number ,i, 0);
                theTableModelGUI.setValueAt(theResidentAgeGroupTemp.begin,i, 1);
                theTableModelGUI.setValueAt(theResidentAgeGroupTemp.end,i, 2);
                theResidentAgeGroupTemp = null;
            }
        }
        jTableAgePortion.setModel(theTableModelGUI);
        // jTableAgePortion.getColumnModel().getColumn(0).setPreferredWidth(25);
        // jTableAgePortion.getColumnModel().getColumn(1).setPreferredWidth(100);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.hospital_os.utility.IntegerTextField integerTextFieldAgeBegin;
    private com.hospital_os.utility.IntegerTextField integerTextFieldAgeEnd;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelAgeBegin;
    private javax.swing.JLabel jLabelAgeEnd;
    private javax.swing.JLabel jLabelAgePortion;
    private javax.swing.JLabel jLabelNumber;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowData;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableAgePortion;
    private javax.swing.JTextField jTextFieldNumber;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    public void setLanguage()
    {
        colName = new String[] {Language.getTextBundle("Code", language)
        ,Language.getTextBundle("AgeBegin", language)
        ,Language.getTextBundle("AgeEnd", language)
        };
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText(),language));
        jButtonDel.setText(Language.getTextBundle(jButtonDel.getText(),language));
        jButtonSave.setText(Language.getTextBundle(jButtonSave.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        jLabelAgeBegin.setText(Language.getTextBundle(jLabelAgeBegin.getText(),language));
        jLabelAgeEnd.setText(Language.getTextBundle(jLabelAgeEnd.getText(),language));
        jLabelAgePortion.setText(Language.getTextBundle(jLabelAgePortion.getText(),language));
        jLabelNumber.setText(Language.getTextBundle(jLabelNumber.getText(),language));
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
    }
    
}
