/*
 * PanelSetupHealthyGroupSurvey.java
 *
 * Created on 9 มีนาคม 2549, 13:54 น.
 */

package com.setupreport.gui.panel;

import com.setupreport.utility.TableModelGUI;
import com.setupreport.utility.ComboboxModel;
import com.setupreport.utility.Language;
import com.setupreport.gui.dialog.DialogSearchSurvey;
import com.setupreport.usecase.SaveHealthyGroupSurvey;
import com.setupreport.manage.HosManage;
import com.setupreport.object.*;

import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.*;
/**
 *
 * @author  Ojika
 */
public class PanelSetupHealthyGroupSurvey extends javax.swing.JPanel implements SaveHealthyGroupSurvey 
{
    
    /** Creates new form PanelSetupHealthyGroupSurvey */
    HosManage theHosManage;
    TableModelGUI theTableModelGUI;
    private ComboboxModel theComboboxModel;
    
    String[] colNameGroup;
    String[] colNameItem;
    final String panelname = "HealthyGroupSurvey";
    int language = 1;
    /**ใช้ตรวจสอบว่าข้อมูล item ที่เลือกสำหรับการเพิ่มนั้นมีอยู่ในข้อมูลเดิมหรือไม่*/
    int status = 1;
    
    Vector vHealthyGroup;
   // HealthyGroup theHealthyGroup;
    Vector vHealthyGroupSurvey;
    HealthyGroupSurvey theHealthyGroupSurvey;
    Vector vHealthySubgroup;
    HealthySubgroup theHealthySubgroup;
    
    public PanelSetupHealthyGroupSurvey(HosManage hosManage)
    {
        this.theHosManage = hosManage;
        initComponents();
        setLanguage();
        this.theHosManage.theHosControl.theHosSubject.theHealthyGroupSurveySubject.registerMainReportManage(this);
        Language.getTextBundle(panelname, language);
        searchHealthySubgroup();
        
        // เซ็ทค่าให้กับ Conbobox ชื่อ jComboBoxHealthyGroup
        initCoombobox();
        // ไม่มีการใช้งาน แต่เก็บเอาไว้ก่อน
        jButtonSave.setVisible(false);
    }
    
    public String getPanelName()
    {
        return panelname;
    }
    
    /**
     * เซ็ทค่าให้กับ Combobox ของกลุ่มการประเมินสุขภาพ
     * @Author Ojika
     * @Date 14/03/2549
     **/
    public void initCoombobox()
    {
        vHealthyGroup = new Vector();
        vHealthyGroup = this.theHosManage.theHosControl.theComboboxControl.listHealthyGroup();        
        this.theComboboxModel.initComboBox(this.jComboBoxHealthyGroup,vHealthyGroup);  
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jLabelSetupName = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowList = new javax.swing.JPanel();
        jScrollPaneShowList = new javax.swing.JScrollPane();
        jTableShowList = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextAreaDescrpiton = new javax.swing.JTextArea();
        jComboBoxHealthyGroup = new javax.swing.JComboBox();
        jLabelHealthyGroup = new javax.swing.JLabel();
        jPanelDisease = new javax.swing.JPanel();
        jPanelShowDisease = new javax.swing.JPanel();
        jScrollPaneShowDisease = new javax.swing.JScrollPane();
        jTableShowListItem = new javax.swing.JTable();
        jPanelControl = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelSetupName.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelSetupName.setText("HealthyGroupSurvey");
        jPanelTop.add(jLabelSetupName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanelTop, gridBagConstraints);

        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowList.setLayout(new java.awt.GridBagLayout());

        jTableShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableShowListMouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListMouseReleased(evt);
            }
        });

        jScrollPaneShowList.setViewportView(jTableShowList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowList.add(jScrollPaneShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelLeft.add(jPanelShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPanelLeft, gridBagConstraints);

        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jPanel3.setPreferredSize(new java.awt.Dimension(89, 100));
        jLabelCode.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel3.add(jLabelCode, gridBagConstraints);

        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelDescription, gridBagConstraints);

        jTextFieldCode.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel3.add(jTextFieldCode, gridBagConstraints);

        jScrollPane1.setMinimumSize(new java.awt.Dimension(23, 50));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(2, 50));
        jTextAreaDescrpiton.setEditable(false);
        jTextAreaDescrpiton.setLineWrap(true);
        jTextAreaDescrpiton.setRows(3);
        jTextAreaDescrpiton.setMinimumSize(new java.awt.Dimension(0, 50));
        jTextAreaDescrpiton.setPreferredSize(new java.awt.Dimension(0, 51));
        jScrollPane1.setViewportView(jTextAreaDescrpiton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel3.add(jScrollPane1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 5, 5);
        jPanel3.add(jComboBoxHealthyGroup, gridBagConstraints);

        jLabelHealthyGroup.setText("HealthyGroup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanel3.add(jLabelHealthyGroup, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel3, gridBagConstraints);

        jPanelDisease.setLayout(new java.awt.GridBagLayout());

        jPanelDisease.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelShowDisease.setLayout(new java.awt.GridBagLayout());

        jTableShowListItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListItemMouseReleased(evt);
            }
        });

        jScrollPaneShowDisease.setViewportView(jTableShowListItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowDisease.add(jScrollPaneShowDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDisease.add(jPanelShowDisease, gridBagConstraints);

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanelControl.add(jButtonAdd, gridBagConstraints);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelControl.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setText("Save");
        jButtonSave.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelControl.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelDisease.add(jPanelControl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanelRight.add(jPanelDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel1.add(jPanelRight, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTableShowListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListMouseReleased
    {//GEN-HEADEREND:event_jTableShowListMouseReleased
        // เลือกกลุ่มการตรวจสุขภาพ
        selectHealthySubgroup(jTableShowList.getSelectedRow());
    }//GEN-LAST:event_jTableShowListMouseReleased

    private void jTableShowListItemMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListItemMouseReleased
    {//GEN-HEADEREND:event_jTableShowListItemMouseReleased
        // เลือกรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ
        selectHealthyGroupSurvey(jTableShowListItem.getSelectedRow());
    }//GEN-LAST:event_jTableShowListItemMouseReleased

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        // บันทึกรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteActionPerformed
        // ลบรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
       
        if(confirm_del == 0)
        {
            deleteHealthyGroupSurvey();
        }
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        // เพิ่มรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ
        addHealthyGroupSurvey();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableShowListMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListMouseClicked
    {//GEN-HEADEREND:event_jTableShowListMouseClicked
        // เลือกกลุ่มการตรวจสุขภาพ
        selectHealthySubgroup(jTableShowList.getSelectedRow());
    }//GEN-LAST:event_jTableShowListMouseClicked

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        // ค้นหากลุ่มการตรวจสุขภาพ
        searchHealthySubgroup();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldSearchActionPerformed
    {//GEN-HEADEREND:event_jTextFieldSearchActionPerformed
        // ค้นหากลุ่มการตรวจสุขภาพ
        searchHealthySubgroup();
    }//GEN-LAST:event_jTextFieldSearchActionPerformed
               
    /**
     * สำหรับค้นหารายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ และ ส่งข้อมูลไปแสดงในตาราง
     * @Author Ojika
     * @Date 09/03/2549
     **/
    private void searchHealthyGroupSurvey(String healthySubgroupId)
    {
        // ค้นหารายการ โดยส่ง keyword ไปค้น
        this.vHealthyGroupSurvey = new Vector();
        
        this.vHealthyGroupSurvey = this.theHosManage.theHosControl.theHealthyGroupSurveyControl.selectHealthyGroupSurveyByHealthySubgroupId(healthySubgroupId);
                
        // ส่งข้อมูลที่ได้จากการค้นหานั้นไปแสดงยังตาราง
        setTableHealthyGroupSurvey(this.vHealthyGroupSurvey);     
    }
    
    /**
     * สำหรับค้นหากลุ่มการตรวจสุขภาพ และ ส่งข้อมูลไปแสดงในตาราง
     * @Author Ojika
     * @Date 09/03/2549
     **/
    private void searchHealthySubgroup()
    {
        // ค้นหารายการ โดยส่ง keyword ไปค้น
        //this.vHealthyGroup = new Vector();
        this.vHealthySubgroup = new Vector();
        String keyword = jTextFieldSearch.getText().trim();
        
        //this.vHealthyGroup = this.theHosManage.theHosControl.theHealthyGroupSurveyControl.selectHealthyGroupByKeyword(keyword);
        this.vHealthySubgroup = this.theHosManage.theHosControl.theHealthyGroupSurveyControl.selectHealthySubgroupByKeyword(keyword);
        
        // ส่งข้อมูลที่ได้จากการค้นหานั้นไปแสดงยังตาราง
        //setTableHealthyGroup(this.vHealthyGroup);
        setTableHealthySubgroup(this.vHealthySubgroup);
        
        this.vHealthyGroupSurvey = null;
        clearGUI();
    }
    
    /**
     * แสดง Dialog สำหรับเลือกรายการแบบสำรวจ
     * @Author Ojika
     * @Date 09/03/2549 
     **/
    private void addHealthyGroupSurvey()
    {
        DialogSearchSurvey dialog = new DialogSearchSurvey(new JFrame(), true,this.theHosManage);
        dialog.setVisible(true);
    }
    
    /**
     * ลบรายการที่เลือกออกจากฐานข้อมูล
     * @Author Ojika
     * @Date 09/03/2549
     **/
    private void deleteHealthyGroupSurvey()
    {
        if(this.theHealthyGroupSurvey != null)
        {
            // ส่งค่าของ Object ไปลบ
            this.theHosManage.theHosControl.theHealthyGroupSurveyControl.deleteHealthyGroupSurveyByKeyId(this.theHealthyGroupSurvey); 
            // แจ้งบอกสถานะการลบรายการ         
            
            // เรียกค้นหาอีกครั้ง
            searchHealthyGroupSurvey(this.theHealthySubgroup.getObjectId());
        }        
    }    
    
    /**
     * เลือกรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ และ Set ค่าให้กับ Object ของรายการสำรวจที่อยู่ในกลุ่มการตรวจสุขภาพ
     * @Author Ojika
     * @Date 09/03/2549
     **/
     private void selectHealthyGroupSurvey(int row)
     {
        if(row > -1)
        {
            // มีการเลือกจากตาราง
            if(this.vHealthyGroupSurvey != null)
            {                
                this.theHealthyGroupSurvey = (HealthyGroupSurvey)vHealthyGroupSurvey.get(row);                
            }
        }
     }
     
    /**
     * เลือกรายการกลุ่มการตรวจสุขภาพ และ แสดงรายละเอียด
     * @Author Ojika
     * @Date 09/03/2549
     **/
     private void selectHealthySubgroup(int row)
     {
        if(row > -1)
        {
            this.vHealthyGroupSurvey = null;
            // มีการเลือกจากตาราง
            if(this.vHealthySubgroup != null)
            {           
                this.theHealthySubgroup = (HealthySubgroup)vHealthySubgroup.get(row);
                // ดึงข้อมูล รายการแบบสอบถาม
                this.vHealthyGroupSurvey = this.theHosManage.theHosControl.theHealthyGroupSurveyControl.selectHealthyGroupSurveyByHealthySubgroupId(this.theHealthySubgroup.getObjectId());
                // แสดงรายละเอียดข้อมูล    
                setObjectToData();
            }
        }
     }
     
     /**
      * แสดงค่าจาก Object ให้กับ GUI
      * @Author Ojika
      * @Date 09/03/2549
      **/
     private void setObjectToData()
     {
        if(this.theHealthySubgroup != null)
        {
            jTextFieldCode.setText(this.theHealthySubgroup.healthy_subgroup_number);
            jTextAreaDescrpiton.setText(this.theHealthySubgroup.healthy_subgroup_description);
            this.theComboboxModel.setCodeComboBox(this.jComboBoxHealthyGroup, this.theHealthySubgroup.r_healthy_group_id);
            
            if(this.vHealthyGroupSurvey != null && this.vHealthyGroupSurvey.size() > 0)
            {
                // สั่ง Set ตาราง
                setTableHealthyGroupSurvey(this.vHealthyGroupSurvey);
            }
            else
            {
                setTableHealthyGroupSurvey(null);
            }
        }
        else
        {
            clearGUI();
        }
     }
     
     /**
      * เคลียร์ข้อมูลบน Gui 
      * @Author Ojika
      * @Date 09/03/2549
      **/
     private void clearGUI()
     {
        jTextFieldCode.setText("");
        jTextAreaDescrpiton.setText("");
        
        setTableHealthyGroupSurvey(null);
     }         
    
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง
     * @author Ojika
     * @Date 09/03/2549
     **/
    private void setTableHealthySubgroup(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameGroup, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameGroup, size);
            theHealthySubgroup = null;
            for(int i = 0 ; i < size ;i++)
            {
                theHealthySubgroup = (HealthySubgroup)vData.get(i);
                theTableModelGUI.setValueAt(theHealthySubgroup.healthy_subgroup_number,i, 0);
                theTableModelGUI.setValueAt(theHealthySubgroup.healthy_subgroup_description,i, 1);
                theHealthySubgroup = null;
            }
            
        }
        
        jTableShowList.setModel(theTableModelGUI);
        
        jTableShowList.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableShowList.getColumnModel().getColumn(1).setPreferredWidth(100);
    }   
    
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง 
     * @author Ojika
     * @Date 08/03/2549
     **/
    private void setTableHealthyGroupSurvey(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameItem, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameItem, size);
            theHealthyGroupSurvey = null;
            for(int i = 0 ; i < size ;i++)
            {
                theHealthyGroupSurvey = (HealthyGroupSurvey)vData.get(i);
                theTableModelGUI.setValueAt(theHealthyGroupSurvey.healthy_group_survey_description,i, 0); 
                theHealthyGroupSurvey = null;
            }
            
        }
        
        jTableShowListItem.setModel(theTableModelGUI);
        
    }  
    
    private void setLanguage()
    {
        colNameGroup = new String[] {Language.getTextBundle("Code",language),Language.getTextBundle("Description",language)};
        colNameItem = new String[] {Language.getTextBundle("Description",language)};
        
        jLabelSetupName.setText(Language.getTextBundle(jLabelSetupName.getText(),language));
        
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        
        jLabelCode.setText(Language.getTextBundle(jLabelCode.getText(),language));
        jTextAreaDescrpiton.setText(Language.getTextBundle(jTextAreaDescrpiton.getText(),language));
        jLabelHealthyGroup.setText(Language.getTextBundle(jLabelHealthyGroup.getText(),language));
        jButtonSave.setText(Language.getTextBundle(jButtonSave.getText(),language));
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText(),language));
        jButtonDelete.setText(Language.getTextBundle(jButtonDelete.getText(),language));
        
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText(),language)); // ojika 28 Feb 2007
    }
    
    /**
     * รับ Vector ของ Survey ที่เลือกเพื่อ save เป็นรายการทันตกรรมป้องกัน
     * @Author Ojika
     * @Modify Pu
     * @Date 09/03/2549
     **/
    public void notifySaveHealthyGroupSurvey(Vector vSurvey)
    {
        if(vSurvey != null)
        {
            //if(this.theHealthyGroupSurvey != null)
            if(this.theHealthySubgroup != null)
            {
                System.out.println(vSurvey.size());
                HealthySurvey theHealthySurvey = new HealthySurvey();
                int size = vSurvey.size();
                for(int i =0;i<size;i++)
                {
                    theHealthySurvey = (HealthySurvey)vSurvey.get(i);
                    
                    this.theHealthyGroupSurvey = new HealthyGroupSurvey();
                    
                    this.theHealthyGroupSurvey.r_healthy_subgroup_id = this.theHealthySubgroup.getObjectId();
                    this.theHealthyGroupSurvey.b_health_survey_id = theHealthySurvey.getObjectId();
                    this.theHealthyGroupSurvey.healthy_group_survey_description = theHealthySurvey.health_survey_desceiption;
                    
                    
                    checkSameData(this.theHealthyGroupSurvey);
                    this.theHealthyGroupSurvey = null;
                    searchHealthyGroupSurvey(this.theHealthySubgroup.getObjectId());
                }
                theHealthySurvey = null;
            }
            else
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("PleaseSelectGroupSurvey", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
            }
        }        
        //เรียก Function การค้นหาเพื่อเปลี่ยนข้อมูใหม่
      //  searchHealthyGroupSurvey(this.theHealthySubgroup.getObjectId());        
    }
    
    
    private void checkSameData(HealthyGroupSurvey theHGS)
    {
        if(this.vHealthyGroupSurvey != null)
        {
            int size = this.vHealthyGroupSurvey.size();
            if(size > 0)
            {
                for(int i =0;i<size;i++)
                {
                    if(!theHGS.b_health_survey_id.equals(((HealthyGroupSurvey)this.vHealthyGroupSurvey.get(i)).b_health_survey_id))
                    {
                        status = 1;
                    }
                    else
                    {
                        status = 0;
                        JOptionPane.showMessageDialog(this,Language.getTextBundle("Same_Item", language) + theHGS.healthy_group_survey_description ,Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                }
                if(status != 0)
                {
                    // ไม่มีข้อมูลซ้ำส่งไปบันทึก
                    this.theHosManage.theHosControl.theHealthyGroupSurveyControl.saveHealthyGroupSurvey(theHGS);
                }
            }
        }
        else
        {
            // ไม่มีข้อมูลสำหรับตรวจสอบส่งไปบันทึก
            this.theHosManage.theHosControl.theHealthyGroupSurveyControl.saveHealthyGroupSurvey(theHGS);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox jComboBoxHealthyGroup;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelHealthyGroup;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSetupName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelDisease;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowDisease;
    private javax.swing.JPanel jPanelShowList;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPaneShowDisease;
    private javax.swing.JScrollPane jScrollPaneShowList;
    private javax.swing.JTable jTableShowList;
    private javax.swing.JTable jTableShowListItem;
    private javax.swing.JTextArea jTextAreaDescrpiton;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
