/*
 * PanelSetupEpiAgeGroup.java
 *
 * Created on 28 มีนาคม 2549, 16:14 น.
 */

package com.setupreport.gui.panel;

import com.setupreport.utility.TableModelGUI;
import com.setupreport.utility.ComboboxModel;
import com.setupreport.utility.Language;
import com.setupreport.gui.dialog.DialogSearchEpi;
import com.setupreport.usecase.SaveEpiAgeGroupItem; 
import com.setupreport.manage.HosManage;
import com.setupreport.object.*;

import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.*;
/**
 *
 * @author  Ojika
 */
public class PanelSetupEpiAgeGroup extends javax.swing.JPanel implements SaveEpiAgeGroupItem
{
    
    /** Creates new form PanelSetupEpiAgeGroup */
    HosManage theHosManage;
    TableModelGUI theTableModelGUI;
    private ComboboxModel theComboboxModel;
    
    String[] colNameGroup;
    String[] colNameItem;
    final String panelname = "EpiAgeGroup";
    int language = 1;
    /**ใช้ตรวจสอบว่าข้อมูล item ที่เลือกสำหรับการเพิ่มนั้นมีอยู่ในข้อมูลเดิมหรือไม่*/
    int status = 1;
    /**ใช้ตรวจสอบว่าข้อมูลที่จะบันทึกนั้นเป็นการแก้ไขหรือบันทึกใหม่*/
    int saveNewEpiAgeGroup = 1;
    /**ใช้ตรวจความครบถ้วนของข้อมูลก่อนการบันทึก*/
    int dataComplete = 1;
    
    Vector vEpiAgeGroup;
    EpiAgeGroup theEpiAgeGroup; 
    Vector vEpiAgeGroupItem;
    EpiAgeGroupItem theEpiAgeGroupItem; 
    
    public PanelSetupEpiAgeGroup(HosManage hosManage)
    {
        this.theHosManage = hosManage;
        initComponents();
        setLanguage();
        // เซ็ทค่าให้กับ Conbobox ชื่อ jComboBoxAgeGroupType
        initCoombobox();
        this.theHosManage.theHosControl.theHosSubject.theEpiAgeGroupItemSubject.registerMainReportManage(this);
        Language.getTextBundle(panelname, language);
        searchEpiAgeGroup();
        setEnableSubGUI(false);       
    }
    
    public String getPanelName()
    {
        return panelname;
    }
    
    /**
     * เซ็ทค่าให้กับ Combobox ของประเภทช่วงอายุ
     * @Author Ojika
     * @Date 29/03/2549
     **/
    public void initCoombobox()
    {
        this.theComboboxModel.initComboBox(this.jComboBoxAgeGroupType,this.theHosManage.theHosControl.theComboboxControl.listEpiAgeGroupType());  
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jLabelSetupName = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowList = new javax.swing.JPanel();
        jScrollPaneShowList = new javax.swing.JScrollPane();
        jTableShowList = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldDescrpiton = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButtonDeleteAgeGroup = new javax.swing.JButton();
        jButtonAddAgeGroup = new javax.swing.JButton();
        jButtonSaveAgeGroup = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBoxAgeGroupType = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldAgeStart = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldAgeEnd = new javax.swing.JTextField();
        jPanelDisease = new javax.swing.JPanel();
        jPanelShowEpiItem = new javax.swing.JPanel();
        jScrollPaneShowEpiItem = new javax.swing.JScrollPane();
        jTableShowListItem = new javax.swing.JTable();
        jPanelControl = new javax.swing.JPanel();
        jButtonAddEpi = new javax.swing.JButton();
        jButtonDeleteEpi = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanelTop.setLayout(new java.awt.GridBagLayout());

        jLabelSetupName.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelSetupName.setText("EpiAgeGroup");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        jPanelTop.add(jLabelSetupName, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanelTop, gridBagConstraints);

        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowList.setLayout(new java.awt.GridBagLayout());

        jTableShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListMouseReleased(evt);
            }
        });

        jScrollPaneShowList.setViewportView(jTableShowList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowList.add(jScrollPaneShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelLeft.add(jPanelShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPanelLeft, gridBagConstraints);

        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel3.add(jLabelCode, gridBagConstraints);

        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelDescription, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel3.add(jTextFieldCode, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel3.add(jTextFieldDescrpiton, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButtonDeleteAgeGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDeleteAgeGroup.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteAgeGroup.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteAgeGroup.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteAgeGroup.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteAgeGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jButtonDeleteAgeGroup, gridBagConstraints);

        jButtonAddAgeGroup.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddAgeGroup.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddAgeGroup.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddAgeGroup.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddAgeGroup.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAgeGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanel2.add(jButtonAddAgeGroup, gridBagConstraints);

        jButtonSaveAgeGroup.setText("Save");
        jButtonSaveAgeGroup.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSaveAgeGroup.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSaveAgeGroup.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSaveAgeGroup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveAgeGroupActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHEAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel2.add(jButtonSaveAgeGroup, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 5);
        jPanel3.add(jPanel2, gridBagConstraints);

        jLabel1.setText("AgeGroupType");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabel1, gridBagConstraints);

        jComboBoxAgeGroupType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxAgeGroupTypeActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel3.add(jComboBoxAgeGroupType, gridBagConstraints);

        jPanel4.setLayout(new java.awt.GridBagLayout());

        jLabel2.setText("AgeStart");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel4.add(jLabel2, gridBagConstraints);

        jTextFieldAgeStart.setColumns(2);
        jTextFieldAgeStart.setMinimumSize(new java.awt.Dimension(30, 21));
        jTextFieldAgeStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldAgeStartActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jTextFieldAgeStart, gridBagConstraints);

        jLabel3.setText("AgeEnd");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jLabel3, gridBagConstraints);

        jTextFieldAgeEnd.setColumns(2);
        jTextFieldAgeEnd.setMinimumSize(new java.awt.Dimension(30, 21));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanel4.add(jTextFieldAgeEnd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 3);
        jPanel3.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel3, gridBagConstraints);

        jPanelDisease.setLayout(new java.awt.GridBagLayout());

        jPanelShowEpiItem.setLayout(new java.awt.GridBagLayout());

        jScrollPaneShowEpiItem.setBorder(javax.swing.BorderFactory.createTitledBorder("EpiItem"));
        jTableShowListItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListItemMouseReleased(evt);
            }
        });

        jScrollPaneShowEpiItem.setViewportView(jTableShowListItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowEpiItem.add(jScrollPaneShowEpiItem, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDisease.add(jPanelShowEpiItem, gridBagConstraints);

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonAddEpi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif")));
        jButtonAddEpi.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAddEpi.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAddEpi.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAddEpi.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAddEpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddEpiActionPerformed(evt);
            }
        });

        jPanelControl.add(jButtonAddEpi, new java.awt.GridBagConstraints());

        jButtonDeleteEpi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif")));
        jButtonDeleteEpi.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDeleteEpi.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteEpi.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDeleteEpi.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDeleteEpi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteEpiActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelControl.add(jButtonDeleteEpi, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelDisease.add(jPanelControl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanelRight.add(jPanelDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel1.add(jPanelRight, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jComboBoxAgeGroupTypeActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jComboBoxAgeGroupTypeActionPerformed
    {//GEN-HEADEREND:event_jComboBoxAgeGroupTypeActionPerformed
        // เลือกประเภทของช่วงอายุ ให้ปรับ GUI รอการกรอกข้อมูล
        manageGUISelectEpiAgeGroupType();
    }//GEN-LAST:event_jComboBoxAgeGroupTypeActionPerformed

    private void jTableShowListItemMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListItemMouseReleased
    {//GEN-HEADEREND:event_jTableShowListItemMouseReleased
        // เลือกรายการวัคซีนของช่วงอายุการรับวัคซีน
        selectEpiAgeGroupItem(jTableShowListItem.getSelectedRow());
    }//GEN-LAST:event_jTableShowListItemMouseReleased

    private void jTableShowListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListMouseReleased
    {//GEN-HEADEREND:event_jTableShowListMouseReleased
        // เลือกช่วงอายุการรับวัคซีน
        selectEpiAgeGroup(jTableShowList.getSelectedRow());
    }//GEN-LAST:event_jTableShowListMouseReleased

    private void jButtonDeleteEpiActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteEpiActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteEpiActionPerformed
        // ลบรายการวัคซีนของช่วงอายุการรับวัคซีน
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
        
        if(confirm_del == 0)
        {
            deleteEpiAgeGroupItem();
        }
        
    }//GEN-LAST:event_jButtonDeleteEpiActionPerformed

    private void jButtonSaveAgeGroupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveAgeGroupActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveAgeGroupActionPerformed
        // บันทึก หรือ แก้ไขข้อมูล ช่วงเวลาการรับวัคซีน
        saveEpiAgeGroup();
    }//GEN-LAST:event_jButtonSaveAgeGroupActionPerformed

    private void jButtonDeleteAgeGroupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteAgeGroupActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteAgeGroupActionPerformed
        // ลบข้อมูลช่วงอายุการรับวัคซีน
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
        
        if(confirm_del == 0)
        {
            deleteEpiAgeGroup();
        }
        
    }//GEN-LAST:event_jButtonDeleteAgeGroupActionPerformed

    private void jButtonAddAgeGroupActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddAgeGroupActionPerformed
    {//GEN-HEADEREND:event_jButtonAddAgeGroupActionPerformed
        // เคลียร์ GUI พร้อมสำหรับเพิ่มข้อมูลใหม่        
        clearGUI();
        setEnableSubGUI(false);
        this.saveNewEpiAgeGroup = 1;
    }//GEN-LAST:event_jButtonAddAgeGroupActionPerformed

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        // ค้นหาช่วงอายุการรับวัคซีน
        searchEpiAgeGroup();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldSearchActionPerformed
    {//GEN-HEADEREND:event_jTextFieldSearchActionPerformed
        // ค้นหาช่วงอายุการรับวัคซีน
        searchEpiAgeGroup();
    }//GEN-LAST:event_jTextFieldSearchActionPerformed

    private void jTextFieldAgeStartActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldAgeStartActionPerformed
    {//GEN-HEADEREND:event_jTextFieldAgeStartActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldAgeStartActionPerformed

    private void jButtonAddEpiActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddEpiActionPerformed
    {//GEN-HEADEREND:event_jButtonAddEpiActionPerformed
        // เพิ่มรายการวัคซีนของช่วงอายุการรับวัคซีน
        addEpiAgeGroupItem();
    }//GEN-LAST:event_jButtonAddEpiActionPerformed
    /**
     * บันทึกช่วงอายุ
     * @Author Ojika
     * @Date 29/03/2549
     **/
     private void saveEpiAgeGroup()
     {    
        this.dataComplete = 1;
        // ตรวจสอบค่าจาก GUI 
        checkGUIForSave();
        
        if(this.dataComplete == 1)
        {
            // Set ค่าจาก GUI ให้กับ Object เพื่อส่งไปบันทึก      
            setDataToObjectForSave();

            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.saveEpiAgeGroup(this.theEpiAgeGroup,this.saveNewEpiAgeGroup);

            setEnableSubGUI(true);

            this.searchEpiAgeGroup();
        }
     }
     /**
      * เซ็ทข้อมูลให้กับ Object สำหรับส่ง Save 
      * @Author Ojika
      * @Date 29/03/2549
      **/
     private void setDataToObjectForSave()
     {
        if(this.theEpiAgeGroup == null)
        {
            this.theEpiAgeGroup = new EpiAgeGroup();
        }
        
        this.theEpiAgeGroup.epi_age_group_number = jTextFieldCode.getText().trim();
        this.theEpiAgeGroup.epi_age_group_description = jTextFieldDescrpiton.getText().trim();
        this.theEpiAgeGroup.r_epi_age_group_type_id = this.theComboboxModel.getCodeComboBox(jComboBoxAgeGroupType);
        this.theEpiAgeGroup.epi_age_group_start = jTextFieldAgeStart.getText().trim();
        this.theEpiAgeGroup.epi_age_group_end = jTextFieldAgeEnd.getText().trim();
     }
     
     /**
      * ตรวจสอบข้อมูลที่ผู้ใช้กรอกว่าครบถ้วนหรือไม่
      * @Author Ojika
      * @Date 29/03/2549
      **/
     private void checkGUIForSave()
     {
        EpiAgeGroupType theEpiAgeGroupType = new EpiAgeGroupType();
        String EpiAgeGroupTypeId = this.theComboboxModel.getCodeComboBox(jComboBoxAgeGroupType);
        
        if(jTextFieldCode.getText().trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabelCode.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
            jTextFieldCode.setFocusable(true);
            this.dataComplete = 0;
            return;
        }
        else if(this.theEpiAgeGroup == null || this.theEpiAgeGroup.getObjectId() == null)
        {
            // เช็ค number จากฐานข้อมูลว่าซ้ำหรือไม่ 
            boolean checkSameNumber = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.checkSameNumber(jTextFieldCode.getText().trim());
            // ถ้าข้อมูลซ้ำให้แจ้งเตือน แล้วเซ็ตเป็นค่าว่าง
            if(checkSameNumber)
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("Code", language) + " : " +  jTextFieldCode.getText().trim() + Language.getTextBundle("same_code", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                jTextFieldCode.setText("");
                jTextFieldCode.setFocusable(true);
                this.dataComplete = 0;
                return;
            }
        }
        
        if(jTextFieldDescrpiton.getText().trim().equalsIgnoreCase(""))
        {
            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabelDescription.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
            jTextFieldDescrpiton.setFocusable(true);
            this.dataComplete = 0;
            return;
        }                
        
        theEpiAgeGroupType = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.selectEpiAgeGroupTypeById(EpiAgeGroupTypeId);
        
        if(theEpiAgeGroupType != null)
        {
            switch(Integer.parseInt(theEpiAgeGroupType.epi_age_group_type_number))
            {
                case 1 : //กำหนดช่วงอายุ
                         if(jTextFieldAgeStart.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel2.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeStart.setFocusable(true);
                            this.dataComplete = 0;
                            return;
                         }
                         
                         if(jTextFieldAgeEnd.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel3.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeEnd.setFocusable(true);      
                            this.dataComplete = 0;
                            return;
                         }
                         break;
                case 2 : //ไม่กำหนดช่วงอายุ
                         break;
                case 3 : //กำหนดอายุเริ่มต้น
                         if(jTextFieldAgeStart.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel2.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeStart.setFocusable(true);      
                            this.dataComplete = 0;
                            return;
                         }
                         break;
                case 4 : //กำหนดอายุสิ้นสุด
                         if(jTextFieldAgeEnd.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel3.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeEnd.setFocusable(true);
                            this.dataComplete = 0;
                            return;
                         }
                         break;
                default : if(jTextFieldAgeStart.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel2.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeStart.setFocusable(true);
                            this.dataComplete = 0;
                            return;
                         }
                         
                         if(jTextFieldAgeEnd.getText().trim().equalsIgnoreCase(""))
                         {
                            JOptionPane.showMessageDialog(this,Language.getTextBundle("key_data", language) + Language.getTextBundle(jLabel3.getText(), language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                        
                            jTextFieldAgeEnd.setFocusable(true);
                            this.dataComplete = 0;
                            return;
                         }
            }
        }
        
     }
     
    /**
     * ลบข้อมูลช่วงอายุการรับวัคซีน
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void deleteEpiAgeGroup()
    {
        if(this.theEpiAgeGroup != null && this.theEpiAgeGroup.getObjectId() != null)
        {
            // มีค่าช่วงอายุที่เลือก
            // ลบ ช่วงอายุ EpiAgeGroup
            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.deleteEpiAgeGroupByKeyId(this.theEpiAgeGroup);
            // ลบ รายการวัคซีนในช่วงอายุ EpiAgeGroupItem
            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.deleteEpiAgeGroupItemByEpiAgeGroupID(this.theEpiAgeGroup.getObjectId());
            
            this.theEpiAgeGroup = null;  
            this.vEpiAgeGroup = null;
            this.searchEpiAgeGroup();
        }
        else
        {
            setEnableSubGUI(true);
        }
    }
    
    /**
     * จัดการ GUI ของช่วงอายุ จากการเลือกประเภท
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void manageGUISelectEpiAgeGroupType()
    {
        EpiAgeGroupType theEpiAgeGroupType = new EpiAgeGroupType();
        String EpiAgeGroupTypeId = this.theComboboxModel.getCodeComboBox(jComboBoxAgeGroupType);
        
        theEpiAgeGroupType = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.selectEpiAgeGroupTypeById(EpiAgeGroupTypeId);
        
        if(theEpiAgeGroupType != null)
        {
            switch(Integer.parseInt(theEpiAgeGroupType.epi_age_group_type_number))
            {
                case 1 : //กำหนดช่วงอายุ
                         jTextFieldAgeStart.setEditable(true);
                         jTextFieldAgeEnd.setEditable(true);
                         break;
                case 2 : //ไม่กำหนดช่วงอายุ
                         jTextFieldAgeStart.setEditable(false);
                         jTextFieldAgeEnd.setEditable(false);
                         jTextFieldAgeStart.setText("");
                         jTextFieldAgeEnd.setText("");
                         break;
                case 3 : //กำหนดอายุเริ่มต้น
                         jTextFieldAgeStart.setEditable(true);
                         jTextFieldAgeEnd.setEditable(false);
                         jTextFieldAgeEnd.setText("");
                         break;
                case 4 : //กำหนดอายุสิ้นสุด
                         jTextFieldAgeStart.setEditable(false);
                         jTextFieldAgeEnd.setEditable(true);
                         jTextFieldAgeStart.setText("");
                         break;
                default :jTextFieldAgeStart.setEditable(true);
                         jTextFieldAgeEnd.setEditable(true);   
            }
        }
    }
    
    /**
     * บันทึกรายการวัคซีน ของช่วงอายุการรับวัคซีน
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void saveEpiAgeGroupItem()
    {
        if(this.theEpiAgeGroup != null && this.vEpiAgeGroupItem != null && this.vEpiAgeGroupItem.size() > 0)
        {
            // มีข้อมูลสำหรับการบันทึก ส่งข้อมูลไปตรวจสอบและบันทึก           
            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.checkSaveEpiAgeGroupItem(this.vEpiAgeGroupItem);
        }
    }    
    
    /**
     * สำหรับค้นหารายการวัคซีนของช่วงอายุการรับวัคซีน และ ส่งข้อมูลไปแสดงในตาราง
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void searchEpiAgeGroupItem(String epiAgeGroupId)
    {
        // ค้นหารายการ โดยส่ง keyword ไปค้น
        this.vEpiAgeGroupItem = new Vector();
        
        this.vEpiAgeGroupItem = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.selectEpiAgeGroupItemByEpiAgeGroupId(epiAgeGroupId);
                
        // ส่งข้อมูลที่ได้จากการค้นหานั้นไปแสดงยังตาราง
        setTableEpiAgeGroupItem(this.vEpiAgeGroupItem);     
    }
    
    /**
     * สำหรับค้นหาช่วงอายุการรับวัคซีน และ ส่งข้อมูลไปแสดงในตาราง
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void searchEpiAgeGroup()
    {
        // ค้นหารายการ โดยส่ง keyword ไปค้น
        this.vEpiAgeGroup = new Vector();
        String keyword = jTextFieldSearch.getText().trim();
        
        this.vEpiAgeGroup = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.selectEpiAgeGroupByKeyword(keyword);
        
        // ส่งข้อมูลที่ได้จากการค้นหานั้นไปแสดงยังตาราง
        setTableEpiAgeGroup(this.vEpiAgeGroup);
        
        clearGUI();
        setEnableSubGUI(false);
    }
    
    /**
     * แสดง Dialog สำหรับเลือกรายการวัคซีน
     * @Author Ojika
     * @Date 29/03/2549 
     **/
    private void addEpiAgeGroupItem()
    {
        if(this.theEpiAgeGroup != null)
        {
            DialogSearchEpi dialog = new DialogSearchEpi(new JFrame(), true,this.theHosManage, 4);
            dialog.setVisible(true);
        }
        else
        {
            // เป็นข้อมูลใหม่ หรือ ยังไม่มีการเลือกข้อมูล
        }
    }
    
    /**
     * ลบรายการที่เลือกออกจากฐานข้อมูล
     * @Author Ojika
     * @Date 29/03/2549
     **/
    private void deleteEpiAgeGroupItem()
    {
        if(this.theEpiAgeGroupItem != null)
        {
            // ส่งค่าของ Object ไปลบ
            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.deleteEpiAgeGroupItemByKeyId(this.theEpiAgeGroupItem); 
            // แจ้งบอกสถานะการลบรายการ         
            
            // เรียกค้นหาอีกครั้ง
            searchEpiAgeGroupItem(this.theEpiAgeGroup.getObjectId());
        }        
    }    
    
    /**
     * เลือกรายการวัคซีนของช่วงอายุการรับวัคซีน และ Set ค่าให้กับ Object ของรายการวัคซีน
     * @Author Ojika
     * @Date 29/03/2549
     **/
     private void selectEpiAgeGroupItem(int row)
     {
        if(row > -1)
        {
            // มีการเลือกจากตาราง
            if(this.vEpiAgeGroup != null)
            {                
                this.theEpiAgeGroupItem = (EpiAgeGroupItem)vEpiAgeGroupItem.get(row);                
            }
        }
     }
     
    /**
     * เลือกรายการช่วงอายุการรับวัคซีน และ แสดงรายละเอียด
     * @Author Ojika
     * @Date 29/03/2549
     **/
     private void selectEpiAgeGroup(int row)
     {
        if(row > -1)
        {
            this.vEpiAgeGroupItem = null;
            // มีการเลือกจากตาราง
            if(this.vEpiAgeGroup != null)
            {           
                this.theEpiAgeGroup = (EpiAgeGroup)vEpiAgeGroup.get(row);
                // ดึงข้อมูล EpiItem
                this.vEpiAgeGroupItem = this.theHosManage.theHosControl.theEpiAgeGroupItemControl.selectEpiAgeGroupItemByEpiAgeGroupId(this.theEpiAgeGroup.getObjectId());
                // แสดงรายละเอียดข้อมูล    
                setObjectToData();
                
                setEnableSubGUI(true);
            }
        }
        else
        {
            setEnableSubGUI(false);
        }
     }
     
     /**
      * แสดงค่าจาก Object ให้กับ GUI
      * @Author Ojika
      * @Date 29/03/2549
      **/
     private void setObjectToData()
     {
        if(this.theEpiAgeGroup != null)
        {
            this.saveNewEpiAgeGroup = 0;
            jTextFieldCode.setText(this.theEpiAgeGroup.epi_age_group_number);
            jTextFieldDescrpiton.setText(this.theEpiAgeGroup.epi_age_group_description);
            
            this.theComboboxModel.setCodeComboBox(this.jComboBoxAgeGroupType, this.theEpiAgeGroup.r_epi_age_group_type_id);
            
            jTextFieldAgeStart.setText(this.theEpiAgeGroup.epi_age_group_start);
            jTextFieldAgeEnd.setText(this.theEpiAgeGroup.epi_age_group_end);
            
            if(this.vEpiAgeGroupItem != null && this.vEpiAgeGroupItem.size() > 0)
            {
                // สั่ง Set ตาราง
                setTableEpiAgeGroupItem(this.vEpiAgeGroupItem);
            }
            else
            {
                setTableEpiAgeGroupItem(null);
            }
        }
        else
        {
            clearGUI();
        }
     }
     
     /**
      * เคลียร์ข้อมูลบน Gui 
      * @Author Ojika
      * @Date 29/03/2549
      **/
     private void clearGUI()
     {
        jTextFieldCode.setText("");
        jTextFieldDescrpiton.setText("");
        jTextFieldAgeStart.setText("");
        jTextFieldAgeEnd.setText("");
        jTextFieldCode.requestFocus();
        initCoombobox();
        
        setTableEpiAgeGroupItem(null);
        
        this.theEpiAgeGroupItem = null;
        this.vEpiAgeGroupItem = null;
     }       
     
     /**
      * จัดการกับ GUI ที่ต้องเกี่ยวข้องกับการเลือกข้อมูล
      * @Author Ojika 
      * @Date 29/03/2549
      **/
     private void setEnableSubGUI(boolean b)
     {
        jButtonAddEpi.setEnabled(b);
        jButtonDeleteEpi.setEnabled(b);
     }
    
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง
     * @author Ojika
     * @Date 29/03/2549
     **/
    private void setTableEpiAgeGroup(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameGroup, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameGroup, size);
            theEpiAgeGroup = null;
            for(int i = 0 ; i < size ;i++)
            {
                theEpiAgeGroup = (EpiAgeGroup)vData.get(i);
                theTableModelGUI.setValueAt(theEpiAgeGroup.epi_age_group_number,i, 0);
                theTableModelGUI.setValueAt(theEpiAgeGroup.epi_age_group_description,i, 1);
                theEpiAgeGroup = null;
            }
            
        }
        
        jTableShowList.setModel(theTableModelGUI);
        
        jTableShowList.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableShowList.getColumnModel().getColumn(1).setPreferredWidth(100);
    }   
    
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง 
     * @author Ojika
     * @Date 29/03/2549
     **/
    private void setTableEpiAgeGroupItem(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameItem, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameItem, size);
            theEpiAgeGroupItem = null;
            for(int i = 0 ; i < size ;i++)
            {
                theEpiAgeGroupItem = (EpiAgeGroupItem)vData.get(i);
                theTableModelGUI.setValueAt(theEpiAgeGroupItem.epi_age_group_item_description,i, 0); 
                theEpiAgeGroupItem = null;
            }
            
        }
        
        jTableShowListItem.setModel(theTableModelGUI);
        
    }  
    
    private void setLanguage()
    {
        colNameGroup = new String[] {Language.getTextBundle("Code",language),Language.getTextBundle("Description",language)};
        colNameItem = new String[] {Language.getTextBundle("Description",language)};
        
        jLabelSetupName.setText(Language.getTextBundle(jLabelSetupName.getText(),language));
        
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        
        jLabelCode.setText(Language.getTextBundle(jLabelCode.getText(),language));
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText(),language));
        jLabel1.setText(Language.getTextBundle(jLabel1.getText(),language));
        jLabel2.setText(Language.getTextBundle(jLabel2.getText(),language));
        jLabel3.setText(Language.getTextBundle(jLabel3.getText(),language));
        
        jButtonAddAgeGroup.setText(Language.getTextBundle(jButtonAddAgeGroup.getText(),language));
        jButtonDeleteAgeGroup.setText(Language.getTextBundle(jButtonDeleteAgeGroup.getText(),language));
        jButtonSaveAgeGroup.setText(Language.getTextBundle(jButtonSaveAgeGroup.getText(),language));
        jButtonAddEpi.setText(Language.getTextBundle(jButtonAddEpi.getText(),language));
        jButtonDeleteEpi.setText(Language.getTextBundle(jButtonDeleteEpi.getText(),language));
        
        jScrollPaneShowEpiItem.setBorder(new javax.swing.border.TitledBorder(Language.getTextBundle("EpiItem",language)));
    }
    
    /**
     * รับ Vector ของ Item ที่เลือกเพื่อ save เป็นรายการวัคซีน
     * @Author Ojika
     * @Date 29/03/2549
     **/
    public void notifySaveEpiAgeGroupItem(Vector vEpi)
    {
        if(vEpi != null)
        {
            System.out.println(vEpi.size());
            Epi theEpi = new Epi();
            int size = vEpi.size();
            for(int i =0;i<size;i++)
            {
                theEpi = (Epi)vEpi.get(i);
                
                this.theEpiAgeGroupItem = new EpiAgeGroupItem();
                
                this.theEpiAgeGroupItem.r_epi_age_group_id = this.theEpiAgeGroup.getObjectId();
                this.theEpiAgeGroupItem.b_health_epi_group_id = theEpi.getObjectId();
                this.theEpiAgeGroupItem.epi_age_group_item_description = theEpi.health_epi_group_description;
                
                checkSameData(this.theEpiAgeGroupItem);                
                this.theEpiAgeGroupItem = null;
                searchEpiAgeGroupItem(this.theEpiAgeGroup.getObjectId());
            }
            theEpi = null;
        }
        
        //เรียก Function การค้นหาเพื่อเปลี่ยนข้อมูลใหม่   
        searchEpiAgeGroupItem(this.theEpiAgeGroup.getObjectId());
    }
    
    private void checkSameData(EpiAgeGroupItem theEAGI)
    {
        if(this.vEpiAgeGroupItem != null)
        {
            int size = this.vEpiAgeGroupItem.size();
            if(size > 0)
            {
                for(int i =0;i<size;i++)
                {
                    if(!theEAGI.b_health_epi_group_id.equals(((EpiAgeGroupItem)this.vEpiAgeGroupItem.get(i)).b_health_epi_group_id))
                    {
                        status = 1;
                    }
                    else
                    {
                        status = 0;
                        JOptionPane.showMessageDialog(this,Language.getTextBundle("Same_Item", language) + theEAGI.epi_age_group_item_description ,Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                }
                if(status != 0)
                {
                    // ไม่มีข้อมูลซ้ำส่งไปบันทึก
                    this.theHosManage.theHosControl.theEpiAgeGroupItemControl.saveEpiAgeGroupItem(theEAGI);                           
                }
            }
        }
        else
        {
            // ไม่มีข้อมูลสำหรับตรวจสอบส่งไปบันทึก
            this.theHosManage.theHosControl.theEpiAgeGroupItemControl.saveEpiAgeGroupItem(theEAGI);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddAgeGroup;
    private javax.swing.JButton jButtonAddEpi;
    private javax.swing.JButton jButtonDeleteAgeGroup;
    private javax.swing.JButton jButtonDeleteEpi;
    private javax.swing.JButton jButtonSaveAgeGroup;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JComboBox jComboBoxAgeGroupType;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSetupName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelDisease;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowEpiItem;
    private javax.swing.JPanel jPanelShowList;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPaneShowEpiItem;
    private javax.swing.JScrollPane jScrollPaneShowList;
    private javax.swing.JTable jTableShowList;
    private javax.swing.JTable jTableShowListItem;
    private javax.swing.JTextField jTextFieldAgeEnd;
    private javax.swing.JTextField jTextFieldAgeStart;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDescrpiton;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
