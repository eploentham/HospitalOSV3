/* * Pat.java * * Created on 8 กันยายน 2548, 12:07 น. * * To change this template, choose Tools | Options and locate the template under * the Source Creation and Management node. Right-click the template and choose * Open. You can then make changes to the template in the Source Editor. */package com.report12file.objectnh52;import com.linuxense.javadbf.DBFField;import com.report12file.object.Pat;import com.report12file.utility.Report12FileData;import com.report12file.object.Rp12OI;import com.reportcenter.utility.IOStream;import com.reportcenter.utility.StringDate;import java.io.BufferedReader;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;/** * * @author tong(Padungrat) */public class PatNh52 extends Pat implements Rp12OI{    public String namepat;    public String title;    public String fname;    public String lname;    public String idtype;    public PatNh52() {    }    public String[] getHeaderArray() {        return new String[]{"hcode","hn","changwat","amphur","dob","sex","marriage","occupa","nation","person_id","namepat","title","fname","lname","idtype"};    }/** */    public String[] getValueArray() {        return new String[]{hcode	,hn	,changwat	,amphur	,dob	,sex	,marriage	,occupa	,nation	,person_id	,namepat	,title,fname,lname,idtype};    }    public DBFField[] getDBFField() throws Exception {        String[] header = getHeaderArray();        DBFField[] fields = new DBFField[header.length];        Report12FileData.initDBFField(0,header,fields,DBFField.FIELD_TYPE_C,5);        Report12FileData.initDBFField(1,header,fields,DBFField.FIELD_TYPE_C,9);        Report12FileData.initDBFField(2,header,fields,DBFField.FIELD_TYPE_C,2);        Report12FileData.initDBFField(3,header,fields,DBFField.FIELD_TYPE_C,2);        Report12FileData.initDBFField(4,header,fields,DBFField.FIELD_TYPE_D,5);        Report12FileData.initDBFField(5,header,fields,DBFField.FIELD_TYPE_C,1);        Report12FileData.initDBFField(6,header,fields,DBFField.FIELD_TYPE_C,1);        Report12FileData.initDBFField(7,header,fields,DBFField.FIELD_TYPE_C,3);        Report12FileData.initDBFField(8,header,fields,DBFField.FIELD_TYPE_C,3);        Report12FileData.initDBFField(9,header,fields,DBFField.FIELD_TYPE_C,13);        Report12FileData.initDBFField(10,header,fields,DBFField.FIELD_TYPE_C,36);        Report12FileData.initDBFField(11,header,fields,DBFField.FIELD_TYPE_C,30);        Report12FileData.initDBFField(12,header,fields,DBFField.FIELD_TYPE_C,40);        Report12FileData.initDBFField(13,header,fields,DBFField.FIELD_TYPE_C,40);        Report12FileData.initDBFField(14,header,fields,DBFField.FIELD_TYPE_C,1);        return fields;    }    public Object[] getDBFValue() {        PatNh52 p = this;        Object[] rowData = new Object[15];        rowData[0] = p.hcode;        rowData[1] = p.hn;        rowData[2] = p.changwat;        rowData[3] = p.amphur;        // rowData[4] = p.dob;        if(!("").equals(p.dob))            rowData[4] = StringDate.StringDateToDate(p.dob);        else            rowData[4] = null;        rowData[5] = p.sex;        rowData[6] = p.marriage;        rowData[7] = p.occupa;        rowData[8] = p.nation;        rowData[9] = p.person_id;        rowData[10] = p.namepat;        rowData[11] = p.title;        rowData[12] = p.fname;        rowData[13] = p.lname;        rowData[14] = p.idtype;//        System.out.println("getDBFValue:"+namepat);        return rowData;    }    ///////////////////////////////////////////////////////addcheckData     public boolean checkDatadict(StringBuffer sb,int[] error)    {        BufferedReader in;        PatNh52 file = this;        boolean ret = true;        error[0]++;        if(!Report12FileData.checkDataDict(	hcode	,	5	,	true	)) { 	error[1	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	hn	,	9	,	true	)) { 	error[2	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	changwat	,	2	,	false	)) { 	error[3	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	amphur	,	2	,	false	)) { 	error[4	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	dob	,	8	,	false	)) { 	error[5	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	sex	,	1	,	false	)) { 	error[6	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	marriage	,	1	,	false	)) { 	error[7	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	occupa	,	3	,	false	)) { 	error[8	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	nation	,	3	,	false	)) { 	error[9	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	person_id	,	13	,	true	)) { 	error[10	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	namepat	,	36	,	false	)) { 	error[11	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	title	,	30	,	false	)) { 	error[12	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	fname	,	40	,	true,false	)) { 	error[13	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	lname	,	40	,	true,false	)) { 	error[14	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	idtype	,	1	,	true,true,Report12FileData.VALID_14	)) { 	error[15	]++;    ret=false;}        if(!ret) {            error[Report12FileData.MAX_COLUMN-1]++;            if(error[Report12FileData.MAX_COLUMN-1]<Report12FileData.MAX_INCOMPLETE_ROW)                sb.append("\r\n\tรายการที่ผิดพลาดคือ เลข HN:"+ file.hn);            if(add_digit)                sb.append(" มีการปรับหลักของ HN/VN/AN");        }//        System.out.println("checkDatadict:"+namepat);         return ret;    }    public boolean setValue(ResultSet rs) throws Exception {        PatNh52 p = this;	p.	hcode	 = Report12FileData.getRsString(rs,	1	);	p.	hn	 = Report12FileData.getRsString(rs,	2	);	p.	changwat	 = Report12FileData.getRsString(rs,	3	);	p.	amphur	 = Report12FileData.getRsString(rs,	4	);	p.	dob	 = Report12FileData.getRsString(rs,	5	);	p.	sex	 = Report12FileData.getRsString(rs,	6	);	p.	marriage	 = Report12FileData.getRsString(rs,	7	);	p.	occupa	 = Report12FileData.getRsString(rs,	8	);	p.	nation	 = Report12FileData.getRsString(rs,	9	);	p.	person_id	 = Report12FileData.getRsString(rs,	10	);	p.	namepat	 = Report12FileData.getRsString(rs,	11	);	p.	title	 = Report12FileData.getRsString(rs,	12	);	p.	fname	 = Report12FileData.getRsString(rs, 13	);	p.	lname	 = Report12FileData.getRsString(rs,	14	);	p.	idtype	 = Report12FileData.getRsString(rs,	15	);//        System.out.println("namepat:"+namepat);        if(p.nation.length()==2)            p.nation = "0"+p.nation;        p.hn = Report12FileData.addDigit(p.hn,9);        if(Report12FileData.isAddDigit(p.hn,9) )            add_digit = true;        return true;    }    public Rp12OI initInstant() {        return new PatNh52();    }    public PreparedStatement getPreparedStatement(Connection con, String startDate, String endDate, int mode) throws Exception {        String sql = IOStream.readInputDefault("config/rp_12file52/12file52_pat.sql");        PreparedStatement pm = con.prepareStatement(sql);        pm.setString(1,startDate);        pm.setString(2,endDate);        pm.setString(3,startDate);        pm.setString(4,endDate);        return pm;    }}