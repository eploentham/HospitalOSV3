/* * Aer.java * * Created on 8 กันยายน 2548, 12:01 น. * * To change this template, choose Tools | Options and locate the template under * the Source Creation and Management node. Right-click the template and choose * Open. You can then make changes to the template in the Source Editor. */package com.report12file.objectnh52;import com.linuxense.javadbf.DBFField;import com.report12file.object.Rp12OI;import com.report12file.utility.Report12FileData;import com.reportcenter.utility.IOStream;import com.reportcenter.utility.StringDate;import java.io.BufferedReader;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;/** * * @author tong(Padungrat) */public class AdpNh52 implements Rp12OI{    public String hn;    public String an;    public String dateopd;    public String type;    public String code;    public String qty;    public String rate;    public String seq;    private boolean add_digit;    /** Creates a new instance of Aer */    public AdpNh52() {    }    public String[] getValueArray() {        return new String[]{            hn,            an,            dateopd,            type,            code,            qty,            rate,            seq        };    }    public String[] getWarningArray() {        return new String[]{            "เลข HN",            "เลข AN",            "วันที่รับบริการ",            "ประเภทค่าใช้จ่าย",            "รหัสตามที่ สปสช.กำหนด",            "หน่วย จำนวนครั้ง",            "ราคาต่อหน่วย",            "รหัสการบริการ"        };    }    public String[] getHeaderArray() {        return new String[]{            "hn",            "an",            "dateopd",            "type",            "code",            "qty",            "rate",            "seq"        };    }    public String getFileName() {        return "ADP";    }    public Rp12OI initInstant() {        return new AdpNh52();    }    public boolean setValue(ResultSet rs) throws Exception {            hn	 = Report12FileData.getRsString(rs,	1	);            an	 = Report12FileData.getRsString(rs,	2	);            dateopd	 = Report12FileData.getRsString(rs,	3	);            type	 = Report12FileData.getRsString(rs,	4	);            code	 = Report12FileData.getRsString(rs,	5	);            qty	 = Report12FileData.getRsString(rs,	6	);            rate	 = Report12FileData.getRsString(rs,	7	);            seq	 = Report12FileData.getRsString(rs,	8	);            AdpNh52 p = this;        p.hn = Report12FileData.addDigit(p.hn,9);        p.an = Report12FileData.addDigit(p.an,9);        if(Report12FileData.isAddDigit(p.hn,9)        || Report12FileData.isAddDigit(p.an,9))            add_digit = true;        return true;    }    public DBFField[] getDBFField() throws Exception {        String[] header = getHeaderArray();        DBFField[] fields = new DBFField[header.length];        Report12FileData.initDBFField(0,header,fields,DBFField.FIELD_TYPE_C,9);        Report12FileData.initDBFField(1,header,fields,DBFField.FIELD_TYPE_C,9);        Report12FileData.initDBFField(2,header,fields,DBFField.FIELD_TYPE_D,8);        Report12FileData.initDBFField(3,header,fields,DBFField.FIELD_TYPE_C,1);        Report12FileData.initDBFField(4,header,fields,DBFField.FIELD_TYPE_C,6);        Report12FileData.initDBFField(5,header,fields,DBFField.FIELD_TYPE_N,3);        Report12FileData.initDBFField(6,header,fields,DBFField.FIELD_TYPE_N,7);        Report12FileData.initDBFField(7,header,fields,DBFField.FIELD_TYPE_C,15);            return fields;    }    public boolean checkDatadict(StringBuffer sb, int[] error) {        BufferedReader in;        boolean ret = true;        error[0]++;        if(!Report12FileData.checkDataDict(	hn	,	9	,	true,false	)) { 	error[1	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	an	,	9	,	false	)) { 	error[2	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	dateopd	,	8	,	true	)) { 	error[3	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	type	,	1	,	true	)) { 	error[4	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	code	,	6	,	true	)) { 	error[5	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	qty	,	3	,	true,false	)) { 	error[6	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	rate	,	7	,	true,false	)) { 	error[7	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	seq	,	15	,	true,false	)) { 	error[8	]++;    ret=false;}        if(!ret) {            error[Report12FileData.MAX_COLUMN-1]++;            if(error[Report12FileData.MAX_COLUMN-1]<Report12FileData.MAX_INCOMPLETE_ROW)                sb.append("\r\n\tรายการที่ผิดพลาดคือ เลข HN:"+ hn + "  วันที่:" + dateopd);            if(add_digit)                sb.append(" มีการปรับหลักของ HN/VN/AN");        }        return ret;    }    public PreparedStatement getPreparedStatement(Connection con, String startDate, String endDate, int mode) throws Exception {        String sql = IOStream.readInputDefault("config/rp_12file52/12file52_adp.sql");        PreparedStatement pm = con.prepareStatement(sql);        pm.setString(1,startDate);        pm.setString(2,endDate);        return pm;    }    public Object[] getDBFValue() {        AdpNh52 p = this;        Object[] rowData = new Object[8];        rowData[0] = p.hn;        rowData[1] = p.an;        rowData[2] = StringDate.StringDateToDate(p.dateopd);        rowData[3] = type;        rowData[4] = code;        rowData[5] = Report12FileData.getDouble(qty);        rowData[6] = Report12FileData.getDouble(rate);        rowData[7] = p.seq;        return rowData;    }    public static void main(String[] argc){        System.out.println("mทดสอบ");    }}