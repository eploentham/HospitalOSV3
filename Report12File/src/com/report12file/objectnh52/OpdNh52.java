/* * Opd.java * * Created on 8 กันยายน 2548, 12:06 น. * * To change this template, choose Tools | Options and locate the template under * the Source Creation and Management node. Right-click the template and choose * Open. You can then make changes to the template in the Source Editor. */package com.report12file.objectnh52;import com.linuxense.javadbf.DBFField;import com.report12file.object.*;import com.report12file.utility.Report12FileData;import com.report12file.object.Rp12OI;import com.reportcenter.utility.IOStream;import com.reportcenter.utility.StringDate;import java.io.BufferedReader;import java.sql.Connection;import java.sql.PreparedStatement;import java.sql.ResultSet;/** * * @author tong(Padungrat) */public class OpdNh52 extends Opd implements Rp12OI{    public String seq;    public String uuc;    private String timeopd;    private String idtype;    public OpdNh52() {    }    /**     *output function     */     public String[] getHeaderArray() {        return new String[]{"hn","clinic","dateopd","timeopd", //new"seq","uuc"};    }    public String[] getWarningArray() {        return new String[]{"เลข HN","รหัสคลินิกที่ให้บริการ","วันที่รับบริการ","เวลารับบริการ","เลขการรับบริการ","การใช้สิทธิ"        };    }    /**     *output function     */    public String[] getValueArray() {        return new String[]{hn	,clinic	,dateopd	,timeopd	,//newseq,uuc};    }    /**     *output function     */    public DBFField[] getDBFField() throws Exception {        String[] header = getHeaderArray();        DBFField[] fields = new DBFField[header.length];        Report12FileData.initDBFField(0,header,fields,DBFField.FIELD_TYPE_C,9);        Report12FileData.initDBFField(1,header,fields,DBFField.FIELD_TYPE_C,4);        Report12FileData.initDBFField(2,header,fields,DBFField.FIELD_TYPE_D,8);        Report12FileData.initDBFField(3,header,fields,DBFField.FIELD_TYPE_C,4);//new        Report12FileData.initDBFField(4,header,fields,DBFField.FIELD_TYPE_C,15);        Report12FileData.initDBFField(5,header,fields,DBFField.FIELD_TYPE_C,1);        return fields;    }    /**     *output function     */    public Object[] getDBFValue() {        OpdNh52 p = this;        Object[] rowData;        rowData = new Object[getHeaderArray().length];        rowData[0] = p.hn;        rowData[1] = p.clinic;        if(!("").equals(p.dateopd)) {            rowData[2] = StringDate.StringDateToDate(p.dateopd);        }else{            rowData[2] = null;        }        rowData[3] = p.timeopd;//new        rowData[4] = p.seq;        rowData[5] = p.uuc;        return rowData;    }    /**     *check output function     */     public boolean checkDatadict(StringBuffer sb,int[] error)    {        BufferedReader in;        OpdNh52 file = this;        boolean ret = true;        error[0]++;        if(!Report12FileData.checkDataDict(	hn	,	9	,	true	)) { 	error[1	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	clinic	,	5	,	true,false	)) { 	error[2	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	dateopd	,	8	,	true	)) { 	error[3	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	seq	,	15	,	true,false	)) { 	error[5	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	timeopd	,	4	,	true	)) { 	error[6	]++;    ret=false;}        if(!Report12FileData.checkDataDict(	uuc	,	1	,	true	)) { 	error[7	]++;    ret=false;}        if(!ret) {            error[Report12FileData.MAX_COLUMN-1]++;            if(error[Report12FileData.MAX_COLUMN-1]<Report12FileData.MAX_INCOMPLETE_ROW)            sb.append("\r\n\tรายการที่ผิดพลาดคือ เลข HN:"+ file.hn + "  วันที่:" + dateopd);            if(add_digit)                sb.append(" มีการปรับหลักของ HN/VN/AN");        }         return ret;    }    public boolean setValue(ResultSet rs) throws Exception {        OpdNh52 p = this;	p.	hn	 = Report12FileData.getRsString(rs,	1	);	p.	clinic	 = Report12FileData.getRsString(rs,	2	);	p.	dateopd	 = Report12FileData.getRsString(rs,	3	);	p.	pid	 = Report12FileData.getRsString(rs,	4	);	p.	seq	 = Report12FileData.getRsString(rs,	5	);        p.	timeopd	 = Report12FileData.getRsString(rs,	6	);        p.	uuc	 = Report12FileData.getRsString(rs,	7	);        p.hn = Report12FileData.addDigit(p.hn,9);        if(Report12FileData.isAddDigit(p.hn,9) )            add_digit = true;        return true;    }    public Rp12OI initInstant() {        return new OpdNh52();    }    public PreparedStatement getPreparedStatement(Connection con, String startDate, String endDate, int mode) throws Exception {        String sql = IOStream.readInputDefault("config/rp_12file52/12file52_opd.sql");        PreparedStatement pm = con.prepareStatement(sql);        pm.setString(1,startDate);        pm.setString(2,endDate);        return pm;    }}