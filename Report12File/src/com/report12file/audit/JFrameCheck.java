package com.report12file.audit;

/*

 * JFrameCheck.java

 *

 * Created on 1 กันยายน 2550, 18:02 น.

 */



/**

 *

 * @author  Abb

 */

import java.awt.*;

import java.sql.*;

import java.util.*;

import javax.swing.*;

import javax.swing.event.*;

import java.awt.event.*;

import javax.swing.table.*; 

import java.lang.Object;





public class JFrameCheck extends javax.swing.JFrame {

    

    public ObjectReport objReport = new ObjectReport("","","","","","","","","","","","","");

    public String dsn,dsn1;

    public String driver,driver1;

    public String url,url1;

    public String _dsn = "";



                

    /** Creates new form JFrameCheck */

    public JFrameCheck() {     

        initComponents();

    }

    

    /** This method is called from within the constructor to

     * initialize the form.

     * WARNING: Do NOT modify this code. The content of this method is

     * always regenerated by the Form Editor.

     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonOK = new javax.swing.JButton();
        jButtonClear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem11 = new javax.swing.JMenuItem();
        jMenuItem12 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem9 = new javax.swing.JMenuItem();
        jMenuItem14 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jMenuItem10 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jMenuItem8 = new javax.swing.JMenuItem();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e23\u0e32\u0e22\u0e07\u0e32\u0e19 12 \u0e41\u0e1f\u0e49\u0e21");
        setBackground(new java.awt.Color(153, 153, 255));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusCycleRoot(false);
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Data Source Name");
        jPanel1.add(jLabel1, new java.awt.GridBagConstraints());

        jComboBox1.setEditable(true);
        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "sun.jdbc.odbc.JdbcOdbcDriver" }));
        jPanel1.add(jComboBox1, new java.awt.GridBagConstraints());

        jTextField1.setFont(new java.awt.Font("Tahoma", 0, 12));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        jPanel1.add(jTextField1, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel2.setForeground(new java.awt.Color(0, 0, 153));
        jLabel2.setText("Driver");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        jPanel1.add(jLabel2, gridBagConstraints);

        jButtonOK.setFont(new java.awt.Font("Tahoma", 0, 12));
        jButtonOK.setForeground(new java.awt.Color(0, 0, 153));
        jButtonOK.setText("OK ");
        jButtonOK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonOKMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jButtonOK, gridBagConstraints);

        jButtonClear.setFont(new java.awt.Font("Tahoma", 0, 12));
        jButtonClear.setForeground(new java.awt.Color(0, 0, 153));
        jButtonClear.setText("Clear");
        jButtonClear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonClearMouseClicked(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        jPanel1.add(jButtonClear, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 147;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 91, 182);
        getContentPane().add(jPanel1, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jLabel4.setForeground(new java.awt.Color(0, 0, 153));
        jLabel4.setText("ODBC Data Source");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        getContentPane().add(jLabel4, gridBagConstraints);

        jMenuBar1.setBackground(new java.awt.Color(204, 204, 255));
        jMenu1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu1.setForeground(new java.awt.Color(0, 0, 153));
        jMenu1.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e01\u0e32\u0e23\u0e23\u0e31\u0e01\u0e29\u0e32\u0e1e\u0e22\u0e32\u0e1a\u0e32\u0e25");
        jMenu1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem1.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem1.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem1.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e2a\u0e34\u0e17\u0e18\u0e34\u0e01\u0e32\u0e23\u0e23\u0e31\u0e01\u0e29\u0e32\u0e1e\u0e22\u0e32\u0e1a\u0e32\u0e25");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });

        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu2.setForeground(new java.awt.Color(0, 0, 153));
        jMenu2.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22");
        jMenu2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem11.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem11.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem11.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e41\u0e1f\u0e49\u0e21 IPD \u0e41\u0e25\u0e30 IDX");
        jMenuItem11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem11ActionPerformed(evt);
            }
        });

        jMenu2.add(jMenuItem11);

        jMenuItem12.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem12.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem12.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e08\u0e33\u0e19\u0e27\u0e19\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e41\u0e1f\u0e49\u0e21 OPD \u0e41\u0e25\u0e30 ODX");
        jMenuItem12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem12ActionPerformed(evt);
            }
        });

        jMenu2.add(jMenuItem12);

        jMenuBar1.add(jMenu2);

        jMenu3.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu3.setForeground(new java.awt.Color(0, 0, 153));
        jMenu3.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e40\u0e07\u0e34\u0e19");
        jMenu3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem9.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem9.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem9.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e01\u0e32\u0e23\u0e40\u0e07\u0e34\u0e19\u0e02\u0e2d\u0e07\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e41\u0e15\u0e48\u0e25\u0e30\u0e23\u0e32\u0e22");
        jMenuItem9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem9ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem9);

        jMenuItem14.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem14.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem14.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e41\u0e1f\u0e49\u0e21 CHA \u0e40\u0e1b\u0e23\u0e35\u0e22\u0e1a\u0e40\u0e17\u0e35\u0e22\u0e1a\u0e01\u0e31\u0e1a\u0e41\u0e1f\u0e49\u0e21 CHT");
        jMenuItem14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem14ActionPerformed(evt);
            }
        });

        jMenu3.add(jMenuItem14);

        jMenuBar1.add(jMenu3);

        jMenu4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu4.setForeground(new java.awt.Color(0, 0, 153));
        jMenu4.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 AN \u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e43\u0e19");
        jMenu4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem2.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem2.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem2.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e43\u0e19 IRF");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });

        jMenu4.add(jMenuItem2);

        jMenuItem3.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem3.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem3.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e43\u0e19 IDX");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });

        jMenu4.add(jMenuItem3);

        jMenuItem4.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem4.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem4.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e43\u0e19 IOP");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });

        jMenu4.add(jMenuItem4);

        jMenuBar1.add(jMenu4);

        jMenu5.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu5.setForeground(new java.awt.Color(0, 0, 153));
        jMenu5.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25 HN \u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e19\u0e2d\u0e01");
        jMenu5.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem5.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem5.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem5.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e19\u0e2d\u0e01 ORF");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });

        jMenu5.add(jMenuItem5);

        jMenuItem6.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem6.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem6.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e19\u0e2d\u0e01 ODX");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });

        jMenu5.add(jMenuItem6);

        jMenuItem7.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem7.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem7.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e1c\u0e39\u0e49\u0e1b\u0e48\u0e27\u0e22\u0e19\u0e2d\u0e01 OOP");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });

        jMenu5.add(jMenuItem7);

        jMenuBar1.add(jMenu5);

        jMenu6.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu6.setForeground(new java.awt.Color(0, 0, 153));
        jMenu6.setText("\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14");
        jMenu6.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem10.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem10.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem10.setText("\u0e15\u0e23\u0e27\u0e08\u0e2a\u0e2d\u0e1a\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25\u0e17\u0e31\u0e49\u0e07\u0e2b\u0e21\u0e14");
        jMenuItem10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem10ActionPerformed(evt);
            }
        });

        jMenu6.add(jMenuItem10);

        jMenuBar1.add(jMenu6);

        jMenu7.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jMenu7.setForeground(new java.awt.Color(0, 0, 153));
        jMenu7.setText("Chart");
        jMenu7.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem8.setFont(new java.awt.Font("Tahoma", 0, 12));
        jMenuItem8.setForeground(new java.awt.Color(0, 0, 153));
        jMenuItem8.setText("\u0e41\u0e1c\u0e19\u0e20\u0e32\u0e1e\u0e41\u0e2a\u0e14\u0e07\u0e01\u0e32\u0e23\u0e40\u0e0a\u0e37\u0e48\u0e2d\u0e07\u0e42\u0e22\u0e07\u0e02\u0e2d\u0e07\u0e41\u0e1f\u0e49\u0e21\u0e02\u0e49\u0e2d\u0e21\u0e39\u0e25");
        jMenuItem8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem8ActionPerformed(evt);
            }
        });

        jMenu7.add(jMenuItem8);

        jMenuBar1.add(jMenu7);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents



    private void jMenuItem8ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem8ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem8ActionPerformed

            JFrame frame = new JFrame("Chart Report");

            Container c = frame.getContentPane(); 

            c.setLayout(new BorderLayout());

            Icon img = new ImageIcon("./Chart.jpg");

            JLabel label = new JLabel(img);

            JScrollPane sp = new JScrollPane(label);

            c.add(sp,BorderLayout.CENTER);

            frame.setSize(1150,800);

            frame.setVisible(true);

    }//GEN-LAST:event_jMenuItem8ActionPerformed



    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenu1ActionPerformed

    {//GEN-HEADEREND:event_jMenu1ActionPerformed

// TODO add your handling code here:

    }//GEN-LAST:event_jMenu1ActionPerformed



    private void jMenuItem14ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem14ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem14ActionPerformed

        String CHA = "";

        String CHT = "";

        Vector v_CHACHT = new Vector();

        

        dsn = jTextField1.getText();       

        

       if(!dsn.equals("")) {

                

            try

            {             

                                 

                Class.forName(driver);

              	Connection con1 = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command1 = con1.createStatement();

                ResultSet rsCHACHT =  command1.executeQuery("select distinct cht5006.hn as hncht,cha5006.hn as hncha from cht5006 left join cha5006 on cha5006.hn = cht5006.hn" );

                

                while (rsCHACHT.next())

                {

                    CHA = rsCHACHT.getString("hncha");

                    CHT = rsCHACHT.getString("hncht");

                    

                    if (CHA == null)

                    {

                        v_CHACHT.add(CHT);

                    }

                    

                    else if (CHT == null)

                    {

                        v_CHACHT.add(CHA);

                    }

                  }

                }

       

                catch (SQLException se)

		{

			System.out.println(se);

		}

		catch (Exception ex)

		{

			System.out.println(ex);

		}

      

          JFrame f = new JFrame();

          f.setTitle("รายงานการตรวจสอบจำนวนผู้ป่วย");

          f.setLocation(50,20);

          f.setSize(500,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);



         table.addColumn("ข้อมูลผู้ป่วยแฟ้ม CHA ที่ไม่พบในแฟ้ม CHT");    

         RowData row = null;

         row = new RowData();

         int size = v_CHACHT.size();

         String[] chacht = new String[size]; 

         

         for (int i=0;i<size;i++)

         {

             chacht[i] = v_CHACHT.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยแฟ้ม CHA ที่ไม่พบในแฟ้ม CHT","   HN = "+chacht[i]);

             table.addRow(row);

         }



       } else errorODBC();

    }//GEN-LAST:event_jMenuItem14ActionPerformed



    private void jMenuItem12ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem12ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem12ActionPerformed

        String OPD = "";

        String ODX = "";

        

        dsn = jTextField1.getText();       

        

       if(!dsn.equals("")) {



            try

            {             

                                 

                Class.forName(driver);

              	Connection con1 = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command1 = con1.createStatement();

                ResultSet rsOPDODX =  command1.executeQuery("select opd5006.hn as hnopd,odx5006.hn as hnodx,opd5006.dateopd from odx5006 right join opd5006 on odx5006.hn = opd5006.hn group by opd5006.hn,opd5006.dateopd" );

                

                while (rsOPDODX.next())

                {

                    OPD = rsOPDODX.getString("hnopd");

                    ODX = rsOPDODX.getString("hnodx");

                    

                    if (OPD == null)

                    {

                        objReport.seterrCountOPDODX(ODX);

                    }

                    

                    else if (ODX == null)

                    {

                        objReport.seterrCountOPDODX(OPD);

                    }

                  }

                }

       

                catch (SQLException se)

		{

			System.out.println(se);

		}

		catch (Exception ex)

		{

			System.out.println(ex);

		}

      

          JFrame f = new JFrame();

          f.setTitle("รายงานการตรวจสอบจำนวนผู้ป่วย");

          f.setLocation(50,20);

          f.setSize(500,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_OPDODX = objReport.geterrCountOPDODX();

         int size = v_OPDODX.size();

         String[] opdodx = new String[size]; 



         table.addColumn("จำนวนผู้ป่วย "+size+" คน ที่ไม่พบในแฟ้มข้อมูล ODX เมื่อเปรียบเทียบกับ OPD");    

         RowData row = null;

         row = new RowData();

        

         

         for (int i=0;i<size;i++)

         {

             opdodx[i] = v_OPDODX.elementAt(i).toString();

             row.setColumnValue("จำนวนผู้ป่วย "+size+" คน ที่ไม่พบในแฟ้มข้อมูล ODX เมื่อเปรียบเทียบกับ OPD","   HN = "+opdodx[i]);

             table.addRow(row);

         }



       } else errorODBC();

    }//GEN-LAST:event_jMenuItem12ActionPerformed

//Compare IPD & IDX

    private void jMenuItem11ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem11ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem11ActionPerformed

     String IPD = "";

        String IDX = "";

        //Vector v_IPDIDX = new Vector();

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {



            try

            {             

                                 

                Class.forName(driver);

              	Connection con1 = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command1 = con1.createStatement();

                ResultSet rsIPDIDX =  command1.executeQuery("select distinct ipd5006.an as ipd,idx5006.an as idx from idx5006 right join ipd5006 on ipd5006.an = idx5006.an" );

                

                while (rsIPDIDX.next())

                {

                    IPD = rsIPDIDX.getString("idx");

                    IDX = rsIPDIDX.getString("ipd");

                    

                    if (IPD == null)

                    {

                        objReport.seterrCountIPDIDX(IDX);

                    }

                    

                    else if (IDX == null)

                    {

                        objReport.seterrCountIPDIDX(IPD);

                    }

                  }

                }

       

                catch (SQLException se)

		{

			System.out.println(se);

		}

		catch (Exception ex)

		{

			System.out.println(ex);

		}

      

          JFrame f = new JFrame();

          f.setTitle("รายงานการตรวจสอบจำนวนผู้ป่วย");

          f.setLocation(50,20);

          f.setSize(500,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_IPDIDX = objReport.geterrCountIPDIDX();

         int countIPDIDX = v_IPDIDX.size();



         table.addColumn("จำนวนผู้ป่วย "+countIPDIDX+" คน ที่ไม่พบในแฟ้มข้อมูล IDX เมื่อเปรียบเทียบกับ IPD");    

         RowData row = null;

         row = new RowData();

         String[] ipdidx = new String[countIPDIDX]; 

         

         for (int i=0;i<countIPDIDX;i++)

         {

             ipdidx[i] = v_IPDIDX.elementAt(i).toString();

             row.setColumnValue("จำนวนผู้ป่วย "+countIPDIDX+" คน ที่ไม่พบในแฟ้มข้อมูล IDX เมื่อเปรียบเทียบกับ IPD","    AN = "+ipdidx[i]);

             table.addRow(row);

         }

       

        } else errorODBC();

          

    }//GEN-LAST:event_jMenuItem11ActionPerformed



    private void jMenuItem10ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem10ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem10ActionPerformed

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

            

            AllReport jf = new AllReport();

            jf.setVisible(true);

            

        } else errorODBC();

             

       

    }//GEN-LAST:event_jMenuItem10ActionPerformed





    private void jButtonClearMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jButtonClearMouseClicked

    {//GEN-HEADEREND:event_jButtonClearMouseClicked

            jTextField1.setText("");

            jComboBox1.setSelectedIndex(0);

    }//GEN-LAST:event_jButtonClearMouseClicked



    private void jButtonOKMouseClicked(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jButtonOKMouseClicked

    {//GEN-HEADEREND:event_jButtonOKMouseClicked

        

        dsn1 = jTextField1.getText();

        driver1 = jComboBox1.getSelectedItem().toString();

        dsn = jTextField1.getText();  

        driver = jComboBox1.getSelectedItem().toString();



        if ((dsn.equals("")) || (driver.equals("")))

        {

            

            errorODBC();

        

        } else JOptionPane.showMessageDialog(null,"สามารถเลือกข้อมูลที่ต้องการตรวจสอบได้","Data Source is set",JOptionPane.INFORMATION_MESSAGE);



    }//GEN-LAST:event_jButtonOKMouseClicked



    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem7ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem7ActionPerformed

        String dataopd3 = "";

        String dataoop = "";

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

        

        try

            {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsOPD3 =  command.executeQuery("select distinct opd5006.hn as opd3, oop5006.hn as oop from oop5006 left join opd5006 on oop5006.hn = opd5006.hn");

                Vector v = objReport.geterrHnOPDOOP();

                

           if(v.size()==0) {

                

                

             while (rsOPD3.next())  

            {

                dataopd3 = (String)rsOPD3.getString("opd3");

                dataoop = (String)rsOPD3.getString("oop");

                

                if (dataopd3 == null)

                {

                    objReport.seterrHnOPDOOP(dataoop);

                }

            }

        }

        }

        catch (SQLException se)

	{

            System.out.println(se);

	}

	catch (Exception ex)

	{

            System.out.println(ex);

	}

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยนอก OOP");

        f.setLocation(200,80);

        f.setSize(400,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_OpdOop = objReport.geterrHnOPDOOP();

         int sizeoop = v_OpdOop.size();

         String[] oop = new String[sizeoop];

         table.addColumn("ข้อมูลผู้ป่วยนอก OOP ที่ไม่พบในแฟ้มข้อมูล OPD");

         RowData row = null;

         row = new RowData();

         

         for (int i=0;i<sizeoop;i++) {

             oop[i] = v_OpdOop.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยนอก OOP ที่ไม่พบในแฟ้มข้อมูล OPD","   HN = "+oop[i]);

             table.addRow(row);

         }

       } else errorODBC();

    }//GEN-LAST:event_jMenuItem7ActionPerformed



    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem6ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem6ActionPerformed

        String dataopd2 = "";

        String dataodx = "";

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

        

        try

            {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsOPD2 =  command.executeQuery("select distinct opd5006.hn as opd2, odx5006.hn as odx from odx5006 left join opd5006 on odx5006.hn = opd5006.hn");

                Vector v = objReport.geterrHnOPDODX();

                

           if(v.size()==0) {     

                

            while (rsOPD2.next())  

            {

                dataopd2 = (String)rsOPD2.getString("opd2");

                dataodx = (String)rsOPD2.getString("odx");

                

                if (dataopd2 == null)

                {

                    objReport.seterrHnOPDODX(dataodx);

                }

             }

          }

        }         

        catch (SQLException se)

	{

            System.out.println(se);

	}

	catch (Exception ex)

	{

            System.out.println(ex);

	}

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยนอก ODX");

        f.setLocation(200,80);

        f.setSize(400,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_OpdOdx = objReport.geterrHnOPDODX();

         int sizeodx = v_OpdOdx.size();

         String[] odx = new String[sizeodx];

         table.addColumn("ข้อมูลผู้ป่วยนอก ODX ที่ไม่พบในแฟ้มข้อมูล OPD"); 

         RowData row = null;

         row = new RowData();

         for (int i=0;i<sizeodx;i++) {

             odx[i] = v_OpdOdx.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยนอก ODX ที่ไม่พบในแฟ้มข้อมูล OPD","   HN = "+odx[i]);

             table.addRow(row);

         }

       } else errorODBC();

    }//GEN-LAST:event_jMenuItem6ActionPerformed



    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem4ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem4ActionPerformed

        String dataipd3 = "";

        String dataiop = "";      

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

        

        try {

            Class.forName(driver);

            Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

            Statement command = con.createStatement();

            ResultSet rsIPD3 =  command.executeQuery("select distinct ipd5006.an as ipd3, iop5006.an as iop from iop5006 left join ipd5006 on iop5006.an = ipd5006.an");

            Vector v = objReport.geterrAnIPDIOP();

            

        if(v.size()==0) {    

            

               while (rsIPD3.next())  

                {

                dataipd3 = (String)rsIPD3.getString("ipd3");

                dataiop = (String)rsIPD3.getString("iop");

                

                    if (dataipd3 == null)

                    {

                    objReport.seterrAnIPDIOP(dataiop);

                    }

                }

            }

        }

           catch (SQLException se)

            {

                System.out.println(se);

            }

           catch (Exception ex)

            {

                System.out.println(ex);

            }   

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยใน IOP");

        f.setLocation(150,60);

        f.setSize(400,500);

        

         Table table = new Table(); 

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_IpdIop = objReport.geterrAnIPDIOP();

         int sizeiop = v_IpdIop.size();

         String[] iop = new String[sizeiop];

         table.addColumn("ข้อมูลผู้ป่วยใน IOP ที่ไม่พบในแฟ้มข้อมูล IPD");



         RowData row = null;

         row = new RowData();

         

         for (int i=0;i<sizeiop;i++) {

             iop[i] = v_IpdIop.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยใน IOP ที่ไม่พบในแฟ้มข้อมูล IPD","   AN = "+iop[i]);

             table.addRow(row);  

         }

         } else errorODBC();

    }//GEN-LAST:event_jMenuItem4ActionPerformed



    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed

        String dataipd2 = "";

        String dataidx = "";

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

        

        try {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsIPD2 =  command.executeQuery("select  distinct ipd5006.an as ipd2, idx5006.an as idx from idx5006 left join ipd5006 on idx5006.an = ipd5006.an");

                Vector v = objReport.geterrAnIPDIDX();

                

        if(v.size()==0) {        

                

            while (rsIPD2.next())  

            {

                dataipd2 = (String)rsIPD2.getString("ipd2");

                dataidx = (String)rsIPD2.getString("idx");

                

                if (dataipd2 == null)

                {

                    objReport.seterrAnIPDIDX(dataidx);

                }

             }

          } 

        }

        catch (SQLException se)

	{

            System.out.println(se);

	}

	catch (Exception ex)

	{

            System.out.println(ex);

	}        

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยใน IDX");

        f.setLocation(150,60);

        f.setSize(400,500);

        

         Table table = new Table(); 

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);



         Vector v_IpdIdx = objReport.geterrAnIPDIDX();

         int sizeidx = v_IpdIdx.size();

         String[] idx = new String[sizeidx];

         table.addColumn("ข้อมูลผู้ป่วยใน IDX ที่ไม่พบในแฟ้มข้อมูล IPD");

         RowData row = null;

         row = new RowData();

         for (int i=0;i<sizeidx;i++){

             idx[i] = v_IpdIdx.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยใน IDX ที่ไม่พบในแฟ้มข้อมูล IPD","   AN = "+idx[i]);

             table.addRow(row);   

         } 

        } else errorODBC();

    }//GEN-LAST:event_jMenuItem3ActionPerformed



    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem2ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem2ActionPerformed



        String dataipd1 = "";

        String datairf = "";

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

        

        try

            {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsIPD1 =  command.executeQuery("select distinct ipd5006.an as ipd1, irf5006.an as irf from irf5006 left join ipd5006 on irf5006.an = ipd5006.an");

                Vector v = objReport.geterrAnIPDIDX();

                

         if(v.size()==0){

                

           while (rsIPD1.next()) 

            {

                dataipd1 = (String)rsIPD1.getString("ipd1");

                datairf = (String)rsIPD1.getString("irf");

               

               

               if (dataipd1 == null)

                {

                    objReport.seterrAnIPDIRF(datairf);

                }

             }              

          }

        }

        catch (SQLException se)

	{

            System.out.println(se);

	}

	catch (Exception ex)

	{

            System.out.println(ex);

	}

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยใน IRF");

        f.setLocation(150,60);

        f.setSize(400,500);

        

         Table table = new Table(); 

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_IpdIrf = objReport.geterrAnIPDIRF();

         int sizeirf = v_IpdIrf.size();

         String[] irf = new String[sizeirf];

         

         table.addColumn("ข้อมูลผู้ป่วยใน IRF ที่ไม่พบในแฟ้มข้อมูล IPD");

         RowData row = null;

         row = new RowData();

         

         for (int i=0;i<sizeirf;i++) {

             irf[i] = v_IpdIrf.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยใน IRF ที่ไม่พบในแฟ้มข้อมูล IPD","   AN = "+irf[i]);

             table.addRow(row);  

            }

         } else errorODBC();

    }//GEN-LAST:event_jMenuItem2ActionPerformed



    private void jMenuItem9ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem9ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem9ActionPerformed

        String amountCHA = "";

        String TotalCHT = "";

        Vector V_Hn;

        Vector V_Date;

        int sizetotal;

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

            

        try

            {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsSumAmount =  command.executeQuery("select cha5006.hn,cha5006.an,cha5006.date,cht5006.total as totalCHT,sum(cha5006.amount) as countCHA from cha5006 inner join cht5006 on cha5006.hn = cht5006.hn and cha5006.an = cht5006.an and cha5006.date = cht5006.date group by cht5006.hn,cht5006.an,cht5006.date"); 

                Vector v = objReport.geterrTotalMoneyHN();

                

             if(v.size()==0) {

                

                while(rsSumAmount.next())

                {

                    amountCHA = rsSumAmount.getString("countCHA");

                    TotalCHT = rsSumAmount.getString("totalCHT");

                    

                    if (!amountCHA.equals(TotalCHT))                     

                    {

                        objReport.seterrTotalMoneyHN(rsSumAmount.getString(1));

                        objReport.seterrDate(rsSumAmount.getString(3)); 

                    }

                }

                        V_Hn = objReport.geterrTotalMoneyHN();

                        V_Date = objReport.geterrDate();

                        sizetotal = V_Hn.size();

                        String[] hnTotal = new String[sizetotal];

                        String[] dateTotal = new String[sizetotal];

                        

                       for (int i=0; i<sizetotal;i++)

                        {

                            hnTotal[i] = V_Hn.elementAt(i).toString();

                            dateTotal[i] = V_Date.elementAt(i).toString();

                        }

                       

                con.close();

                

            }

        }

                catch (SQLException se)

                {

                    System.out.println(se);

                }

                catch (Exception ex)

                {

                    System.out.println(ex);

                }

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลการเงิน");

        f.setLocation(100,40);

        f.setSize(500,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_TotalMoney = objReport.geterrTotalMoneyHN();  

         Vector v_TotalDate = objReport.geterrDate();

         table.addColumn("ข้อมูลด้านการเงินของผู้ป่วยที่ผิดพลาด");

         table.addColumn("วันที่รับการรักษา");

         

        int sizemoney = v_TotalMoney.size();

        String[] money = new String[sizemoney];

        String[] date = new String[sizemoney];

               

        RowData row = null;

        row = new RowData();

    

      for (int i=0; i<sizemoney; i++){

        money[i] = v_TotalMoney.elementAt(i).toString();

        date[i] = v_TotalDate.elementAt(i).toString();

        row.setColumnValue("ข้อมูลด้านการเงินของผู้ป่วยที่ผิดพลาด","   HN = "+money[i]);

        row.setColumnValue("วันที่รับการรักษา",date[i]);

        table.addRow(row);

        }

      } else errorODBC();

    }//GEN-LAST:event_jMenuItem9ActionPerformed



    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem1ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem1ActionPerformed

         String data,data1;

         dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

         

         try

            {      

		Class.forName(driver);

              	Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

		ResultSet rs = command.executeQuery("select pat5006.hn as hnpat,ins5006.hn as hnins  from pat5006 left join ins5006 on ins5006.hn = pat5006.hn");

                Vector v = objReport.geterrHnINSPAT();

                        

         if (v.size() == 0) {

                    

                while (rs.next())

		{

                     data = (String)rs.getString("hnpat");

                     data1 = (String)rs.getString("hnins");

                                  

                    if (data == null)

                     {

                        objReport.seterrHnINSPAT(data1);

                     }

                    else if (data1 == null)

                    {

                        objReport.seterrHnINSPAT(data);

                    }       

                }

             

                con.close();

                

             }

         }

                catch (SQLException se)

		{

			System.out.println(se);

		}

		catch (Exception ex)

		{

			System.out.println(ex);

		}



         JFrame f = new JFrame();

         f.setTitle("รายงานการตรวจสอบข้อมูลสิทธิการรักษาพยาบาล");

         f.setSize(500,500);

         Vector v_InsPat = objReport.geterrHnINSPAT();

         int sizeins = v_InsPat.size();

         String[] ins = new String[sizeins];

         

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);



         table.addColumn("ผู้ป่วยที่ยังไม่มีสิทธิในการรักษาพยาบาลจำนวน "+sizeins+" คน ที่ไม่พบในแฟ้ม INS");

         RowData row = null;

         row = new RowData();

         

    for (int i=0; i<sizeins; i++){

        ins[i] = v_InsPat.elementAt(i).toString();

        row.setColumnValue("ผู้ป่วยที่ยังไม่มีสิทธิในการรักษาพยาบาลจำนวน "+sizeins+" คน ที่ไม่พบในแฟ้ม INS","   HN = "+ins[i]);



      

        table.addRow(row);

        }

        } else errorODBC();

    }//GEN-LAST:event_jMenuItem1ActionPerformed



    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem5ActionPerformed

    {//GEN-HEADEREND:event_jMenuItem5ActionPerformed

        String dataopd1 = "";

        String dataorf = "";

        dsn = jTextField1.getText();       

        

        if(!dsn.equals("")) {

            

            try

            {

                Class.forName(driver);

                Connection con = DriverManager.getConnection("jdbc:odbc:"+dsn1);

                Statement command = con.createStatement();

                ResultSet rsOPD1 =  command.executeQuery("select distinct opd5006.hn as opd1, orf5006.hn as orf from orf5006 left join opd5006 on orf5006.hn = opd5006.hn");

                Vector v = objReport.geterrHnOPDORF();

                

         if(v.size()==0) {

                

           while (rsOPD1.next()) 

            {

                dataopd1 = (String)rsOPD1.getString("opd1");

                dataorf = (String)rsOPD1.getString("orf");

               

               

               if (dataopd1 == null)

                {

                    objReport.seterrHnOPDORF(dataorf);

                } 

            }

         }

       }

        catch (SQLException se)

	{

            System.out.println(se);

	}

	catch (Exception ex)

	{

            System.out.println(ex);

	}

         

        

        JFrame f = new JFrame();

        f.setTitle("รายงานการตรวจสอบข้อมูลผู้ป่วยนอก ORF");

        f.setLocation(200,80);

        f.setSize(400,500);

        

         Table table = new Table();

         JScrollPane jScrollPane1 = new JScrollPane();

         table.setBackground(new Color(218,218,255));

         jScrollPane1.setBorder(BorderFactory.createLineBorder(new Color(102,102,102),1));

         jScrollPane1.getViewport().setBackground(new Color(204,204,255)); 

         jScrollPane1.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_ALWAYS);

         jScrollPane1.setBounds(new Rectangle(20, 9, 362, 192));

         jScrollPane1.getViewport().add(table, null);

         f.getContentPane().add(jScrollPane1);

         f.setVisible(true);

         

         Vector v_OpdOrf = objReport.geterrHnOPDORF();   

         int sizeorf = v_OpdOrf.size();

         String[] orf = new String[sizeorf];

         table.addColumn("ข้อมูลผู้ป่วยนอก ORF ที่ไม่พบในแฟ้มข้อมูล OPD");

    

         RowData row = null;

         row = new RowData();

         for (int i=0;i<sizeorf;i++) {

             orf[i] = v_OpdOrf.elementAt(i).toString();

             row.setColumnValue("ข้อมูลผู้ป่วยนอก ORF ที่ไม่พบในแฟ้มข้อมูล OPD","   HN = "+orf[i]);

             table.addRow(row);

         }

         

          } else  errorODBC();

        

    }//GEN-LAST:event_jMenuItem5ActionPerformed



    public void errorODBC()

    {

        JOptionPane.showMessageDialog(null,"กรุณา Set ODBC Data Source ก่อน ","Data Source Not Set",JOptionPane.ERROR_MESSAGE);

    }  

    

  

    /**

     * @param args the command line arguments

     */

    public static void main(String args[]) {

        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {

                

                new JFrameCheck().setVisible(true);

                

                

            }

        });

    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClear;
    private javax.swing.JButton jButtonOK;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem10;
    private javax.swing.JMenuItem jMenuItem11;
    private javax.swing.JMenuItem jMenuItem12;
    private javax.swing.JMenuItem jMenuItem14;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jMenuItem8;
    private javax.swing.JMenuItem jMenuItem9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables

    

}

