/*
 * PanelSetupClinic12Files.java
 *
 * Created on 27 มกราคม 2550, 14:37 น.
 */

package com.report12file.gui;

import com.hospital_os.object.Clinic;
import com.hospital_os.utility.ConnectionDBMgr;
import com.hospital_os.utility.Gutil;
import com.report12file.control.ReportControl;
import com.report12file.object.Clinic12Files;
import com.report12file.object.ClinicMap;
import com.report12file.utility.Language;
import com.reportcenter.utility.TableModelGUI;

import javax.swing.JOptionPane;
import java.util.Vector;
import javax.swing.*;
/**
 *
 * @author  Ojika
 */
public class PanelMapClinic extends javax.swing.JPanel
{
    
    /** Creates new form PanelSetupNutrition */
    TableModelGUI theTableModelGUI;
    String[] colNameGroup; 
    String[] colNameItem;
    final String panelname = "จับคู่คลินิกสำหรับออกรายงาน 12 แฟ้ม";
    int language = 1;
    /**ใช้ตรวจสอบว่าข้อมูล item ที่เลือกสำหรับการเพิ่มนั้นมีอยู่ในข้อมูลเดิมหรือไม่*/
    int status = 1;
    
    Vector vClinic12Files;
    Clinic12Files theClinic12Files;
    Vector vClinicMap;
    ClinicMap theClinicMap;

    private ReportControl theHosControl;
    
    public PanelMapClinic(ReportControl rc)
    {
        theHosControl = rc;
        initComponents();
        setLanguage();
        Language.getTextBundle(panelname, language);
        searchClinic12Files();
    }
    
    public String getPanelName()
    {
        return panelname;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jLabelSetupName = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowList = new javax.swing.JPanel();
        jScrollPaneShowList = new javax.swing.JScrollPane();
        jTableShowList = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldDescrpiton = new javax.swing.JTextField();
        jPanelDisease = new javax.swing.JPanel();
        jPanelShowDisease = new javax.swing.JPanel();
        jScrollPaneShowDisease = new javax.swing.JScrollPane();
        jTableShowListItem = new javax.swing.JTable();
        jPanelControl = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelSetupName.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelSetupName.setText("ClinicMapFor12Files");
        jPanelTop.add(jLabelSetupName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanelTop, gridBagConstraints);

        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowList.setLayout(new java.awt.GridBagLayout());

        jTableShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListMouseReleased(evt);
            }
        });
        jTableShowList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTableShowListKeyReleased(evt);
            }
        });

        jScrollPaneShowList.setViewportView(jTableShowList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowList.add(jScrollPaneShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelLeft.add(jPanelShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jPanelLeft, gridBagConstraints);

        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel3.add(jLabelCode, gridBagConstraints);

        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelDescription, gridBagConstraints);

        jTextFieldCode.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel3.add(jTextFieldCode, gridBagConstraints);

        jTextFieldDescrpiton.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel3.add(jTextFieldDescrpiton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel3, gridBagConstraints);

        jPanelDisease.setLayout(new java.awt.GridBagLayout());

        jPanelDisease.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelShowDisease.setLayout(new java.awt.GridBagLayout());

        jTableShowListItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListItemMouseReleased(evt);
            }
        });

        jScrollPaneShowDisease.setViewportView(jTableShowListItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowDisease.add(jScrollPaneShowDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDisease.add(jPanelShowDisease, gridBagConstraints);

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setText("+");
        jButtonAdd.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanelControl.add(jButtonAdd, gridBagConstraints);

        jButtonDelete.setText("-");
        jButtonDelete.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelControl.add(jButtonDelete, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelDisease.add(jPanelControl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanelRight.add(jPanelDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanel1.add(jPanelRight, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void jTableShowListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableShowListKeyReleased
        if(evt.getKeyCode()==evt.VK_UP || evt.getKeyCode()==evt.VK_DOWN)
            this.jTableShowListMouseReleased(null);
    }//GEN-LAST:event_jTableShowListKeyReleased

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteActionPerformed
        // ลบรายการ Map ภาวะโภชนาการ
        int confirm_del = JOptionPane.showConfirmDialog(this,"ยืนยัน","ยืนยันการลบรายการจับคู่",JOptionPane.YES_NO_OPTION);
        if(confirm_del == 0)
        {
            deleteClinicMap();
        }
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        // เพิ่มรายการ ภาวะโภชนาการ
        if(vClinicMap==null)
            vClinicMap = new Vector();
        DialogSearchClinic.showDialog(theHosControl,vClinicMap);
        setClinicMapV(vClinicMap);
        theHosControl.theClinicControl.checkSaveClinicMap(theClinic12Files,vClinicMap);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableShowListItemMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListItemMouseReleased
    {//GEN-HEADEREND:event_jTableShowListItemMouseReleased
        // เลือก รายการ Map ภาวะโภชนาการ
        selectClinicMap(jTableShowListItem.getSelectedRow());
    }//GEN-LAST:event_jTableShowListItemMouseReleased

    private void jTableShowListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListMouseReleased
    {//GEN-HEADEREND:event_jTableShowListMouseReleased
        int row = jTableShowList.getSelectedRow();
        if(row == -1)
            return;
        
        Clinic12Files c12f = (Clinic12Files)vClinic12Files.get(row);
        // แสดงรายละเอียดข้อมูล    
        setClinic12FilesV(c12f);        
        setClinicMapV(c12f);
    }//GEN-LAST:event_jTableShowListMouseReleased

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        // ค้นหากลุ่มชนิดภาวะโภชนาการ
        searchClinic12Files();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldSearchActionPerformed
    {//GEN-HEADEREND:event_jTextFieldSearchActionPerformed
        // ค้นหากลุ่มชนิดภาวะโภชนาการ
        searchClinic12Files();
    }//GEN-LAST:event_jTextFieldSearchActionPerformed
    
    /**
     * สำหรับค้นหารายการ Clinic และ ส่งข้อมูลไปแสดงในตาราง
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void searchClinic12Files()
    {
        // ค้นหารายการ โดยส่ง keyword ไปค้น
        vClinic12Files = new Vector();
        String keyword = jTextFieldSearch.getText().trim();
        
        vClinic12Files = theHosControl.theClinicControl.selectClinic12FilesByKeyword(keyword);
        
        // ส่งข้อมูลที่ได้จากการค้นหานั้นไปแสดงยังตาราง
        setTableClinic12Files(vClinic12Files);
        
        vClinicMap = null;
        clearGUI();
    }
    
    /**
     * แสดง Dialog สำหรับเลือกรายการ ภาวะโภชนาการ
     * @Author Ojika
     * @Date 16/03/2549 
     **/
    
    /**
     * ลบรายการที่เลือกออกจากฐานข้อมูล
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void deleteClinicMap()
    {
        if(theClinicMap != null)
        {
            // ส่งค่าของ Object ไปลบ
            theHosControl.theClinicControl.deleteClinicMapByKeyId(theClinicMap);
            setClinicMapV(theClinic12Files);
        }        
    }    
    
    /**
     * เลือกรายการ  และ Set ค่าให้กับ Object
     * @Author Ojika
     * @Date 16/03/2549
     **/
     private void selectClinicMap(int row)
     {
        if(row > -1)
        {
            // มีการเลือกจากตาราง
            if(vClinicMap != null)
            {                
                theClinicMap = (ClinicMap)vClinicMap.get(row);                
            }
        }
     }
     
     
     /**
      * แสดงค่าจาก Object ให้กับ GUI
      * @Author Ojika
      * @Date 16/03/2549
      **/
     private void setClinic12FilesV(Clinic12Files c12f)
     {
        theClinic12Files = c12f;
        if(theClinic12Files == null)
        {
             clearGUI();
             return;
        }
        jTextFieldCode.setText(theClinic12Files.t_report_clinic_12files_id);
        jTextFieldDescrpiton.setText(theClinic12Files.report_clinic_12files_description);
     }
     
     /**
      * เคลียร์ข้อมูลบน Gui 
      * @Author Ojika
      * @Date 16/03/2549
      **/
     private void clearGUI()
     {
        jTextFieldCode.setText("");
        jTextFieldDescrpiton.setText("");
        setClinicMapV(new Vector());
     }         
    
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง
     * @author Ojika
     * @Date 16/03/2549
     **/
    private void setTableClinic12Files(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameGroup, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameGroup, size);
            theClinic12Files = null;
            for(int i = 0 ; i < size ;i++)
            {
                theClinic12Files = (Clinic12Files)vData.get(i);
                theTableModelGUI.setValueAt(theClinic12Files.t_report_clinic_12files_id,i, 0);
                theTableModelGUI.setValueAt(theClinic12Files.report_clinic_12files_description,i, 1);
                //theTableModelGUI.setValueAt(theClinic12Files.report_clinic_12files_description_en,i, 2);
                theClinic12Files = null;
            }
        }
        jTableShowList.setModel(theTableModelGUI);
        jTableShowList.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableShowList.getColumnModel().getColumn(1).setPreferredWidth(100);
    }   
    
    private void setClinicMapV(Clinic12Files c12f)
    {       
        Vector vC = theHosControl.theClinicControl.
                selectClinicMapByClinic12FilesId(c12f.getObjectId());
        setClinicMapV(vC);
    }
    /**
     * แสดงข้อมูลที่ได้จากการค้นหาในตาราง 
     * @author Ojika
     * @Date 16/03/2549
     **/
    private void setClinicMapV(Vector vData)
    {       
        vClinicMap = vData;
        if(vData == null)
        {
            theTableModelGUI = new TableModelGUI(colNameItem, 0);
            jTableShowListItem.setModel(theTableModelGUI);
            return;
        }
        int size = vData.size();
        theTableModelGUI = new TableModelGUI(colNameItem, size);
        theClinicMap = null;
        for(int i = 0 ; i < size ;i++)
        {
            theClinicMap = (ClinicMap)vData.get(i);
            theTableModelGUI.setValueAt(theClinicMap.visit_clinic_number,i, 0); 
            theTableModelGUI.setValueAt(theClinicMap.visit_clinic_description,i, 1); 
            theClinicMap = null;
        }
        jTableShowListItem.setModel(theTableModelGUI);
    }  
    
    private void setLanguage()
    {
        colNameGroup = new String[] {Language.getTextBundle("Code",language),Language.getTextBundle("Description",language)};
        colNameItem = new String[] {Language.getTextBundle("Code",language),Language.getTextBundle("Description",language)};
        
        jLabelSetupName.setText(Language.getTextBundle(jLabelSetupName.getText(),language));
        
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        
        jLabelCode.setText(Language.getTextBundle(jLabelCode.getText(),language));
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText(),language));
        //jButtonSave.setText(Language.getTextBundle(jButtonSave.getText(),language));
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText(),language));
        jButtonDelete.setText(Language.getTextBundle(jButtonDelete.getText(),language));
    }

    /**
     * รับ Vector ของ Clinic ที่เลือกเพื่อ save เป็นรายการ Map Clinc
     * @Author Ojika
     * @Date 16/03/2549
     **/
    public void notifySaveClinic12FilesMap(Vector vClinic)
    {
        if(vClinic != null)
        {
            if(theClinic12Files != null)
            {
                Clinic theClinic = new Clinic();
                int size = vClinic.size();
                for(int i =0;i<size;i++)
                {
                    theClinic = (Clinic)vClinic.get(i);
                    
                    theClinicMap = new ClinicMap();
                    
                    theClinicMap.b_visit_clinic_id = theClinic.getObjectId();
                    theClinicMap.visit_clinic_number = theClinic.clinic_id;
                    theClinicMap.visit_clinic_description = theClinic.name;
                    theClinicMap.t_report_clinic_12files_id = theClinic12Files.getObjectId();
                    
                    checkSameData(theClinicMap);
                    theClinicMap = null;
                    setClinicMapV(theClinic12Files);
                }
                theClinic = null;
            }
            else
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("PleaseSelectClinic12Files", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                
            }
        }
        
        //เรียก Function การค้นหาเพื่อเปลี่ยนข้อมูใหม่
        //searchNutritionMap(theNutritionType.getObjectId());
    }
    
    private void checkSameData(ClinicMap theClinicMapCheck)
    {
        if(vClinicMap != null)
        {
            int size = vClinicMap.size();
            if(size > 0)
            {
                for(int i =0;i<size;i++)
                {
                    if(!theClinicMapCheck.b_visit_clinic_id.equals(((ClinicMap)vClinicMap.get(i)).b_visit_clinic_id))
                    {
                        status = 1;
                    }
                    else
                    {
                        status = 0;
                        JOptionPane.showMessageDialog(this,Language.getTextBundle("Same_Item", language) + theClinicMapCheck.visit_clinic_description ,Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                }
                if(status != 0)
                {
                    // ไม่มีข้อมูลซ้ำส่งไปบันทึก
                    theHosControl.theClinicControl.saveClinicMap(theClinicMapCheck);
                }
            }
        }
        else
        {
            // ไม่มีข้อมูลสำหรับตรวจสอบส่งไปบันทึก
            theHosControl.theClinicControl.saveClinicMap(theClinicMapCheck);
        }
    }
    public static void showFrameSetup(ReportControl rc){
        javax.swing.JDialog jf = new javax.swing.JDialog();
        PanelMapClinic pn = new PanelMapClinic(rc);
        jf.getContentPane().add(pn);
        jf.setSize(600,400);
        Gutil.setLocation(jf);
        jf.setVisible(true);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSetupName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelDisease;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowDisease;
    private javax.swing.JPanel jPanelShowList;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPaneShowDisease;
    private javax.swing.JScrollPane jScrollPaneShowList;
    private javax.swing.JTable jTableShowList;
    private javax.swing.JTable jTableShowListItem;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDescrpiton;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    public static void main(String argc[]){
        ConnectionDBMgr cdb = new ConnectionDBMgr("org.postgresql.Driver"
                ,"jdbc:postgresql://192.168.1.8:5432/weangsa_37hb"
                //,"jdbc:postgresql://localhost:5432/hos_srj1"
                ,"postgres","postgres","1");
        ReportControl rc = new ReportControl(cdb);
        PanelMapClinic.showFrameSetup(rc);
    }
}
