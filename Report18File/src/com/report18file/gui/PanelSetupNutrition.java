/*
 * PanelSetupNutrition.java
 *
 * Created on 16 ???? 2549, 14:37 ?.
 */

package com.report18file.gui;
 
import com.reportcenter.utility.TableModelGUI;
import com.setupreport.utility.Language;
import com.setupreport.gui.dialog.DialogSearchNutrition;
import com.setupreport.manage.HosManage;
import com.setupreport.object.*;

import java.util.Vector;
import javax.swing.*;
/**
 *
 * @author  Ojika
 */
public class PanelSetupNutrition extends javax.swing.JPanel
{
    
    /** Creates new form PanelSetupNutrition */
    HosManage theHosManage;
    TableModelGUI theTableModelGUI;
    String[] colNameGroup; 
    String[] colNameItem;
    final String panelname = "®—∫§ŸË¿“«–‚¿™π“°“√";
    int language = 1;
    /**?????????????? item ????????????????????????????????????????????*/
    int status = 1;
    
    Vector vNutritionType;
    NutritionType theNutritionType;
    Vector vNutritionMap;
    NutritionMap theNutritionMap;
    
    public PanelSetupNutrition(HosManage hosManage)
    {
        this.theHosManage = hosManage;
        initComponents();
        setLanguage();
        Language.getTextBundle(panelname, language);
        searchNutritionType();
        
        // ?????????? ????????????
        jButtonSave.setVisible(false);
    }
    
    public String getPanelName()
    {
        return panelname;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanelTop = new javax.swing.JPanel();
        jLabelSetupName = new javax.swing.JLabel();
        jPanelLeft = new javax.swing.JPanel();
        jPanelSearch = new javax.swing.JPanel();
        jLabelSearch = new javax.swing.JLabel();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jPanelShowList = new javax.swing.JPanel();
        jScrollPaneShowList = new javax.swing.JScrollPane();
        jTableShowList = new javax.swing.JTable();
        jPanelRight = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabelCode = new javax.swing.JLabel();
        jLabelDescription = new javax.swing.JLabel();
        jTextFieldCode = new javax.swing.JTextField();
        jTextFieldDescrpiton = new javax.swing.JTextField();
        jPanelDisease = new javax.swing.JPanel();
        jPanelShowDisease = new javax.swing.JPanel();
        jScrollPaneShowDisease = new javax.swing.JScrollPane();
        jTableShowListItem = new javax.swing.JTable();
        jPanelControl = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabelSetupName.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabelSetupName.setText("NutritionMap");
        jPanelTop.add(jLabelSetupName);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel1.add(jPanelTop, gridBagConstraints);

        jPanelLeft.setMinimumSize(new java.awt.Dimension(200, 53));
        jPanelLeft.setPreferredSize(new java.awt.Dimension(200, 433));
        jPanelLeft.setLayout(new java.awt.GridBagLayout());

        jPanelSearch.setLayout(new java.awt.GridBagLayout());

        jLabelSearch.setText("Search");
        jPanelSearch.add(jLabelSearch, new java.awt.GridBagConstraints());

        jTextFieldSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelSearch.add(jTextFieldSearch, gridBagConstraints);

        jButtonSearch.setText("Search");
        jButtonSearch.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSearch.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelSearch.add(jButtonSearch, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelLeft.add(jPanelSearch, gridBagConstraints);

        jPanelShowList.setLayout(new java.awt.GridBagLayout());

        jTableShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListMouseReleased(evt);
            }
        });
        jScrollPaneShowList.setViewportView(jTableShowList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowList.add(jScrollPaneShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 0);
        jPanelLeft.add(jPanelShowList, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 0, 0, 0);
        jPanel1.add(jPanelLeft, gridBagConstraints);

        jPanelRight.setMinimumSize(new java.awt.Dimension(350, 24));
        jPanelRight.setPreferredSize(new java.awt.Dimension(350, 24));
        jPanelRight.setLayout(new java.awt.GridBagLayout());

        jPanel3.setLayout(new java.awt.GridBagLayout());

        jLabelCode.setText("Code");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 5, 0, 0);
        jPanel3.add(jLabelCode, gridBagConstraints);

        jLabelDescription.setText("Description");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        jPanel3.add(jLabelDescription, gridBagConstraints);

        jTextFieldCode.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 5);
        jPanel3.add(jTextFieldCode, gridBagConstraints);

        jTextFieldDescrpiton.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 3, 0, 5);
        jPanel3.add(jTextFieldDescrpiton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        jPanelRight.add(jPanel3, gridBagConstraints);

        jPanelDisease.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanelDisease.setLayout(new java.awt.GridBagLayout());

        jPanelShowDisease.setLayout(new java.awt.GridBagLayout());

        jTableShowListItem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableShowListItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jTableShowListItemMouseReleased(evt);
            }
        });
        jScrollPaneShowDisease.setViewportView(jTableShowListItem);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelShowDisease.add(jScrollPaneShowDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanelDisease.add(jPanelShowDisease, gridBagConstraints);

        jPanelControl.setLayout(new java.awt.GridBagLayout());

        jButtonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/plus16.gif"))); // NOI18N
        jButtonAdd.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonAdd.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        jPanelControl.add(jButtonAdd, gridBagConstraints);

        jButtonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/hosv3/gui/images/minus16.gif"))); // NOI18N
        jButtonDelete.setMaximumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setMinimumSize(new java.awt.Dimension(24, 24));
        jButtonDelete.setPreferredSize(new java.awt.Dimension(24, 24));
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 3, 0, 0);
        jPanelControl.add(jButtonDelete, gridBagConstraints);

        jButtonSave.setText("Save");
        jButtonSave.setMaximumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setMinimumSize(new java.awt.Dimension(75, 24));
        jButtonSave.setPreferredSize(new java.awt.Dimension(75, 24));
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 0);
        jPanelControl.add(jButtonSave, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        jPanelDisease.add(jPanelControl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        jPanelRight.add(jPanelDisease, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 0, 0);
        jPanel1.add(jPanelRight, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSaveActionPerformed
    {//GEN-HEADEREND:event_jButtonSaveActionPerformed
        // ????????? Map ???????????
        saveNutritionMap();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonDeleteActionPerformed
    {//GEN-HEADEREND:event_jButtonDeleteActionPerformed
        // ?????? Map ???????????
        int confirm_del = JOptionPane.showConfirmDialog(this,Language.getTextBundle("confirm_del_effect_report", language),Language.getTextBundle("confirm_del", language),JOptionPane.YES_NO_OPTION);
        
        if(confirm_del == 0)
        {
            deleteNutritionMap();
        }
        
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonAddActionPerformed
    {//GEN-HEADEREND:event_jButtonAddActionPerformed
        // ????????? ???????????
        addNutritionMap();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jTableShowListItemMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListItemMouseReleased
    {//GEN-HEADEREND:event_jTableShowListItemMouseReleased
        // ???? ????? Map ???????????
        selectNutritionMap(jTableShowListItem.getSelectedRow());
    }//GEN-LAST:event_jTableShowListItemMouseReleased

    private void jTableShowListMouseReleased(java.awt.event.MouseEvent evt)//GEN-FIRST:event_jTableShowListMouseReleased
    {//GEN-HEADEREND:event_jTableShowListMouseReleased
        // ???????????????????????
        selectNutritionType(jTableShowList.getSelectedRow());
    }//GEN-LAST:event_jTableShowListMouseReleased

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButtonSearchActionPerformed
    {//GEN-HEADEREND:event_jButtonSearchActionPerformed
        // ??????????????????????
        searchNutritionType();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jTextFieldSearchActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jTextFieldSearchActionPerformed
    {//GEN-HEADEREND:event_jTextFieldSearchActionPerformed
        // ??????????????????????
        searchNutritionType();
    }//GEN-LAST:event_jTextFieldSearchActionPerformed
    
    /**
     * ????????????? ??? Map ????????????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void saveNutritionMap()
    {
        if(this.vNutritionType != null && this.vNutritionType != null && this.vNutritionType.size() > 0)
        {
            // ?????????????????? ??????????????????       
            this.theHosManage.theHosControl.theNutritionControl.checkSaveNutritionMap(this.vNutritionMap);
        }
    }    
    
    /**
     * ??????????????????????????? ??? ???????????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void searchNutritionMap(String nutritionTypeId)
    {
        // ????????? ???? keyword ??
        this.vNutritionMap = new Vector();
        
        this.vNutritionMap = this.theHosManage.theHosControl.theNutritionControl.selectNutritionMapByNutritionTypeId(nutritionTypeId);
                
        // ??????????????????????????????
        setTableNutritionMap(this.vNutritionMap);     
    }
    
    /**
     * ??????????????????????????? ??? ???????????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void searchNutritionType()
    {
        // ????????? ???? keyword ??
        this.vNutritionType = new Vector();
        String keyword = jTextFieldSearch.getText().trim();
        
        this.vNutritionType = this.theHosManage.theHosControl.theNutritionControl.selectNutritionTypeByKeyword(keyword);
        
        // ??????????????????????????????
        setTableNutritionType(this.vNutritionType);
        
        this.vNutritionMap = null;
        clearGUI();
    }
    
    /**
     * ??? Dialog ?????????????? ???????????
     * @Author Ojika
     * @Date 16/03/2549 
     **/
    private void addNutritionMap()
    {
        DialogSearchNutrition dialog = new DialogSearchNutrition(new JFrame(), true,this.theHosManage, 1);
        dialog.setVisible(true);
    }
    
    /**
     * ????????????????????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
    private void deleteNutritionMap()
    {
        if(this.theNutritionMap != null)
        {
            // ????? Object ??
            this.theHosManage.theHosControl.theNutritionControl.deleteNutritionMapByKeyId(this.theNutritionMap);
            // ??????????????         
            
            // ??????????????
            searchNutritionMap(this.theNutritionType.getObjectId());
        }        
    }    
    
    /**
     * ?????????  ??? Set ??????? Object
     * @Author Ojika
     * @Date 16/03/2549
     **/
     private void selectNutritionMap(int row)
     {
        if(row > -1)
        {
            // ??????????????
            if(this.vNutritionMap != null)
            {                
                this.theNutritionMap = (NutritionMap)vNutritionMap.get(row);                
            }
        }
     }
     
    /**
     * ?????????????????????? ??? ????????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
     private void selectNutritionType(int row)
     {
        if(row > -1)
        {
            this.vNutritionMap = null;
            // ??????????????
            if(this.vNutritionType != null)
            {           
                this.theNutritionType = (NutritionType)vNutritionType.get(row);
                // ????????????? Map
                this.vNutritionMap = this.theHosManage.theHosControl.theNutritionControl.selectNutritionMapByNutritionTypeId(this.theNutritionType.getObjectId());
                // ??????????????????    
                setObjectToData();
            }
        }
     }
     
     /**
      * ??????? Object ???? GUI
      * @Author Ojika
      * @Date 16/03/2549
      **/
     private void setObjectToData()
     {
        if(this.theNutritionType != null)
        {
            jTextFieldCode.setText(this.theNutritionType.nutrition_type_number);
            jTextFieldDescrpiton.setText(this.theNutritionType.nutrition_type_description);
            
            if(this.vNutritionMap != null && this.vNutritionMap.size() > 0)
            {
                // ??? Set ????
                setTableNutritionMap(this.vNutritionMap);
            }
            else
            {
                setTableNutritionMap(null);
            }
        }
        else
        {
            clearGUI();
        }
     }
     
     /**
      * ???????????? Gui 
      * @Author Ojika
      * @Date 16/03/2549
      **/
     private void clearGUI()
     {
        jTextFieldCode.setText("");
        jTextFieldDescrpiton.setText("");
        
        setTableNutritionMap(null);
     }         
    
    /**
     * ????????????????????????
     * @author Ojika
     * @Date 16/03/2549
     **/
    private void setTableNutritionType(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameGroup, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameGroup, size);
            theNutritionType = null;
            for(int i = 0 ; i < size ;i++)
            {
                theNutritionType = (NutritionType)vData.get(i);
                theTableModelGUI.setValueAt(theNutritionType.nutrition_type_number,i, 0);
                theTableModelGUI.setValueAt(theNutritionType.nutrition_type_description,i, 1);
                theNutritionType = null;
            }
            
        }
        
        jTableShowList.setModel(theTableModelGUI);
        
        jTableShowList.getColumnModel().getColumn(0).setPreferredWidth(25);
        jTableShowList.getColumnModel().getColumn(1).setPreferredWidth(100);
    }   
    
    /**
     * ???????????????????????? 
     * @author Ojika
     * @Date 16/03/2549
     **/
    private void setTableNutritionMap(Vector vData)
    {       
        theTableModelGUI = new TableModelGUI(colNameItem, 0);
        if(vData != null)
        {
            int size = vData.size();
            theTableModelGUI = new TableModelGUI(colNameItem, size);
            theNutritionMap = null;
            for(int i = 0 ; i < size ;i++)
            {
                theNutritionMap = (NutritionMap)vData.get(i);
                theTableModelGUI.setValueAt(theNutritionMap.nutrition_map_description,i, 0); 
                theNutritionMap = null;
            }
            
        }
        
        jTableShowListItem.setModel(theTableModelGUI);
        
    }  
    
    private void setLanguage()
    {
        colNameGroup = new String[] {Language.getTextBundle("Code",language),Language.getTextBundle("Description",language)};
        colNameItem = new String[] {Language.getTextBundle("Description",language)};
        
        jLabelSetupName.setText(Language.getTextBundle(jLabelSetupName.getText(),language));
        
        jLabelSearch.setText(Language.getTextBundle(jLabelSearch.getText(),language));
        jButtonSearch.setText(Language.getTextBundle(jButtonSearch.getText(),language));
        
        jLabelCode.setText(Language.getTextBundle(jLabelCode.getText(),language));
        jLabelDescription.setText(Language.getTextBundle(jLabelDescription.getText(),language));
        jButtonSave.setText(Language.getTextBundle(jButtonSave.getText(),language));
        jButtonAdd.setText(Language.getTextBundle(jButtonAdd.getText(),language));
        jButtonDelete.setText(Language.getTextBundle(jButtonDelete.getText(),language));
    }

    /**
     * ?? Vector ?? Nutrition ??????????? save ??????? Map ???????????
     * @Author Ojika
     * @Date 16/03/2549
     **/
    public void notifySaveNutritionMap(Vector vNutrition)
    {
        if(vNutrition != null)
        {
            if(this.theNutritionType != null)
            {
                NutritionLevel theNutritionLevel = new NutritionLevel();
                int size = vNutrition.size();
                for(int i =0;i<size;i++)
                {
                    theNutritionLevel = (NutritionLevel)vNutrition.get(i);
                    
                    this.theNutritionMap = new NutritionMap();
                    
                    this.theNutritionMap.f_visit_nutrition_level_id = theNutritionLevel.getObjectId();
                    this.theNutritionMap.nutrition_map_description = theNutritionLevel.visit_nutrition_level_description;
                    this.theNutritionMap.r_nutrition_type_id = this.theNutritionType.getObjectId();
                    
                    checkSameData(this.theNutritionMap);
                    this.theNutritionMap = null;
                    searchNutritionMap(this.theNutritionType.getObjectId());
                }
                theNutritionLevel = null;
            }
            else
            {
                JOptionPane.showMessageDialog(this,Language.getTextBundle("PleaseSelectNutritionType", language),Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);                
            }
        }
        
        //???? Function ????????????????????????
        //searchNutritionMap(this.theNutritionType.getObjectId());
    }
    
    private void checkSameData(NutritionMap theNM)
    {
        if(this.vNutritionMap != null)
        {
            int size = this.vNutritionMap.size();
            if(size > 0)
            {
                for(int i =0;i<size;i++)
                {
                    if(!theNM.f_visit_nutrition_level_id.equals(((NutritionMap)this.vNutritionMap.get(i)).f_visit_nutrition_level_id))
                    {
                        status = 1;
                    }
                    else
                    {
                        status = 0;
                        JOptionPane.showMessageDialog(this,Language.getTextBundle("Same_Item", language) + theNM.nutrition_map_description ,Language.getTextBundle("Warning", language),JOptionPane.WARNING_MESSAGE);
                        break;
                    }
                }
                if(status != 0)
                {
                    // ??????????????????
                    this.theHosManage.theHosControl.theNutritionControl.saveNutritionMap(theNM);
                }
            }
        }
        else
        {
            // ??????????????????????????
            this.theHosManage.theHosControl.theNutritionControl.saveNutritionMap(theNM);
        }
        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabelCode;
    private javax.swing.JLabel jLabelDescription;
    private javax.swing.JLabel jLabelSearch;
    private javax.swing.JLabel jLabelSetupName;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelControl;
    private javax.swing.JPanel jPanelDisease;
    private javax.swing.JPanel jPanelLeft;
    private javax.swing.JPanel jPanelRight;
    private javax.swing.JPanel jPanelSearch;
    private javax.swing.JPanel jPanelShowDisease;
    private javax.swing.JPanel jPanelShowList;
    private javax.swing.JPanel jPanelTop;
    private javax.swing.JScrollPane jScrollPaneShowDisease;
    private javax.swing.JScrollPane jScrollPaneShowList;
    private javax.swing.JTable jTableShowList;
    private javax.swing.JTable jTableShowListItem;
    private javax.swing.JTextField jTextFieldCode;
    private javax.swing.JTextField jTextFieldDescrpiton;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
    
}
