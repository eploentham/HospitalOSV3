/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package com.report18file.control;

import com.hospital_os.usecase.connection.CommonInf;
import com.report18file.utility.Report18FileData;
import com.hospital_os.usecase.connection.ConnectionInf;
import com.hospital_os.usecase.connection.LookupControlInf;

//henbe comment 100253 kong ไม่ใช้แล้วไมต้อง import
import com.hospital_os.utility.ComboFix;
import com.hosv3.control.MapCon;
import com.hosv3.utility.connection.UpdateStatus;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;

/**
 *
 * @author henbe
 */
public class MapControl extends MapCon implements LookupControlInf  {
    public MapControl(String[] str,UpdateStatus us,ConnectionInf con){
        super(str,us,con) ;
    }
    /**
     * henbe comment 030310 kong พยายามปรับให้อิงของเดิมการเพิ่มฟังชันใหม่จะทำให้กระบวนการแก้ผิดจุดได้ หรือไม่ครอบคลุม
     * @param map
     * @param lookup
     * @return
     * @throws java.sql.SQLException
     */
    protected int intMapData(String[] map, String[] lookup) throws SQLException {

        int ret=0;
            PreparedStatement ps = theCon.getConnection().prepareStatement(sqlupdate);
            if(sqlupdate.equals(Report18FileData.MAP_DRUG[2])){
                PreparedStatement ps1 = theCon.getConnection().prepareStatement(sqldelete);
                ps1.setString(1, map[0]);
                ps1.executeUpdate();
//henbe comment 230210 kong เมื่อแก้แล้วให้ comment ตอบด้วย
                //konshow แก้กลับให้เหมือนเดิมแล้วครับ
                ps.setString(1, map[0]);
                ps.setString(2, lookup[3]);
                ps.setString(3, map[0]);
                ps.setString(4, lookup[0]);
                ret = ps.executeUpdate();
            }
            else{
                ps.setString(1, lookup[0]);
                ps.setString(2, map[0]);
                ret = ps.executeUpdate();
            }
            return ret;
    }

    public Vector listMap(String text,boolean unmap) {
        try {

            String key[] = text.split(" ");
            theCon.open();
            String sql = "";
            //Map Drug
            if(sqlselect_map.equals(Report18FileData.MAP_DRUG[2])){
                sql = "select * from (" + sqlmap + ")" +
                    " as query  where upper(text1) ilike upper('%" + key[0] + "%')";
                for (int i = 1; key.length > 1 && i < key.length; i++) {
                    sql += " and upper(text1) ilike upper('%" + key[i] + "%') ";
                }
                if (unmap) {
                    sql += " and text2 is null ";
                }

                sql += " order by des1 limit 500 ";
            } else {
                sql = "select * from (" + sqlmap + ")" +
                    " as query  where text3 ilike '%" + key[0] + "%'";
                for (int i = 1; key.length > 1 && i < key.length; i++) {
                    sql += " and text3 ilike '%" + key[i] + "%' ";
                }
                if (unmap) {
                    sql += " and text2 is null ";
                }
                sql += " order by des1 limit 500 ";
            }
//            System.out.println(sql);
            ResultSet rs = theCon.eQuery(sql);
            Vector vData = new Vector();
            while(rs.next()){
                String[] data = new String[]{
                rs.getString(1),
                rs.getString(2),
                rs.getString(3),
                rs.getString(4),
                rs.getString(5),
                rs.getString(6),
                rs.getString(7)};
                vData.add(data);
            }
            return vData;
        }  catch (SQLException ex) {
            ex.printStackTrace();
            return null;
        } catch (Exception ex) {
            ex.printStackTrace();
            return null;
        }finally{
            theCon.close();
        }
    }

    public CommonInf readHosData(String pk) {
        return super.readHosData(pk);
    }

    public Vector listData(String str) {
        return super.listData(str);
    }

    // henbe comment 230210 kong ฟังชันของยาห้ามใส่ในนี้ย้ายไป report18file
    // konshow ย้ายมาจาก mapcon
    public int mapDataDrugV(Vector mapV,String[] lookup) {
        try {
            if(lookup==null){
                theUS.setStatus("กรุณาเลือกรายการจับคู่",UpdateStatus.WARNING);
                return 0;
            }
            if(mapV==null){
                theUS.setStatus("กรุณาเลือกรายการหลัก",UpdateStatus.WARNING);
                return 0;
            }
            theCon.open();
            int ret=0;
            for (int i = 0; i < mapV.size(); i++) {
                String[] map = (String[]) mapV.get(i);
                if(map!=null && map[3]!=null)
                    if(!theUS.confirmBox("ยืนยันการบันทึกทับข้อมูลจับคู่เดิมของ " + map[1],UpdateStatus.WARNING)){
                        continue;
                    }
                ret = intMapData(map,lookup);
            }
            if(ret==0)
                theUS.setStatus("ไม่มีการแก้ไขข้อมูลโปรดตรวจสอบฐานข้อมูล",UpdateStatus.WARNING);
            return ret;
        } catch (Exception ex) {
            ex.printStackTrace();
            return -1;
        } finally{
            theCon.close();
        }
    }
    // konshow ย้ายมาจาก mapcon
//    protected int intMapDataDrug(String[] map, String[] lookup) throws SQLException {
//
//        int ret=0;
//            PreparedStatement ps = theCon.getConnection().prepareStatement(sqlupdate);
//            {
//                ps.setString(1, map[0]);
//                ps.setString(2, lookup[3]);
//                ps.setString(3, map[0]);
//                ps.setString(4, lookup[0]);
//                ret = ps.executeUpdate();
//            }
//            return ret;
//    }

}
